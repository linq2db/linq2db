configuration: Release

environment:
  packageVersion: 1.7.7
  matrix:
    - buildConfiguration: dotNet
      solutionName: linq2db.4.5.sln
    - buildConfiguration: dotNetCore
      solutionName: linq2db.core.sln


version: $(packageVersion).{build}

cache:
- packages -> **\packages.config

services:
- mssql2012sp1
- mysql
- postgresql

init:
- cmd: git config --global core.autocrlf true
- ps: $env:buildVersion = "$env:packageVersion.$env:appveyor_build_number"
- ps: |
    if ($env:APPVEYOR_REPO_BRANCH -eq "release") 
    {
        $env:nugetVersion = "$env:packageVersion"
    }
    else
    {
        $env:nugetVersion = "$env:packageVersion-rc$env:appveyor_build_number"
    }
- ps: Update-AppveyorBuild -Version $env:buildVersion

assembly_info:
  patch: false
  file: '**\AssemblyInfo.*'
  assembly_version: '$(buildVersion)'
  assembly_file_version: '$(buildVersion)'
  assembly_informational_version: '$(nugetVersion)'

nuget:
  account_feed: false
  project_feed: false

before_build:
- cmd: nuget restore linq2db.4.5.sln
- cmd: dotnet restore 
- cmd: 7z e Data\northwind.sql.zip
- cmd: sqlcmd -U sa -P Password12! -S localhost\SQL2012SP1 -i "northwind.sql" > nul

build_script:
  - msbuild %solutionName%  /property:Configuration=Release


after_build:
- ps: |
    if ($env:buildConfiguration -eq "dotNetCore")
    {
        if ($env:APPVEYOR_REPO_BRANCH -eq "release") 
        {
           dotnet pack --no-build Source/project.json -c=Release
        }
        else
        {
           dotnet pack --no-build Source/project.json --version-suffix="rc$env:APPVEYOR_BUILD_NUMBER" -c=Release
        }
    }
    else
    {
       cd Source
       .\Compile.bat
       cd ..
       nuget pack Nuget\linq2db.nuspec -version "$env:nugetVersion" 
    }

artifacts:
- path: \**\linq2db*.nupkg

test_script:
- ps: |
    if ($env:buildConfiguration -eq "dotNetCore")
    {
        dotnet test tests\linq -c Release -f netcoreapp1.0 --where "cat != FreeText"
        $test1res = $LASTEXITCODE 
        # upload results to AppVeyor
        $wc = New-Object 'System.Net.WebClient'
        $wc.UploadFile("https://ci.appveyor.com/api/testresults/nunit3/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\TestResult.xml))
        Push-AppveyorArtifact (Resolve-Path .\TestResult.xml)
        # try nunit3 
        # nunit3-console.exe (Resolve-Path Tests\Linq\bin\Release\net40\win7-x64\linq2db.Tests.dll) --x86
        # nunit3-console.exe (Resolve-Path Tests\Linq\bin\Release\net45\win7-x64\linq2db.Tests.dll) --x86
        IF ($test1res -ne 0) { exit -1 }
    }
    else
    {
        nunit3-console .\Tests\Linq\bin\Release\linq2db.Tests.dll --result="TestResult.xml;format=AppVeyor" --x86 --where "cat != FreeText"
    }

before_test:
- ps: |
      Push-Location -Path Tests\Linq\bin\$env:CONFIGURATION
      cd $env:appveyor_build_folder
      . ".\Av-InitDatabases.ps1"

after_test:
- ps: Pop-Location

deploy:
- provider: NuGet
  server: https://www.myget.org/F/linq2db/api/v2
  api_key:
    secure: LDw0jeA1Yo3R4/TKv2kmlgJR8dTT6Wun2MONq3uDvtVQJG4LOU9LjvVTAc7IgRfm
  skip_symbols: true
  on:
    branch: master

- provider: NuGet
  api_key:
    secure: oTYw2IwTnz4qMD8c/MR/6mo+Nx3wa5Pp8MYfsKBCKCVuU6QCHlj+6QMXpnQses8G
  on:
    branch: release
