<#@ template language="C#" debug="True" hostSpecific="True" #>
<#@ output extension=".generated.cs"                        #>

<#@ include file="$(LinqToDBT4SapHanaTemplatesPath)LinqToDB.SapHana.Tools.ttinclude" once="true" #>
<#@ include file="$(LinqToDBT4SapHanaTemplatesPath)PluralizationService.ttinclude"   once="true" #>
<#
	/*
		1. Download and install SapHana data provider for .NET.

		2. Add a reference to Sap.Data.Hana.dll.

		3. Create new *.tt file (e.g. MyDatabase.tt) in a folder where you would like to generate your data model
		   and copy content from this file to it. For example:

			MyProject
				DataModels
					MyDatabase.tt

		4. Modify the connection settings below to connect to your database.

		5. Add connection string to the web/app.config file:

			<connectionStrings>
				<add name="MyDatabase" connectionString="Server=hanahost:port;Current Schema=TEST;UserID=Test;Password=TestPassword;" providerName="Sap.Data.Hana" />
			</connectionStrings>

		6. To access your database use the following code:

			using (var db = new MyDatabaseDB())
			{
				var q =
					from c in db.Customers
					select c;

				foreach (var c in q)
					Console.WriteLine(c.ContactName);
			}

		7. See more at https://linq2db.github.io/articles/T4.html

		IMPORTANT: if running .tt file gives you error like this:
		"error : Failed to resolve include text for file: C:\...\$(LinqToDBT4<DB>TemplatesPath)LinqToDB.<DB>.Tools.ttinclude"
		check tt file properties.
		Custom tool must be set to TextTemplatingFileGenerator, not TextTemplatingFilePreprocessor or any other value.
	*/

	NamespaceName = "DataModels";

	// to configure GetSchemaOptions properties, add them here, before load metadata call

	LoadSapHanaMetadata("MyServer", "MyDatabase", "TestUser", "TestPassword");
//	LoadSapHanaMetadata(string connectionString);

	// to adjust loaded database model before generation, add your code here, after load metadata, but before GenerateModel() call

	GenerateModel();
#>
