<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<Import Project="linq2db.Tests.props" />

	<PropertyGroup>
		<NoWarn>$(NoWarn);CS0649</NoWarn>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="System.Memory" Version="4.5.4" />
		<PackageReference Include="System.Threading.Tasks.Extensions" Version="4.5.4" />

		<PackageReference Include="System.Data.SQLite.Core" Version="1.0.113.1" />
		<PackageReference Include="MySql.Data" Version="8.0.20" />
		<PackageReference Include="MySqlConnector" Version="1.0.0" />
		<PackageReference Include="FirebirdSql.Data.FirebirdClient" Version="7.5.0" />
		<PackageReference Include="AdoNetCore.AseClient" Version="0.18.0" />

		<PackageReference Include="NUnit3TestAdapter" Version="3.16.1" />
		<PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.6.1" />
		<PackageReference Include="System.Data.SqlClient" Version="4.8.1" />
		<PackageReference Include="Microsoft.Data.SqlClient" Version="2.0.0" />

		<ProjectReference Include="..\Base\Tests.Base.csproj" />

		<None Include="..\..\Data\*">
			<Link>Database/%(FileName)%(Extension)</Link>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Include="..\..\Data\Create Scripts\*">
			<Link>Database/Create Scripts/%(FileName)%(Extension)</Link>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<PropertyGroup Condition="'$(TargetFramework)' == 'net46'">
		<!--Cannot use Any CPU due to native providers-->
		<PlatformTarget>x86</PlatformTarget>
	</PropertyGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net46' ">
		<Reference Include="System.Data.Services" />
		<Reference Include="System.Windows.Forms" />

		<Reference Include="IBM.Data.Informix">
			<HintPath>..\..\Redist\IBM\IBM.Data.Informix.dll</HintPath>
		</Reference>
		<Reference Include="Oracle.DataAccess">
			<HintPath>..\..\Redist\Oracle\Oracle.DataAccess.dll</HintPath>
		</Reference>

		<!-- why pople cannot create nuget that just works... is it so hard? -->
		<PackageReference Include="IBM.Data.DB.Provider" Version="11.1.4040.4" GeneratePathProperty="true" />
		<Reference Include="IBM.Data.DB2">
			<HintPath>$(PkgIBM_Data_DB_Provider)\build\net451\x86\IBM.Data.DB2.dll</HintPath>
		</Reference>

		<PackageReference Include="MiniProfiler" Version="3.2.0.157" />
		<PackageReference Include="Oracle.ManagedDataAccess" Version="19.8.0" />
		<PackageReference Include="Microsoft.SqlServer.Types" Version="14.0.1016.290" />
		<PackageReference Include="Npgsql" Version="4.0.10" />
		<PackageReference Include="Microsoft.AspNet.OData" Version="7.4.1" />

		<PackageReference Include="Microsoft.Data.SQLite" Version="1.1.1" />
		<!--Copy sqlite3.dll manually, as package copy scripts doesn't work properly for our project -->
		<Content Include="..\..\Redist\SQLite\sqlite3.dll">
			<Link>%(Filename)%(Extension)</Link>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<Visible>False</Visible>
		</Content>
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp2.1' OR '$(TargetFramework)' == 'netcoreapp3.1' ">
		<PackageReference Include="Oracle.ManagedDataAccess.Core" Version="2.19.80" />
		<PackageReference Include="Microsoft.Data.SQLite" Version="3.1.5" />
		<PackageReference Include="Npgsql" Version="4.1.3.1" />
		<PackageReference Include="System.Data.Odbc" Version="4.7.0" />
		<PackageReference Include="System.Data.OleDb" Version="4.7.1" />
		<PackageReference Include="MiniProfiler.Shared" Version="4.2.1" />

		<!--magic-->
		<PackageReference Include="IBM.Data.DB2.Core" Version="1.3.0.100"  Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' " />
		<PackageReference Include="IBM.Data.DB2.Core-lnx" Version="1.3.0.100" Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' " />
		<PackageReference Include="IBM.Data.DB2.Core-osx" Version="1.3.0.100" Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' "/>

		<!--nuget doesn't have strong name, so we use local self-signed copy-->
		<!--<PackageReference Include="dotMorten.Microsoft.SqlServer.Types" Version="1.1.0" />-->
		<Reference Include="Microsoft.SqlServer.Types">
			<HintPath>..\..\Redist\dotMorten.Microsoft.SqlServer.Types\Microsoft.SqlServer.Types.dll</HintPath>
		</Reference>
	</ItemGroup>

</Project>
