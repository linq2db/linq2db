variables:
  - template: templates/test-vars.yml
  - name: solution
    value: linq2db.sln
  - name: build_configuration
    value: Azure
  - name: assemblyVersion
    value: 3.2.4
  - name: nugetVersion
    value: 3.2.4
  - name: nugetDevVersion
    value: 3.2.4
  - name: artifact_nugets
    value: nugets
  - name: artifact_linq2db_binaries
    value: linq2db_binaries
  - name: artifact_linq2db_tools_binaries
    value: linq2db_tools_binaries
  - name: artifact_linq2db_aspnet_binaries
    value: linq2db_aspnet_binaries

# build on commits to important branches: 'release', 'master'
trigger:
  - master
  - release
# don't trigger pr builds by default, users should trigger them manually using /azp bot commands to avoid situations
# when we have multiple test runs waiting for free job, when nobody needs them
# we only want to trigger it for pr to release branch
pr:
  - release

stages:

- stage: ''
  displayName: ''
  jobs:
##############
#  BUILD JOB #
##############
  - template: templates/build-job.yml
    parameters:
      for_nuget: true

#############
# NUGET JOB #
#############
  - job: build_nugets_job
    pool:
      vmImage: 'windows-2019'
    displayName: 'Nugets Generation'
    variables:
      - template: templates/nuget-vars.yml
    dependsOn: build_job
    condition: and(succeeded(), or(eq(variables['Build.SourceBranchName'], 'release'), eq(variables['Build.SourceBranchName'], 'master')))

    steps:

    - task: NuGetToolInstaller@1

    - powershell: echo "##vso[task.setvariable variable=packageVersion]$(packageVersion)-rc.$(Build.BuildId)"
      condition: ne(variables['Build.SourceBranchName'], 'release')
      displayName: Update nuget version

    - task: DownloadPipelineArtifact@2
      displayName: Download LinqToDB files
      inputs:
        artifactName: '$(artifact_linq2db_binaries)'
        targetPath: '$(Build.SourcesDirectory)/Source/LinqToDB/bin/Release'

    - task: DownloadPipelineArtifact@2
      displayName: Download LinqToDB.Tools files
      inputs:
        artifactName: '$(artifact_linq2db_Tools_binaries)'
        targetPath: '$(Build.SourcesDirectory)/Source/LinqToDB.Tools/bin/Release'

    - task: DownloadPipelineArtifact@2
      displayName: Download LinqToDB.AspNet files
      inputs:
        artifactName: '$(artifact_linq2db_aspnet_binaries)'
        targetPath: '$(Build.SourcesDirectory)/Source/LinqToDB.AspNet/bin/Release'

    - task: DownloadPipelineArtifact@2
      displayName: Download test files (for t4 tools, part 1)
      inputs:
        artifactName: '$(netfx472_tests)'
        targetPath: '$(Build.SourcesDirectory)/Tests/Linq/bin/$(build_configuration)/net472'

    - task: DownloadPipelineArtifact@2
      displayName: Download test files (for t4 tools, part 2)
      inputs:
        artifactName: '$(netfx472_tests_t4)'
        targetPath: '$(Build.SourcesDirectory)/Tests/Tests.T4/bin/$(build_configuration)/net472'

    - task: PowerShell@2
      inputs:
        filePath: '$(Build.SourcesDirectory)/Build/BuildNuspecs.ps1'
        workingDirectory: '$(Build.SourcesDirectory)'
        arguments: -path $(Build.SourcesDirectory)/NuGet/*.nuspec -buildPath $(Build.SourcesDirectory)/BuiltNuGet -version $(packageVersion) -branch $(Build.SourceBranchName)
      displayName: Update nuspecs

    - task: CmdLine@2
      inputs:
        script: $(Build.SourcesDirectory)/NuGet/Pack.bat
        workingDirectory: $(Build.SourcesDirectory)/BuiltNuGet
      displayName: Build nugets for Azure Artifacts
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

    - task: CmdLine@2
      inputs:
        script: $(Build.SourcesDirectory)/NuGet/Pack.bat snupkg
        workingDirectory: $(Build.SourcesDirectory)/BuiltNuGet
      displayName: Build nugets for Nuget.org
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'release'))

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.SourcesDirectory)/BuiltNuGet/built'
        artifactName: '$(artifact_nugets)'
      displayName: Publish nugets to artifacts

    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.SourcesDirectory)/BuiltNuGet/built/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '0dcc414b-ea54-451e-a54f-d63f05367c4b/967a4107-9788-41a4-9f6d-a2318aab1410'
      displayName: Publish to Azure Artifacts feed
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

# apikey exires around 31/07/2020
    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.SourcesDirectory)/BuiltNuGet/built/*.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'linq2db nuget.org feed'
      displayName: Publish to Nuget.org
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'release'))

#############
# TEST JOBS #
#############
  - template: templates/test-matrix.yml
    parameters:
      enabled: and(eq(variables['System.PullRequest.TargetBranch'], 'release'), succeeded())
      experimental: false
      with_baselines: true
      mac_enabled: and(eq(variables['System.PullRequest.TargetBranch'], 'release'), succeeded()) # enable macos testing only for release
