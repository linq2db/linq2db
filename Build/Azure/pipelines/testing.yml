variables:
  - template: templates/test-vars.yml
  - name: solution
    value: linq2db.sln
  - name: build_configuration
    value: Azure
  - name: assemblyVersion
    value: 3.0.0

trigger: none
pr:
  branches:
    include:
    - '*'

stages:
- stage: ''
  displayName: ''
  jobs:
##############
#  BUILD JOB #
##############
  - template: templates/build-job.yml
    parameters:
      for_nuget: false

#############
# TEST JOBS #
#############
  - template: templates/test-matrix.yml
    parameters:
      enabled: succeeded()
      with_baselines: true
      # experimental parameter
      ${{ if eq(variables['Build.DefinitionName'], 'experimental') }}:
          experimental: true
      ${{ if ne(variables['Build.DefinitionName'], 'experimental') }}:
          experimental: false
      # db_filter parameter
      ${{ if eq(variables['Build.DefinitionName'], 'test-access') }}:
        db_filter: '[access.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-db2') }}:
        db_filter: '[db2.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-firebird') }}:
        db_filter: '[firebird.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-informix') }}:
        db_filter: '[informix.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-mysql') }}:
        db_filter: '[mysql.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-oracle') }}:
        db_filter: '[oracle.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-postgresql') }}:
        db_filter: '[postgresql.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-saphana') }}:
        db_filter: '[saphana.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-sqlce') }}:
        db_filter: '[sqlce.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-sqlite') }}:
        db_filter: '[sqlite.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-sqlserver') }}:
        db_filter: '[sqlserver.all]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-sqlserver-2019') }}:
        db_filter: '[sqlserver.2019]'
      ${{ if eq(variables['Build.DefinitionName'], 'test-sybase') }}:
        db_filter: '[sybase.ase.all]'
      ${{ if ne(variables['Build.DefinitionName'], 'test-all') }}:
        mac_enabled: true

