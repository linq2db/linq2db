parameters:
  enabled: false
  experimental: false
  with_baselines: false
  test_matrix: []

jobs:
##############################################################################################
#  Tests: Windows (NETFX 4.7.2)                                                              #
#  Windows 2019 (for Win2019 docker images, chocolatey-dependent tests and non-docker tests) #
##############################################################################################
- job: test_win_netfx472_job_2019
  pool:
    vmImage: 'windows-2019'
  displayName: 'Tests: Win / NETFX 4.7.2 / '
  dependsOn: build_job
  condition: ${{ parameters.enabled }}

  strategy:
    matrix:
      ${{ each test_config in parameters.test_matrix }}:
        ${{ if and(eq(test_config.enable_os_win2019, 'true'), eq(test_config.enable_fw_net472, 'true'), eq(test_config.is_experimental, parameters.experimental)) }}:
          ${{ test_config.name }}:
            title: ${{ test_config.title }}
            config: ${{ test_config.config_win }}
            script: ${{ test_config.script_win }}
            psscript: ${{ test_config.psscript_win }}

  steps:
  - template: test-workflow-windows.yml
    parameters:
      isCore: false
      artifacts: $(netfx472_tests)
      framework: '.NETFramework,Version=v4.7.2'
      titleFramework: 'NET472'
      with_baselines: ${{ parameters.with_baselines }}

#############################################
#  Tests: Windows (NETFX 4.7.2)             #
#  Windows 2016 (for Win2016 docker images) #
#############################################
- job: test_win_netfx472_job_2016
  pool:
    vmImage: 'vs2017-win2016'
  displayName: 'Tests: Win / NETFX 4.7.2 / '
  dependsOn: build_job
  condition: ${{ parameters.enabled }}

  strategy:
    matrix:
      ${{ each test_config in parameters.test_matrix }}:
        ${{ if and(eq(test_config.enable_os_win2016, 'true'), eq(test_config.enable_fw_net472, 'true'), eq(test_config.is_experimental, parameters.experimental)) }}:
          ${{ test_config.name }}:
            title: ${{ test_config.title }}
            config: ${{ test_config.config_win }}
            script: ${{ test_config.script_win }}
            psscript: ${{ test_config.psscript_win }}

  steps:
  - template: test-workflow-windows.yml
    parameters:
      isCore: true
      artifacts: $(netfx472_tests)
      framework: '.NETFramework,Version=v4.7.2'
      titleFramework: 'NET472'
      with_baselines: ${{ parameters.with_baselines }}

###################################
#  Tests: Windows (NETCOREAPP2_1) #
#  Windows 2016                   #
###################################
- job: test_win2016_netcoreapp21_job
  pool:
    vmImage: 'vs2017-win2016'
  displayName: 'Tests: Win / NETCOREAPP2.1 / '
  dependsOn: build_job
  condition: ${{ parameters.enabled }}

  strategy:
    matrix:
      ${{ each test_config in parameters.test_matrix }}:
        ${{ if and(eq(test_config.enable_os_win2016, 'true'), eq(test_config.enable_fw_netcore21, 'true'), eq(test_config.is_experimental, parameters.experimental)) }}:
          ${{ test_config.name }}:
            title: ${{ test_config.title }}
            config: ${{ test_config.config_win }}
            script: ${{ test_config.script_win }}
            psscript: ${{ test_config.psscript_win }}

  steps:
  - template: test-workflow-windows.yml
    parameters:
      isCore: true
      artifacts: $(netcore21_tests)
      framework: '.NETCoreApp,Version=v2.1'
      titleFramework: 'NETCOREAPP2.1'
      with_baselines: ${{ parameters.with_baselines }}

###################################
#  Tests: Windows (NETCOREAPP3_1) #
#  Windows 2016                   #
###################################
- job: test_win2016_netcoreapp31_job
  pool:
    vmImage: 'vs2017-win2016'
  displayName: 'Tests: Win / NETCOREAPP3.1 / '
  dependsOn: build_job
  condition: ${{ parameters.enabled }}

  strategy:
    matrix:
      ${{ each test_config in parameters.test_matrix }}:
        ${{ if and(eq(test_config.enable_os_win2016, 'true'), eq(test_config.enable_fw_netcore31, 'true'), eq(test_config.is_experimental, parameters.experimental)) }}:
          ${{ test_config.name }}:
            title: ${{ test_config.title }}
            config: ${{ test_config.config_win }}
            script: ${{ test_config.script_win }}
            psscript: ${{ test_config.psscript_win }}

  steps:
  - template: test-workflow-windows.yml
    parameters:
      isCore: true
      artifacts: $(netcore31_tests)
      framework: '.NETCoreApp,Version=v3.1'
      titleFramework: 'NETCOREAPP3.1'
      with_baselines: ${{ parameters.with_baselines }}

###################################
#  Tests: Windows (NETCOREAPP2_1) #
#  Windows 2019                   #
###################################
- job: test_win2019_netcoreapp21_job
  pool:
    vmImage: 'windows-2019'
  displayName: 'Tests: Win / NETCOREAPP2.1 / '
  dependsOn: build_job
  condition: ${{ parameters.enabled }}

  strategy:
    matrix:
      ${{ each test_config in parameters.test_matrix }}:
        ${{ if and(eq(test_config.enable_os_win2019, 'true'), eq(test_config.enable_fw_netcore21, 'true'), eq(test_config.is_experimental, parameters.experimental)) }}:
          ${{ test_config.name }}:
            title: ${{ test_config.title }}
            config: ${{ test_config.config_win }}
            script: ${{ test_config.script_win }}
            psscript: ${{ test_config.psscript_win }}

  steps:
  - template: test-workflow-windows.yml
    parameters:
      isCore: true
      artifacts: $(netcore21_tests)
      framework: '.NETCoreApp,Version=v2.1'
      titleFramework: 'NETCOREAPP2.1'
      with_baselines: ${{ parameters.with_baselines }}

########################################
#  Tests: Ubuntu 20.04 (NETCOREAPP2_1) #
########################################
- job: test_ubuntu_20_netcoreapp21_job
  pool:
    vmImage: 'ubuntu-20.04'
  displayName: 'Tests: Lin / NETCOREAPP2.1 / '
  dependsOn: build_job
  condition: ${{ parameters.enabled }}

  strategy:
    matrix:
      ${{ each test_config in parameters.test_matrix }}:
        ${{ if and(eq(test_config.enable_os_ubuntu20, 'true'), eq(test_config.enable_fw_netcore21, 'true'), eq(test_config.is_experimental, parameters.experimental)) }}:
          ${{ test_config.name }}:
            title: ${{ test_config.title }}
            config: ${{ test_config.config_linux }}
            script: ${{ test_config.script_linux }}
            docker_login: ${{ test_config.docker_login }}
            nuget: ${{ test_config.nuget_linux }}

  steps:
  - template: test-workflow-linux.yml
    parameters:
      artifacts: $(netcore21_tests)
      netcoreversion: '2.1'
      with_baselines: ${{ parameters.with_baselines }}

########################################
#  Tests: Ubuntu 20.04 (NETCOREAPP3_1) #
########################################
- job: test_ubuntu_20_netcoreapp31_job
  pool:
    vmImage: 'ubuntu-20.04'
  displayName: 'Tests: Lin / NETCOREAPP3.1 / '
  dependsOn: build_job
  condition: ${{ parameters.enabled }}

  strategy:
    matrix:
      ${{ each test_config in parameters.test_matrix }}:
        ${{ if and(eq(test_config.enable_os_ubuntu20, 'true'), eq(test_config.enable_fw_netcore31, 'true'), eq(test_config.is_experimental, parameters.experimental)) }}:
          ${{ test_config.name }}:
            title: ${{ test_config.title }}
            config: ${{ test_config.config_linux }}
            script: ${{ test_config.script_linux }}
            docker_login: ${{ test_config.docker_login }}
            nuget: ${{ test_config.nuget_linux }}

  steps:
  - template: test-workflow-linux.yml
    parameters:
      artifacts: $(netcore31_tests)
      netcoreversion: '3.1'
      with_baselines: ${{ parameters.with_baselines }}

########################################
#  Tests: Ubuntu 16.04 (NETCOREAPP2_1) #
########################################
- job: test_ubuntu_16_netcoreapp21_job
  pool:
    vmImage: 'ubuntu-16.04'
  displayName: 'Tests: Lin / NETCOREAPP2.1 / '
  dependsOn: build_job
  condition: ${{ parameters.enabled }}

  strategy:
    matrix:
      ${{ each test_config in parameters.test_matrix }}:
        ${{ if and(eq(test_config.enable_os_ubuntu16, 'true'), eq(test_config.enable_fw_netcore21, 'true'), eq(test_config.is_experimental, parameters.experimental)) }}:
          ${{ test_config.name }}:
            title: ${{ test_config.title }}
            config: ${{ test_config.config_linux }}
            script: ${{ test_config.script_linux }}
            docker_login: ${{ test_config.docker_login }}
            nuget: ${{ test_config.nuget_linux }}

  steps:
  - template: test-workflow-linux.yml
    parameters:
      artifacts: $(netcore21_tests)
      netcoreversion: '2.1'
      with_baselines: ${{ parameters.with_baselines }}

#################################
#  Tests: MacOS (NETCOREAPP2_1) #
#################################
- job: test_macos_netcoreapp21_job
  pool:
    vmImage: 'macOS-10.15'
  displayName: 'Tests: Mac / NETCOREAPP2.1 / '
  dependsOn: build_job
  condition: ${{ parameters.enabled }}

  strategy:
    matrix:
      ${{ each test_config in parameters.test_matrix }}:
        ${{ if and(eq(test_config.enable_os_macos, 'true'), eq(test_config.enable_fw_netcore21, 'true'), eq(test_config.is_experimental, parameters.experimental)) }}:
          ${{ test_config.name }}:
            title: ${{ test_config.title }}
            config: ${{ test_config.config_macos }}
            script: ${{ test_config.script_macos }}
            docker: ${{ test_config.install_docker_macos }}
            docker_login: ${{ test_config.docker_login }}
            nuget: ${{ test_config.nuget_macos }}

  steps:
  - template: test-workflow-macos.yml
    parameters:
      artifacts: $(netcore21_tests)
      netcoreversion: '2.1'
      with_baselines: ${{ parameters.with_baselines }}

#################################
#  Tests: MacOS (NETCOREAPP3_1) #
#################################
- job: test_macos_netcoreapp31_job
  pool:
    vmImage: 'macOS-10.15'
  displayName: 'Tests: Mac / NETCOREAPP3.1 / '
  dependsOn: build_job
  condition: ${{ parameters.enabled }}

  strategy:
    matrix:
      ${{ each test_config in parameters.test_matrix }}:
        ${{ if and(eq(test_config.enable_os_macos, 'true'), eq(test_config.enable_fw_netcore31, 'true'), eq(test_config.is_experimental, parameters.experimental)) }}:
          ${{ test_config.name }}:
            title: ${{ test_config.title }}
            config: ${{ test_config.config_macos }}
            script: ${{ test_config.script_macos }}
            docker: ${{ test_config.install_docker_macos }}
            docker_login: ${{ test_config.docker_login }}
            nuget: ${{ test_config.nuget_macos }}

  steps:
  - template: test-workflow-macos.yml
    parameters:
      artifacts: $(netcore31_tests)
      netcoreversion: '3.1'
      with_baselines: ${{ parameters.with_baselines }}
