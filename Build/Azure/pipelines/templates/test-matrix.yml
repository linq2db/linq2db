parameters:
  enabled: false
  experimental: false
  with_baselines: false
  mac_enabled: false
  db_filter: '[all]'

# db_filter specify test db selection filter for pipeline. Current list of supported values:
# - '[all]' - any target supported
# - '[access.all]' - Access targets supported
# - '[db2.all]' - DB2 targets supported
# - '[firebird.all]' - Firebird targets supported
# - '[informix.all]' - Informix targets supported
# - '[mysql.all]' - MySql/MariaDB targets supported
# - '[oracle.all]' - Oracle targets supported
# - '[postgresql.all]' - PostgreSQL targets supported
# - '[saphana.all]' - SAP HANA targets supported
# - '[sqlce.all]' - SqlCE targets supported
# - '[sqlite.all]' - SQLite targets supported
# - '[sqlserver.all]' - SQL Server targets supported
# - '[sqlserver.2019]' - SQL Server 2019 targets supported
# - '[sybase.ase.all]' - SAP/Sybase ASE targets supported
# - '[clickhouse.all]' - Yandex ClickHouse targets supported
# Note that filter value enclosed in [] brackets as we check filter using contains substring function and this allows
# us to avoid naming conflicts

# Test matrix (list of all database test runs with configuration options)
# Because azure pipelines doesn't support non-string variables and strategy templates
# (see https://developercommunity.visualstudio.com/content/problem/812728/variables-in-yaml-pipeline-are-not-allowing-to-def.html)
# we use parameter to define test matrix..
# each test_matrix list entry could define following properties:

# GENERAL PROPERTIES
# - name            (string, required)            : name of test matrix entry (unique, no spaces/dots)
# - title           (string, required)            : test run name, added to display name for testrun
# - extra           (string, optional)            : specify additional dotnet test arguments, e.g. "--arch x86"
# - x86             (true/false string, optional) : windows-only, install dotnet sdk x86
# - is_experimental (true/false string, required) : experimental pipeline switch, when true - testrun enabled only for experimental pipeline,
#                                                   when false - only for test-all/default pipelines
                    #                               switch used to debug testruns without running other testruns
# - enabled (true/false string, required)         : enables/disables test matrix entry completely for current run


# OPERATION SYSTEM SELECTORS
# - enable_os_windows  (true/false string) : enables testrun for windows 2022 image (windows-2022)
# - enable_os_ubuntu   (true/false string) : enables testrun for Ubuntu 22.04 image (ubuntu-22.04)
# - enable_os_macos    (true/false string) : enables testrun for Mac OS image (macOS-10.15)

# TARGET FRAMEWORK SELECTORS
# - enable_fw_net472    (true/false string) : enables testrun against .net framework 4.7.2
# - enable_fw_netcore31 (true/false string) : enables testrun against .net core 3.1
# - enable_fw_net60     (true/false string) : enables testrun against .net 6.0
# - enable_fw_net70     (true/false string) : enables testrun against .net 7.0

# TEST CONFIG SELECTOR
# - config_win   (string) : contains name of test config json file for windows runs (without extension)
# - config_linux (string) : contains name of test config json file for linux runs (without extension)
# - config_macos (string) : contains name of test config json file for macos runs (without extension)

# SETUP SCRIPT SELECTOR
# GLOBAL (run once per test instance). E.g. used to setup database once
# - script_win_global   (string) : contains name of global cmd setup script for windows runs (with extension)
# - psscript_win_global (string) : contains name of global powershell setup script for windows runs (with extension)
# - script_linux_global (string) : contains name of global shell setup script for linux runs (with extension)
# - script_macos_global (string) : contains name of global shell setup script for MacOS runs (with extension)
# LOCAL (run once per test framework). E.g. used to setup test files for specific framework run
# - script_win_local   (string) : contains name of local cmd setup script for windows runs (with extension)
# - psscript_win_local (string) : contains name of local powershell setup script for windows runs (with extension)
# - script_linux_local (string) : contains name of local shell setup script for linux runs (with extension)
# - script_macos_local (string) : contains name of local shell setup script for MacOS runs (with extension)

# MISC
# - docker_login         (true/false string) : enables docker hub authentication for testrun image download
# - install_docker_macos (true/false string) : enables pre-installation of docker for macos testruns

jobs:
  - template: test-jobs.yml
    parameters:
      enabled: ${{ parameters.enabled }}
      experimental: ${{ parameters.experimental }}
      with_baselines: ${{ parameters.with_baselines }}
#      mac_enabled: ${{ parameters.mac_enabled }}
# TODO: disable for now as it fails always due to small stack
      mac_enabled: false
      test_matrix:
# SQLite
        - name: SQLite_1
          title: SQLite (both providers)
          config_win: sqlite
          config_linux: sqlite
          config_macos: sqlite
          enable_os_windows: true
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false
          enable_fw_net70: false
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlite.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlite.all]'))) }}:
            enabled: false

        - name: SQLite_2
          title: SQLite (both providers)
          config_win: sqlite
          config_linux: sqlite
          config_macos: sqlite
          enable_os_windows: true
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlite.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlite.all]'))) }}:
            enabled: false

        - name: SQLiteExtras_1
          title: SQLite (specialized tests)
          config_win: sqlite.extras
          config_linux: sqlite.extras
          config_macos: sqlite.extras
          enable_os_windows: true
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false
          enable_fw_net70: false
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlite.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlite.all]'))) }}:
            enabled: false

        - name: SQLiteExtras_2
          title: SQLite (specialized tests)
          config_win: sqlite.extras
          config_linux: sqlite.extras
          config_macos: sqlite.extras
          enable_os_windows: true
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlite.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlite.all]'))) }}:
            enabled: false

# Access
        - name: Access_MDB_1
          title: Access MDB (Jet/ODBC)
          config_win: access.mdb
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false
          enable_fw_net70: false
          is_experimental: false
          x86: true
          extra: --arch x86
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[access.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[access.all]'))) }}:
            enabled: false

        - name: Access_MDB_2
          title: Access MDB (Jet/ODBC)
          config_win: access.mdb
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          x86: true
          extra: --arch x86
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[access.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[access.all]'))) }}:
            enabled: false

        - name: Access_ACE_1
          title: Access ACE (OLEDB/ODBC) x86
          config_win: access.ace
          script_win_global: access.ace.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false
          enable_fw_net70: false
          is_experimental: false
          x86: true
          extra: --arch x86
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[access.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[access.all]'))) }}:
            enabled: false

        - name: Access_ACE_2
          title: Access ACE (OLEDB/ODBC) x86
          config_win: access.ace
          script_win_global: access.ace.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          x86: true
          extra: --arch x86
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[access.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[access.all]'))) }}:
            enabled: false

        - name: Access_ACE_x64
          title: Access ACE (ODBC-only) x64 # x64 OLEDB crashes randomly https://github.com/dotnet/runtime/issues/46187
          config_win: access.ace.x64
          script_win_global: access.ace.x64.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          extra: --arch x64
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[access.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[access.all]'))) }}:
            enabled: false

# SQL CE
        - name: SqlCE
          title: SQL CE
          config_win: sqlce
          psscript_win_global: sqlce.ps1
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlce.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlce.all]'))) }}:
            enabled: false

# MySql/MariaDB
        - name: MySQL
          title: MySQL 8 (both providers)
          config_linux: mysql
          config_macos: mysql
          script_linux_global: mysql.sh
          script_macos_global: mac.mysql.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[mysql.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[mysql.all]'))) }}:
            enabled: false

        - name: MySQL55
          title: MySQL 5.5 (both providers)
          config_linux: mysql55
          config_macos: mysql55
          script_linux_global: mysql55.sh
          script_macos_global: mac.mysql55.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[mysql.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[mysql.all]'))) }}:
            enabled: false

        - name: MariaDB
          title: MariaDB
          config_win: mariadb
          config_linux: mariadb
          config_macos: mariadb
          script_linux_global: mariadb.sh
          script_macos_global: mac.mariadb.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[mysql.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[mysql.all]'))) }}:
            enabled: false

# PostgreSQL
        - name: PostgreSQL10
          title: PostgreSQL 10
          config_win: pgsql10
          config_linux: pgsql10
          config_macos: pgsql10
          script_linux_global: pgsql10.sh
          script_macos_global: mac.pgsql10.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]'))) }}:
            enabled: false

        - name: PostgreSQL11
          title: PostgreSQL 11
          config_linux: pgsql11
          config_macos: pgsql11
          script_linux_global: pgsql11.sh
          script_macos_global: mac.pgsql11.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]'))) }}:
            enabled: false

        - name: PostgreSQL12
          title: PostgreSQL 12
          config_linux: pgsql12
          config_macos: pgsql12
          script_linux_global: pgsql12.sh
          script_macos_global: mac.pgsql12.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]'))) }}:
            enabled: false

        - name: PostgreSQL13
          title: PostgreSQL 13
          config_linux: pgsql13
          config_macos: pgsql13
          script_linux_global: pgsql13.sh
          script_macos_global: mac.pgsql13.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]'))) }}:
            enabled: false

        - name: PostgreSQL14
          title: PostgreSQL 14
          config_linux: pgsql14
          config_macos: pgsql14
          script_linux_global: pgsql14.sh
          script_macos_global: mac.pgsql14.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]'))) }}:
            enabled: false

        - name: PostgreSQL15
          title: PostgreSQL 15
          config_linux: pgsql15
          config_macos: pgsql15
          script_linux_global: pgsql15.sh
          script_macos_global: mac.pgsql15.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[postgresql.all]'))) }}:
            enabled: false

# SQL Server
        - name: SqlServer2005_1
          title: SQL Server 2005
          config_win: sqlserver.2005
          script_win_global: sqlserver.2005.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false
          enable_fw_net70: false
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2005_2
          title: SQL Server 2005
          config_win: sqlserver.2005
          script_win_global: sqlserver.2005.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2008_1
          title: SQL Server 2008
          config_win: sqlserver.2008
          script_win_global: sqlserver.2008.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false
          enable_fw_net70: false
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2008_2
          title: SQL Server 2008
          config_win: sqlserver.2008
          script_win_global: sqlserver.2008.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2012_1
          title: SQL Server 2012
          config_win: sqlserver.2012
          script_win_global: sqlserver.2012.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false
          enable_fw_net70: false
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2012_2
          title: SQL Server 2012
          config_win: sqlserver.2012
          script_win_global: sqlserver.2012.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2014_1
          title: SQL Server 2014
          config_win: sqlserver.2014
          script_win_global: sqlserver.2014.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: false
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2014_2
          title: SQL Server 2014
          config_win: sqlserver.2014
          script_win_global: sqlserver.2014.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2016
          title: SQL Server 2016
          config_win: sqlserver.2016
          script_win_global: sqlserver.2016.cmd
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos: false
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2017_1
          title: SQL Server 2017
          config_win: sqlserver.2017
          config_linux: sqlserver.2017
          config_macos: sqlserver.2017
          script_win_global: sqlserver.2017.cmd
          script_linux_global: sqlserver.2017.sh
          script_macos_global: sqlserver.2017.sh
          install_docker_macos: true
          enable_os_windows: true
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false
          enable_fw_net70: false
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2017_2
          title: SQL Server 2017
          config_win: sqlserver.2017
          config_linux: sqlserver.2017
          config_macos: sqlserver.2017
          script_win_global: sqlserver.2017.cmd
          script_linux_global: sqlserver.2017.sh
          script_macos_global: sqlserver.2017.sh
          install_docker_macos: true
          enable_os_windows: true
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'))) }}:
            enabled: false

        - name: SqlServer2019_1
          title: SQL Server 2019
          config_win: sqlserver.2019
          config_linux: sqlserver.fts.2019
          config_macos: sqlserver.fts.2019
          script_win_global: sqlserver.2019.cmd
          script_linux_global: sqlserver.2019.sh
          script_macos_global: sqlserver.2019.sh
          install_docker_macos: true
          enable_os_windows: true
          enable_os_ubuntu: true
          enable_os_macos:  true
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false
          enable_fw_net70: false
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'), contains(parameters.db_filter, '[sqlserver.2019]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'), contains(parameters.db_filter, '[sqlserver.2019]'))) }}:
            enabled: false

        - name: SqlServer2019_2
          title: SQL Server 2019
          config_win: sqlserver.2019
          config_linux: sqlserver.fts.2019
          config_macos: sqlserver.fts.2019
          script_win_global: sqlserver.2019.cmd
          script_linux_global: sqlserver.2019.sh
          script_macos_global: sqlserver.2019.sh
          install_docker_macos: true
          enable_os_windows: true
          enable_os_ubuntu: true
          enable_os_macos:  true
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'), contains(parameters.db_filter, '[sqlserver.2019]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'), contains(parameters.db_filter, '[sqlserver.2019]'))) }}:
            enabled: false

# additional test runner for win as SqlServer2019 doesn't fit into time limits
        - name: SqlServer2019Extras_1
          title: SQL Server EXTRAS
          config_win: sqlserver.extras
          script_win_global: sqlserver.extras.cmd
          install_docker_macos: true
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos:  false
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false
          enable_fw_net70: false
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'), contains(parameters.db_filter, '[sqlserver.2019]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'), contains(parameters.db_filter, '[sqlserver.2019]'))) }}:
            enabled: false

        - name: SqlServer2019Extras_2
          title: SQL Server EXTRAS
          config_win: sqlserver.extras
          script_win_global: sqlserver.extras.cmd
          install_docker_macos: true
          enable_os_windows: true
          enable_os_ubuntu: false
          enable_os_macos:  false
          enable_fw_net472: false
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'), contains(parameters.db_filter, '[sqlserver.2019]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'), contains(parameters.db_filter, '[sqlserver.2019]'))) }}:
            enabled: false

        - name: SqlServer2022
          title: SQL Server 2022
          config_win: sqlserver.2022
          config_linux: sqlserver.2022
          config_macos: sqlserver.2022
          script_win_global: sqlserver.2022.cmd
          script_linux_global: sqlserver.2022.sh
          script_macos_global: sqlserver.2022.sh
          install_docker_macos: true
          enable_os_windows: true
          enable_os_ubuntu: true
          enable_os_macos:  true
          enable_fw_net472: true
          enable_fw_netcore31: false # reduce test time
          enable_fw_net60: false # reduce test time
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'), contains(parameters.db_filter, '[sqlserver.2019]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sqlserver.all]'), contains(parameters.db_filter, '[sqlserver.2019]'))) }}:
            enabled: false

# Sybase ASE
        - name: Sybase
          title: Sybase ASE 16
          config_linux: sybase
          config_macos: sybase
          script_linux_global: sybase.sh
          script_macos_global: sybase.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sybase.ase.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[sybase.ase.all]'))) }}:
            enabled: false

# Oracle
        - name: Oracle11
          title: Oracle 11g XE
          config_linux: oracle11
          config_macos: oracle11
          script_linux_global: oracle11.sh
          script_macos_global: oracle11.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[oracle.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[oracle.all]'))) }}:
            enabled: false

        - name: Oracle12
          title: Oracle 12c
          config_linux: oracle12
          config_macos: oracle12
          script_linux_global: oracle12.sh
          script_macos_global: oracle12.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[oracle.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[oracle.all]'))) }}:
            enabled: false

        - name: Oracle18
          title: Oracle 18c
          config_linux: oracle18
          config_macos: oracle18
          script_linux_global: oracle18.sh
          script_macos_global: oracle18.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[oracle.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[oracle.all]'))) }}:
            enabled: false

        - name: Oracle21
          title: Oracle 21c
          config_linux: oracle21
          config_macos: oracle21
          script_linux_global: oracle21.sh
          script_macos_global: oracle21.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[oracle.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[oracle.all]'))) }}:
            enabled: false

# Firebird
        - name: Firebird25
          title: Firebird 2.5
          config_linux: firebird25
          config_macos: firebird25
          script_linux_global: firebird25.sh
          script_macos_global: firebird25.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[firebird.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[firebird.all]'))) }}:
            enabled: false

        - name: Firebird3
          title: Firebird 3.0
          config_linux: firebird3
          config_macos: firebird3
          script_linux_global: firebird3.sh
          script_macos_global: firebird3.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[firebird.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[firebird.all]'))) }}:
            enabled: false

        - name: Firebird4
          title: Firebird 4.0
          config_linux: firebird4
          config_macos: firebird4
          script_linux_global: firebird4.sh
          script_macos_global: firebird4.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[firebird.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[firebird.all]'))) }}:
            enabled: false

# DB2
        - name: DB2
          title: DB2 LUW 11.5
          config_linux: db2
          config_macos: db2
          script_linux_global: db2.sh
          script_macos_global: mac.db2.sh
          script_linux_local: db2.provider.sh
          script_macos_local: mac.db2.provider.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[db2.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[db2.all]'))) }}:
            enabled: false

# Informix
        - name: Informix14
          title: Informix 14.10
          config_linux: informix
          config_macos: informix
          script_linux_global: informix14.sh
          script_macos_global: mac.informix14.sh
          script_linux_local: db2.provider.sh
          script_macos_local: mac.db2.provider.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[informix.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[informix.all]'))) }}:
            enabled: false

# SAP HANA
        - name: SAPHANA2
          title: SAP HANA 2
          config_linux: hana2
          config_macos: hana2
          script_linux_global: hana2.sh
          script_linux_local: hana2.tests.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: false # start takes 'forever'
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          docker_login: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[saphana.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[saphana.all]'))) }}:
            enabled: false

# ClickHouse
        - name: ClickHouse
          title: ClickHouse
          config_linux: clickhouse
          config_macos: clickhouse
          script_linux_global: clickhouse.sh
          script_macos_global: clickhouse.sh
          install_docker_macos: true
          enable_os_windows: false
          enable_os_ubuntu: true
          enable_os_macos: true
          enable_fw_net472: false
          enable_fw_netcore31: true
          enable_fw_net60: true
          enable_fw_net70: true
          is_experimental: false
          ${{ if or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[clickhouse.all]')) }}:
            enabled: true
          ${{ if not(or(contains(parameters.db_filter, '[all]'), contains(parameters.db_filter, '[clickhouse.all]'))) }}:
            enabled: false
