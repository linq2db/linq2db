parameters:
  isCore: false
  artifacts: ''
  framework: ''
  titleFramework: ''
  with_baselines: false

steps:
- checkout: none

- task: CmdLine@2
  inputs:
    script: 'git clone https://$(BASELINES_GH_PAT)@github.com/linq2db/linq2db.baselines.git baselines && cd baselines && git checkout -b $(baselines_branch) origin/$(baselines_branch) && cd ..'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: Checkout test baselines
  condition: and(variables.title, ${{ parameters.with_baselines }})

- task: DownloadPipelineArtifact@2
  inputs:
    artifactName: ${{ parameters.artifacts }}
    targetPath: '$(System.DefaultWorkingDirectory)'
  condition: variables.title

- task: CmdLine@2
  inputs:
    script: 'copy $(System.DefaultWorkingDirectory)\configs\$(config).json UserDataProviders.json'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: Copy test config
  condition: variables.title

- task: CmdLine@2
  inputs:
    script: '$(System.DefaultWorkingDirectory)\scripts\$(script)'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  condition: and(variables.title, variables.script)
  displayName: Setup tests

- task: PowerShell@2
  inputs:
    filePath: '$(System.DefaultWorkingDirectory)\scripts\$(psscript)'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  condition: and(variables.title, variables.psscript, ne(${{ parameters.isCore }}, False))
  displayName: Setup tests

- task: VSTest@2
  inputs:
    testAssemblyVer2: linq2db.Tests.dll
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    testFilterCriteria: 'TestCategory != SkipCI'
    otherConsoleOptions: '/Framework:${{ parameters.framework }}'
    testRunTitle: 'Windows / ${{ parameters.titleFramework }} / $(title)'
  displayName: '$(title)'
  condition: variables.title

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Add baselines changes to commit (index)"
      $output = git add -A
      if ($LASTEXITCODE -ne 0) {
          Write-Host "Failed to add baselines changes. Error code ${LASTEXITCODE}, output: ${output}"
          exit 1
      }
      Write-Host "Create commit"
      $output = git commit -m "[Windows / ${{ parameters.titleFramework }} / $(title)] baselines"
      if ($output -match "nothing to commit") {
          Write-Host "No baselines changes detected"
          exit 0
      }
      if ($LASTEXITCODE -ne 0) {
          Write-Host "Failed to create commit. Error code ${LASTEXITCODE}, output: ${output}"
          exit 1
      }
      $rebaseAttempts = 10
      do {
          Write-Host "Pull with rebase"
          $output = git pull --rebase
          if ($LASTEXITCODE -ne 0) {
              Write-Host "Failed to rebase. Error code ${LASTEXITCODE}, output: ${output}"
              exit 1
          }
          Write-Host "Push baselines to server"
          $output = git push https://$(BASELINES_GH_PAT)@github.com/linq2db/linq2db.baselines.git $(baselines_branch)
          if ($LASTEXITCODE -ne 0) {
              Write-Host "Failed to push baselines. Error code ${LASTEXITCODE}, output: ${output}"
          } else {
              exit 0
          }
          $rebaseAttempts = $rebaseAttempts - 1
      } while ($rebaseAttempts -gt 0)
      Write-Host "Failed to push baselines"
      exit 1
    workingDirectory: '$(System.DefaultWorkingDirectory)\baselines'
  displayName: Commit test baselines
  condition: and(variables.title, succeeded(), ${{ parameters.with_baselines }})
  env:
    GITHUB_TOKEN: $(BASELINES_GH_PAT)
    EMAIL: azp@linq2db.com
    GIT_AUTHOR_NAME: Azure Pipelines Bot
    GIT_COMMITTER_NAME: Azure Pipelines Bot

#    - powershell: Get-OdbcDriver | Select Name, Platform
#      displayName: List ODBC providers

#    - powershell: '[System.Data.OleDb.OleDbEnumerator]::GetRootEnumerator() | % { $_.GetValue(0) + " => " + $_.GetValue(2) }'
#      displayName: List OLEDB providers
