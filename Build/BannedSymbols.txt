T:System.Collections.Concurrent.ConcurrentBag`1;Don't use it, it is flawed type: https://github.com/linq2db/linq2db/pull/2066
T:System.Data.IColumnMapping;Use DataColumnMapping class instead of ADO.NET interfaces
T:System.Data.IColumnMappingCollection;Use ColumnMappingCollection class instead of ADO.NET interfaces
T:System.Data.IDataAdapter;Use DataAdapter class instead of ADO.NET interfaces
T:System.Data.IDataParameter;Use DbParameter class instead of ADO.NET interfaces
T:System.Data.IDataParameterCollection;Use DbParameterCollection class instead of ADO.NET interfaces
T:System.Data.IDataReader;Use DbDataReader class instead of ADO.NET interfaces
T:System.Data.IDataRecord;Use DbDataRecord class instead of ADO.NET interfaces
T:System.Data.IDbCommand;Use DbCommand class instead of ADO.NET interfaces
T:System.Data.IDbConnection;Use DbConnection class instead of ADO.NET interfaces
T:System.Data.IDbDataAdapter;Use DbDataAdapter class instead of ADO.NET interfaces
T:System.Data.IDbDataParameter;Use DbParameter class instead of ADO.NET interfaces
T:System.Data.IDbTransaction;Use DbTransaction class instead of ADO.NET interfaces
T:System.ThreadStaticAttribute;don't do it
M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo); use overload with PropertyInfo parameter

// ban raw Attribute query methods and redirect to AttributesExtensions cached helpers
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean); Use AttributesExtensions.GetAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.Module); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.Module.GetCustomAttributes(System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean); Use AttributesExtensions.GetAttributes<TAttribute>(bool inherit) extension
M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type); Use AttributesExtensions.HasAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean); Use AttributesExtensions.HasAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type); Use AttributesExtensions.HasAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean); Use AttributesExtensions.HasAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.IsDefined(System.Reflection.Module,System.Type); Use AttributesExtensions.HasAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean); Use AttributesExtensions.HasAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type); Use AttributesExtensions.HasAttribute<TAttribute>(bool inherit) extension
M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean); Use AttributesExtensions.HasAttribute<TAttribute>(bool inherit) extension

# avoid culture-dependent calls
M:System.DateTimeOffset.Parse(System.String); use overload with IFormatProvider parameter
M:System.DateTimeOffset.ToString; use overload with IFormatProvider parameter
M:System.DateTimeOffset.ToString(System.String); use overload with IFormatProvider parameter
M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.DateTimeOffset@); use overload with IFormatProvider parameter
M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@); use overload with IFormatProvider parameter
M:System.DateTime.Parse(System.String); use overload with IFormatProvider parameter
M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.DateTime@); use overload with IFormatProvider parameter
M:System.DateTime.TryParse(System.String,System.DateTime@); use overload with IFormatProvider parameter
M:System.DateTime.ToString; use overload with IFormatProvider parameter
M:System.DateTime.ToString(System.String); use overload with IFormatProvider parameter
M:System.DateTime.GetDateTimeFormats; use overload with IFormatProvider parameter
M:System.DateTime.GetDateTimeFormats(System.Char); use overload with IFormatProvider parameter
M:System.DateOnly.Parse(System.String); use overload with IFormatProvider parameter
M:System.DateOnly.ParseExact(System.ReadOnlySpan{System.Char},System.String[]); use overload with IFormatProvider parameter
M:System.DateOnly.ParseExact(System.String,System.String); use overload with IFormatProvider parameter
M:System.DateOnly.ParseExact(System.String,System.String[]); use overload with IFormatProvider parameter
M:System.DateOnly.TryParse(System.ReadOnlySpan{System.Char},System.DateOnly@); use overload with IFormatProvider parameter
M:System.DateOnly.TryParse(System.String,System.DateOnly@); use overload with IFormatProvider parameter
M:System.DateOnly.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.DateOnly@); use overload with IFormatProvider parameter
M:System.DateOnly.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.DateOnly@); use overload with IFormatProvider parameter
M:System.DateOnly.TryParseExact(System.String,System.String,System.DateOnly@); use overload with IFormatProvider parameter
M:System.DateOnly.TryParseExact(System.String,System.String[],System.DateOnly@); use overload with IFormatProvider parameter
M:System.DateOnly.ToString; use overload with IFormatProvider parameter
M:System.DateOnly.ToString(System.String); use overload with IFormatProvider parameter
M:System.TimeSpan.ToString; use overload with IFormatProvider parameter
M:System.TimeSpan.ToString(System.String); use overload with IFormatProvider parameter
M:System.TimeSpan.TryParse(System.ReadOnlySpan{System.Char},System.TimeSpan@); use overload with IFormatProvider parameter
M:System.TimeSpan.TryParse(System.String,System.TimeSpan@); use overload with IFormatProvider parameter
M:System.TimeSpan.Parse(System.String); use overload with IFormatProvider parameter
M:System.TimeOnly.TryParse(System.ReadOnlySpan{System.Char},System.TimeOnly@); use overload with IFormatProvider parameter
M:System.TimeOnly.TryParse(System.String,System.TimeOnly@); use overload with IFormatProvider parameter
M:System.TimeOnly.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.TimeOnly@); use overload with IFormatProvider parameter
M:System.TimeOnly.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.TimeOnly@); use overload with IFormatProvider parameter
M:System.TimeOnly.TryParseExact(System.String,System.String,System.TimeOnly@); use overload with IFormatProvider parameter
M:System.TimeOnly.TryParseExact(System.String,System.String[],System.TimeOnly@); use overload with IFormatProvider parameter
M:System.TimeOnly.Parse(System.String); use overload with IFormatProvider parameter
M:System.TimeOnly.ParseExact(System.ReadOnlySpan{System.Char},System.String[]); use overload with IFormatProvider parameter
M:System.TimeOnly.ParseExact(System.String,System.String); use overload with IFormatProvider parameter
M:System.TimeOnly.ParseExact(System.String,System.String[]); use overload with IFormatProvider parameter
