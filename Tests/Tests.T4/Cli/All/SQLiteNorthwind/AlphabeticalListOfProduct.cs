// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.SQLiteNorthwind
{
	[Table("Alphabetical list of products", IsView = true)]
	public class AlphabeticalListOfProduct
	{
		[Column("ProductID"      , DataType  = DataType.Int32   , DbType   = "INT"                                                 )] public int     ProductId       { get; set; } // INT
		[Column("ProductName"    , CanBeNull = false            , DataType = DataType.NVarChar, DbType = "varchar(40)", Length = 40)] public string  ProductName     { get; set; } = null!; // varchar(40)
		[Column("SupplierID"     , DataType  = DataType.Int32   , DbType   = "INT"                                                 )] public int?    SupplierId      { get; set; } // INT
		[Column("CategoryID"     , DataType  = DataType.Int32   , DbType   = "INT"                                                 )] public int?    CategoryId      { get; set; } // INT
		[Column("QuantityPerUnit", DataType  = DataType.NVarChar, DbType   = "varchar(20)"    , Length = 20                        )] public string? QuantityPerUnit { get; set; } // varchar(20)
		[Column("UnitPrice"      , DataType  = DataType.Double  , DbType   = "float(26)"                                           )] public double? UnitPrice       { get; set; } // float(26)
		[Column("UnitsInStock"   , DataType  = DataType.Int32   , DbType   = "INT"                                                 )] public int?    UnitsInStock    { get; set; } // INT
		[Column("UnitsOnOrder"   , DataType  = DataType.Int32   , DbType   = "INT"                                                 )] public int?    UnitsOnOrder    { get; set; } // INT
		[Column("ReorderLevel"   , DataType  = DataType.Int32   , DbType   = "INT"                                                 )] public int?    ReorderLevel    { get; set; } // INT
		[Column("Discontinued"   , DataType  = DataType.Int32   , DbType   = "INT"                                                 )] public int     Discontinued    { get; set; } // INT
		[Column("CategoryName"   , CanBeNull = false            , DataType = DataType.NVarChar, DbType = "varchar(15)", Length = 15)] public string  CategoryName    { get; set; } = null!; // varchar(15)
	}
}
