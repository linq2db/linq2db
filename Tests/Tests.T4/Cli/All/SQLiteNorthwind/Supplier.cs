// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.SQLiteNorthwind
{
	[Table("Suppliers")]
	public class Supplier : IEquatable<Supplier>
	{
		[Column("SupplierID"  , DataType  = DataType.Int32   , DbType   = "INT"            , IsPrimaryKey = true                      )] public int     SupplierId   { get; set; } // INT
		[Column("CompanyName" , CanBeNull = false            , DataType = DataType.NVarChar, DbType       = "varchar(40)", Length = 40)] public string  CompanyName  { get; set; } = null!; // varchar(40)
		[Column("ContactName" , DataType  = DataType.NVarChar, DbType   = "varchar(30)"    , Length       = 30                        )] public string? ContactName  { get; set; } // varchar(30)
		[Column("ContactTitle", DataType  = DataType.NVarChar, DbType   = "varchar(30)"    , Length       = 30                        )] public string? ContactTitle { get; set; } // varchar(30)
		[Column("Address"     , DataType  = DataType.NVarChar, DbType   = "varchar(60)"    , Length       = 60                        )] public string? Address      { get; set; } // varchar(60)
		[Column("City"        , DataType  = DataType.NVarChar, DbType   = "varchar(15)"    , Length       = 15                        )] public string? City         { get; set; } // varchar(15)
		[Column("Region"      , DataType  = DataType.NVarChar, DbType   = "varchar(15)"    , Length       = 15                        )] public string? Region       { get; set; } // varchar(15)
		[Column("PostalCode"  , DataType  = DataType.NVarChar, DbType   = "varchar(10)"    , Length       = 10                        )] public string? PostalCode   { get; set; } // varchar(10)
		[Column("Country"     , DataType  = DataType.NVarChar, DbType   = "varchar(15)"    , Length       = 15                        )] public string? Country      { get; set; } // varchar(15)
		[Column("Phone"       , DataType  = DataType.NVarChar, DbType   = "varchar(24)"    , Length       = 24                        )] public string? Phone        { get; set; } // varchar(24)
		[Column("Fax"         , DataType  = DataType.NVarChar, DbType   = "varchar(24)"    , Length       = 24                        )] public string? Fax          { get; set; } // varchar(24)
		[Column("HomePage"    , DataType  = DataType.NVarChar, DbType   = "TEXT"                                                      )] public string? HomePage     { get; set; } // TEXT

		#region IEquatable<T> support
		private static readonly IEqualityComparer<Supplier> _equalityComparer = ComparerBuilder.GetEqualityComparer<Supplier>(c => c.SupplierId);

		public bool Equals(Supplier? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as Supplier);
		}
		#endregion
	}
}
