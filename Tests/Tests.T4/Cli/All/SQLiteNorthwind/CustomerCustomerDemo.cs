// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.SQLiteNorthwind
{
	[Table("CustomerCustomerDemo")]
	public class CustomerCustomerDemo : IEquatable<CustomerCustomerDemo>
	{
		[Column("CustomerID"    , CanBeNull = false, DataType = DataType.VarChar, DbType = "varchar(5)" , Length = 5 , Precision = 0, Scale = 0, IsPrimaryKey = true, PrimaryKeyOrder = 0)] public string CustomerId     { get; set; } = null!; // varchar(5)
		[Column("CustomerTypeID", CanBeNull = false, DataType = DataType.VarChar, DbType = "varchar(10)", Length = 10, Precision = 0, Scale = 0, IsPrimaryKey = true, PrimaryKeyOrder = 1)] public string CustomerTypeId { get; set; } = null!; // varchar(10)

		#region IEquatable<T> support
		private static readonly IEqualityComparer<CustomerCustomerDemo> _equalityComparer = ComparerBuilder.GetEqualityComparer<CustomerCustomerDemo>(c => c.CustomerId, c => c.CustomerTypeId);

		public bool Equals(CustomerCustomerDemo? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as CustomerCustomerDemo);
		}
		#endregion
	}
}
