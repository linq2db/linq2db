// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.SQLiteNorthwind
{
	[Table("Categories")]
	public class Category : IEquatable<Category>
	{
		[Column("CategoryID"  , DataType  = DataType.Int32    , DbType   = "INT"            , IsPrimaryKey = true                      )] public int     CategoryId   { get; set; } // INT
		[Column("CategoryName", CanBeNull = false             , DataType = DataType.NVarChar, DbType       = "varchar(15)", Length = 15)] public string  CategoryName { get; set; } = null!; // varchar(15)
		[Column("Description" , DataType  = DataType.NVarChar , DbType   = "TEXT"                                                      )] public string? Description  { get; set; } // TEXT
		[Column("Picture"     , DataType  = DataType.VarBinary, DbType   = "BLOB"                                                      )] public byte[]? Picture      { get; set; } // BLOB

		#region IEquatable<T> support
		private static readonly IEqualityComparer<Category> _equalityComparer = ComparerBuilder.GetEqualityComparer<Category>(c => c.CategoryId);

		public bool Equals(Category? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as Category);
		}
		#endregion
	}
}
