// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;
using System.Data.SqlTypes;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.SqlServer
{
	[Table("GuidID2")]
	public class GuidId2 : IEquatable<GuidId2>
	{
		[Column("ID", DataType = LinqToDB.DataType.Guid, DbType = "uniqueidentifier", IsPrimaryKey = true)] public SqlGuid Id { get; set; } // uniqueidentifier

		#region IEquatable<T> support
		private static readonly IEqualityComparer<GuidId2> _equalityComparer = ComparerBuilder.GetEqualityComparer<GuidId2>(c => c.Id);

		public bool Equals(GuidId2? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as GuidId2);
		}
		#endregion
	}
}
