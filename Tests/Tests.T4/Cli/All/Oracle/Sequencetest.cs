// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using Oracle.ManagedDataAccess.Types;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.Oracle
{
	[Table("SEQUENCETEST")]
	public class Sequencetest : IEquatable<Sequencetest>
	{
		[Column("ID"   , DataType  = DataType.Decimal, DbType   = "NUMBER"        , Length = 22            , Scale  = 0 , IsPrimaryKey = true)] public OracleDecimal Id    { get; set; } // NUMBER
		[Column("VALUE", CanBeNull = false           , DataType = DataType.VarChar, DbType = "VARCHAR2(50)", Length = 50                     )] public string        Value { get; set; } = null!; // VARCHAR2(50)

		#region IEquatable<T> support
		private static readonly IEqualityComparer<Sequencetest> _equalityComparer = ComparerBuilder.GetEqualityComparer<Sequencetest>(c => c.Id);

		public bool Equals(Sequencetest? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as Sequencetest);
		}
		#endregion
	}
}
