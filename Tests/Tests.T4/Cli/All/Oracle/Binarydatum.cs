// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using Oracle.ManagedDataAccess.Types;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.Oracle
{
	[Table("BINARYDATA")]
	public class Binarydatum : IEquatable<Binarydatum>
	{
		[Column("BINARYDATAID", DataType  = DataType.Decimal  , DbType   = "NUMBER"      , Length = 22    , IsPrimaryKey = true)] public OracleDecimal Binarydataid { get; set; } // NUMBER
		[Column("STAMP"       , DataType  = DataType.DateTime2, DbType   = "TIMESTAMP(6)", Length = 11    , Scale        = 6   )] public DateTime      Stamp        { get; set; } // TIMESTAMP(6)
		[Column("DATA"        , CanBeNull = false             , DataType = DataType.Blob , DbType = "BLOB", Length       = 4000)] public OracleBlob    Data         { get; set; } = null!; // BLOB

		#region IEquatable<T> support
		private static readonly IEqualityComparer<Binarydatum> _equalityComparer = ComparerBuilder.GetEqualityComparer<Binarydatum>(c => c.Binarydataid);

		public bool Equals(Binarydatum? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as Binarydatum);
		}
		#endregion
	}
}
