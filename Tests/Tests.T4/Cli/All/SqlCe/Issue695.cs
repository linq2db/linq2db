// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;
using System.Data.SqlTypes;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.SqlCe
{
	[Table("Issue695")]
	public class Issue695 : IEquatable<Issue695>
	{
		[Column("ID"         , DataType = LinqToDB.DataType.Int32, DbType = "int", Length = 0, Precision = 10, Scale = 0, IsPrimaryKey = true)] public SqlInt32 Id          { get; set; } // int
		[Column("UniqueValue", DataType = LinqToDB.DataType.Int32, DbType = "int", Length = 0, Precision = 10, Scale = 0                     )] public SqlInt32 UniqueValue { get; set; } // int

		#region IEquatable<T> support
		private static readonly IEqualityComparer<Issue695> _equalityComparer = ComparerBuilder.GetEqualityComparer<Issue695>(c => c.Id);

		public bool Equals(Issue695? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as Issue695);
		}
		#endregion

		#region Associations
		/// <summary>
		/// FK_Issue695_Parent
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(Id), OtherKey = nameof(Issue695Parent.Id))]
		public Issue695Parent Parent { get; set; } = null!;
		#endregion
	}
}
