// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using System.Data.SqlTypes;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.SqlCe
{
	[Table("LinqDataTypes")]
	public class LinqDataType
	{
		[Column("ID"            , DataType = LinqToDB.DataType.Int32    , DbType = "int"             , Length = 0   , Precision = 10, Scale = 0)] public SqlInt32?    Id             { get; set; } // int
		[Column("MoneyValue"    , DataType = LinqToDB.DataType.Decimal  , DbType = "numeric(10, 4)"  , Length = 0   , Precision = 10, Scale = 4)] public SqlDecimal?  MoneyValue     { get; set; } // numeric(10, 4)
		[Column("DateTimeValue" , DataType = LinqToDB.DataType.DateTime , DbType = "datetime"        , Length = 0   , Precision = 23, Scale = 3)] public SqlDateTime? DateTimeValue  { get; set; } // datetime
		[Column("DateTimeValue2", DataType = LinqToDB.DataType.DateTime , DbType = "datetime"        , Length = 0   , Precision = 23, Scale = 3)] public SqlDateTime? DateTimeValue2 { get; set; } // datetime
		[Column("BoolValue"     , DataType = LinqToDB.DataType.Boolean  , DbType = "bit"             , Length = 0   , Precision = 1 , Scale = 0)] public SqlBoolean?  BoolValue      { get; set; } // bit
		[Column("GuidValue"     , DataType = LinqToDB.DataType.Guid     , DbType = "uniqueidentifier", Length = 0   , Precision = 0 , Scale = 0)] public SqlGuid?     GuidValue      { get; set; } // uniqueidentifier
		[Column("BinaryValue"   , DataType = LinqToDB.DataType.VarBinary, DbType = "varbinary(5000)" , Length = 5000, Precision = 0 , Scale = 0)] public SqlBinary?   BinaryValue    { get; set; } // varbinary(5000)
		[Column("SmallIntValue" , DataType = LinqToDB.DataType.Int16    , DbType = "smallint"        , Length = 0   , Precision = 5 , Scale = 0)] public SqlInt16?    SmallIntValue  { get; set; } // smallint
		[Column("IntValue"      , DataType = LinqToDB.DataType.Int32    , DbType = "int"             , Length = 0   , Precision = 10, Scale = 0)] public SqlInt32?    IntValue       { get; set; } // int
		[Column("BigIntValue"   , DataType = LinqToDB.DataType.Int64    , DbType = "bigint"          , Length = 0   , Precision = 19, Scale = 0)] public SqlInt64?    BigIntValue    { get; set; } // bigint
		[Column("StringValue"   , DataType = LinqToDB.DataType.NVarChar , DbType = "nvarchar(50)"    , Length = 50  , Precision = 0 , Scale = 0)] public SqlString?   StringValue    { get; set; } // nvarchar(50)
	}
}
