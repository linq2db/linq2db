// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.ClickHouse.Client
{
	[Table("Person")]
	public class Person : IEquatable<Person>
	{
		[Column("PersonID"  , DataType  = DataType.Int32   , DbType   = "Int32"          , IsPrimaryKey = true            , SkipOnUpdate = true)] public int     PersonId   { get; set; } // Int32
		[Column("FirstName" , CanBeNull = false            , DataType = DataType.NVarChar, DbType       = "String"                             )] public string  FirstName  { get; set; } = null!; // String
		[Column("LastName"  , CanBeNull = false            , DataType = DataType.NVarChar, DbType       = "String"                             )] public string  LastName   { get; set; } = null!; // String
		[Column("MiddleName", DataType  = DataType.NVarChar, DbType   = "String"                                                               )] public string? MiddleName { get; set; } // String
		[Column("Gender"    , CanBeNull = false            , DataType = DataType.Binary  , DbType       = "FixedString(1)", Length       = 1   )] public byte[]  Gender     { get; set; } = null!; // FixedString(1)

		#region IEquatable<T> support
		private static readonly IEqualityComparer<Person> _equalityComparer = ComparerBuilder.GetEqualityComparer<Person>(c => c.PersonId);

		public bool Equals(Person? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as Person);
		}
		#endregion
	}
}
