// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;
using System.Data.SqlTypes;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.SqlServerNorthwind
{
	[Table("Territories")]
	public class Territory : IEquatable<Territory>
	{
		[Column("TerritoryID"         , DataType = DataType.NVarChar, DbType = "nvarchar(20)", Length = 20, IsPrimaryKey = true)] public SqlString TerritoryId          { get; set; } // nvarchar(20)
		[Column("TerritoryDescription", DataType = DataType.NChar   , DbType = "nchar(50)"   , Length = 50                     )] public SqlString TerritoryDescription { get; set; } // nchar(50)
		[Column("RegionID"            , DataType = DataType.Int32   , DbType = "int"                                           )] public SqlInt32  RegionId             { get; set; } // int

		#region IEquatable<T> support
		private static readonly IEqualityComparer<Territory> _equalityComparer = ComparerBuilder.GetEqualityComparer<Territory>(c => c.TerritoryId);

		public bool Equals(Territory? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as Territory);
		}
		#endregion

		#region Associations
		/// <summary>
		/// FK_EmployeeTerritories_Territories backreference
		/// </summary>
		[Association(ThisKey = nameof(TerritoryId), OtherKey = nameof(EmployeeTerritory.TerritoryId))]
		public IEnumerable<EmployeeTerritory> EmployeeTerritories { get; set; } = null!;

		/// <summary>
		/// FK_Territories_Region
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(RegionId), OtherKey = nameof(SqlServerNorthwind.Region.RegionId))]
		public Region Region { get; set; } = null!;
		#endregion
	}
}
