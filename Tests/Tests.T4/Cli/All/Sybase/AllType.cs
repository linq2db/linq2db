// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.Sybase
{
	[Table("AllTypes")]
	public class AllType
	{
		[Column("ID"                   , DataType = DataType.Int32        , DbType = "int"           , Length = 4 , IsIdentity   = true, SkipOnInsert = true, SkipOnUpdate = true)] public int       Id                    { get; set; } // int
		[Column("bigintDataType"       , DataType = DataType.Int64        , DbType = "bigint"        , Length = 8                                                                )] public long?     BigintDataType        { get; set; } // bigint
		[Column("uBigintDataType"      , DbType   = "ubigint"             , Length = 8                                                                                           )] public ulong?    UBigintDataType       { get; set; } // ubigint
		[Column("numericDataType"      , DataType = DataType.Decimal      , DbType = "numeric(18, 1)", Length = 9 , Precision    = 18  , Scale        = 1                        )] public decimal?  NumericDataType       { get; set; } // numeric(18, 1)
		[Column("bitDataType"          , DataType = DataType.Boolean      , DbType = "bit"           , Length = 1                                                                )] public bool      BitDataType           { get; set; } // bit
		[Column("smallintDataType"     , DataType = DataType.Int16        , DbType = "smallint"      , Length = 2                                                                )] public short?    SmallintDataType      { get; set; } // smallint
		[Column("uSmallintDataType"    , DbType   = "usmallint"           , Length = 2                                                                                           )] public ushort?   USmallintDataType     { get; set; } // usmallint
		[Column("decimalDataType"      , DataType = DataType.Decimal      , DbType = "decimal(18, 1)", Length = 9 , Precision    = 18  , Scale        = 1                        )] public decimal?  DecimalDataType       { get; set; } // decimal(18, 1)
		[Column("smallmoneyDataType"   , DataType = DataType.SmallMoney   , DbType = "smallmoney"    , Length = 4                                                                )] public decimal?  SmallmoneyDataType    { get; set; } // smallmoney
		[Column("intDataType"          , DataType = DataType.Int32        , DbType = "int"           , Length = 4                                                                )] public int?      IntDataType           { get; set; } // int
		[Column("uIntDataType"         , DbType   = "uint"                , Length = 4                                                                                           )] public uint?     UIntDataType          { get; set; } // uint
		[Column("tinyintDataType"      , DataType = DataType.SByte        , DbType = "tinyint"       , Length = 1                                                                )] public sbyte?    TinyintDataType       { get; set; } // tinyint
		[Column("moneyDataType"        , DataType = DataType.Money        , DbType = "money"         , Length = 8                                                                )] public decimal?  MoneyDataType         { get; set; } // money
		[Column("floatDataType"        , DataType = DataType.Double       , DbType = "float"         , Length = 8                                                                )] public double?   FloatDataType         { get; set; } // float
		[Column("realDataType"         , DataType = DataType.Single       , DbType = "real"          , Length = 4                                                                )] public float?    RealDataType          { get; set; } // real
		[Column("datetimeDataType"     , DataType = DataType.DateTime     , DbType = "datetime"      , Length = 8                                                                )] public DateTime? DatetimeDataType      { get; set; } // datetime
		[Column("smalldatetimeDataType", DataType = DataType.SmallDateTime, DbType = "smalldatetime" , Length = 4                                                                )] public DateTime? SmalldatetimeDataType { get; set; } // smalldatetime
		[Column("dateDataType"         , DataType = DataType.Date         , DbType = "date"          , Length = 4                                                                )] public DateTime? DateDataType          { get; set; } // date
		[Column("timeDataType"         , DataType = DataType.Time         , DbType = "time"          , Length = 4                                                                )] public TimeSpan? TimeDataType          { get; set; } // time
		[Column("charDataType"         , DataType = DataType.Char         , DbType = "char(1)"       , Length = 1                                                                )] public char?     CharDataType          { get; set; } // char(1)
		[Column("char20DataType"       , DataType = DataType.Char         , DbType = "char(20)"      , Length = 20                                                               )] public string?   Char20DataType        { get; set; } // char(20)
		[Column("varcharDataType"      , DataType = DataType.VarChar      , DbType = "varchar(20)"   , Length = 20                                                               )] public string?   VarcharDataType       { get; set; } // varchar(20)
		[Column("textDataType"         , DataType = DataType.Text         , DbType = "text"          , Length = 16                                                               )] public string?   TextDataType          { get; set; } // text
		[Column("ncharDataType"        , DataType = DataType.NChar        , DbType = "nchar(20)"     , Length = 20                                                               )] public string?   NcharDataType         { get; set; } // nchar(20)
		[Column("nvarcharDataType"     , DataType = DataType.NVarChar     , DbType = "nvarchar(20)"  , Length = 20                                                               )] public string?   NvarcharDataType      { get; set; } // nvarchar(20)
		[Column("ntextDataType"        , DataType = DataType.NText        , DbType = "unitext"       , Length = 16                                                               )] public string?   NtextDataType         { get; set; } // unitext
		[Column("binaryDataType"       , DataType = DataType.Binary       , DbType = "binary(1)"     , Length = 1                                                                )] public byte[]?   BinaryDataType        { get; set; } // binary(1)
		[Column("varbinaryDataType"    , DataType = DataType.VarBinary    , DbType = "varbinary(1)"  , Length = 1                                                                )] public byte[]?   VarbinaryDataType     { get; set; } // varbinary(1)
		[Column("imageDataType"        , DataType = DataType.Image        , DbType = "image"         , Length = 16                                                               )] public byte[]?   ImageDataType         { get; set; } // image
		[Column("timestampDataType"    , DataType = DataType.Timestamp    , DbType = "timestamp"     , Length = 8 , SkipOnInsert = true, SkipOnUpdate = true                     )] public byte[]?   TimestampDataType     { get; set; } // timestamp
	}
}
