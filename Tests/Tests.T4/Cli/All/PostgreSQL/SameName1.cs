// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.PostgreSQL
{
	[Table("same_name1")]
	public class SameName1 : IEquatable<SameName1>
	{
		[Column("id"       , DataType = DataType.Int32, DbType = "integer", Precision = 32, Scale = 0, IsPrimaryKey = true)] public int  Id       { get; set; } // integer
		[Column("same_name", DataType = DataType.Int32, DbType = "integer", Precision = 32, Scale = 0                     )] public int? SameName { get; set; } // integer

		#region IEquatable<T> support
		private static readonly IEqualityComparer<SameName1> _equalityComparer = ComparerBuilder.GetEqualityComparer<SameName1>(c => c.Id);

		public bool Equals(SameName1? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as SameName1);
		}
		#endregion

		#region Associations
		/// <summary>
		/// same_name
		/// </summary>
		[Association(ThisKey = nameof(SameName), OtherKey = nameof(PostgreSQL.SameName.Id))]
		public SameName? Samename { get; set; }
		#endregion
	}
}
