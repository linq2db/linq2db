// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.PostgreSQL
{
	[Table("same_name")]
	public class SameName : IEquatable<SameName>
	{
		[Column("id", DataType = DataType.Int32, DbType = "integer", Precision = 32, Scale = 0, IsPrimaryKey = true)] public int Id { get; set; } // integer

		#region IEquatable<T> support
		private static readonly IEqualityComparer<SameName> _equalityComparer = ComparerBuilder.GetEqualityComparer<SameName>(c => c.Id);

		public bool Equals(SameName? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as SameName);
		}
		#endregion

		#region Associations
		/// <summary>
		/// same_name backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(SameName1.SameName))]
		public IEnumerable<SameName1> SameNames1 { get; set; } = null!;

		/// <summary>
		/// same_name backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(SameName2.SameName))]
		public IEnumerable<SameName2> SameNames2 { get; set; } = null!;
		#endregion
	}
}
