// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.MySql
{
	[Table("FullTextIndexTest")]
	public class FullTextIndexTest : IEquatable<FullTextIndexTest>
	{
		[Column("id"        , DataType = DataType.UInt32, DbType = "int unsigned", Precision = 10   , Scale = 0, IsPrimaryKey = true, IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public uint    Id         { get; set; } // int unsigned
		[Column("TestField1", DataType = DataType.Text  , DbType = "text"        , Length    = 65535                                                                                             )] public string? TestField1 { get; set; } // text
		[Column("TestField2", DataType = DataType.Text  , DbType = "text"        , Length    = 65535                                                                                             )] public string? TestField2 { get; set; } // text

		#region IEquatable<T> support
		private static readonly IEqualityComparer<FullTextIndexTest> _equalityComparer = ComparerBuilder.GetEqualityComparer<FullTextIndexTest>(c => c.Id);

		public bool Equals(FullTextIndexTest? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as FullTextIndexTest);
		}
		#endregion
	}
}
