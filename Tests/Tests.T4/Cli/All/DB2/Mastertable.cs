// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using IBM.Data.DB2Types;
using LinqToDB;
using LinqToDB.Mapping;
using LinqToDB.Tools.Comparers;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.DB2
{
	[Table("MASTERTABLE")]
	public class Mastertable : IEquatable<Mastertable>
	{
		[Column("ID1", DataType = DataType.Int32, DbType = "INTEGER", IsPrimaryKey = true, PrimaryKeyOrder = 0)] public DB2Int32 Id1 { get; set; } // INTEGER
		[Column("ID2", DataType = DataType.Int32, DbType = "INTEGER", IsPrimaryKey = true, PrimaryKeyOrder = 1)] public DB2Int32 Id2 { get; set; } // INTEGER

		#region IEquatable<T> support
		private static readonly IEqualityComparer<Mastertable> _equalityComparer = ComparerBuilder.GetEqualityComparer<Mastertable>(c => c.Id1, c => c.Id2);

		public bool Equals(Mastertable? other)
		{
			return _equalityComparer.Equals(this, other!);
		}

		public override int GetHashCode()
		{
			return _equalityComparer.GetHashCode(this);
		}

		public override bool Equals(object? obj)
		{
			return Equals(obj as Mastertable);
		}
		#endregion

		#region Associations
		/// <summary>
		/// FK_SLAVETABLE_MASTERTABLE backreference
		/// </summary>
		[Association(ThisKey = nameof(Id1) + "," + nameof(Id2), OtherKey = nameof(Slavetable.Id222222222222222222222222) + "," + nameof(Slavetable.Id1))]
		public IEnumerable<Slavetable> Slavetables { get; set; } = null!;
		#endregion
	}
}
