// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using IBM.Data.DB2Types;
using LinqToDB;
using LinqToDB.Mapping;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.All.DB2
{
	[Table("LinqDataTypes")]
	public class LinqDataType
	{
		[Column("ID"            , DataType = DataType.Int32    , DbType = "INTEGER"                                            )] public DB2Int32?     Id             { get; set; } // INTEGER
		[Column("MoneyValue"    , DataType = DataType.Decimal  , DbType = "DECIMAL(10,4)"         , Precision = 10  , Scale = 4)] public DB2Decimal?   MoneyValue     { get; set; } // DECIMAL(10,4)
		[Column("DateTimeValue" , DataType = DataType.Timestamp, DbType = "TIMESTAMP"                                          )] public DB2TimeStamp? DateTimeValue  { get; set; } // TIMESTAMP
		[Column("DateTimeValue2", DataType = DataType.Timestamp, DbType = "TIMESTAMP"                                          )] public DB2TimeStamp? DateTimeValue2 { get; set; } // TIMESTAMP
		[Column("BoolValue"     , DataType = DataType.Int16    , DbType = "SMALLINT"                                           )] public DB2Int16?     BoolValue      { get; set; } // SMALLINT
		[Column("GuidValue"     , DataType = DataType.Binary   , DbType = "CHAR (16) FOR BIT DATA", Length    = 16             )] public DB2Binary?    GuidValue      { get; set; } // CHAR (16) FOR BIT DATA
		[Column("BinaryValue"   , DataType = DataType.Blob     , DbType = "BLOB(5000)"            , Length    = 5000           )] public DB2Blob?      BinaryValue    { get; set; } // BLOB(5000)
		[Column("SmallIntValue" , DataType = DataType.Int16    , DbType = "SMALLINT"                                           )] public DB2Int16?     SmallIntValue  { get; set; } // SMALLINT
		[Column("IntValue"      , DataType = DataType.Int32    , DbType = "INTEGER"                                            )] public DB2Int32?     IntValue       { get; set; } // INTEGER
		[Column("BigIntValue"   , DataType = DataType.Int64    , DbType = "BIGINT"                                             )] public DB2Int64?     BigIntValue    { get; set; } // BIGINT
		[Column("StringValue"   , DataType = DataType.VarChar  , DbType = "VARCHAR(50)"           , Length    = 50             )] public DB2String?    StringValue    { get; set; } // VARCHAR(50)
	}
}
