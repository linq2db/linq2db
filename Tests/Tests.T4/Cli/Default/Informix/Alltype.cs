// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.Default.Informix
{
	[Table("alltypes")]
	public class Alltype
	{
		[Column("id"              , IsPrimaryKey = true, IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int       Id               { get; set; } // SERIAL
		[Column("bigintdatatype"                                                                                    )] public long?     Bigintdatatype   { get; set; } // BIGINT
		[Column("int8datatype"                                                                                      )] public long?     Int8Datatype     { get; set; } // INT8
		[Column("intdatatype"                                                                                       )] public int?      Intdatatype      { get; set; } // INTEGER
		[Column("smallintdatatype"                                                                                  )] public short?    Smallintdatatype { get; set; } // SMALLINT
		[Column("decimaldatatype"                                                                                   )] public decimal?  Decimaldatatype  { get; set; } // DECIMAL
		[Column("moneydatatype"                                                                                     )] public decimal?  Moneydatatype    { get; set; } // MONEY(16,2)
		[Column("realdatatype"                                                                                      )] public float?    Realdatatype     { get; set; } // SMALLFLOAT
		[Column("floatdatatype"                                                                                     )] public double?   Floatdatatype    { get; set; } // FLOAT
		[Column("booldatatype"                                                                                      )] public bool?     Booldatatype     { get; set; } // BOOLEAN
		[Column("chardatatype"                                                                                      )] public char?     Chardatatype     { get; set; } // CHAR(1)
		[Column("char20datatype"                                                                                    )] public string?   Char20Datatype   { get; set; } // CHAR(20)
		[Column("varchardatatype"                                                                                   )] public string?   Varchardatatype  { get; set; } // VARCHAR(10)
		[Column("nchardatatype"                                                                                     )] public string?   Nchardatatype    { get; set; } // NCHAR(10)
		[Column("nvarchardatatype"                                                                                  )] public string?   Nvarchardatatype { get; set; } // NVARCHAR(10)
		[Column("lvarchardatatype"                                                                                  )] public string?   Lvarchardatatype { get; set; } // LVARCHAR(10)
		[Column("textdatatype"                                                                                      )] public string?   Textdatatype     { get; set; } // TEXT
		[Column("datedatatype"                                                                                      )] public DateTime? Datedatatype     { get; set; } // DATE
		[Column("datetimedatatype"                                                                                  )] public DateTime? Datetimedatatype { get; set; } // DATETIME YEAR TO SECOND
		[Column("intervaldatatype"                                                                                  )] public TimeSpan? Intervaldatatype { get; set; } // INTERVAL HOUR TO SECOND
		[Column("bytedatatype"                                                                                      )] public byte[]?   Bytedatatype     { get; set; } // BYTE
	}
}
