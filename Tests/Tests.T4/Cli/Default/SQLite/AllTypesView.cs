// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.Default.SQLite
{
	[Table("AllTypesView", IsView = true)]
	public class AllTypesView
	{
		[Column("ID"                      , IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public long      Id                       { get; set; } // integer
		[Column("bigintDataType"                                                                       )] public long?     BigintDataType           { get; set; } // bigint
		[Column("numericDataType"                                                                      )] public decimal?  NumericDataType          { get; set; } // numeric
		[Column("bitDataType"                                                                          )] public bool?     BitDataType              { get; set; } // bit
		[Column("smallintDataType"                                                                     )] public short?    SmallintDataType         { get; set; } // smallint
		[Column("decimalDataType"                                                                      )] public decimal?  DecimalDataType          { get; set; } // decimal
		[Column("intDataType"                                                                          )] public int?      IntDataType              { get; set; } // int
		[Column("tinyintDataType"                                                                      )] public byte?     TinyintDataType          { get; set; } // tinyint
		[Column("moneyDataType"                                                                        )] public decimal?  MoneyDataType            { get; set; } // money
		[Column("floatDataType"                                                                        )] public double?   FloatDataType            { get; set; } // float
		[Column("realDataType"                                                                         )] public double?   RealDataType             { get; set; } // real
		[Column("datetimeDataType"                                                                     )] public DateTime? DatetimeDataType         { get; set; } // datetime
		[Column("charDataType"                                                                         )] public char?     CharDataType             { get; set; } // char(1)
		[Column("char20DataType"                                                                       )] public string?   Char20DataType           { get; set; } // char(20)
		[Column("varcharDataType"                                                                      )] public string?   VarcharDataType          { get; set; } // varchar(20)
		[Column("textDataType"                                                                         )] public string?   TextDataType             { get; set; } // text(max)
		[Column("ncharDataType"                                                                        )] public string?   NcharDataType            { get; set; } // char(20)
		[Column("nvarcharDataType"                                                                     )] public string?   NvarcharDataType         { get; set; } // nvarchar(20)
		[Column("ntextDataType"                                                                        )] public string?   NtextDataType            { get; set; } // ntext(max)
		[Column("binaryDataType"                                                                       )] public byte[]?   BinaryDataType           { get; set; } // binary
		[Column("varbinaryDataType"                                                                    )] public byte[]?   VarbinaryDataType        { get; set; } // varbinary
		[Column("imageDataType"                                                                        )] public byte[]?   ImageDataType            { get; set; } // image
		[Column("uniqueidentifierDataType"                                                             )] public Guid?     UniqueidentifierDataType { get; set; } // uniqueidentifier
		[Column("objectDataType"                                                                       )] public object?   ObjectDataType           { get; set; } // object
		[Column("Number"                                                                               )] public object?   Number                   { get; set; } // NUMERIC
	}
}
