// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.Fluent.SapHana
{
	public class AllType
	{
		public int       Id                   { get; set; } // INTEGER
		public long?     BigintDataType       { get; set; } // BIGINT
		public short?    SmallintDataType     { get; set; } // SMALLINT
		public decimal?  DecimalDataType      { get; set; } // DECIMAL(34, 0)
		public decimal?  SmalldecimalDataType { get; set; } // SMALLDECIMAL(16, 0)
		public int?      IntDataType          { get; set; } // INTEGER
		public byte?     TinyintDataType      { get; set; } // TINYINT
		public double?   FloatDataType        { get; set; } // DOUBLE
		public float?    RealDataType         { get; set; } // REAL
		public DateTime? DateDataType         { get; set; } // DATE
		public TimeSpan? TimeDataType         { get; set; } // TIME
		public DateTime? SeconddateDataType   { get; set; } // SECONDDATE
		public DateTime? TimestampDataType    { get; set; } // TIMESTAMP
		public char?     CharDataType         { get; set; } // CHAR(1)
		public string?   Char20DataType       { get; set; } // CHAR(20)
		public string?   VarcharDataType      { get; set; } // VARCHAR(20)
		public string?   TextDataType         { get; set; } // TEXT
		public string?   ShorttextDataType    { get; set; } // SHORTTEXT
		public char?     NcharDataType        { get; set; } // NCHAR(1)
		public string?   Nchar20DataType      { get; set; } // NCHAR(20)
		public string?   NvarcharDataType     { get; set; } // NVARCHAR(20)
		public string?   AlphanumDataType     { get; set; } // ALPHANUM
		public byte[]?   BinaryDataType       { get; set; } // BINARY(10)
		public byte[]?   VarbinaryDataType    { get; set; } // VARBINARY(10)
		public byte[]?   BlobDataType         { get; set; } // BLOB
		public string?   ClobDataType         { get; set; } // CLOB
		public string?   NclobDataType        { get; set; } // NCLOB
	}
}
