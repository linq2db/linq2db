// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace Cli.Fluent.PostgreSQL
{
	public class TestMerge1
	{
		public int             Id              { get; set; } // integer
		public int?            Field1          { get; set; } // integer
		public int?            Field2          { get; set; } // integer
		public int?            Field3          { get; set; } // integer
		public int?            Field4          { get; set; } // integer
		public int?            Field5          { get; set; } // integer
		public long?           FieldInt64      { get; set; } // bigint
		public bool?           FieldBoolean    { get; set; } // boolean
		public string?         FieldString     { get; set; } // character varying(20)
		public string?         FieldNString    { get; set; } // character varying(20)
		public char?           FieldChar       { get; set; } // character(1)
		public char?           FieldNChar      { get; set; } // character(1)
		public float?          FieldFloat      { get; set; } // real
		public double?         FieldDouble     { get; set; } // double precision
		public DateTime?       FieldDateTime   { get; set; } // timestamp (6) without time zone
		public DateTimeOffset? FieldDateTime2  { get; set; } // timestamp (6) with time zone
		public byte[]?         FieldBinary     { get; set; } // bytea
		public Guid?           FieldGuid       { get; set; } // uuid
		public decimal?        FieldDecimal    { get; set; } // numeric(24,10)
		public DateTime?       FieldDate       { get; set; } // date
		public TimeSpan?       FieldTime       { get; set; } // time(6) without time zone
		public string?         FieldEnumString { get; set; } // character varying(20)
		public int?            FieldEnumNumber { get; set; } // integer
	}
}
