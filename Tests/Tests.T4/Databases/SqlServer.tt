<#@ template language="C#" debug="True" hostSpecific="True"                                             #>
<#@ CleanupBehavior processor="T4VSHost" CleanupAfterProcessingtemplate="true"                          #>
<#@ output extension=".generated.cs"                                                                    #>
<#@ include file="$(LinqToDBT4SqlServerTemplatesPath)LinqToDB.SqlServer.ttinclude"          once="true" #>
<#@ include file="$(LinqToDBT4SqlServerTemplatesPath)LinqToDB.SqlServer.SqlTypes.ttinclude" once="true" #>
<#@ include file="..\Shared.ttinclude"                                                      once="true" #>
<#@ include file="SqlServer.ttinclude"                                                      once="true" #>
<#@ include file="$(LinqToDBT4TemplatesPath)ObsoleteAttributes.ttinclude"                   once="true" #>
<#
	DatabaseName                        = null;//"Northwind";
	GenerateDatabaseName                = false;
	OneToManyAssociationType            = "List<{0}>";
	GenerateSchemaAsType                = true;
	GenerateAssociationExtensions       = true;
	GenerateSqlServerFreeText           = true;
	GenerateConstructors                = false;
	GenerateProcedureErrors             = false;
	IncludeDefaultSchema                = false;
	GenerateObsoleteAttributeForAliases = true;
	GenerateDataTypes                   = true;
	GenerateDbTypes                     = true;

	SchemaNameMapping.Add("TestSchema", "MySchema");

	GenerateProcedureResultAsList = true;

	GetSchemaOptions.LoadTable = t => t.Name is not "Products" && t.Name != "Person";

	LoadSqlServerMetadata(GetConnectionString("SqlServer.Northwind"));

	Tables["Order Details"].Columns["OrderID"]. MemberName = "ID";

	GetTable("Categories").   AliasPropertyName = "CATEG";
	GetTable("Categories").   AliasTypeName     = "CATEG";
	GetTable("Order Details").AliasPropertyName = "Order_Details";
	GetTable("Order Details").AliasTypeName     = "ORD_DET";

	var member = GetColumn("Categories", "CategoryID");
	member.Attributes.Add(new Attribute("SequenceName", "\"https://github.com/linq2db/linq2db/issues/1866\""));

	GenerateTypesFromMetadata();

	DataContextName   = null;
	DataContextObject = null;

	DatabaseName = null;//"TestData";

	LoadSqlServerMetadata(GetConnectionString("SqlServer.2019"));

	AddReturnParameter("Issue1897");

	GenerateModel();
#>
