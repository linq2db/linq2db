//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591
#nullable enable

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Reflection;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Data;
using LinqToDB.DataProvider.SapHana;
using LinqToDB.Mapping;

namespace SapHanaDataContext
{
	public partial class HXEDB : LinqToDB.Data.DataConnection
	{
		                                           public ITable<_SYS_PLAN_STABILITY_AbstractSqlPlanEntries>                                           AbstractSqlPlanEntries                                                                   { get { return this.GetTable<_SYS_PLAN_STABILITY_AbstractSqlPlanEntries>(); } }
		                                           public ITable<_SYS_PLAN_STABILITY_AbstractSqlPlanQueries>                                           AbstractSqlPlanQueries                                                                   { get { return this.GetTable<_SYS_PLAN_STABILITY_AbstractSqlPlanQueries>(); } }
		                                           public ITable<TESTHANAODBC_AllType>                                                                 AllTypes                                                                                 { get { return this.GetTable<TESTHANAODBC_AllType>(); } }
		                                           public ITable<AllType>                                                                              AllTypes0                                                                                { get { return this.GetTable<AllType>(); } }
		                                           public ITable<TESTHANAODBC_AllTypesGeo>                                                             AllTypesGeos                                                                             { get { return this.GetTable<TESTHANAODBC_AllTypesGeo>(); } }
		                                           public ITable<AllTypesGeo>                                                                          AllTypesGeos0                                                                            { get { return this.GetTable<AllTypesGeo>(); } }
		/// <summary>
		/// This table contains a summary of Best Record group master statistics
		/// </summary>
		                                           public ITable<_SYS_TASK_BestRecordGroupMasterStatistic>                                             BestRecordGroupMasterStatistics                                                          { get { return this.GetTable<_SYS_TASK_BestRecordGroupMasterStatistic>(); } }
		                                           public ITable<_SYS_TASK_BestRecordGroupMasterStatistics>                                            BestRecordGroupMasterStatistics0                                                         { get { return this.GetTable<_SYS_TASK_BestRecordGroupMasterStatistics>(); } }
		/// <summary>
		/// This table contains governance information for every column in every record that is updated in the best record process
		/// </summary>
		                                           public ITable<_SYS_TASK_BestRecordResult>                                                           BestRecordResults                                                                        { get { return this.GetTable<_SYS_TASK_BestRecordResult>(); } }
		                                           public ITable<_SYS_TASK_BestRecordResults>                                                          BestRecordResults0                                                                       { get { return this.GetTable<_SYS_TASK_BestRecordResults>(); } }
		                                           public ITable<_SYS_TASK_BestRecordStrategies>                                                       BestRecordStrategies                                                                     { get { return this.GetTable<_SYS_TASK_BestRecordStrategies>(); } }
		/// <summary>
		/// This table contains information on which strategies are used in each strategy group and in which order
		/// </summary>
		                                           public ITable<_SYS_TASK_BestRecordSTRATEGy>                                                         BestRecordStrategies0                                                                    { get { return this.GetTable<_SYS_TASK_BestRecordSTRATEGy>(); } }
		                                           public ITable<_SYS_TASK_BestRecordStrategyGroups>                                                   BestRecordStrategyGroups                                                                 { get { return this.GetTable<_SYS_TASK_BestRecordStrategyGroups>(); } }
		                                           public ITable<TESTHANAODBC_BulkInsertLowerCaseColumn>                                               BulkInsertLowerCaseColumns                                                               { get { return this.GetTable<TESTHANAODBC_BulkInsertLowerCaseColumn>(); } }
		                                           public ITable<BulkInsertLowerCaseColumn>                                                            BulkInsertLowerCaseColumns0                                                              { get { return this.GetTable<BulkInsertLowerCaseColumn>(); } }
		                                           public ITable<TESTHANAODBC_BulkInsertUpperCaseColumn>                                               BulkInsertUpperCaseColumns                                                               { get { return this.GetTable<TESTHANAODBC_BulkInsertUpperCaseColumn>(); } }
		                                           public ITable<BulkInsertUpperCaseColumn>                                                            BulkInsertUpperCaseColumns0                                                              { get { return this.GetTable<BulkInsertUpperCaseColumn>(); } }
		                                           public ITable<_SYS_RT_CdsAnnotation>                                                                CdsAnnotations                                                                           { get { return this.GetTable<_SYS_RT_CdsAnnotation>(); } }
		                                           public ITable<_SYS_RT_CdsAnnotationAssignment>                                                      CdsAnnotationAssignments                                                                 { get { return this.GetTable<_SYS_RT_CdsAnnotationAssignment>(); } }
		                                           public ITable<_SYS_RT_CdsAnnotationValue>                                                           CdsAnnotationValues                                                                      { get { return this.GetTable<_SYS_RT_CdsAnnotationValue>(); } }
		                                           public ITable<_SYS_RT_CdsArray>                                                                     CdsArrays                                                                                { get { return this.GetTable<_SYS_RT_CdsArray>(); } }
		                                           public ITable<_SYS_RT_CdsArtifact>                                                                  CdsArtifacts                                                                             { get { return this.GetTable<_SYS_RT_CdsArtifact>(); } }
		                                           public ITable<_SYS_RT_CdsAspect>                                                                    CdsAspects                                                                               { get { return this.GetTable<_SYS_RT_CdsAspect>(); } }
		                                           public ITable<_SYS_RT_CdsAssociation>                                                               CdsAssociations                                                                          { get { return this.GetTable<_SYS_RT_CdsAssociation>(); } }
		                                           public ITable<_SYS_RT_CdsConstant>                                                                  CdsConstants                                                                             { get { return this.GetTable<_SYS_RT_CdsConstant>(); } }
		                                           public ITable<_SYS_RT_CdsDependency>                                                                CdsDependencies                                                                          { get { return this.GetTable<_SYS_RT_CdsDependency>(); } }
		                                           public ITable<_SYS_RT_CdsDerivedType>                                                               CdsDerivedTypes                                                                          { get { return this.GetTable<_SYS_RT_CdsDerivedType>(); } }
		                                           public ITable<_SYS_RT_CdsEntity>                                                                    CdsEntities                                                                              { get { return this.GetTable<_SYS_RT_CdsEntity>(); } }
		                                           public ITable<_SYS_RT_CdsEnum>                                                                      CdsEnums                                                                                 { get { return this.GetTable<_SYS_RT_CdsEnum>(); } }
		                                           public ITable<_SYS_RT_CdsExpression>                                                                CdsExpressions                                                                           { get { return this.GetTable<_SYS_RT_CdsExpression>(); } }
		                                           public ITable<_SYS_RT_CdsExtPkgDep>                                                                 CdsExtPkgDeps                                                                            { get { return this.GetTable<_SYS_RT_CdsExtPkgDep>(); } }
		                                           public ITable<_SYS_RT_CdsParameter>                                                                 CdsParameters                                                                            { get { return this.GetTable<_SYS_RT_CdsParameter>(); } }
		                                           public ITable<_SYS_RT_CdsRule>                                                                      CdsRules                                                                                 { get { return this.GetTable<_SYS_RT_CdsRule>(); } }
		                                           public ITable<_SYS_RT_CdsScalarType>                                                                CdsScalarTypes                                                                           { get { return this.GetTable<_SYS_RT_CdsScalarType>(); } }
		                                           public ITable<_SYS_RT_CdsSourceCode>                                                                CdsSourceCodes                                                                           { get { return this.GetTable<_SYS_RT_CdsSourceCode>(); } }
		                                           public ITable<_SYS_RT_CdsStatistic>                                                                 CdsStatistics                                                                            { get { return this.GetTable<_SYS_RT_CdsStatistic>(); } }
		                                           public ITable<_SYS_RT_CdsStructure>                                                                 CdsStructures                                                                            { get { return this.GetTable<_SYS_RT_CdsStructure>(); } }
		                                           public ITable<_SYS_RT_CdsStructureComponent>                                                        CdsStructureComponents                                                                   { get { return this.GetTable<_SYS_RT_CdsStructureComponent>(); } }
		                                           public ITable<_SYS_RT_CdsView>                                                                      CdsViews                                                                                 { get { return this.GetTable<_SYS_RT_CdsView>(); } }
		                                           public ITable<Child>                                                                                Children                                                                                 { get { return this.GetTable<Child>(); } }
		                                           public ITable<TESTHANAODBC_Child>                                                                   Children0                                                                                { get { return this.GetTable<TESTHANAODBC_Child>(); } }
		                                           public ITable<_SYS_TASK_CleanseAddressRecordInfo>                                                   CleanseAddressRecordInfo                                                                 { get { return this.GetTable<_SYS_TASK_CleanseAddressRecordInfo>(); } }
		/// <summary>
		/// The table tells a user how well an address assigned and the type of address
		/// </summary>
		                                           public ITable<_SYS_TASK_CleanseAddressRecordInfo0>                                                  CleanseAddressRecordInfo0                                                                { get { return this.GetTable<_SYS_TASK_CleanseAddressRecordInfo0>(); } }
		                                           public ITable<_SYS_TASK_CleanseChangeInfo>                                                          CleanseChangeInfo                                                                        { get { return this.GetTable<_SYS_TASK_CleanseChangeInfo>(); } }
		/// <summary>
		/// This table describes the changes made during the cleansing process
		/// </summary>
		                                           public ITable<_SYS_TASK_CleanseChangeInfo0>                                                         CleanseChangeInfo0                                                                       { get { return this.GetTable<_SYS_TASK_CleanseChangeInfo0>(); } }
		                                           public ITable<_SYS_TASK_CleanseComponentInfo>                                                       CleanseComponentInfo                                                                     { get { return this.GetTable<_SYS_TASK_CleanseComponentInfo>(); } }
		/// <summary>
		/// This table identifies the location of parsed data elements in the input and output
		/// </summary>
		                                           public ITable<_SYS_TASK_CleanseComponentInfo0>                                                      CleanseComponentInfo0                                                                    { get { return this.GetTable<_SYS_TASK_CleanseComponentInfo0>(); } }
		/// <summary>
		/// This table contains one row per info code generated by the cleansing process
		/// </summary>
		                                           public ITable<_SYS_TASK_CleanseInfoCode>                                                            CleanseInfoCodes                                                                         { get { return this.GetTable<_SYS_TASK_CleanseInfoCode>(); } }
		                                           public ITable<_SYS_TASK_CleanseInfoCodes>                                                           CleanseInfoCodes0                                                                        { get { return this.GetTable<_SYS_TASK_CleanseInfoCodes>(); } }
		/// <summary>
		/// This table contains a summary of Cleanse statistics
		/// </summary>
		                                           public ITable<_SYS_TASK_CleanseStatistic>                                                           CleanseStatistics                                                                        { get { return this.GetTable<_SYS_TASK_CleanseStatistic>(); } }
		                                           public ITable<_SYS_TASK_CleanseStatistics>                                                          CleanseStatistics0                                                                       { get { return this.GetTable<_SYS_TASK_CleanseStatistics>(); } }
		/// <summary>
		/// Telemetry Client Information
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_CLIENT>                                                                Clients                                                                                  { get { return this.GetTable<_SYS_TELEMETRY_CLIENT>(); } }
		/// <summary>
		/// Telemetry Configuration Information
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_CONFIGURATION>                                                         Configurations                                                                           { get { return this.GetTable<_SYS_TELEMETRY_CONFIGURATION>(); } }
		/// <summary>
		/// This table contains messages generated by create task command
		/// </summary>
		                                           public ITable<_SYS_TASK_CreateTaskMessage>                                                          CreateTaskMessages                                                                       { get { return this.GetTable<_SYS_TASK_CreateTaskMessage>(); } }
		                                           public ITable<_SYS_TASK_CreateTaskMessages>                                                         CreateTaskMessages0                                                                      { get { return this.GetTable<_SYS_TASK_CreateTaskMessages>(); } }
		/// <summary>
		/// Runtime data of column tables
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_CsTable>                                                               CsTables                                                                                 { get { return this.GetTable<_SYS_TELEMETRY_CsTable>(); } }
		                                           public ITable<_SYS_TASK_CurrentVersions>                                                            CurrentVersions                                                                          { get { return this.GetTable<_SYS_TASK_CurrentVersions>(); } }
		                                           public ITable<_SYS_XS_DebugPermission>                                                              DebugPermissions                                                                         { get { return this.GetTable<_SYS_XS_DebugPermission>(); } }
		                                           public ITable<_SYS_EPM_DeleteContainer>                                                             DeleteContainers                                                                         { get { return this.GetTable<_SYS_EPM_DeleteContainer>(); } }
		/// <summary>
		/// Disk usage information on host basis group by usage_types
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_DiskUsage>                                                             DiskUsages                                                                               { get { return this.GetTable<_SYS_TELEMETRY_DiskUsage>(); } }
		                                           public ITable<Doctor>                                                                               Doctors                                                                                  { get { return this.GetTable<Doctor>(); } }
		                                           public ITable<TESTHANAODBC_Doctor>                                                                  Doctors0                                                                                 { get { return this.GetTable<TESTHANAODBC_Doctor>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_EdgeStatistic>                                                      EdgeStatistics                                                                           { get { return this.GetTable<_SYS_SQL_ANALYZER_EdgeStatistic>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_EdgeStatistics>                                                     EdgeStatistics0                                                                          { get { return this.GetTable<_SYS_SQL_ANALYZER_EdgeStatistics>(); } }
		                                           public ITable<_SYS_AFL_EmlModelConfiguration>                                                       EmlModelConfigurations                                                                   { get { return this.GetTable<_SYS_AFL_EmlModelConfiguration>(); } }
		                                           public ITable<_SYS_EPM_EpmModel>                                                                    EpmModels                                                                                { get { return this.GetTable<_SYS_EPM_EpmModel>(); } }
		                                           public ITable<_SYS_EPM_EpmQuerySource>                                                              EpmQuerySources                                                                          { get { return this.GetTable<_SYS_EPM_EpmQuerySource>(); } }
		                                           public ITable<_SYS_EPM_EpmStatistic>                                                                EpmStatistics                                                                            { get { return this.GetTable<_SYS_EPM_EpmStatistic>(); } }
		/// <summary>
		/// Enterprise Search configuration
		/// </summary>
		                                           public ITable<_SYS_RT_EshModel>                                                                     EshModel                                                                                 { get { return this.GetTable<_SYS_RT_EshModel>(); } }
		/// <summary>
		/// Enterprise Search configuration
		/// </summary>
		                                           public ITable<_SYS_RT_EshModel0>                                                                    EshModels                                                                                { get { return this.GetTable<_SYS_RT_EshModel0>(); } }
		                                           public ITable<_SYS_RT_EshModelAuth>                                                                 EshModelAuth                                                                             { get { return this.GetTable<_SYS_RT_EshModelAuth>(); } }
		/// <summary>
		/// Enterprise Search configuration properties
		/// </summary>
		                                           public ITable<_SYS_RT_EshModelProperty>                                                             EshModelProperty                                                                         { get { return this.GetTable<_SYS_RT_EshModelProperty>(); } }
		/// <summary>
		/// Enterprise Search configuration properties
		/// </summary>
		                                           public ITable<_SYS_RT_EshModelProperty0>                                                            EshModelProperties                                                                       { get { return this.GetTable<_SYS_RT_EshModelProperty0>(); } }
		/// <summary>
		/// Internal events
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_EVENT>                                                                 EVENTS                                                                                   { get { return this.GetTable<_SYS_TELEMETRY_EVENT>(); } }
		/// <summary>
		/// Detailed feature usage statistics
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_FeatureUsage>                                                          FeatureUsages                                                                            { get { return this.GetTable<_SYS_TELEMETRY_FeatureUsage>(); } }
		                                           public ITable<_SYS_AFL_FunctionExecutionCount>                                                      FunctionExecutionCounts                                                                  { get { return this.GetTable<_SYS_AFL_FunctionExecutionCount>(); } }
		                                           public ITable<_SYS_AFL_FunctionExecutionCountsControl>                                              FunctionExecutionCountsControls                                                          { get { return this.GetTable<_SYS_AFL_FunctionExecutionCountsControl>(); } }
		                                           public ITable<_SYS_AFL_FunctionProgressInAflbfl>                                                    FunctionProgressInAflbfls                                                                { get { return this.GetTable<_SYS_AFL_FunctionProgressInAflbfl>(); } }
		                                           public ITable<_SYS_AFL_FunctionProgressInAflpal>                                                    FunctionProgressInAflpals                                                                { get { return this.GetTable<_SYS_AFL_FunctionProgressInAflpal>(); } }
		                                           public ITable<_SYS_AFL_FunctionProgressInLcappsWrapperArea>                                         FunctionProgressInLcappsWrapperAreas                                                     { get { return this.GetTable<_SYS_AFL_FunctionProgressInLcappsWrapperArea>(); } }
		                                           public ITable<_SYS_AFL_FunctionProgressInOflArea>                                                   FunctionProgressInOflAreas                                                               { get { return this.GetTable<_SYS_AFL_FunctionProgressInOflArea>(); } }
		/// <summary>
		/// This table contains one row per info code generated by the geocode transformation process
		/// </summary>
		                                           public ITable<_SYS_TASK_GeocodeInfoCode>                                                            GeocodeInfoCodes                                                                         { get { return this.GetTable<_SYS_TASK_GeocodeInfoCode>(); } }
		                                           public ITable<_SYS_TASK_GeocodeInfoCodes>                                                           GeocodeInfoCodes0                                                                        { get { return this.GetTable<_SYS_TASK_GeocodeInfoCodes>(); } }
		/// <summary>
		/// This table contains a summary of Geocode statistics
		/// </summary>
		                                           public ITable<_SYS_TASK_GeocodeStatistic>                                                           GeocodeStatistics                                                                        { get { return this.GetTable<_SYS_TASK_GeocodeStatistic>(); } }
		                                           public ITable<_SYS_TASK_GeocodeStatistics>                                                          GeocodeStatistics0                                                                       { get { return this.GetTable<_SYS_TASK_GeocodeStatistics>(); } }
		                                           public ITable<TESTHANAODBC_GrandChild>                                                              GrandChildren                                                                            { get { return this.GetTable<TESTHANAODBC_GrandChild>(); } }
		                                           public ITable<GrandChild>                                                                           GrandChildren0                                                                           { get { return this.GetTable<GrandChild>(); } }
		/// <summary>
		/// General HANA feature usage information
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_HanaUsageOnDemand>                                                     HanaUsageOnDemands                                                                       { get { return this.GetTable<_SYS_TELEMETRY_HanaUsageOnDemand>(); } }
		/// <summary>
		/// Memory allocator statistics
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_HeapMemory>                                                            HeapMemories                                                                             { get { return this.GetTable<_SYS_TELEMETRY_HeapMemory>(); } }
		/// <summary>
		/// Host information such as machine, OS configuration
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_HostInformation>                                                       HostInformation                                                                          { get { return this.GetTable<_SYS_TELEMETRY_HostInformation>(); } }
		                                           public ITable<_SYS_XS_HttpDestination>                                                              HttpDestinations                                                                         { get { return this.GetTable<_SYS_XS_HttpDestination>(); } }
		                                           public ITable<_SYS_RT_InaActiveObject>                                                              InaActiveObjects                                                                         { get { return this.GetTable<_SYS_RT_InaActiveObject>(); } }
		                                           public ITable<_SYS_RT_InaActiveObjectProperty>                                                      InaActiveObjectProperties                                                                { get { return this.GetTable<_SYS_RT_InaActiveObjectProperty>(); } }
		                                           public ITable<_SYS_RT_InaActivePerspectiveV>                                                        InaActivePerspectiveV                                                                    { get { return this.GetTable<_SYS_RT_InaActivePerspectiveV>(); } }
		                                           public ITable<TESTHANAODBC_IndexTable>                                                              IndexTables                                                                              { get { return this.GetTable<TESTHANAODBC_IndexTable>(); } }
		                                           public ITable<IndexTable>                                                                           IndexTables0                                                                             { get { return this.GetTable<IndexTable>(); } }
		                                           public ITable<TESTHANAODBC_IndexTable2>                                                             IndexTable2                                                                              { get { return this.GetTable<TESTHANAODBC_IndexTable2>(); } }
		                                           public ITable<IndexTable2>                                                                          IndexTable3                                                                              { get { return this.GetTable<IndexTable2>(); } }
		                                           public ITable<TESTHANAODBC_InheritanceChild>                                                        InheritanceChildren                                                                      { get { return this.GetTable<TESTHANAODBC_InheritanceChild>(); } }
		                                           public ITable<InheritanceChild>                                                                     InheritanceChildren0                                                                     { get { return this.GetTable<InheritanceChild>(); } }
		                                           public ITable<TESTHANAODBC_InheritanceParent>                                                       InheritanceParents                                                                       { get { return this.GetTable<TESTHANAODBC_InheritanceParent>(); } }
		                                           public ITable<InheritanceParent>                                                                    InheritanceParents0                                                                      { get { return this.GetTable<InheritanceParent>(); } }
		/// <summary>
		/// Configuration information from inifiles
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_InifileContent>                                                        InifileContents                                                                          { get { return this.GetTable<_SYS_TELEMETRY_InifileContent>(); } }
		                                           public ITable<_SYS_XS_JOB>                                                                          JOBS                                                                                     { get { return this.GetTable<_SYS_XS_JOB>(); } }
		                                           public ITable<_SYS_XS_JobLog>                                                                       JobLogs                                                                                  { get { return this.GetTable<_SYS_XS_JobLog>(); } }
		                                           public ITable<_SYS_XS_JobSchedule>                                                                  JobSchedules                                                                             { get { return this.GetTable<_SYS_XS_JobSchedule>(); } }
		                                           public ITable<_SYS_XS_JsRecompileIssue>                                                             JsRecompileIssues                                                                        { get { return this.GetTable<_SYS_XS_JsRecompileIssue>(); } }
		                                           public ITable<_SYS_EPM_LibraryVersion>                                                              LibraryVersions                                                                          { get { return this.GetTable<_SYS_EPM_LibraryVersion>(); } }
		/// <summary>
		/// Information on all licenses (if any) so far installed on this system
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_License>                                                               LICENSES                                                                                 { get { return this.GetTable<_SYS_TELEMETRY_License>(); } }
		/// <summary>
		/// Information on the currently valid license (if any) installed on this system
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_LICENSE>                                                               Licenses                                                                                 { get { return this.GetTable<_SYS_TELEMETRY_LICENSE>(); } }
		                                           public ITable<TESTHANAODBC_LinqDataType>                                                            LinqDataTypes                                                                            { get { return this.GetTable<TESTHANAODBC_LinqDataType>(); } }
		                                           public ITable<LinqDataType>                                                                         LinqDataTypes0                                                                           { get { return this.GetTable<LinqDataType>(); } }
		/// <summary>
		/// Log buffer statistics
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_LogBuffer>                                                             LogBuffers                                                                               { get { return this.GetTable<_SYS_TELEMETRY_LogBuffer>(); } }
		/// <summary>
		/// Log segment statistics
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_LogSegment>                                                            LogSegments                                                                              { get { return this.GetTable<_SYS_TELEMETRY_LogSegment>(); } }
		                                           public ITable<_SYS_TASK_MatchGroupInfo>                                                             MatchGroupInfo                                                                           { get { return this.GetTable<_SYS_TASK_MatchGroupInfo>(); } }
		/// <summary>
		/// This table contains one row for each match group
		/// </summary>
		                                           public ITable<_SYS_TASK_MatchGroupInfo0>                                                            MatchGroupInfo0                                                                          { get { return this.GetTable<_SYS_TASK_MatchGroupInfo0>(); } }
		                                           public ITable<_SYS_TASK_MatchPolicies>                                                              MatchPolicies                                                                            { get { return this.GetTable<_SYS_TASK_MatchPolicies>(); } }
		                                           public ITable<_SYS_TASK_MatchRecordInfo>                                                            MatchRecordInfo                                                                          { get { return this.GetTable<_SYS_TASK_MatchRecordInfo>(); } }
		/// <summary>
		/// This table contains one row for each matching record per level
		/// </summary>
		                                           public ITable<_SYS_TASK_MatchRecordInfo0>                                                           MatchRecordInfo0                                                                         { get { return this.GetTable<_SYS_TASK_MatchRecordInfo0>(); } }
		                                           public ITable<_SYS_TASK_MatchRules>                                                                 MatchRules                                                                               { get { return this.GetTable<_SYS_TASK_MatchRules>(); } }
		                                           public ITable<_SYS_TASK_MatchSourceInfo>                                                            MatchSourceInfo                                                                          { get { return this.GetTable<_SYS_TASK_MatchSourceInfo>(); } }
		/// <summary>
		/// This table contains counts of matches within and between data sources
		/// </summary>
		                                           public ITable<_SYS_TASK_MatchSourceStatistic>                                                       MatchSourceStatistics                                                                    { get { return this.GetTable<_SYS_TASK_MatchSourceStatistic>(); } }
		                                           public ITable<_SYS_TASK_MatchSourceStatistics>                                                      MatchSourceStatistics0                                                                   { get { return this.GetTable<_SYS_TASK_MatchSourceStatistics>(); } }
		/// <summary>
		/// This table contains statistics regarding the run of the transformation operation
		/// </summary>
		                                           public ITable<_SYS_TASK_MatchStatistic>                                                             MatchStatistics                                                                          { get { return this.GetTable<_SYS_TASK_MatchStatistic>(); } }
		                                           public ITable<_SYS_TASK_MatchStatistics>                                                            MatchStatistics0                                                                         { get { return this.GetTable<_SYS_TASK_MatchStatistics>(); } }
		                                           public ITable<_SYS_TASK_MatchTracing>                                                               MatchTracing                                                                             { get { return this.GetTable<_SYS_TASK_MatchTracing>(); } }
		/// <summary>
		/// This table contains one row for each match decision made during the matching process
		/// </summary>
		                                           public ITable<_SYS_TASK_MatchTracing0>                                                              MatchTracings                                                                            { get { return this.GetTable<_SYS_TASK_MatchTracing0>(); } }
		                                           public ITable<_SYS_EPM_MdsMetadata>                                                                 MdsMetadatas                                                                             { get { return this.GetTable<_SYS_EPM_MdsMetadata>(); } }
		                                           public ITable<_SYS_EPM_MdsMetadataDocument>                                                         MdsMetadataDocuments                                                                     { get { return this.GetTable<_SYS_EPM_MdsMetadataDocument>(); } }
		                                           public ITable<_SYS_EPM_ModelAdmin>                                                                  ModelAdmins                                                                              { get { return this.GetTable<_SYS_EPM_ModelAdmin>(); } }
		                                           public ITable<_SYS_EPM_ModelMigration>                                                              ModelMigrations                                                                          { get { return this.GetTable<_SYS_EPM_ModelMigration>(); } }
		                                           public ITable<_SYS_XS_OauthAccessToken>                                                             OauthAccessTokens                                                                        { get { return this.GetTable<_SYS_XS_OauthAccessToken>(); } }
		                                           public ITable<_SYS_XS_OauthAccessTokenScope>                                                        OauthAccessTokenScopes                                                                   { get { return this.GetTable<_SYS_XS_OauthAccessTokenScope>(); } }
		                                           public ITable<_SYS_XS_OauthAppConfig>                                                               OauthAppConfigs                                                                          { get { return this.GetTable<_SYS_XS_OauthAppConfig>(); } }
		                                           public ITable<_SYS_XS_OauthAppConfigScope>                                                          OauthAppConfigScopes                                                                     { get { return this.GetTable<_SYS_XS_OauthAppConfigScope>(); } }
		                                           public ITable<_SYS_XS_OauthClientConfig>                                                            OauthClientConfigs                                                                       { get { return this.GetTable<_SYS_XS_OauthClientConfig>(); } }
		                                           public ITable<_SYS_XS_OauthClientFlavor>                                                            OauthClientFlavors                                                                       { get { return this.GetTable<_SYS_XS_OauthClientFlavor>(); } }
		                                           public ITable<_SYS_XS_OdataService>                                                                 OdataServices                                                                            { get { return this.GetTable<_SYS_XS_OdataService>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_OperatorDetail>                                                     OperatorDetails                                                                          { get { return this.GetTable<_SYS_SQL_ANALYZER_OperatorDetail>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_OperatorDetails>                                                    OperatorDetails0                                                                         { get { return this.GetTable<_SYS_SQL_ANALYZER_OperatorDetails>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_OperatorSourceDetail>                                               OperatorSourceDetails                                                                    { get { return this.GetTable<_SYS_SQL_ANALYZER_OperatorSourceDetail>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_OperatorSourceDetails>                                              OperatorSourceDetails0                                                                   { get { return this.GetTable<_SYS_SQL_ANALYZER_OperatorSourceDetails>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_OperatorStatistic>                                                  OperatorStatistics                                                                       { get { return this.GetTable<_SYS_SQL_ANALYZER_OperatorStatistic>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_OperatorStatistics>                                                 OperatorStatistics0                                                                      { get { return this.GetTable<_SYS_SQL_ANALYZER_OperatorStatistics>(); } }
		/// <summary>
		/// Disposition specific memory object statistics. The statistics are calculated and reading them may take a while.
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_OutOfMemoryEvent>                                                      OutOfMemoryEvents                                                                        { get { return this.GetTable<_SYS_TELEMETRY_OutOfMemoryEvent>(); } }
		                                           public ITable<TESTHANAODBC_Parent>                                                                  Parents                                                                                  { get { return this.GetTable<TESTHANAODBC_Parent>(); } }
		                                           public ITable<Parent>                                                                               Parents0                                                                                 { get { return this.GetTable<Parent>(); } }
		                                           public ITable<TESTHANAODBC_ParentChildView>                                                         ParentChildViews                                                                         { get { return this.GetTable<TESTHANAODBC_ParentChildView>(); } }
		                                           public ITable<ParentChildView>                                                                      ParentChildViews0                                                                        { get { return this.GetTable<ParentChildView>(); } }
		                                           public ITable<TESTHANAODBC_ParentView>                                                              ParentViews                                                                              { get { return this.GetTable<TESTHANAODBC_ParentView>(); } }
		                                           public ITable<ParentView>                                                                           ParentViews0                                                                             { get { return this.GetTable<ParentView>(); } }
		                                           public ITable<Patient>                                                                              Patients                                                                                 { get { return this.GetTable<Patient>(); } }
		                                           public ITable<TESTHANAODBC_Patient>                                                                 Patients0                                                                                { get { return this.GetTable<TESTHANAODBC_Patient>(); } }
		                                           public ITable<_SYS_TASK_PendingDropTasks>                                                           PendingDropTasks                                                                         { get { return this.GetTable<_SYS_TASK_PendingDropTasks>(); } }
		                                           public ITable<Person>                                                                               People                                                                                   { get { return this.GetTable<Person>(); } }
		                                           public ITable<TESTHANAODBC_Person>                                                                  People0                                                                                  { get { return this.GetTable<TESTHANAODBC_Person>(); } }
		                                           public ITable<_SYS_PLAN_STABILITY_PlanStabilityConfig>                                              PlanStabilityConfig                                                                      { get { return this.GetTable<_SYS_PLAN_STABILITY_PlanStabilityConfig>(); } }
		                                           public ITable<_SYS_PLAN_STABILITY_PlanStabilityStatistics>                                          PlanStabilityStatistics                                                                  { get { return this.GetTable<_SYS_PLAN_STABILITY_PlanStabilityStatistics>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_PlanStatistic>                                                      PlanStatistics                                                                           { get { return this.GetTable<_SYS_SQL_ANALYZER_PlanStatistic>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_PlanStatistics>                                                     PlanStatistics0                                                                          { get { return this.GetTable<_SYS_SQL_ANALYZER_PlanStatistics>(); } }
		                                           public ITable<_SYS_AFL_PluginError>                                                                 PluginErrors                                                                             { get { return this.GetTable<_SYS_AFL_PluginError>(); } }
		                                           public ITable<_SYS_RT_PpAAlgorithm>                                                                 PpAAlgorithms                                                                            { get { return this.GetTable<_SYS_RT_PpAAlgorithm>(); } }
		                                           public ITable<_SYS_RT_PpACha>                                                                       PpAChas                                                                                  { get { return this.GetTable<_SYS_RT_PpACha>(); } }
		                                           public ITable<_SYS_RT_PpADatacontainer>                                                             PpADatacontainers                                                                        { get { return this.GetTable<_SYS_RT_PpADatacontainer>(); } }
		                                           public ITable<_SYS_RT_PpAKyf>                                                                       PpAKyfs                                                                                  { get { return this.GetTable<_SYS_RT_PpAKyf>(); } }
		                                           public ITable<_SYS_RT_PpASession>                                                                   PpASessions                                                                              { get { return this.GetTable<_SYS_RT_PpASession>(); } }
		                                           public ITable<TESTHANAODBC_PrdGlobalEccCvMara>                                                      PrdGlobalEccCvMaras                                                                      { get { return this.GetTable<TESTHANAODBC_PrdGlobalEccCvMara>(); } }
		                                           public ITable<PrdGlobalEccCvMara>                                                                   PrdGlobalEccCvMaras0                                                                     { get { return this.GetTable<PrdGlobalEccCvMara>(); } }
		                                           public ITable<_SYS_EPM_PublishGrant>                                                                PublishGrants                                                                            { get { return this.GetTable<_SYS_EPM_PublishGrant>(); } }
		                                           public ITable<_SYS_EPM_PublishPrivilege>                                                            PublishPrivileges                                                                        { get { return this.GetTable<_SYS_EPM_PublishPrivilege>(); } }
		                                           public ITable<_SYS_XS_RuntimeConfiguration>                                                         RuntimeConfigurations                                                                    { get { return this.GetTable<_SYS_XS_RuntimeConfiguration>(); } }
		                                           public ITable<_SYS_DATA_ANONYMIZATION_RuntimeData>                                                  RuntimeData                                                                              { get { return this.GetTable<_SYS_DATA_ANONYMIZATION_RuntimeData>(); } }
		                                           public ITable<_SYS_XS_RuntimeJsonExtension>                                                         RuntimeJsonExtensions                                                                    { get { return this.GetTable<_SYS_XS_RuntimeJsonExtension>(); } }
		                                           public ITable<_SYS_XS_RuntimeJsonObject>                                                            RuntimeJsonObjects                                                                       { get { return this.GetTable<_SYS_XS_RuntimeJsonObject>(); } }
		                                           public ITable<_SYS_XS_SamlProviderConfig>                                                           SamlProviderConfigs                                                                      { get { return this.GetTable<_SYS_XS_SamlProviderConfig>(); } }
		                                           public ITable<UIS_SapHanaUisDbAdminUisAppsitesPropertiesView>                                       SapHanaUisDbAdminUisAppsitesPropertiesViews                                              { get { return this.GetTable<UIS_SapHanaUisDbAdminUisAppsitesPropertiesView>(); } }
		                                           public ITable<UIS_SapHanaUisDbAdminUisAppsitesView>                                                 SapHanaUisDbAdminUisAppsitesViews                                                        { get { return this.GetTable<UIS_SapHanaUisDbAdminUisAppsitesView>(); } }
		                                           public ITable<UIS_SapHanaUisDbAdminUisPagesView>                                                    SapHanaUisDbAdminUisPagesViews                                                           { get { return this.GetTable<UIS_SapHanaUisDbAdminUisPagesView>(); } }
		                                           public ITable<UIS_SapHanaUisDbAdminUisPermissionsView>                                              SapHanaUisDbAdminUisPermissionsViews                                                     { get { return this.GetTable<UIS_SapHanaUisDbAdminUisPermissionsView>(); } }
		                                           public ITable<UIS_SapHanaUisDbAdminUisWidgetsPropertiesView>                                        SapHanaUisDbAdminUisWidgetsPropertiesViews                                               { get { return this.GetTable<UIS_SapHanaUisDbAdminUisWidgetsPropertiesView>(); } }
		                                           public ITable<UIS_SapHanaUisDbAdminUisWidgetsView>                                                  SapHanaUisDbAdminUisWidgetsViews                                                         { get { return this.GetTable<UIS_SapHanaUisDbAdminUisWidgetsView>(); } }
		                                           public ITable<UIS_SapHanaUisDbAdminUisWidgetTemplateListsView>                                      SapHanaUisDbAdminUisWidgetTemplateListsViews                                             { get { return this.GetTable<UIS_SapHanaUisDbAdminUisWidgetTemplateListsView>(); } }
		                                           public ITable<UIS_SapHanaUisDbAdminUisWidgetTemplatePropertiesView>                                 SapHanaUisDbAdminUisWidgetTemplatePropertiesViews                                        { get { return this.GetTable<UIS_SapHanaUisDbAdminUisWidgetTemplatePropertiesView>(); } }
		                                           public ITable<UIS_SapHanaUisDbAdminUisWidgetTemplatesView>                                          SapHanaUisDbAdminUisWidgetTemplatesViews                                                 { get { return this.GetTable<UIS_SapHanaUisDbAdminUisWidgetTemplatesView>(); } }
		                                           public ITable<UIS_SapHanaUisDbConfiguration>                                                        SapHanaUisDbConfigurations                                                               { get { return this.GetTable<UIS_SapHanaUisDbConfiguration>(); } }
		                                           public ITable<UIS_SapHanaUisDbFioriCatalogCoreView>                                                 SapHanaUisDbFioriCatalogCoreViews                                                        { get { return this.GetTable<UIS_SapHanaUisDbFioriCatalogCoreView>(); } }
		                                           public ITable<UIS_SapHanaUisDbGetUserRolesView>                                                     SapHanaUisDbGetUserRolesViews                                                            { get { return this.GetTable<UIS_SapHanaUisDbGetUserRolesView>(); } }
		                                           public ITable<UIS_SapHanaUisDbIntentAliasMappingV2>                                                 SapHanaUisDbIntentAliasMappingV2                                                         { get { return this.GetTable<UIS_SapHanaUisDbIntentAliasMappingV2>(); } }
		                                           public ITable<UIS_SapHanaUisDbNavigationTarget>                                                     SapHanaUisDbNavigationTargets                                                            { get { return this.GetTable<UIS_SapHanaUisDbNavigationTarget>(); } }
		                                           public ITable<UIS_SapHanaUisDbNavigationView>                                                       SapHanaUisDbNavigationViews                                                              { get { return this.GetTable<UIS_SapHanaUisDbNavigationView>(); } }
		                                           public ITable<UIS_SapHanaUisDbPersonalizationUisUserWidgetsTemporary>                               SapHanaUisDbPersonalizationUisUserWidgetsTemporaries                                     { get { return this.GetTable<UIS_SapHanaUisDbPersonalizationUisUserWidgetsTemporary>(); } }
		                                           public ITable<UIS_SapHanaUisDbSemanticObject>                                                       SapHanaUisDbSemanticObjects                                                              { get { return this.GetTable<UIS_SapHanaUisDbSemanticObject>(); } }
		                                           public ITable<UIS_SapHanaUisDbSemanticObjectView>                                                   SapHanaUisDbSemanticObjectViews                                                          { get { return this.GetTable<UIS_SapHanaUisDbSemanticObjectView>(); } }
		                                           public ITable<UIS_SapHanaUisDbTheme>                                                                SapHanaUisDbThemes                                                                       { get { return this.GetTable<UIS_SapHanaUisDbTheme>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisAppsitesDataView>                                                  SapHanaUisDbUisAppsitesDataViews                                                         { get { return this.GetTable<UIS_SapHanaUisDbUisAppsitesDataView>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisAppsitesView>                                                      SapHanaUisDbUisAppsitesViews                                                             { get { return this.GetTable<UIS_SapHanaUisDbUisAppsitesView>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisCatalog>                                                           SapHanaUisDbUisCatalogs                                                                  { get { return this.GetTable<UIS_SapHanaUisDbUisCatalog>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisCatalogsTranslationView>                                           SapHanaUisDbUisCatalogsTranslationViews                                                  { get { return this.GetTable<UIS_SapHanaUisDbUisCatalogsTranslationView>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisCatalogsView>                                                      SapHanaUisDbUisCatalogsViews                                                             { get { return this.GetTable<UIS_SapHanaUisDbUisCatalogsView>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisFioriCatalogsView>                                                 SapHanaUisDbUisFioriCatalogsViews                                                        { get { return this.GetTable<UIS_SapHanaUisDbUisFioriCatalogsView>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisIntentAliasMappingV2View>                                          SapHanaUisDbUisIntentAliasMappingV2Views                                                 { get { return this.GetTable<UIS_SapHanaUisDbUisIntentAliasMappingV2View>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisNavigationTargetView>                                              SapHanaUisDbUisNavigationTargetViews                                                     { get { return this.GetTable<UIS_SapHanaUisDbUisNavigationTargetView>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisPermission>                                                        SapHanaUisDbUisPermissions                                                               { get { return this.GetTable<UIS_SapHanaUisDbUisPermission>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisThemesView>                                                        SapHanaUisDbUisThemesViews                                                               { get { return this.GetTable<UIS_SapHanaUisDbUisThemesView>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisTranslationView>                                                   SapHanaUisDbUisTranslationViews                                                          { get { return this.GetTable<UIS_SapHanaUisDbUisTranslationView>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisWidgetsView>                                                       SapHanaUisDbUisWidgetsViews                                                              { get { return this.GetTable<UIS_SapHanaUisDbUisWidgetsView>(); } }
		                                           public ITable<UIS_SapHanaUisDbUisWidgetTemplatesView>                                               SapHanaUisDbUisWidgetTemplatesViews                                                      { get { return this.GetTable<UIS_SapHanaUisDbUisWidgetTemplatesView>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminDbFetchAllRolesView>                                       SapHanaXsAdminDbFetchAllRolesViews                                                       { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminDbFetchAllRolesView>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminDbSamlIdpListCount>                                        SapHanaXsAdminDbSamlIdpListCounts                                                        { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminDbSamlIdpListCount>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctId>                                    SapHanaXsAdminJobsServerDbDistinctIds                                                    { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctId>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctLogId>                                 SapHanaXsAdminJobsServerDbDistinctLogIds                                                 { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctLogId>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctLogStatus>                             SapHanaXsAdminJobsServerDbDistinctLogStatus                                              { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctLogStatus>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctScheduleId>                            SapHanaXsAdminJobsServerDbDistinctScheduleIds                                            { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctScheduleId>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctScheduleStatus>                        SapHanaXsAdminJobsServerDbDistinctScheduleStatus                                         { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctScheduleStatus>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctUser>                                  SapHanaXsAdminJobsServerDbDistinctUsers                                                  { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctUser>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbJob>                                           SapHanaXsAdminJobsServerDbJobs                                                           { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbJob>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbLog>                                           SapHanaXsAdminJobsServerDbLogs                                                           { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbLog>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbSchedule>                                      SapHanaXsAdminJobsServerDbSchedules                                                      { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminJobsServerDbSchedule>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsAdminWebdispatcherServerDbApplicationDetail>                    SapHanaXsAdminWebdispatcherServerDbApplicationDetails                                    { get { return this.GetTable<HANA_XS_BASE_SapHanaXsAdminWebdispatcherServerDbApplicationDetail>(); } }
		                                           public ITable<SAP_REST_API_SapHanaXsDtBaseODataOwnerWorkspace>                                      SapHanaXsDtBaseODataOwnerWorkspaces                                                      { get { return this.GetTable<SAP_REST_API_SapHanaXsDtBaseODataOwnerWorkspace>(); } }
		                                           public ITable<SAP_REST_API_SapHanaXsDtBaseServerDTAccessDtaa>                                       SapHanaXsDtBaseServerDTAccessDtaas                                                       { get { return this.GetTable<SAP_REST_API_SapHanaXsDtBaseServerDTAccessDtaa>(); } }
		                                           public ITable<SAP_REST_API_SapHanaXsDtBaseServerDTAccessDtai>                                       SapHanaXsDtBaseServerDTAccessDtais                                                       { get { return this.GetTable<SAP_REST_API_SapHanaXsDtBaseServerDTAccessDtai>(); } }
		                                           public ITable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyCatalogAndRepositoryAnalyticalPrivilege> SapHanaXsDtBaseServerPersistencyCatalogAndRepositoryAnalyticalPrivileges                 { get { return this.GetTable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyCatalogAndRepositoryAnalyticalPrivilege>(); } }
		                                           public ITable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyCatalogAndRepositoryRole>                SapHanaXsDtBaseServerPersistencyCatalogAndRepositoryRoles                                { get { return this.GetTable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyCatalogAndRepositoryRole>(); } }
		                                           public ITable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyExtensionWhitelist>                      SapHanaXsDtBaseServerPersistencyExtensionWhitelists                                      { get { return this.GetTable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyExtensionWhitelist>(); } }
		                                           public ITable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyRepositoryPackage>                       SapHanaXsDtBaseServerPersistencyRepositoryPackages                                       { get { return this.GetTable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyRepositoryPackage>(); } }
		                                           public ITable<SAP_REST_API_SapHanaXsDtBaseServerPersistencySystemAndApplicationPrivilege>           SapHanaXsDtBaseServerPersistencySystemAndApplicationPrivileges                           { get { return this.GetTable<SAP_REST_API_SapHanaXsDtBaseServerPersistencySystemAndApplicationPrivilege>(); } }
		                                           public ITable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyUserpreferencesUserPreference>           SapHanaXsDtBaseServerPersistencyUserpreferencesUserPreferences                           { get { return this.GetTable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyUserpreferencesUserPreference>(); } }
		                                           public ITable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyUserpreferencesUserPreferencesIntern>    SapHanaXsDtBaseServerPersistencyUserpreferencesUserPreferencesInterns                    { get { return this.GetTable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyUserpreferencesUserPreferencesIntern>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsFormLoginProfileDbUserPreference>                               SapHanaXsFormLoginProfileDbUserPreferences                                               { get { return this.GetTable<HANA_XS_BASE_SapHanaXsFormLoginProfileDbUserPreference>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsFormLoginProfileDbUserProfileView>                              SapHanaXsFormLoginProfileDbUserProfileViews                                              { get { return this.GetTable<HANA_XS_BASE_SapHanaXsFormLoginProfileDbUserProfileView>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbActionLog>                                                     SapHanaXsLmDbActionLogs                                                                  { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbActionLog>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbActivationError>                                               SapHanaXsLmDbActivationErrors                                                            { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbActivationError>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbConfHistory>                                                   SapHanaXsLmDbConfHistories                                                               { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbConfHistory>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbConfiguration>                                                 SapHanaXsLmDbConfigurations                                                              { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbConfiguration>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbConfigurationView>                                             SapHanaXsLmDbConfigurationViews                                                          { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbConfigurationView>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbContainerDetail>                                               SapHanaXsLmDbContainerDetails                                                            { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbContainerDetail>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbContainerHeader>                                               SapHanaXsLmDbContainerHeaders                                                            { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbContainerHeader>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbContainerInstancesInternal>                                    SapHanaXsLmDbContainerInstancesInternals                                                 { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbContainerInstancesInternal>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbContainerPvInternal>                                           SapHanaXsLmDbContainerPvInternals                                                        { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbContainerPvInternal>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbContainerScvInternal>                                          SapHanaXsLmDbContainerScvInternals                                                       { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbContainerScvInternal>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbContent>                                                       SapHanaXsLmDbContents                                                                    { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbContent>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbContentObject>                                                 SapHanaXsLmDbContentObjects                                                              { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbContentObject>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbImportedDu>                                                    SapHanaXsLmDbImportedDus                                                                 { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbImportedDu>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbInstallationContainerPvVariant>                                SapHanaXsLmDbInstallationContainerPvVariants                                             { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbInstallationContainerPvVariant>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbInstallationContainerScvVariant>                               SapHanaXsLmDbInstallationContainerScvVariants                                            { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbInstallationContainerScvVariant>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbLogSync>                                                       SapHanaXsLmDbLogSyncs                                                                    { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbLogSync>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbProcess>                                                       SapHanaXsLmDbProcesses                                                                   { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbProcess>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbProcessView>                                                   SapHanaXsLmDbProcessViews                                                                { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbProcessView>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbProduct>                                                       SapHanaXsLmDbProducts                                                                    { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbProduct>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbProductsExtension>                                             SapHanaXsLmDbProductsExtensions                                                          { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbProductsExtension>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbSlpDeployTask>                                                 SapHanaXsLmDbSlpDeployTasks                                                              { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbSlpDeployTask>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbSlpTasksExt>                                                   SapHanaXsLmDbSlpTasksExts                                                                { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbSlpTasksExt>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbSystem>                                                        SapHanaXsLmDbSystems                                                                     { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbSystem>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbSystemState>                                                   SapHanaXsLmDbSystemStates                                                                { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbSystemState>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbSystemView>                                                    SapHanaXsLmDbSystemViews                                                                 { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbSystemView>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbTransportContent>                                              SapHanaXsLmDbTransportContents                                                           { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbTransportContent>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbTransportedChange>                                             SapHanaXsLmDbTransportedChanges                                                          { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbTransportedChange>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbTransportRoute>                                                SapHanaXsLmDbTransportRoutes                                                             { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbTransportRoute>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbTransportRouteDu>                                              SapHanaXsLmDbTransportRouteDus                                                           { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbTransportRouteDu>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbTransportRouteView>                                            SapHanaXsLmDbTransportRouteViews                                                         { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbTransportRouteView>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmDbUploadedFile>                                                  SapHanaXsLmDbUploadedFiles                                                               { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmDbUploadedFile>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmInstallationDeliveryUnitsInst>                                   SapHanaXsLmInstallationDeliveryUnitsInsts                                                { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmInstallationDeliveryUnitsInst>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeContentDemoDbDemoVariantContainer>                          SapHanaXsLmPeContentDemoDbDemoVariantContainers                                          { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeContentDemoDbDemoVariantContainer>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationObject>                                         SapHanaXsLmPeDbActivationObjects                                                         { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationObject>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationScenario>                                       SapHanaXsLmPeDbActivationScenarios                                                       { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationScenario>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationService>                                        SapHanaXsLmPeDbActivationServices                                                        { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationService>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationValueBuffer>                                    SapHanaXsLmPeDbActivationValueBuffers                                                    { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationValueBuffer>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVariant>                                        SapHanaXsLmPeDbActivationVariants                                                        { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVariant>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarScenario>                                    SapHanaXsLmPeDbActivationVarScenarios                                                    { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarScenario>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarScenarioPhase>                               SapHanaXsLmPeDbActivationVarScenarioPhases                                               { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarScenarioPhase>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarService>                                     SapHanaXsLmPeDbActivationVarServices                                                     { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarService>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarServiceStep>                                 SapHanaXsLmPeDbActivationVarServiceSteps                                                 { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarServiceStep>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarServiceVariant>                              SapHanaXsLmPeDbActivationVarServiceVariants                                              { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarServiceVariant>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarTextRepository>                              SapHanaXsLmPeDbActivationVarTextRepositories                                             { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarTextRepository>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarView>                                        SapHanaXsLmPeDbActivationVarViews                                                        { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarXsscriptParameter>                           SapHanaXsLmPeDbActivationVarXsscriptParameters                                           { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarXsscriptParameter>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbApplicationVariant>                                       SapHanaXsLmPeDbApplicationVariants                                                       { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbApplicationVariant>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbLog>                                                      SapHanaXsLmPeDbLogs                                                                      { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbLog>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbLogView>                                                  SapHanaXsLmPeDbLogViews                                                                  { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbLogView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcess>                                                  SapHanaXsLmPeDbProcesses                                                                 { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcess>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessLog>                                               SapHanaXsLmPeDbProcessLogs                                                               { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessLog>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessParameter>                                         SapHanaXsLmPeDbProcessParameters                                                         { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessParameter>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessParameterView>                                     SapHanaXsLmPeDbProcessParameterViews                                                     { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessParameterView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessSemaphore>                                         SapHanaXsLmPeDbProcessSemaphores                                                         { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessSemaphore>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessService>                                           SapHanaXsLmPeDbProcessServices                                                           { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessService>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessServiceStep>                                       SapHanaXsLmPeDbProcessServiceSteps                                                       { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessServiceStep>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessServiceVariant>                                    SapHanaXsLmPeDbProcessServiceVariants                                                    { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessServiceVariant>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessTask>                                              SapHanaXsLmPeDbProcessTasks                                                              { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessTask>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessVariable>                                          SapHanaXsLmPeDbProcessVariables                                                          { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessVariable>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessVariableView>                                      SapHanaXsLmPeDbProcessVariableViews                                                      { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessVariableView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessView>                                              SapHanaXsLmPeDbProcessViews                                                              { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbScenario>                                                 SapHanaXsLmPeDbScenarios                                                                 { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbScenario>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioPhase>                                            SapHanaXsLmPeDbScenarioPhases                                                            { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioPhase>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioPhaseView>                                        SapHanaXsLmPeDbScenarioPhaseViews                                                        { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioPhaseView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioView>                                             SapHanaXsLmPeDbScenarioViews                                                             { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbService>                                                  SapHanaXsLmPeDbServices                                                                  { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbService>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceActivation>                                        SapHanaXsLmPeDbServiceActivations                                                        { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceActivation>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceParameterView>                                     SapHanaXsLmPeDbServiceParameterViews                                                     { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceParameterView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceScenario>                                          SapHanaXsLmPeDbServiceScenarios                                                          { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceScenario>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceStep>                                              SapHanaXsLmPeDbServiceSteps                                                              { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceStep>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceVariant>                                           SapHanaXsLmPeDbServiceVariants                                                           { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceVariant>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceView>                                              SapHanaXsLmPeDbServiceViews                                                              { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpActionView>                                            SapHanaXsLmPeDbSlpActionViews                                                            { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpActionView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpBreakpointCurrentView>                                 SapHanaXsLmPeDbSlpBreakpointCurrentViews                                                 { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpBreakpointCurrentView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpBreakpointView>                                        SapHanaXsLmPeDbSlpBreakpointViews                                                        { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpBreakpointView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpConfigView>                                            SapHanaXsLmPeDbSlpConfigViews                                                            { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpConfigView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpDialogView>                                            SapHanaXsLmPeDbSlpDialogViews                                                            { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpDialogView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpLogContentView>                                        SapHanaXsLmPeDbSlpLogContentViews                                                        { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpLogContentView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpLogView>                                               SapHanaXsLmPeDbSlpLogViews                                                               { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpLogView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpMetadataView>                                          SapHanaXsLmPeDbSlpMetadataViews                                                          { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpMetadataView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpMonitorView>                                           SapHanaXsLmPeDbSlpMonitorViews                                                           { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpMonitorView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpPropertyView>                                          SapHanaXsLmPeDbSlpPropertyViews                                                          { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpPropertyView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpRoadmapView>                                           SapHanaXsLmPeDbSlpRoadmapViews                                                           { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpRoadmapView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpTasklogView>                                           SapHanaXsLmPeDbSlpTasklogViews                                                           { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpTasklogView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpVersionView>                                           SapHanaXsLmPeDbSlpVersionViews                                                           { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbSlpVersionView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbStepView>                                                 SapHanaXsLmPeDbStepViews                                                                 { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbStepView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbTasklistView>                                             SapHanaXsLmPeDbTasklistViews                                                             { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbTasklistView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbTaskLog>                                                  SapHanaXsLmPeDbTaskLogs                                                                  { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbTaskLog>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbTaskLogF>                                                 SapHanaXsLmPeDbTaskLogF                                                                  { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbTaskLogF>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbTaskView>                                                 SapHanaXsLmPeDbTaskViews                                                                 { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbTaskView>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbTextRepository>                                           SapHanaXsLmPeDbTextRepositories                                                          { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbTextRepository>(); } }
		                                           public ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbXsscriptParameter>                                        SapHanaXsLmPeDbXsscriptParameters                                                        { get { return this.GetTable<SAP_XS_LM_PE_SapHanaXsLmPeDbXsscriptParameter>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmSlpFile>                                                         SapHanaXsLmSlpFiles                                                                      { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmSlpFile>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmSlpLog>                                                          SapHanaXsLmSlpLogs                                                                       { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmSlpLog>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmSlpPARAMETERS1>                                                  SapHanaXsLmSlpPARAMETERS1                                                                { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmSlpPARAMETERS1>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmSlpProcess>                                                      SapHanaXsLmSlpProcesses                                                                  { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmSlpProcess>(); } }
		                                           public ITable<SAP_XS_LM_SapHanaXsLmSlpTask>                                                         SapHanaXsLmSlpTasks                                                                      { get { return this.GetTable<SAP_XS_LM_SapHanaXsLmSlpTask>(); } }
		                                           public ITable<SAP_XS_USAGE_SapHanaXsLmUsageDbSusage>                                                SapHanaXsLmUsageDbSusages                                                                { get { return this.GetTable<SAP_XS_USAGE_SapHanaXsLmUsageDbSusage>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsSelfServiceAdminDbAccessList>                                   SapHanaXsSelfServiceAdminDbAccessLists                                                   { get { return this.GetTable<HANA_XS_BASE_SapHanaXsSelfServiceAdminDbAccessList>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsSelfServiceAdminDbUssEmailTemplate>                             SapHanaXsSelfServiceAdminDbUssEmailTemplates                                             { get { return this.GetTable<HANA_XS_BASE_SapHanaXsSelfServiceAdminDbUssEmailTemplate>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsSelfServiceAdminDbUssRequestsView>                              SapHanaXsSelfServiceAdminDbUssRequestsViews                                              { get { return this.GetTable<HANA_XS_BASE_SapHanaXsSelfServiceAdminDbUssRequestsView>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsSelfServiceUserDbIniParamsDetail>                               SapHanaXsSelfServiceUserDbIniParamsDetails                                               { get { return this.GetTable<HANA_XS_BASE_SapHanaXsSelfServiceUserDbIniParamsDetail>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsSelfServiceUserDbSecurityQuestion>                              SapHanaXsSelfServiceUserDbSecurityQuestions                                              { get { return this.GetTable<HANA_XS_BASE_SapHanaXsSelfServiceUserDbSecurityQuestion>(); } }
		                                           public ITable<HANA_XS_BASE_SapHanaXsSelfServiceUserDbUserRequest>                                   SapHanaXsSelfServiceUserDbUserRequests                                                   { get { return this.GetTable<HANA_XS_BASE_SapHanaXsSelfServiceUserDbUserRequest>(); } }
		                                           public ITable<_SYS_EPM_SavedContainer>                                                              SavedContainers                                                                          { get { return this.GetTable<_SYS_EPM_SavedContainer>(); } }
		                                           public ITable<_SYS_EPM_SCHEMAVERSION>                                                               Schemaversions                                                                           { get { return this.GetTable<_SYS_EPM_SCHEMAVERSION>(); } }
		                                           public ITable<_SYS_RT_SearchRuleSet>                                                                SearchRuleSets                                                                           { get { return this.GetTable<_SYS_RT_SearchRuleSet>(); } }
		                                           public ITable<_SYS_XS_SecureStore>                                                                  SecureStores                                                                             { get { return this.GetTable<_SYS_XS_SecureStore>(); } }
		                                           public ITable<_SYS_XS_SecureStoreList>                                                              SecureStoreLists                                                                         { get { return this.GetTable<_SYS_XS_SecureStoreList>(); } }
		/// <summary>
		/// Telemetry Server Information
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_SERVER>                                                                Servers                                                                                  { get { return this.GetTable<_SYS_TELEMETRY_SERVER>(); } }
		/// <summary>
		/// Detailed information on memory utilization by services
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_ServiceMemory>                                                         ServiceMemories                                                                          { get { return this.GetTable<_SYS_TELEMETRY_ServiceMemory>(); } }
		                                           public ITable<_SYS_XS_SqlConnection>                                                                SqlConnections                                                                           { get { return this.GetTable<_SYS_XS_SqlConnection>(); } }
		/// <summary>
		/// This table contains messages generated by start task command
		/// </summary>
		                                           public ITable<_SYS_TASK_StartTaskMessage>                                                           StartTaskMessages                                                                        { get { return this.GetTable<_SYS_TASK_StartTaskMessage>(); } }
		                                           public ITable<_SYS_TASK_StartTaskMessages>                                                          StartTaskMessages0                                                                       { get { return this.GetTable<_SYS_TASK_StartTaskMessages>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_StatementStatistic>                                                 StatementStatistics                                                                      { get { return this.GetTable<_SYS_SQL_ANALYZER_StatementStatistic>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_StatementStatistics>                                                StatementStatistics0                                                                     { get { return this.GetTable<_SYS_SQL_ANALYZER_StatementStatistics>(); } }
		                                           public ITable<_SYS_SECURITY_SysObjectPrivilege>                                                     SysObjectPrivileges                                                                      { get { return this.GetTable<_SYS_SECURITY_SysObjectPrivilege>(); } }
		                                           public ITable<_SYS_SECURITY_SysPasswordBlacklist>                                                   SysPasswordBlacklists                                                                    { get { return this.GetTable<_SYS_SECURITY_SysPasswordBlacklist>(); } }
		/// <summary>
		/// Overview of system status including important resource usage information and alerts
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_SystemOverview>                                                        SystemOverviews                                                                          { get { return this.GetTable<_SYS_TELEMETRY_SystemOverview>(); } }
		                                           public ITable<_SYS_RT_TablePlacement>                                                               TablePlacements                                                                          { get { return this.GetTable<_SYS_RT_TablePlacement>(); } }
		                                           public ITable<_SYS_TASK_TaskClientMapping>                                                          TaskClientMapping                                                                        { get { return this.GetTable<_SYS_TASK_TaskClientMapping>(); } }
		/// <summary>
		/// Provides the client mapping when a task is created by the ABAP API
		/// </summary>
		                                           public ITable<_SYS_TASK_TaskClientMapping0>                                                         TaskClientMappings                                                                       { get { return this.GetTable<_SYS_TASK_TaskClientMapping0>(); } }
		/// <summary>
		/// Defines the columns present in a particular table
		/// </summary>
		                                           public ITable<_SYS_TASK_TaskColumnDefinition>                                                       TaskColumnDefinitions                                                                    { get { return this.GetTable<_SYS_TASK_TaskColumnDefinition>(); } }
		                                           public ITable<_SYS_TASK_TaskColumnDefinitions>                                                      TaskColumnDefinitions0                                                                   { get { return this.GetTable<_SYS_TASK_TaskColumnDefinitions>(); } }
		/// <summary>
		/// Task Execution Statistics.
		/// </summary>
		                                           public ITable<_SYS_TASK_TaskExecution>                                                              TaskExecutions                                                                           { get { return this.GetTable<_SYS_TASK_TaskExecution>(); } }
		                                           public ITable<_SYS_TASK_TaskExecutions>                                                             TaskExecutions0                                                                          { get { return this.GetTable<_SYS_TASK_TaskExecutions>(); } }
		                                           public ITable<_SYS_TASK_TaskLocalization>                                                           TaskLocalization                                                                         { get { return this.GetTable<_SYS_TASK_TaskLocalization>(); } }
		/// <summary>
		/// Contains localized values for the task framework tables
		/// </summary>
		                                           public ITable<_SYS_TASK_TaskLocalization0>                                                          TaskLocalizations                                                                        { get { return this.GetTable<_SYS_TASK_TaskLocalization0>(); } }
		/// <summary>
		/// Contains all operations and details about those operations that exist for a given task
		/// </summary>
		                                           public ITable<_SYS_TASK_TaskOperation>                                                              TaskOperations                                                                           { get { return this.GetTable<_SYS_TASK_TaskOperation>(); } }
		                                           public ITable<_SYS_TASK_TaskOperations>                                                             TaskOperations0                                                                          { get { return this.GetTable<_SYS_TASK_TaskOperations>(); } }
		/// <summary>
		/// Task Operations Execution Statistics
		/// </summary>
		                                           public ITable<_SYS_TASK_TaskOperationsExecution>                                                    TaskOperationsExecutions                                                                 { get { return this.GetTable<_SYS_TASK_TaskOperationsExecution>(); } }
		                                           public ITable<_SYS_TASK_TaskOperationsExecutions>                                                   TaskOperationsExecutions0                                                                { get { return this.GetTable<_SYS_TASK_TaskOperationsExecutions>(); } }
		/// <summary>
		/// Task Partition Statistics.
		/// </summary>
		                                           public ITable<_SYS_TASK_TaskPartitionExecution>                                                     TaskPartitionExecutions                                                                  { get { return this.GetTable<_SYS_TASK_TaskPartitionExecution>(); } }
		                                           public ITable<_SYS_TASK_TaskPartitionExecutions>                                                    TaskPartitionExecutions0                                                                 { get { return this.GetTable<_SYS_TASK_TaskPartitionExecutions>(); } }
		/// <summary>
		/// Contains all of the tables used by the various side-effect producing operations
		/// </summary>
		                                           public ITable<_SYS_TASK_TaskTableDefinition>                                                        TaskTableDefinitions                                                                     { get { return this.GetTable<_SYS_TASK_TaskTableDefinition>(); } }
		                                           public ITable<_SYS_TASK_TaskTableDefinitions>                                                       TaskTableDefinitions0                                                                    { get { return this.GetTable<_SYS_TASK_TaskTableDefinitions>(); } }
		/// <summary>
		/// Defines the relationships (if any) between tables within an operation
		/// </summary>
		                                           public ITable<_SYS_TASK_TaskTableRelationship>                                                      TaskTableRelationships                                                                   { get { return this.GetTable<_SYS_TASK_TaskTableRelationship>(); } }
		                                           public ITable<_SYS_TASK_TaskTableRelationships>                                                     TaskTableRelationships0                                                                  { get { return this.GetTable<_SYS_TASK_TaskTableRelationships>(); } }
		/// <summary>
		/// Last Telemetry Client Information
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_TelemetryClient>                                                       TelemetryClients                                                                         { get { return this.GetTable<_SYS_TELEMETRY_TelemetryClient>(); } }
		/// <summary>
		/// Telemetry inifile section
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_TelemetryInifile>                                                      TelemetryInifiles                                                                        { get { return this.GetTable<_SYS_TELEMETRY_TelemetryInifile>(); } }
		/// <summary>
		/// General HANA feature usage information
		/// </summary>
		                                           public ITable<_SYS_TELEMETRY_TelHanaUsage>                                                          TelHanaUsages                                                                            { get { return this.GetTable<_SYS_TELEMETRY_TelHanaUsage>(); } }
		                                           public ITable<_SYS_EPM_TemporaryContainer>                                                          TemporaryContainers                                                                      { get { return this.GetTable<_SYS_EPM_TemporaryContainer>(); } }
		                                           public ITable<TESTHANAODBC_TestIdentity>                                                            TestIdentities                                                                           { get { return this.GetTable<TESTHANAODBC_TestIdentity>(); } }
		                                           public ITable<TestIdentity>                                                                         TestIdentities0                                                                          { get { return this.GetTable<TestIdentity>(); } }
		                                           public ITable<TESTHANAODBC_TestMerge1>                                                              TestMerge1                                                                               { get { return this.GetTable<TESTHANAODBC_TestMerge1>(); } }
		                                           public ITable<TestMerge1>                                                                           TestMerge2                                                                               { get { return this.GetTable<TestMerge1>(); } }
		                                           public ITable<TESTHANAODBC_TestMerge2>                                                              TestMerge3                                                                               { get { return this.GetTable<TESTHANAODBC_TestMerge2>(); } }
		                                           public ITable<TestMerge2>                                                                           TestMerge4                                                                               { get { return this.GetTable<TestMerge2>(); } }
		                                           public ITable<_SYS_RT_TiImportKey>                                                                  TiImportKeys                                                                             { get { return this.GetTable<_SYS_RT_TiImportKey>(); } }
		                                           public ITable<_SYS_RT_UisAppsite>                                                                   UisAppsites                                                                              { get { return this.GetTable<_SYS_RT_UisAppsite>(); } }
		                                           public ITable<_SYS_RT_UisAppsitePROPERTy>                                                           UisAppsiteProperties                                                                     { get { return this.GetTable<_SYS_RT_UisAppsitePROPERTy>(); } }
		                                           public ITable<_SYS_RT_UisAuditLog>                                                                  UisAuditLogs                                                                             { get { return this.GetTable<_SYS_RT_UisAuditLog>(); } }
		                                           public ITable<_SYS_RT_UisPage>                                                                      UisPages                                                                                 { get { return this.GetTable<_SYS_RT_UisPage>(); } }
		                                           public ITable<_SYS_RT_UisPagePROPERTy>                                                              UisPageProperties                                                                        { get { return this.GetTable<_SYS_RT_UisPagePROPERTy>(); } }
		                                           public ITable<_SYS_RT_UisUserAppsite>                                                               UisUserAppsites                                                                          { get { return this.GetTable<_SYS_RT_UisUserAppsite>(); } }
		                                           public ITable<_SYS_RT_UisUserAppsitePROPERTy>                                                       UisUserAppsiteProperties                                                                 { get { return this.GetTable<_SYS_RT_UisUserAppsitePROPERTy>(); } }
		                                           public ITable<_SYS_RT_UisUserPage>                                                                  UisUserPages                                                                             { get { return this.GetTable<_SYS_RT_UisUserPage>(); } }
		                                           public ITable<_SYS_RT_UisUserPagePROPERTy>                                                          UisUserPageProperties                                                                    { get { return this.GetTable<_SYS_RT_UisUserPagePROPERTy>(); } }
		                                           public ITable<_SYS_RT_UisUserWidget>                                                                UisUserWidgets                                                                           { get { return this.GetTable<_SYS_RT_UisUserWidget>(); } }
		                                           public ITable<_SYS_RT_UisUserWidgetPROPERTy>                                                        UisUserWidgetProperties                                                                  { get { return this.GetTable<_SYS_RT_UisUserWidgetPROPERTy>(); } }
		                                           public ITable<_SYS_RT_UisWidget>                                                                    UisWidgets                                                                               { get { return this.GetTable<_SYS_RT_UisWidget>(); } }
		                                           public ITable<_SYS_RT_UisWidgetPROPERTy>                                                            UisWidgetProperties                                                                      { get { return this.GetTable<_SYS_RT_UisWidgetPROPERTy>(); } }
		                                           public ITable<_SYS_RT_UisWidgetTemplate>                                                            UisWidgetTemplates                                                                       { get { return this.GetTable<_SYS_RT_UisWidgetTemplate>(); } }
		                                           public ITable<_SYS_RT_UisWidgetTemplateList>                                                        UisWidgetTemplateLists                                                                   { get { return this.GetTable<_SYS_RT_UisWidgetTemplateList>(); } }
		                                           public ITable<_SYS_RT_UisWidgetTemplatePROPERTy>                                                    UisWidgetTemplateProperties                                                              { get { return this.GetTable<_SYS_RT_UisWidgetTemplatePROPERTy>(); } }
		                                           public ITable<_SYS_XS_UsageMeasuringObject>                                                         UsageMeasuringObjects                                                                    { get { return this.GetTable<_SYS_XS_UsageMeasuringObject>(); } }
		                                           public ITable<_SYS_XS_UsageStatistic>                                                               UsageStatistics                                                                          { get { return this.GetTable<_SYS_XS_UsageStatistic>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_VariableTrace>                                                      VariableTrace                                                                            { get { return this.GetTable<_SYS_SQL_ANALYZER_VariableTrace>(); } }
		                                           public ITable<_SYS_SQL_ANALYZER_VariableTrace0>                                                     VariableTraces                                                                           { get { return this.GetTable<_SYS_SQL_ANALYZER_VariableTrace0>(); } }
		                                           public ITable<_SYS_EPM_VERSION>                                                                     VERSIONS                                                                                 { get { return this.GetTable<_SYS_EPM_VERSION>(); } }
		                                           public ITable<_SYS_EPM_VersionPrivilege>                                                            VersionPrivileges                                                                        { get { return this.GetTable<_SYS_EPM_VersionPrivilege>(); } }
		                                           public ITable<_SYS_EPM_VersionState>                                                                VersionStates                                                                            { get { return this.GetTable<_SYS_EPM_VersionState>(); } }
		                                           public ITable<_SYS_XS_XsjsUsage>                                                                    XsjsUsages                                                                               { get { return this.GetTable<_SYS_XS_XsjsUsage>(); } }
		[CalculationViewInputParametersExpression] public ITable<_SYS_BIC_SapHanaUisDbGetNavigationTargetData>                                         SapHanaUisDbGetNavigationTargetData                                     (string? IN_TAG) { return GetTable<_SYS_BIC_SapHanaUisDbGetNavigationTargetData>(this, (MethodInfo) MethodBase.GetCurrentMethod()!, IN_TAG ); }

		public HXEDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public HXEDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();

		#region Table Functions

		#region SeriesGenerateBigint

		#endregion

		#region SeriesGenerateInteger

		#endregion

		#region SeriesGenerateSmallint

		#endregion

		#region SeriesGenerateTinyint

		#endregion

		#region SeriesGenerateDecimal

		#endregion

		#region SeriesGenerateSmalldecimal

		#endregion

		#region SeriesGenerateTimestamp

		#endregion

		#region SeriesGenerateSeconddate

		#endregion

		#region SeriesGenerateDate

		#endregion

		#region SeriesDisaggregateBigint

		#endregion

		#region SeriesDisaggregateInteger

		#endregion

		#region SeriesDisaggregateSmallint

		#endregion

		#region SeriesDisaggregateTinyint

		#endregion

		#region SeriesDisaggregateDecimal

		#endregion

		#region SeriesDisaggregateSmalldecimal

		#endregion

		#region SeriesDisaggregateTimestamp

		#endregion

		#region SeriesDisaggregateSeconddate

		#endregion

		#region SeriesDisaggregateDate

		#endregion

		#region PeGetTraceObjects

		#endregion

		#region CdsArtifactDefinition

		#endregion

		#region TextAccessor

		#endregion

		#region MultiTextAccessor

		#endregion

		#region SapHanaXsSelfServiceUserDbIniParams

		#endregion

		#region SapHanaXsSelfServiceAdminDbUssRequests

		#endregion

		#region SapHanaXsFormLoginProfileDbUserProfile

		#endregion

		#region SapHanaXsAdminWebdispatcherServerDbApplications

		#endregion

		#region SapHanaXsAdminJobsServerDbSchedulesonly

		#endregion

		#region SapHanaXsAdminJobsServerDbLogsonly

		#endregion

		#region SapHanaXsAdminDbSystemDetails

		[Sql.TableFunction(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.db::systemDetails")]
		public ITable<SapHanaXsAdminDbSystemDetailsResult> SapHanaXsAdminDbSystemDetails()
		{
			return this.GetTable<SapHanaXsAdminDbSystemDetailsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod()!);
		}

		public partial class SapHanaXsAdminDbSystemDetailsResult
		{
			public string? KEY { get; set; }
			public string? VAL { get; set; }
		}

		#endregion

		#region SapHanaXsAdminDbSamlIdpList

		#endregion

		#region SapHanaXsAdminDbFetchAllRoles

		#endregion

		#region SapHanaXsAdminDbDatabaseDetails

		[Sql.TableFunction(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.db::databaseDetails")]
		public ITable<SapHanaXsAdminDbDatabaseDetailsResult> SapHanaXsAdminDbDatabaseDetails()
		{
			return this.GetTable<SapHanaXsAdminDbDatabaseDetailsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod()!);
		}

		public partial class SapHanaXsAdminDbDatabaseDetailsResult
		{
			public string? SYSTEM_ID     { get; set; }
			public string? DATABASE_NAME { get; set; }
		}

		#endregion

		#region SapHanaUisDbLocalizationUisTextAccessorWrapper

		#endregion

		#region SapHanaUisDbLocalizationUisCatalogsTextAccessorWrapper

		#endregion

		#region GetParentByID

		[Sql.TableFunction(Schema="TESTHANA", Name="GetParentByID")]
		public ITable<GetParentByIDResult> GetParentByID(int? ID)
		{
			return this.GetTable<GetParentByIDResult>(this, (MethodInfo)MethodBase.GetCurrentMethod()!,
				ID);
		}

		public partial class GetParentByIDResult
		{
			public int? ParentID { get; set; }
			public int? Value1   { get; set; }
		}

		#endregion

		#region GetParentByID

		[Sql.TableFunction(Schema="TESTHANAODBC", Name="GetParentByID")]
		public ITable<GetParentByIDResult0> GetParentByID0(int? ID)
		{
			return this.GetTable<GetParentByIDResult0>(this, (MethodInfo)MethodBase.GetCurrentMethod()!,
				ID);
		}

		public partial class GetParentByIDResult0
		{
			public int? ParentID { get; set; }
			public int? Value1   { get; set; }
		}

		#endregion

		#endregion
	}

	[Table(Schema="_SYS_PLAN_STABILITY", Name="ABSTRACT_SQL_PLAN_ENTRIES_")]
	public partial class _SYS_PLAN_STABILITY_AbstractSqlPlanEntries
	{
		[Column("ENTRY_ID"),          PrimaryKey,  NotNull] public long      EntryId          { get; set; } // BIGINT
		[Column("QUERY_ID"),                       NotNull] public long      QueryId          { get; set; } // BIGINT
		[Column("ABSTRACT_SQL_PLAN"),              NotNull] public string    AbstractSqlPlan  { get; set; } = null!; // NCLOB
		[Column("RELATED_OBJECTS"),      Nullable         ] public string?   RelatedObjects   { get; set; } // NCLOB
		[Column("APPLIED_MIGRATORS"),    Nullable         ] public string?   AppliedMigrators { get; set; } // NVARCHAR(5000)
		[Column("IS_VALID"),                       NotNull] public byte      IsValid          { get; set; } // TINYINT
		[Column(),                       Nullable         ] public string?   NOTES            { get; set; } // NCLOB
		[Column("CAPTURE_TIME"),         Nullable         ] public DateTime? CaptureTime      { get; set; } // TIMESTAMP
		[Column(),                       Nullable         ] public string?   COMMENT          { get; set; } // NVARCHAR(5000)
		[Column(),                       Nullable         ] public string?   TAG              { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="_SYS_PLAN_STABILITY", Name="ABSTRACT_SQL_PLAN_QUERIES_")]
	public partial class _SYS_PLAN_STABILITY_AbstractSqlPlanQueries
	{
		[Column("QUERY_ID"),          PrimaryKey,  NotNull] public long      QueryId         { get; set; } // BIGINT
		[Column("STATEMENT_STRING"),               NotNull] public string    StatementString { get; set; } = null!; // NCLOB
		[Column("SESSION_KEY"),                    NotNull] public string    SessionKey      { get; set; } = null!; // NVARCHAR(5000)
		[Column(),                                 NotNull] public string    LOCATION        { get; set; } = null!; // NVARCHAR(128)
		[Column("VOLUME_ID"),                      NotNull] public int       VolumeId        { get; set; } // INTEGER
		[Column("IS_ENABLED"),                     NotNull] public byte      IsEnabled       { get; set; } // TINYINT
		[Column("LAST_ENABLE_TIME"),     Nullable         ] public DateTime? LastEnableTime  { get; set; } // TIMESTAMP
		[Column("LAST_ENABLE_USER"),     Nullable         ] public string?   LastEnableUser  { get; set; } // NVARCHAR(256)
		[Column("LAST_DISABLE_TIME"),    Nullable         ] public DateTime? LastDisableTime { get; set; } // TIMESTAMP
		[Column("LAST_DISABLE_USER"),    Nullable         ] public string?   LastDisableUser { get; set; } // NVARCHAR(256)
		[Column("CAPTURE_USER"),         Nullable         ] public string?   CaptureUser     { get; set; } // NVARCHAR(256)
		[Column("SELECTED_PLAN_ID"),     Nullable         ] public long?     SelectedPlanId  { get; set; } // BIGINT
	}

	[Table(Schema="TESTHANAODBC", Name="AllTypes")]
	public partial class TESTHANAODBC_AllType
	{
		[Column(),                       PrimaryKey, Identity] public int       ID                   { get; set; } // INTEGER
		[Column("bigintDataType"),       Nullable            ] public long?     BigintDataType       { get; set; } // BIGINT
		[Column("smallintDataType"),     Nullable            ] public short?    SmallintDataType     { get; set; } // SMALLINT
		[Column("decimalDataType"),      Nullable            ] public decimal?  DecimalDataType      { get; set; } // DECIMAL(34, 0)
		[Column("smalldecimalDataType"), Nullable            ] public decimal?  SmalldecimalDataType { get; set; } // SMALLDECIMAL(16, 0)
		[Column("intDataType"),          Nullable            ] public int?      IntDataType          { get; set; } // INTEGER
		[Column("tinyintDataType"),      Nullable            ] public byte?     TinyintDataType      { get; set; } // TINYINT
		[Column("floatDataType"),        Nullable            ] public double?   FloatDataType        { get; set; } // DOUBLE
		[Column("realDataType"),         Nullable            ] public float?    RealDataType         { get; set; } // REAL
		[Column("dateDataType"),         Nullable            ] public DateTime? DateDataType         { get; set; } // DATE
		[Column("timeDataType"),         Nullable            ] public TimeSpan? TimeDataType         { get; set; } // TIME
		[Column("seconddateDataType"),   Nullable            ] public DateTime? SeconddateDataType   { get; set; } // SECONDDATE
		[Column("timestampDataType"),    Nullable            ] public DateTime? TimestampDataType    { get; set; } // TIMESTAMP
		[Column("charDataType"),         Nullable            ] public char?     CharDataType         { get; set; } // CHAR(1)
		[Column("char20DataType"),       Nullable            ] public string?   Char20DataType       { get; set; } // CHAR(20)
		[Column("varcharDataType"),      Nullable            ] public string?   VarcharDataType      { get; set; } // VARCHAR(20)
		[Column("textDataType"),         Nullable            ] public string?   TextDataType         { get; set; } // TEXT
		[Column("shorttextDataType"),    Nullable            ] public string?   ShorttextDataType    { get; set; } // SHORTTEXT
		[Column("ncharDataType"),        Nullable            ] public char?     NcharDataType        { get; set; } // NCHAR(1)
		[Column("nchar20DataType"),      Nullable            ] public string?   Nchar20DataType      { get; set; } // NCHAR(20)
		[Column("nvarcharDataType"),     Nullable            ] public string?   NvarcharDataType     { get; set; } // NVARCHAR(20)
		[Column("alphanumDataType"),     Nullable            ] public string?   AlphanumDataType     { get; set; } // ALPHANUM
		[Column("binaryDataType"),       Nullable            ] public byte[]?   BinaryDataType       { get; set; } // BINARY(10)
		[Column("varbinaryDataType"),    Nullable            ] public byte[]?   VarbinaryDataType    { get; set; } // VARBINARY(10)
		[Column("blobDataType"),         Nullable            ] public byte[]?   BlobDataType         { get; set; } // BLOB
		[Column("clobDataType"),         Nullable            ] public string?   ClobDataType         { get; set; } // CLOB
		[Column("nclobDataType"),        Nullable            ] public string?   NclobDataType        { get; set; } // NCLOB
	}

	[Table(Schema="TESTHANA", Name="AllTypes")]
	public partial class AllType
	{
		[Column(),                       PrimaryKey, Identity] public int       ID                   { get; set; } // INTEGER
		[Column("bigintDataType"),       Nullable            ] public long?     BigintDataType       { get; set; } // BIGINT
		[Column("smallintDataType"),     Nullable            ] public short?    SmallintDataType     { get; set; } // SMALLINT
		[Column("decimalDataType"),      Nullable            ] public decimal?  DecimalDataType      { get; set; } // DECIMAL(34, 0)
		[Column("smalldecimalDataType"), Nullable            ] public decimal?  SmalldecimalDataType { get; set; } // SMALLDECIMAL(16, 0)
		[Column("intDataType"),          Nullable            ] public int?      IntDataType          { get; set; } // INTEGER
		[Column("tinyintDataType"),      Nullable            ] public byte?     TinyintDataType      { get; set; } // TINYINT
		[Column("floatDataType"),        Nullable            ] public double?   FloatDataType        { get; set; } // DOUBLE
		[Column("realDataType"),         Nullable            ] public float?    RealDataType         { get; set; } // REAL
		[Column("dateDataType"),         Nullable            ] public DateTime? DateDataType         { get; set; } // DATE
		[Column("timeDataType"),         Nullable            ] public TimeSpan? TimeDataType         { get; set; } // TIME
		[Column("seconddateDataType"),   Nullable            ] public DateTime? SeconddateDataType   { get; set; } // SECONDDATE
		[Column("timestampDataType"),    Nullable            ] public DateTime? TimestampDataType    { get; set; } // TIMESTAMP
		[Column("charDataType"),         Nullable            ] public char?     CharDataType         { get; set; } // CHAR(1)
		[Column("char20DataType"),       Nullable            ] public string?   Char20DataType       { get; set; } // CHAR(20)
		[Column("varcharDataType"),      Nullable            ] public string?   VarcharDataType      { get; set; } // VARCHAR(20)
		[Column("textDataType"),         Nullable            ] public string?   TextDataType         { get; set; } // TEXT
		[Column("shorttextDataType"),    Nullable            ] public string?   ShorttextDataType    { get; set; } // SHORTTEXT
		[Column("ncharDataType"),        Nullable            ] public char?     NcharDataType        { get; set; } // NCHAR(1)
		[Column("nchar20DataType"),      Nullable            ] public string?   Nchar20DataType      { get; set; } // NCHAR(20)
		[Column("nvarcharDataType"),     Nullable            ] public string?   NvarcharDataType     { get; set; } // NVARCHAR(20)
		[Column("alphanumDataType"),     Nullable            ] public string?   AlphanumDataType     { get; set; } // ALPHANUM
		[Column("binaryDataType"),       Nullable            ] public byte[]?   BinaryDataType       { get; set; } // BINARY(10)
		[Column("varbinaryDataType"),    Nullable            ] public byte[]?   VarbinaryDataType    { get; set; } // VARBINARY(10)
		[Column("blobDataType"),         Nullable            ] public byte[]?   BlobDataType         { get; set; } // BLOB
		[Column("clobDataType"),         Nullable            ] public string?   ClobDataType         { get; set; } // CLOB
		[Column("nclobDataType"),        Nullable            ] public string?   NclobDataType        { get; set; } // NCLOB
	}

	[Table(Schema="TESTHANAODBC", Name="AllTypesGeo")]
	public partial class TESTHANAODBC_AllTypesGeo
	{
		[Column(),                     PrimaryKey, Identity] public int     ID                 { get; set; } // INTEGER
		[Column("dataType"),           Nullable            ] public string? DataType           { get; set; } // VARCHAR(20)
		[Column("stgeometryDataType"), Nullable            ] public object? StgeometryDataType { get; set; } // ST_GEOMETRY
	}

	[Table(Schema="TESTHANA", Name="AllTypesGeo")]
	public partial class AllTypesGeo
	{
		[Column(),                     PrimaryKey, Identity] public int     ID                 { get; set; } // INTEGER
		[Column("dataType"),           Nullable            ] public string? DataType           { get; set; } // VARCHAR(20)
		[Column("stgeometryDataType"), Nullable            ] public object? StgeometryDataType { get; set; } // ST_GEOMETRY
	}

	/// <summary>
	/// This table contains a summary of Best Record group master statistics
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="BEST_RECORD_GROUP_MASTER_STATISTICS", IsView=true)]
	public partial class _SYS_TASK_BestRecordGroupMasterStatistic
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),           NotNull    ] public string  SchemaName         { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),             NotNull    ] public string  TaskName           { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),     NotNull    ] public long    TaskExecutionId    { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),           Nullable] public string? OperationName      { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The total number of records processed
		/// </summary>
		[Column("NUM_RECORDS"),              Nullable] public long?   NumRecords         { get; set; } // BIGINT
		/// <summary>
		/// The number of group master records processed
		/// </summary>
		[Column("NUM_GROUP_MASTERS"),        Nullable] public long?   NumGroupMasters    { get; set; } // BIGINT
		/// <summary>
		/// The number of duplicate records processed
		/// </summary>
		[Column("NUM_DUPLICATES"),           Nullable] public long?   NumDuplicates      { get; set; } // BIGINT
		/// <summary>
		/// The number of surviving records processed
		/// </summary>
		[Column("NUM_SURVIVORS"),            Nullable] public long?   NumSurvivors       { get; set; } // BIGINT
		/// <summary>
		/// The number of non matching records processed
		/// </summary>
		[Column("NUM_NON_MATCH_RECORDS"),    Nullable] public long?   NumNonMatchRecords { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_TASK", Name="BEST_RECORD_GROUP_MASTER_STATISTICS_")]
	public partial class _SYS_TASK_BestRecordGroupMasterStatistics
	{
		[Column("TASK_EXECUTION_ID"), PrimaryKey(1), NotNull] public long  TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      PrimaryKey(2), NotNull] public int   OperationId     { get; set; } // INTEGER
		[Column("NUM_RECORDS"),          Nullable           ] public long? NumRecords      { get; set; } // BIGINT
		[Column("NUM_GROUP_MASTERS"),    Nullable           ] public long? NumGroupMasters { get; set; } // BIGINT
		[Column("NUM_DUPLICATES"),       Nullable           ] public long? NumDuplicates   { get; set; } // BIGINT
	}

	/// <summary>
	/// This table contains governance information for every column in every record that is updated in the best record process
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="BEST_RECORD_RESULTS", IsView=true)]
	public partial class _SYS_TASK_BestRecordResult
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),         NotNull    ] public string  SchemaName        { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),           NotNull    ] public string  TaskName          { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),   NotNull    ] public long    TaskExecutionId   { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),         Nullable] public string? OperationName     { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the destination table for the operation
		/// </summary>
		[Column("DST_TABLE_NAME"),         Nullable] public string? DstTableName      { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The unique ID for the destination row
		/// </summary>
		[Column("DST_ROW_ID"),             Nullable] public long?   DstRowId          { get; set; } // BIGINT
		/// <summary>
		/// The name of the destination column in the destination table
		/// </summary>
		[Column("DST_COLUMN_NAME"),        Nullable] public string? DstColumnName     { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Identifies how the record was updated or if it was newly created
		/// </summary>
		[Column("DST_ROW_TYPE"),           Nullable] public char?   DstRowType        { get; set; } // NVARCHAR(1)
		/// <summary>
		/// The name of the source table for the operation
		/// </summary>
		[Column("SRC_TABLE_NAME"),         Nullable] public string? SrcTableName      { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The unique ID for the source row
		/// </summary>
		[Column("SRC_ROW_ID"),          NotNull    ] public long    SrcRowId          { get; set; } // BIGINT
		/// <summary>
		/// The name of the source column in the source table
		/// </summary>
		[Column("SRC_COLUMN_NAME"),        Nullable] public string? SrcColumnName     { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name that identifies the best record strategy group
		/// </summary>
		[Column("STRATEGY_GROUP_NAME"),    Nullable] public string? StrategyGroupName { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The name that identifies each strategy listed in the strategy group
		/// </summary>
		[Column("STRATEGY_NAME"),          Nullable] public string? StrategyName      { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The name of the rule that updates one or more columns as it is defined in the best record configuration
		/// </summary>
		[Column("BEST_RECORD_RULE"),    NotNull    ] public string  BestRecordRule    { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the action that updates a column as it is defined in the best record configuration
		/// </summary>
		[Column("ACTION_NAME"),            Nullable] public string? ActionName        { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The number of times the column was updated in the best record process
		/// </summary>
		[Column("UPDATE_NUM"),          NotNull    ] public int     UpdateNum         { get; set; } // INTEGER
		/// <summary>
		/// Identifies how the record was updated in the best record process
		/// </summary>
		[Column("OPERATION_TYPE"),         Nullable] public char?   OperationType     { get; set; } // NVARCHAR(1)
	}

	[Table(Schema="_SYS_TASK", Name="BEST_RECORD_RESULTS_")]
	public partial class _SYS_TASK_BestRecordResults
	{
		[Column("TASK_EXECUTION_ID"), PrimaryKey(1), NotNull] public long    TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      PrimaryKey(2), NotNull] public int     OperationId     { get; set; } // INTEGER
		[Column("DST_TABLE_ID"),         Nullable           ] public int?    DstTableId      { get; set; } // INTEGER
		[Column("DST_ROW_ID"),           Nullable           ] public long?   DstRowId        { get; set; } // BIGINT
		[Column("DST_COLUMN_ID"),        Nullable           ] public int?    DstColumnId     { get; set; } // INTEGER
		[Column("DST_ROW_TYPE"),         Nullable           ] public char?   DstRowType      { get; set; } // NVARCHAR(1)
		[Column("SRC_TABLE_ID"),      PrimaryKey(3), NotNull] public int     SrcTableId      { get; set; } // INTEGER
		[Column("SRC_ROW_ID"),        PrimaryKey(4), NotNull] public long    SrcRowId        { get; set; } // BIGINT
		[Column("SRC_COLUMN_ID"),     PrimaryKey(5), NotNull] public int     SrcColumnId     { get; set; } // INTEGER
		[Column("STRATEGY_GROUP_ID"), PrimaryKey(6), NotNull] public int     StrategyGroupId { get; set; } // INTEGER
		[Column("STRATEGY_ID"),       PrimaryKey(7), NotNull] public int     StrategyId      { get; set; } // INTEGER
		[Column("BEST_RECORD_RULE"),  PrimaryKey(8), NotNull] public string  BestRecordRule  { get; set; } = null!; // NVARCHAR(256)
		[Column("ACTION_NAME"),          Nullable           ] public string? ActionName      { get; set; } // NVARCHAR(256)
		[Column("UPDATE_NUM"),        PrimaryKey(9), NotNull] public int     UpdateNum       { get; set; } // INTEGER
		[Column("OPERATION_TYPE"),       Nullable           ] public char?   OperationType   { get; set; } // NVARCHAR(1)
	}

	[Table(Schema="_SYS_TASK", Name="BEST_RECORD_STRATEGIES_")]
	public partial class _SYS_TASK_BestRecordStrategies
	{
		[Column("TASK_EXECUTION_ID"), PrimaryKey(1), NotNull] public long    TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      PrimaryKey(2), NotNull] public int     OperationId     { get; set; } // INTEGER
		[Column("STRATEGY_GROUP_ID"), PrimaryKey(3), NotNull] public int     StrategyGroupId { get; set; } // INTEGER
		[Column("STRATEGY_ID"),       PrimaryKey(4), NotNull] public int     StrategyId      { get; set; } // INTEGER
		[Column("STRATEGY_ORDER"),       Nullable           ] public int?    StrategyOrder   { get; set; } // INTEGER
		[Column("STRATEGY_NAME"),        Nullable           ] public string? StrategyName    { get; set; } // NVARCHAR(256)
	}

	/// <summary>
	/// This table contains information on which strategies are used in each strategy group and in which order
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="BEST_RECORD_STRATEGIES", IsView=true)]
	public partial class _SYS_TASK_BestRecordSTRATEGy
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),         NotNull    ] public string  SchemaName        { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),           NotNull    ] public string  TaskName          { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),   NotNull    ] public long    TaskExecutionId   { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),         Nullable] public string? OperationName     { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The strategy group name
		/// </summary>
		[Column("STRATEGY_GROUP_NAME"),    Nullable] public string? StrategyGroupName { get; set; } // NVARCHAR(256)
		/// <summary>
		/// Represents the order of the strategy as it is defined in the list of strategies
		/// </summary>
		[Column("STRATEGY_ORDER"),         Nullable] public int?    StrategyOrder     { get; set; } // INTEGER
		/// <summary>
		/// The name of the strategy as it is defined in the best record configuration
		/// </summary>
		[Column("STRATEGY_NAME"),          Nullable] public string? StrategyName      { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_TASK", Name="BEST_RECORD_STRATEGY_GROUPS_")]
	public partial class _SYS_TASK_BestRecordStrategyGroups
	{
		[Column("TASK_EXECUTION_ID"),   PrimaryKey(1), NotNull] public long    TaskExecutionId   { get; set; } // BIGINT
		[Column("OPERATION_ID"),        PrimaryKey(2), NotNull] public int     OperationId       { get; set; } // INTEGER
		[Column("STRATEGY_GROUP_ID"),   PrimaryKey(3), NotNull] public int     StrategyGroupId   { get; set; } // INTEGER
		[Column("STRATEGY_GROUP_NAME"),    Nullable           ] public string? StrategyGroupName { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="TESTHANAODBC", Name="BulkInsertLowerCaseColumns")]
	public partial class TESTHANAODBC_BulkInsertLowerCaseColumn
	{
		[Column, Nullable] public int?      ID            { get; set; } // INTEGER
		[Column, Nullable] public decimal?  MoneyValue    { get; set; } // DECIMAL(10, 4)
		[Column, Nullable] public DateTime? DateTimeValue { get; set; } // TIMESTAMP
		[Column, Nullable] public byte?     BoolValue     { get; set; } // TINYINT
		[Column, Nullable] public string?   GuidValue     { get; set; } // VARCHAR(36)
		[Column, Nullable] public byte[]?   BinaryValue   { get; set; } // VARBINARY(5000)
		[Column, Nullable] public short?    SmallIntValue { get; set; } // SMALLINT
		[Column, Nullable] public int?      IntValue      { get; set; } // INTEGER
		[Column, Nullable] public long?     BigIntValue   { get; set; } // BIGINT
	}

	[Table(Schema="TESTHANA", Name="BulkInsertLowerCaseColumns")]
	public partial class BulkInsertLowerCaseColumn
	{
		[Column, Nullable] public int?      ID            { get; set; } // INTEGER
		[Column, Nullable] public decimal?  MoneyValue    { get; set; } // DECIMAL(10, 4)
		[Column, Nullable] public DateTime? DateTimeValue { get; set; } // TIMESTAMP
		[Column, Nullable] public byte?     BoolValue     { get; set; } // TINYINT
		[Column, Nullable] public string?   GuidValue     { get; set; } // VARCHAR(36)
		[Column, Nullable] public byte[]?   BinaryValue   { get; set; } // VARBINARY(5000)
		[Column, Nullable] public short?    SmallIntValue { get; set; } // SMALLINT
		[Column, Nullable] public int?      IntValue      { get; set; } // INTEGER
		[Column, Nullable] public long?     BigIntValue   { get; set; } // BIGINT
	}

	[Table(Schema="TESTHANAODBC", Name="BulkInsertUpperCaseColumns")]
	public partial class TESTHANAODBC_BulkInsertUpperCaseColumn
	{
		[Column, Nullable] public int?      ID            { get; set; } // INTEGER
		[Column, Nullable] public decimal?  MONEYVALUE    { get; set; } // DECIMAL(10, 4)
		[Column, Nullable] public DateTime? DATETIMEVALUE { get; set; } // TIMESTAMP
		[Column, Nullable] public byte?     BOOLVALUE     { get; set; } // TINYINT
		[Column, Nullable] public string?   GUIDVALUE     { get; set; } // VARCHAR(36)
		[Column, Nullable] public byte[]?   BINARYVALUE   { get; set; } // VARBINARY(5000)
		[Column, Nullable] public short?    SMALLINTVALUE { get; set; } // SMALLINT
		[Column, Nullable] public int?      INTVALUE      { get; set; } // INTEGER
		[Column, Nullable] public long?     BIGINTVALUE   { get; set; } // BIGINT
	}

	[Table(Schema="TESTHANA", Name="BulkInsertUpperCaseColumns")]
	public partial class BulkInsertUpperCaseColumn
	{
		[Column, Nullable] public int?      ID            { get; set; } // INTEGER
		[Column, Nullable] public decimal?  MONEYVALUE    { get; set; } // DECIMAL(10, 4)
		[Column, Nullable] public DateTime? DATETIMEVALUE { get; set; } // TIMESTAMP
		[Column, Nullable] public byte?     BOOLVALUE     { get; set; } // TINYINT
		[Column, Nullable] public string?   GUIDVALUE     { get; set; } // VARCHAR(36)
		[Column, Nullable] public byte[]?   BINARYVALUE   { get; set; } // VARBINARY(5000)
		[Column, Nullable] public short?    SMALLINTVALUE { get; set; } // SMALLINT
		[Column, Nullable] public int?      INTVALUE      { get; set; } // INTEGER
		[Column, Nullable] public long?     BIGINTVALUE   { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_RT", Name="CDS_ANNOTATION")]
	public partial class _SYS_RT_CdsAnnotation
	{
		[Column("imageId"),           PrimaryKey(1), NotNull] public long     ImageId           { get; set; } // BIGINT
		[Column("schema"),            PrimaryKey(2), NotNull] public string   Schema            { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),              PrimaryKey(3), NotNull] public string   Name              { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                      NotNull] public DateTime ModifiedUtc       { get; set; } // TIMESTAMP
		[Column("state"),                            NotNull] public string   State             { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                 NotNull] public string   ExtensionPackage  { get; set; } = null!; // NVARCHAR(127)
		[Column("metaTableSelector"),                NotNull] public string   MetaTableSelector { get; set; } = null!; // NVARCHAR(127)
		[Column("target.schema"),                    NotNull] public string   TargetSchema      { get; set; } = null!; // NVARCHAR(127)
		[Column("target.name"),                      NotNull] public string   TargetName        { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="_SYS_RT", Name="CDS_ANNOTATION_ASSIGNMENT")]
	public partial class _SYS_RT_CdsAnnotationAssignment
	{
		[Column("imageId"),                    PrimaryKey(1), NotNull] public long     ImageId                   { get; set; } // BIGINT
		[Column("artifactName.schema"),        PrimaryKey(2), NotNull] public string   ArtifactNameSchema        { get; set; } = null!; // NVARCHAR(127)
		[Column("artifactName.name"),          PrimaryKey(3), NotNull] public string   ArtifactNameName          { get; set; } = null!; // NVARCHAR(256)
		[Column("artifactName.componentName"), PrimaryKey(4), NotNull] public string   ArtifactNameComponentName { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),                       PrimaryKey(5), NotNull] public string   Name                      { get; set; } = null!; // NVARCHAR(127)
		[Column("extensionPackage"),           PrimaryKey(6), NotNull] public string   ExtensionPackage          { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                               NotNull] public DateTime ModifiedUtc               { get; set; } // TIMESTAMP
		[Column("state"),                                     NotNull] public string   State                     { get; set; } = null!; // NVARCHAR(10)
		[Column("format"),                                    NotNull] public string   Format                    { get; set; } = null!; // NVARCHAR(127)
		[Column("value"),                                     NotNull] public string   Value                     { get; set; } = null!; // NCLOB
		[Column("checked"),                                   NotNull] public string   @checked                  { get; set; } = null!; // NVARCHAR(127)
		[Column("definition.schema"),             Nullable           ] public string?  DefinitionSchema          { get; set; } // NVARCHAR(127)
		[Column("definition.name"),               Nullable           ] public string?  DefinitionName            { get; set; } // NVARCHAR(127)
	}

	[Table(Schema="_SYS_RT", Name="CDS_ANNOTATION_VALUE")]
	public partial class _SYS_RT_CdsAnnotationValue
	{
		[Column("imageId"),               PrimaryKey(1), NotNull] public long     ImageId              { get; set; } // BIGINT
		[Column("artifactName.schema"),   PrimaryKey(2), NotNull] public string   ArtifactNameSchema   { get; set; } = null!; // NVARCHAR(127)
		[Column("artifactName.name"),     PrimaryKey(3), NotNull] public string   ArtifactNameName     { get; set; } = null!; // NVARCHAR(256)
		[Column("annotationName.schema"), PrimaryKey(4), NotNull] public string   AnnotationNameSchema { get; set; } = null!; // NVARCHAR(127)
		[Column("annotationName.name"),   PrimaryKey(5), NotNull] public string   AnnotationNameName   { get; set; } = null!; // NVARCHAR(127)
		[Column("extensionPackage"),      PrimaryKey(6), NotNull] public string   ExtensionPackage     { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                          NotNull] public DateTime ModifiedUtc          { get; set; } // TIMESTAMP
		[Column("state"),                                NotNull] public string   State                { get; set; } = null!; // NVARCHAR(10)
		[Column("valueTree"),                            NotNull] public string   ValueTree            { get; set; } = null!; // NCLOB
	}

	[Table(Schema="_SYS_RT", Name="CDS_ARRAY")]
	public partial class _SYS_RT_CdsArray
	{
		[Column("imageId"),           PrimaryKey(1), NotNull] public long     ImageId           { get; set; } // BIGINT
		[Column("schema"),            PrimaryKey(2), NotNull] public string   Schema            { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),              PrimaryKey(3), NotNull] public string   Name              { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                      NotNull] public DateTime ModifiedUtc       { get; set; } // TIMESTAMP
		[Column("state"),                            NotNull] public string   State             { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                 NotNull] public string   ExtensionPackage  { get; set; } = null!; // NVARCHAR(127)
		[Column("isAnonymous"),                      NotNull] public byte     IsAnonymous       { get; set; } // TINYINT
		[Column("metaTableSelector"),                NotNull] public string   MetaTableSelector { get; set; } = null!; // NVARCHAR(127)
		[Column("target.schema"),                    NotNull] public string   TargetSchema      { get; set; } = null!; // NVARCHAR(127)
		[Column("target.name"),                      NotNull] public string   TargetName        { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="_SYS_RT", Name="CDS_ARTIFACT")]
	public partial class _SYS_RT_CdsArtifact
	{
		[Column("imageId"),     PrimaryKey(1), NotNull] public long     ImageId     { get; set; } // BIGINT
		[Column("schema"),      PrimaryKey(2), NotNull] public string   Schema      { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),        PrimaryKey(3), NotNull] public string   Name        { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                NotNull] public DateTime ModifiedUtc { get; set; } // TIMESTAMP
		[Column("state"),                      NotNull] public string   State       { get; set; } = null!; // NVARCHAR(10)
		[Column("kind"),                       NotNull] public string   Kind        { get; set; } = null!; // NVARCHAR(127)
	}

	[Table(Schema="_SYS_RT", Name="CDS_ASPECT")]
	public partial class _SYS_RT_CdsAspect
	{
		[Column("imageId"),          PrimaryKey(1), NotNull] public long     ImageId          { get; set; } // BIGINT
		[Column("schema"),           PrimaryKey(2), NotNull] public string   Schema           { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),             PrimaryKey(3), NotNull] public string   Name             { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                     NotNull] public DateTime ModifiedUtc      { get; set; } // TIMESTAMP
		[Column("state"),                           NotNull] public string   State            { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                NotNull] public string   ExtensionPackage { get; set; } = null!; // NVARCHAR(127)
		[Column("definition"),                      NotNull] public string   Definition       { get; set; } = null!; // NCLOB
	}

	[Table(Schema="_SYS_RT", Name="CDS_ASSOCIATION")]
	public partial class _SYS_RT_CdsAssociation
	{
		[Column("imageId"),                 PrimaryKey(1), NotNull] public long     ImageId                { get; set; } // BIGINT
		[Column("schema"),                  PrimaryKey(2), NotNull] public string   Schema                 { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),                    PrimaryKey(3), NotNull] public string   Name                   { get; set; } = null!; // NVARCHAR(256)
		[Column("modifiedUtc"),                            NotNull] public DateTime ModifiedUtc            { get; set; } // TIMESTAMP
		[Column("state"),                                  NotNull] public string   State                  { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                       NotNull] public string   ExtensionPackage       { get; set; } = null!; // NVARCHAR(127)
		[Column("targetEntityName.schema"),                NotNull] public string   TargetEntityNameSchema { get; set; } = null!; // NVARCHAR(127)
		[Column("targetEntityName.name"),                  NotNull] public string   TargetEntityNameName   { get; set; } = null!; // NVARCHAR(127)
		[Column("sourceCardinalityMax"),       Nullable           ] public int?     SourceCardinalityMax   { get; set; } // INTEGER
		[Column("targetCardinalityMin"),       Nullable           ] public int?     TargetCardinalityMin   { get; set; } // INTEGER
		[Column("targetCardinalityMax"),       Nullable           ] public int?     TargetCardinalityMax   { get; set; } // INTEGER
		[Column("viaEntityName.schema"),                   NotNull] public string   ViaEntityNameSchema    { get; set; } = null!; // NVARCHAR(127)
		[Column("viaEntityName.name"),                     NotNull] public string   ViaEntityNameName      { get; set; } = null!; // NVARCHAR(127)
		[Column("joinCondition"),              Nullable           ] public string?  JoinCondition          { get; set; } // NCLOB
		[Column("associationKind"),            Nullable           ] public string?  AssociationKind        { get; set; } // NVARCHAR(127)
	}

	[Table(Schema="_SYS_RT", Name="CDS_CONSTANT")]
	public partial class _SYS_RT_CdsConstant
	{
		[Column("imageId"),           PrimaryKey(1), NotNull] public long     ImageId           { get; set; } // BIGINT
		[Column("schema"),            PrimaryKey(2), NotNull] public string   Schema            { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),              PrimaryKey(3), NotNull] public string   Name              { get; set; } = null!; // NVARCHAR(256)
		[Column("modifiedUtc"),                      NotNull] public DateTime ModifiedUtc       { get; set; } // TIMESTAMP
		[Column("state"),                            NotNull] public string   State             { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                 NotNull] public string   ExtensionPackage  { get; set; } = null!; // NVARCHAR(127)
		[Column("metaTableSelector"),                NotNull] public string   MetaTableSelector { get; set; } = null!; // NVARCHAR(127)
		[Column("target.schema"),                    NotNull] public string   TargetSchema      { get; set; } = null!; // NVARCHAR(127)
		[Column("target.name"),                      NotNull] public string   TargetName        { get; set; } = null!; // NVARCHAR(256)
		[Column("value"),                Nullable           ] public string?  Value             { get; set; } // NVARCHAR(5000)
		[Column("isEnumValue"),                      NotNull] public byte     IsEnumValue       { get; set; } // TINYINT
	}

	[Table(Schema="_SYS_RT", Name="CDS_DEPENDENCY")]
	public partial class _SYS_RT_CdsDependency
	{
		[Column("imageId"),     PrimaryKey(1), NotNull] public long     ImageId     { get; set; } // BIGINT
		[Column("from.schema"), PrimaryKey(2), NotNull] public string   FromSchema  { get; set; } = null!; // NVARCHAR(127)
		[Column("from.name"),   PrimaryKey(3), NotNull] public string   FromName    { get; set; } = null!; // NVARCHAR(127)
		[Column("to.schema"),   PrimaryKey(4), NotNull] public string   ToSchema    { get; set; } = null!; // NVARCHAR(127)
		[Column("to.name"),     PrimaryKey(5), NotNull] public string   ToName      { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                NotNull] public DateTime ModifiedUtc { get; set; } // TIMESTAMP
		[Column("state"),                      NotNull] public string   State       { get; set; } = null!; // NVARCHAR(10)
	}

	[Table(Schema="_SYS_RT", Name="CDS_DERIVED_TYPE")]
	public partial class _SYS_RT_CdsDerivedType
	{
		[Column("imageId"),           PrimaryKey(1), NotNull] public long     ImageId           { get; set; } // BIGINT
		[Column("schema"),            PrimaryKey(2), NotNull] public string   Schema            { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),              PrimaryKey(3), NotNull] public string   Name              { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                      NotNull] public DateTime ModifiedUtc       { get; set; } // TIMESTAMP
		[Column("state"),                            NotNull] public string   State             { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                 NotNull] public string   ExtensionPackage  { get; set; } = null!; // NVARCHAR(127)
		[Column("metaTableSelector"),                NotNull] public string   MetaTableSelector { get; set; } = null!; // NVARCHAR(127)
		[Column("target.schema"),                    NotNull] public string   TargetSchema      { get; set; } = null!; // NVARCHAR(127)
		[Column("target.name"),                      NotNull] public string   TargetName        { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="_SYS_RT", Name="CDS_ENTITY")]
	public partial class _SYS_RT_CdsEntity
	{
		[Column("imageId"),                PrimaryKey(1), NotNull] public long     ImageId               { get; set; } // BIGINT
		[Column("schema"),                 PrimaryKey(2), NotNull] public string   Schema                { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),                   PrimaryKey(3), NotNull] public string   Name                  { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                           NotNull] public DateTime ModifiedUtc           { get; set; } // TIMESTAMP
		[Column("state"),                                 NotNull] public string   State                 { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                      NotNull] public string   ExtensionPackage      { get; set; } = null!; // NVARCHAR(127)
		[Column("series.kind"),                           NotNull] public string   SeriesKind            { get; set; } = null!; // NVARCHAR(127)
		[Column("series.definition"),         Nullable           ] public string?  SeriesDefinition      { get; set; } // NCLOB
		[Column("series.queryDefinition"),    Nullable           ] public string?  SeriesQueryDefinition { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_RT", Name="CDS_ENUM")]
	public partial class _SYS_RT_CdsEnum
	{
		[Column("imageId"),           PrimaryKey(1), NotNull] public long     ImageId           { get; set; } // BIGINT
		[Column("schema"),            PrimaryKey(2), NotNull] public string   Schema            { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),              PrimaryKey(3), NotNull] public string   Name              { get; set; } = null!; // NVARCHAR(256)
		[Column("modifiedUtc"),                      NotNull] public DateTime ModifiedUtc       { get; set; } // TIMESTAMP
		[Column("state"),                            NotNull] public string   State             { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                 NotNull] public string   ExtensionPackage  { get; set; } = null!; // NVARCHAR(127)
		[Column("isAnonymous"),                      NotNull] public byte     IsAnonymous       { get; set; } // TINYINT
		[Column("metaTableSelector"),                NotNull] public string   MetaTableSelector { get; set; } = null!; // NVARCHAR(127)
		[Column("target.schema"),                    NotNull] public string   TargetSchema      { get; set; } = null!; // NVARCHAR(127)
		[Column("target.name"),                      NotNull] public string   TargetName        { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="_SYS_RT", Name="CDS_EXPRESSION")]
	public partial class _SYS_RT_CdsExpression
	{
		[Column("imageId"),          PrimaryKey(1), NotNull] public long     ImageId          { get; set; } // BIGINT
		[Column("schema"),           PrimaryKey(2), NotNull] public string   Schema           { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),             PrimaryKey(3), NotNull] public string   Name             { get; set; } = null!; // NVARCHAR(256)
		[Column("modifiedUtc"),                     NotNull] public DateTime ModifiedUtc      { get; set; } // TIMESTAMP
		[Column("state"),                           NotNull] public string   State            { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                NotNull] public string   ExtensionPackage { get; set; } = null!; // NVARCHAR(127)
		[Column("definition"),          Nullable           ] public string?  Definition       { get; set; } // NVARCHAR(5000)
		[Column("kind"),                            NotNull] public string   Kind             { get; set; } = null!; // NVARCHAR(127)
	}

	[Table(Schema="_SYS_RT", Name="CDS_EXT_PKG_DEP")]
	public partial class _SYS_RT_CdsExtPkgDep
	{
		[Column("imageId"),     PrimaryKey(1), NotNull] public long     ImageId     { get; set; } // BIGINT
		[Column("from.schema"), PrimaryKey(2), NotNull] public string   FromSchema  { get; set; } = null!; // NVARCHAR(127)
		[Column("from.name"),   PrimaryKey(3), NotNull] public string   FromName    { get; set; } = null!; // NVARCHAR(127)
		[Column("to.schema"),   PrimaryKey(4), NotNull] public string   ToSchema    { get; set; } = null!; // NVARCHAR(127)
		[Column("to.name"),     PrimaryKey(5), NotNull] public string   ToName      { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                NotNull] public DateTime ModifiedUtc { get; set; } // TIMESTAMP
		[Column("state"),                      NotNull] public string   State       { get; set; } = null!; // NVARCHAR(10)
	}

	[Table(Schema="_SYS_RT", Name="CDS_PARAMETER")]
	public partial class _SYS_RT_CdsParameter
	{
		[Column("imageId"),           PrimaryKey(1), NotNull] public long     ImageId           { get; set; } // BIGINT
		[Column("schema"),            PrimaryKey(2), NotNull] public string   Schema            { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),              PrimaryKey(3), NotNull] public string   Name              { get; set; } = null!; // NVARCHAR(256)
		[Column("parameterName"),     PrimaryKey(4), NotNull] public string   ParameterName     { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                      NotNull] public DateTime ModifiedUtc       { get; set; } // TIMESTAMP
		[Column("state"),                            NotNull] public string   State             { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                 NotNull] public string   ExtensionPackage  { get; set; } = null!; // NVARCHAR(127)
		[Column("parameterIndex"),                   NotNull] public int      ParameterIndex    { get; set; } // INTEGER
		[Column("metaTableSelector"),                NotNull] public string   MetaTableSelector { get; set; } = null!; // NVARCHAR(127)
		[Column("target.schema"),                    NotNull] public string   TargetSchema      { get; set; } = null!; // NVARCHAR(127)
		[Column("target.name"),                      NotNull] public string   TargetName        { get; set; } = null!; // NVARCHAR(256)
		[Column("passingMode"),                      NotNull] public string   PassingMode       { get; set; } = null!; // NVARCHAR(127)
	}

	[Table(Schema="_SYS_RT", Name="CDS_RULE")]
	public partial class _SYS_RT_CdsRule
	{
		[Column("imageId"),          PrimaryKey(1), NotNull] public long     ImageId          { get; set; } // BIGINT
		[Column("schema"),           PrimaryKey(2), NotNull] public string   Schema           { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),             PrimaryKey(3), NotNull] public string   Name             { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                     NotNull] public DateTime ModifiedUtc      { get; set; } // TIMESTAMP
		[Column("state"),                           NotNull] public string   State            { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                NotNull] public string   ExtensionPackage { get; set; } = null!; // NVARCHAR(127)
		[Column("definition"),                      NotNull] public string   Definition       { get; set; } = null!; // NCLOB
	}

	[Table(Schema="_SYS_RT", Name="CDS_SCALAR_TYPE")]
	public partial class _SYS_RT_CdsScalarType
	{
		[Column("imageId"),           PrimaryKey(1), NotNull] public long     ImageId           { get; set; } // BIGINT
		[Column("schema"),            PrimaryKey(2), NotNull] public string   Schema            { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),              PrimaryKey(3), NotNull] public string   Name              { get; set; } = null!; // NVARCHAR(256)
		[Column("modifiedUtc"),                      NotNull] public DateTime ModifiedUtc       { get; set; } // TIMESTAMP
		[Column("state"),                            NotNull] public string   State             { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                 NotNull] public string   ExtensionPackage  { get; set; } = null!; // NVARCHAR(127)
		[Column("isAnonymous"),                      NotNull] public byte     IsAnonymous       { get; set; } // TINYINT
		[Column("primitiveTypeName"),                NotNull] public string   PrimitiveTypeName { get; set; } = null!; // NVARCHAR(127)
		[Column("length"),               Nullable           ] public int?     Length            { get; set; } // INTEGER
		[Column("precision"),            Nullable           ] public int?     Precision         { get; set; } // INTEGER
		[Column("scale"),                Nullable           ] public int?     Scale             { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_RT", Name="CDS_SOURCE_CODE")]
	public partial class _SYS_RT_CdsSourceCode
	{
		[Column("imageId"),          PrimaryKey(1), NotNull] public long     ImageId          { get; set; } // BIGINT
		[Column("schema"),           PrimaryKey(2), NotNull] public string   Schema           { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),             PrimaryKey(3), NotNull] public string   Name             { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                     NotNull] public DateTime ModifiedUtc      { get; set; } // TIMESTAMP
		[Column("state"),                           NotNull] public string   State            { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                NotNull] public string   ExtensionPackage { get; set; } = null!; // NVARCHAR(127)
		[Column("sourcecode"),                      NotNull] public string   Sourcecode       { get; set; } = null!; // NCLOB
	}

	[Table(Schema="_SYS_RT", Name="CDS_STATISTICS")]
	public partial class _SYS_RT_CdsStatistic
	{
		[Column("activationUtc"),   PrimaryKey(1), NotNull] public DateTime ActivationUtc   { get; set; } // TIMESTAMP
		[Column("connection"),      PrimaryKey(2), NotNull] public string   Connection      { get; set; } = null!; // NVARCHAR(127)
		[Column("activationPhase"),                NotNull] public string   ActivationPhase { get; set; } = null!; // NVARCHAR(127)
		[Column("statementNo"),     PrimaryKey(3), NotNull] public int      StatementNo     { get; set; } // INTEGER
		[Column("creationUtc"),     PrimaryKey(4), NotNull] public DateTime CreationUtc     { get; set; } // TIMESTAMP
		[Column("executionUtc"),    PrimaryKey(5), NotNull] public DateTime ExecutionUtc    { get; set; } // TIMESTAMP
		[Column("executionNo"),     PrimaryKey(6), NotNull] public int      ExecutionNo     { get; set; } // INTEGER
		[Column("usecs"),                          NotNull] public int      Usecs           { get; set; } // INTEGER
		[Column("rawStatement"),                   NotNull] public string   RawStatement    { get; set; } = null!; // NVARCHAR(5000)
		[Column("execStatement"),      Nullable           ] public string?  ExecStatement   { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_RT", Name="CDS_STRUCTURE")]
	public partial class _SYS_RT_CdsStructure
	{
		[Column("imageId"),          PrimaryKey(1), NotNull] public long     ImageId          { get; set; } // BIGINT
		[Column("schema"),           PrimaryKey(2), NotNull] public string   Schema           { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),             PrimaryKey(3), NotNull] public string   Name             { get; set; } = null!; // NVARCHAR(256)
		[Column("modifiedUtc"),                     NotNull] public DateTime ModifiedUtc      { get; set; } // TIMESTAMP
		[Column("state"),                           NotNull] public string   State            { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                NotNull] public string   ExtensionPackage { get; set; } = null!; // NVARCHAR(127)
		[Column("isAnonymous"),                     NotNull] public byte     IsAnonymous      { get; set; } // TINYINT
	}

	[Table(Schema="_SYS_RT", Name="CDS_STRUCTURE_COMPONENT")]
	public partial class _SYS_RT_CdsStructureComponent
	{
		[Column("imageId"),            PrimaryKey(1), NotNull] public long     ImageId            { get; set; } // BIGINT
		[Column("schema"),             PrimaryKey(2), NotNull] public string   Schema             { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),               PrimaryKey(3), NotNull] public string   Name               { get; set; } = null!; // NVARCHAR(256)
		[Column("componentName"),      PrimaryKey(4), NotNull] public string   ComponentName      { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                       NotNull] public DateTime ModifiedUtc        { get; set; } // TIMESTAMP
		[Column("state"),                             NotNull] public string   State              { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                  NotNull] public string   ExtensionPackage   { get; set; } = null!; // NVARCHAR(127)
		[Column("componentIndex"),                    NotNull] public int      ComponentIndex     { get; set; } // INTEGER
		[Column("metaTableSelector"),                 NotNull] public string   MetaTableSelector  { get; set; } = null!; // NVARCHAR(127)
		[Column("target.schema"),                     NotNull] public string   TargetSchema       { get; set; } = null!; // NVARCHAR(127)
		[Column("target.name"),                       NotNull] public string   TargetName         { get; set; } = null!; // NVARCHAR(256)
		[Column("target.isNative"),                   NotNull] public byte     TargetIsNative     { get; set; } // TINYINT
		[Column("isKey"),                             NotNull] public byte     IsKey              { get; set; } // TINYINT
		[Column("isNullable"),                        NotNull] public byte     IsNullable         { get; set; } // TINYINT
		[Column("originalDefinition"),    Nullable           ] public string?  OriginalDefinition { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="_SYS_RT", Name="CDS_VIEW")]
	public partial class _SYS_RT_CdsView
	{
		[Column("imageId"),          PrimaryKey(1), NotNull] public long     ImageId          { get; set; } // BIGINT
		[Column("schema"),           PrimaryKey(2), NotNull] public string   Schema           { get; set; } = null!; // NVARCHAR(127)
		[Column("name"),             PrimaryKey(3), NotNull] public string   Name             { get; set; } = null!; // NVARCHAR(127)
		[Column("modifiedUtc"),                     NotNull] public DateTime ModifiedUtc      { get; set; } // TIMESTAMP
		[Column("state"),                           NotNull] public string   State            { get; set; } = null!; // NVARCHAR(10)
		[Column("extensionPackage"),                NotNull] public string   ExtensionPackage { get; set; } = null!; // NVARCHAR(127)
		[Column("definition"),                      NotNull] public string   Definition       { get; set; } = null!; // NCLOB
	}

	[Table(Schema="TESTHANA", Name="Child")]
	public partial class Child
	{
		[Column, Nullable] public int? ParentID { get; set; } // INTEGER
		[Column, Nullable] public int? ChildID  { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANAODBC", Name="Child")]
	public partial class TESTHANAODBC_Child
	{
		[Column, Nullable] public int? ParentID { get; set; } // INTEGER
		[Column, Nullable] public int? ChildID  { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_TASK", Name="CLEANSE_ADDRESS_RECORD_INFO_")]
	public partial class _SYS_TASK_CleanseAddressRecordInfo
	{
		[Column("TASK_EXECUTION_ID"),          PrimaryKey(1), NotNull] public long    TaskExecutionId          { get; set; } // BIGINT
		[Column("OPERATION_ID"),               PrimaryKey(2), NotNull] public int     OperationId              { get; set; } // INTEGER
		[Column("TABLE_ID"),                   PrimaryKey(3), NotNull] public int     TableId                  { get; set; } // INTEGER
		[Column("ROW_ID"),                     PrimaryKey(4), NotNull] public long    RowId                    { get; set; } // BIGINT
		[Column("ENTITY_INSTANCE"),            PrimaryKey(5), NotNull] public int     EntityInstance           { get; set; } // INTEGER
		[Column("ENTITY_INSTANCE_OCCURRENCE"), PrimaryKey(6), NotNull] public int     EntityInstanceOccurrence { get; set; } // INTEGER
		[Column("DATA_SOURCE"),                   Nullable           ] public string? DataSource               { get; set; } // NVARCHAR(256)
		[Column("ISO_COUNTRY_2CHAR"),             Nullable           ] public string? IsoCountry2char          { get; set; } // NVARCHAR(4)
		[Column("ASSIGNMENT_TYPE"),               Nullable           ] public string? AssignmentType           { get; set; } // NVARCHAR(4)
		[Column("ASSIGNMENT_INFORMATION"),        Nullable           ] public string? AssignmentInformation    { get; set; } // NVARCHAR(4)
		[Column("ASSIGNMENT_LEVEL"),              Nullable           ] public string? AssignmentLevel          { get; set; } // NVARCHAR(4)
	}

	/// <summary>
	/// The table tells a user how well an address assigned and the type of address
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="CLEANSE_ADDRESS_RECORD_INFO", IsView=true)]
	public partial class _SYS_TASK_CleanseAddressRecordInfo0
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),                NotNull    ] public string  SchemaName               { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),                  NotNull    ] public string  TaskName                 { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),          NotNull    ] public long    TaskExecutionId          { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),                Nullable] public string? OperationName            { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("TABLE_NAME"),                    Nullable] public string? TableName                { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The unique ID of the row processed for this execution of the task plan
		/// </summary>
		[Column("ROW_ID"),                     NotNull    ] public long    RowId                    { get; set; } // BIGINT
		/// <summary>
		/// An ID to differentiate between multiple entities processed in a row
		/// </summary>
		[Column("ENTITY_INSTANCE"),            NotNull    ] public int     EntityInstance           { get; set; } // INTEGER
		/// <summary>
		/// A unique ID to identify the occurrence of an entity
		/// </summary>
		[Column("ENTITY_INSTANCE_OCCURRENCE"), NotNull    ] public int     EntityInstanceOccurrence { get; set; } // INTEGER
		/// <summary>
		/// The source where the data was produced
		/// </summary>
		[Column("DATA_SOURCE"),                   Nullable] public string? DataSource               { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The two character country code
		/// </summary>
		[Column("ISO_COUNTRY_2CHAR"),             Nullable] public string? IsoCountry2char          { get; set; } // NVARCHAR(4)
		/// <summary>
		/// A code that represents the type of an address
		/// </summary>
		[Column("ASSIGNMENT_TYPE"),               Nullable] public string? AssignmentType           { get; set; } // NVARCHAR(4)
		/// <summary>
		/// A code that specifies the validity of an address
		/// </summary>
		[Column("ASSIGNMENT_INFORMATION"),        Nullable] public string? AssignmentInformation    { get; set; } // NVARCHAR(4)
		/// <summary>
		/// A code that represents the level to which the address matched data in the address reference data
		/// </summary>
		[Column("ASSIGNMENT_LEVEL"),              Nullable] public string? AssignmentLevel          { get; set; } // NVARCHAR(4)
	}

	[Table(Schema="_SYS_TASK", Name="CLEANSE_CHANGE_INFO_")]
	public partial class _SYS_TASK_CleanseChangeInfo
	{
		[Column("TASK_EXECUTION_ID"),          PrimaryKey(1), NotNull] public long    TaskExecutionId          { get; set; } // BIGINT
		[Column("OPERATION_ID"),               PrimaryKey(2), NotNull] public int     OperationId              { get; set; } // INTEGER
		[Column("TABLE_ID"),                      Nullable           ] public int?    TableId                  { get; set; } // INTEGER
		[Column("ROW_ID"),                     PrimaryKey(3), NotNull] public long    RowId                    { get; set; } // BIGINT
		[Column("ENTITY_ID"),                  PrimaryKey(4), NotNull] public string  EntityId                 { get; set; } = null!; // NVARCHAR(12)
		[Column("ENTITY_INSTANCE"),            PrimaryKey(5), NotNull] public int     EntityInstance           { get; set; } // INTEGER
		[Column("ENTITY_INSTANCE_OCCURRENCE"), PrimaryKey(6), NotNull] public int     EntityInstanceOccurrence { get; set; } // INTEGER
		[Column("DATA_SOURCE"),                   Nullable           ] public string? DataSource               { get; set; } // NVARCHAR(256)
		[Column("COMPONENT_ID"),               PrimaryKey(7), NotNull] public string  ComponentId              { get; set; } = null!; // NVARCHAR(12)
		[Column("COMPONENT_ELEMENT_ID"),       PrimaryKey(8), NotNull] public string  ComponentElementId       { get; set; } = null!; // NVARCHAR(12)
		[Column("CHANGE_CATEGORY_ID"),         PrimaryKey(9), NotNull] public string  ChangeCategoryId         { get; set; } = null!; // NVARCHAR(12)
		[Column("CHANGE_SIGNIFICANCE_ID"),        Nullable           ] public string? ChangeSignificanceId     { get; set; } // NVARCHAR(12)
	}

	/// <summary>
	/// This table describes the changes made during the cleansing process
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="CLEANSE_CHANGE_INFO", IsView=true)]
	public partial class _SYS_TASK_CleanseChangeInfo0
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),                NotNull    ] public string  SchemaName               { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),                  NotNull    ] public string  TaskName                 { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),          NotNull    ] public long    TaskExecutionId          { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),                Nullable] public string? OperationName            { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("TABLE_NAME"),                    Nullable] public string? TableName                { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The unique ID of the row processed for this execution of the task plan
		/// </summary>
		[Column("ROW_ID"),                     NotNull    ] public long    RowId                    { get; set; } // BIGINT
		/// <summary>
		/// The ID describing the type of record that was processed
		/// </summary>
		[Column("ENTITY_ID"),                  NotNull    ] public string  EntityId                 { get; set; } = null!; // NVARCHAR(12)
		/// <summary>
		/// An ID to differentiate between multiple entities processed in a row
		/// </summary>
		[Column("ENTITY_INSTANCE"),            NotNull    ] public int     EntityInstance           { get; set; } // INTEGER
		/// <summary>
		/// A unique ID to identify the occurrence of an entity
		/// </summary>
		[Column("ENTITY_INSTANCE_OCCURRENCE"), NotNull    ] public int     EntityInstanceOccurrence { get; set; } // INTEGER
		/// <summary>
		/// The source where the data was produced
		/// </summary>
		[Column("DATA_SOURCE"),                   Nullable] public string? DataSource               { get; set; } // NVARCHAR(256)
		/// <summary>
		/// Identification number that refers to data components
		/// </summary>
		[Column("COMPONENT_ID"),               NotNull    ] public string  ComponentId              { get; set; } = null!; // NVARCHAR(12)
		/// <summary>
		/// Identification number that refers to more granular elements within a component
		/// </summary>
		[Column("COMPONENT_ELEMENT_ID"),       NotNull    ] public string  ComponentElementId       { get; set; } = null!; // NVARCHAR(12)
		[Column("CHANGE_CATEGORY_ID"),         NotNull    ] public string  ChangeCategoryId         { get; set; } = null!; // NVARCHAR(12)
		/// <summary>
		/// Identification number that refers to the significance of the change
		/// </summary>
		[Column("CHANGE_SIGNIFICANCE_ID"),        Nullable] public string? ChangeSignificanceId     { get; set; } // NVARCHAR(12)
	}

	[Table(Schema="_SYS_TASK", Name="CLEANSE_COMPONENT_INFO_")]
	public partial class _SYS_TASK_CleanseComponentInfo
	{
		[Column("TASK_EXECUTION_ID"),            Nullable] public long?   TaskExecutionId           { get; set; } // BIGINT
		[Column("OPERATION_ID"),                 Nullable] public int?    OperationId               { get; set; } // INTEGER
		[Column("ENTITY_ID"),                    Nullable] public string? EntityId                  { get; set; } // NVARCHAR(12)
		[Column("ENTITY_INSTANCE"),              Nullable] public int?    EntityInstance            { get; set; } // INTEGER
		[Column("ENTITY_INSTANCE_OCCURRENCE"),   Nullable] public int?    EntityInstanceOccurrence  { get; set; } // INTEGER
		[Column("DATA_SOURCE"),                  Nullable] public string? DataSource                { get; set; } // NVARCHAR(256)
		[Column("COMPONENT_ID"),                 Nullable] public string? ComponentId               { get; set; } // NVARCHAR(12)
		[Column("COMPONENT_ELEMENT_ID"),         Nullable] public string? ComponentElementId        { get; set; } // NVARCHAR(12)
		[Column("TABLE_ID"),                     Nullable] public int?    TableId                   { get; set; } // INTEGER
		[Column("ROW_ID"),                       Nullable] public long?   RowId                     { get; set; } // BIGINT
		[Column("COLUMN_ID"),                    Nullable] public int?    ColumnId                  { get; set; } // INTEGER
		[Column("COLUMN_START_POSITION"),        Nullable] public int?    ColumnStartPosition       { get; set; } // INTEGER
		[Column("COLUMN_DATA_LENGTH"),           Nullable] public int?    ColumnDataLength          { get; set; } // INTEGER
		[Column("OUTPUT_TABLE_ID"),              Nullable] public int?    OutputTableId             { get; set; } // INTEGER
		[Column("OUTPUT_COLUMN_ID"),             Nullable] public int?    OutputColumnId            { get; set; } // INTEGER
		[Column("OUTPUT_COLUMN_START_POSITION"), Nullable] public int?    OutputColumnStartPosition { get; set; } // INTEGER
		[Column("OUTPUT_COLUMN_DATA_LENGTH"),    Nullable] public int?    OutputColumnDataLength    { get; set; } // INTEGER
	}

	/// <summary>
	/// This table identifies the location of parsed data elements in the input and output
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="CLEANSE_COMPONENT_INFO", IsView=true)]
	public partial class _SYS_TASK_CleanseComponentInfo0
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),                  NotNull    ] public string  SchemaName                { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),                    NotNull    ] public string  TaskName                  { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),            NotNull    ] public long    TaskExecutionId           { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),                  Nullable] public string? OperationName             { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The ID describing the type of record that was processed
		/// </summary>
		[Column("ENTITY_ID"),                       Nullable] public string? EntityId                  { get; set; } // NVARCHAR(12)
		/// <summary>
		/// An ID to differentiate between multiple entities processed in a row
		/// </summary>
		[Column("ENTITY_INSTANCE"),                 Nullable] public int?    EntityInstance            { get; set; } // INTEGER
		/// <summary>
		/// A unique ID to identify the occurrence of an entity
		/// </summary>
		[Column("ENTITY_INSTANCE_OCCURRENCE"),      Nullable] public int?    EntityInstanceOccurrence  { get; set; } // INTEGER
		/// <summary>
		/// The source where the data was produced
		/// </summary>
		[Column("DATA_SOURCE"),                     Nullable] public string? DataSource                { get; set; } // NVARCHAR(256)
		/// <summary>
		/// Identification number that refers to data components
		/// </summary>
		[Column("COMPONENT_ID"),                    Nullable] public string? ComponentId               { get; set; } // NVARCHAR(12)
		/// <summary>
		/// Identification number that refers to more granular elements within a component
		/// </summary>
		[Column("COMPONENT_ELEMENT_ID"),            Nullable] public string? ComponentElementId        { get; set; } // NVARCHAR(12)
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("TABLE_NAME"),                      Nullable] public string? TableName                 { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The unique ID of the row processed for this execution of the task plan
		/// </summary>
		[Column("ROW_ID"),                          Nullable] public long?   RowId                     { get; set; } // BIGINT
		/// <summary>
		/// Name of the column
		/// </summary>
		[Column("COLUMN_NAME"),                     Nullable] public string? ColumnName                { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Starting character of the component in the column
		/// </summary>
		[Column("COLUMN_START_POSITION"),           Nullable] public int?    ColumnStartPosition       { get; set; } // INTEGER
		/// <summary>
		/// Number of characters of the component in the column
		/// </summary>
		[Column("COLUMN_DATA_LENGTH"),              Nullable] public int?    ColumnDataLength          { get; set; } // INTEGER
		/// <summary>
		/// Name of the output table
		/// </summary>
		[Column("OUTPUT_TABLE_NAME"),               Nullable] public string? OutputTableName           { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Name of the output column
		/// </summary>
		[Column("OUTPUT_COLUMN_NAME"),              Nullable] public string? OutputColumnName          { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Starting character of the component in the output column
		/// </summary>
		[Column("OUTPUT_COLUMN_START_POSITION"),    Nullable] public int?    OutputColumnStartPosition { get; set; } // INTEGER
		/// <summary>
		/// Number of characters of the component in the output column
		/// </summary>
		[Column("OUTPUT_COLUMN_DATA_LENGTH"),       Nullable] public int?    OutputColumnDataLength    { get; set; } // INTEGER
	}

	/// <summary>
	/// This table contains one row per info code generated by the cleansing process
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="CLEANSE_INFO_CODES", IsView=true)]
	public partial class _SYS_TASK_CleanseInfoCode
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),                NotNull    ] public string  SchemaName               { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),                  NotNull    ] public string  TaskName                 { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),          NotNull    ] public long    TaskExecutionId          { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),                Nullable] public string? OperationName            { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("TABLE_NAME"),                    Nullable] public string? TableName                { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The unique ID of the row processed for this execution of the task plan
		/// </summary>
		[Column("ROW_ID"),                        Nullable] public long?   RowId                    { get; set; } // BIGINT
		/// <summary>
		/// The ID describing the type of record that was processed
		/// </summary>
		[Column("ENTITY_ID"),                     Nullable] public string? EntityId                 { get; set; } // NVARCHAR(12)
		/// <summary>
		/// An ID to differentiate between multiple entities processed in a row
		/// </summary>
		[Column("ENTITY_INSTANCE"),               Nullable] public int?    EntityInstance           { get; set; } // INTEGER
		/// <summary>
		/// A unique ID to identify the occurrence of an entity
		/// </summary>
		[Column("ENTITY_INSTANCE_OCCURRENCE"), NotNull    ] public int     EntityInstanceOccurrence { get; set; } // INTEGER
		/// <summary>
		/// The source where the data was produced
		/// </summary>
		[Column("DATA_SOURCE"),                   Nullable] public string? DataSource               { get; set; } // NVARCHAR(256)
		/// <summary>
		/// Information code that gives information about the processing of the record
		/// </summary>
		[Column("INFO_CODE"),                     Nullable] public string? InfoCode                 { get; set; } // NVARCHAR(10)
	}

	[Table(Schema="_SYS_TASK", Name="CLEANSE_INFO_CODES_")]
	public partial class _SYS_TASK_CleanseInfoCodes
	{
		[Column("TASK_EXECUTION_ID"),             Nullable] public long?   TaskExecutionId          { get; set; } // BIGINT
		[Column("OPERATION_ID"),                  Nullable] public int?    OperationId              { get; set; } // INTEGER
		[Column("TABLE_ID"),                      Nullable] public int?    TableId                  { get; set; } // INTEGER
		[Column("ROW_ID"),                        Nullable] public long?   RowId                    { get; set; } // BIGINT
		[Column("ENTITY_ID"),                     Nullable] public string? EntityId                 { get; set; } // NVARCHAR(12)
		[Column("ENTITY_INSTANCE"),               Nullable] public int?    EntityInstance           { get; set; } // INTEGER
		[Column("ENTITY_INSTANCE_OCCURRENCE"), NotNull    ] public int     EntityInstanceOccurrence { get; set; } // INTEGER
		[Column("DATA_SOURCE"),                   Nullable] public string? DataSource               { get; set; } // NVARCHAR(256)
		[Column("INFO_CODE"),                     Nullable] public string? InfoCode                 { get; set; } // NVARCHAR(10)
	}

	/// <summary>
	/// This table contains a summary of Cleanse statistics
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="CLEANSE_STATISTICS", IsView=true)]
	public partial class _SYS_TASK_CleanseStatistic
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),                  NotNull    ] public string  SchemaName                { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),                    NotNull    ] public string  TaskName                  { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),            NotNull    ] public long    TaskExecutionId           { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),                  Nullable] public string? OperationName             { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The ID describing the type of record that was processed
		/// </summary>
		[Column("ENTITY_ID"),                       Nullable] public string? EntityId                  { get; set; } // NVARCHAR(12)
		/// <summary>
		/// An ID to differentiate between multiple entities processed in a row
		/// </summary>
		[Column("ENTITY_INSTANCE"),                 Nullable] public int?    EntityInstance            { get; set; } // INTEGER
		/// <summary>
		/// The total number of records processed for the entity instance
		/// </summary>
		[Column("NUM_RECORDS"),                     Nullable] public long?   NumRecords                { get; set; } // BIGINT
		/// <summary>
		/// The number of valid records processed for the entity instance
		/// </summary>
		[Column("NUM_VALIDS"),                      Nullable] public long?   NumValids                 { get; set; } // BIGINT
		/// <summary>
		/// The number of suspect records processed for the entity instance
		/// </summary>
		[Column("NUM_SUSPECTS"),                    Nullable] public long?   NumSuspects               { get; set; } // BIGINT
		/// <summary>
		/// The number of blank records processed for the entity instance
		/// </summary>
		[Column("NUM_BLANKS"),                      Nullable] public long?   NumBlanks                 { get; set; } // BIGINT
		/// <summary>
		/// The number of records with high significance changes for the entity instance
		/// </summary>
		[Column("NUM_HIGH_SIGNIFICANT_CHANGES"),    Nullable] public long?   NumHighSignificantChanges { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_TASK", Name="CLEANSE_STATISTICS_")]
	public partial class _SYS_TASK_CleanseStatistics
	{
		[Column("TASK_EXECUTION_ID"),            Nullable] public long?   TaskExecutionId           { get; set; } // BIGINT
		[Column("OPERATION_ID"),                 Nullable] public int?    OperationId               { get; set; } // INTEGER
		[Column("ENTITY_ID"),                    Nullable] public string? EntityId                  { get; set; } // NVARCHAR(12)
		[Column("ENTITY_INSTANCE"),              Nullable] public int?    EntityInstance            { get; set; } // INTEGER
		[Column("NUM_RECORDS"),                  Nullable] public long?   NumRecords                { get; set; } // BIGINT
		[Column("NUM_SUSPECTS"),                 Nullable] public long?   NumSuspects               { get; set; } // BIGINT
		[Column("NUM_BLANKS"),                   Nullable] public long?   NumBlanks                 { get; set; } // BIGINT
		[Column("NUM_HIGH_SIGNIFICANT_CHANGES"), Nullable] public long?   NumHighSignificantChanges { get; set; } // BIGINT
	}

	/// <summary>
	/// Telemetry Client Information
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="CLIENT")]
	public partial class _SYS_TELEMETRY_CLIENT
	{
		/// <summary>
		/// Unique ID of the client
		/// </summary>
		[Column("CLIENT_ID"),                        PrimaryKey,  NotNull] public long      ClientId                       { get; set; } // BIGINT
		/// <summary>
		/// Activation timestamp of the client ID
		/// </summary>
		[Column("FIRST_TRANSMISSION_TIMESTAMP"),                  NotNull] public DateTime  FirstTransmissionTimestamp     { get; set; } // TIMESTAMP
		/// <summary>
		/// Timestamp of last transmission
		/// </summary>
		[Column("LAST_TRANSMISSION_TIMESTAMP"),                   NotNull] public DateTime  LastTransmissionTimestamp      { get; set; } // TIMESTAMP
		/// <summary>
		/// Transmission interval in minute
		/// </summary>
		[Column("TRANSMISSION_INTERVAL"),               Nullable         ] public short?    TransmissionInterval           { get; set; } // SMALLINT
		/// <summary>
		/// Default transmission interval in minute
		/// </summary>
		[Column("DEFAULT_TRANSMISSION_INTERVAL"),       Nullable         ] public short?    DefaultTransmissionInterval    { get; set; } // SMALLINT
		/// <summary>
		/// Minimum transmission interval in minute
		/// </summary>
		[Column("MIN_TRANSMISSION_INTERVAL"),           Nullable         ] public short?    MinTransmissionInterval        { get; set; } // SMALLINT
		/// <summary>
		/// Maximum transmission interval in minute
		/// </summary>
		[Column("MAX_TRANSMISSION_INTERVAL"),           Nullable         ] public short?    MaxTransmissionInterval        { get; set; } // SMALLINT
		/// <summary>
		/// System ID of the client
		/// </summary>
		[Column("CLIENT_SYSTEM_ID"),                              NotNull] public string    ClientSystemId                 { get; set; } = null!; // VARCHAR(3)
		/// <summary>
		/// Database Name of the client
		/// </summary>
		[Column("CLIENT_DATABASE_NAME"),                          NotNull] public string    ClientDatabaseName             { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Hardware key of the client
		/// </summary>
		[Column("CLIENT_HARDWARE_KEY"),                           NotNull] public string    ClientHardwareKey              { get; set; } = null!; // VARCHAR(11)
		/// <summary>
		/// Private key of the client
		/// </summary>
		[Column("PRIVATE_KEY"),                         Nullable         ] public string?   PrivateKey                     { get; set; } // VARCHAR(5000)
		/// <summary>
		/// Personal certificate of the client
		/// </summary>
		[Column("PERSONAL_CERTIFICATE"),                Nullable         ] public string?   PersonalCertificate            { get; set; } // VARCHAR(5000)
		/// <summary>
		/// Expiration timestamp of the Personal certificate
		/// </summary>
		[Column("CERTIFICATE_EXPIRATION_TIMESTAMP"),    Nullable         ] public DateTime? CertificateExpirationTimestamp { get; set; } // TIMESTAMP
	}

	/// <summary>
	/// Telemetry Configuration Information
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="CONFIGURATION")]
	public partial class _SYS_TELEMETRY_CONFIGURATION
	{
		/// <summary>
		/// Unique ID of telemetry collector
		/// </summary>
		[Column("COLLECTOR_ID"),                PrimaryKey, NotNull] public short  CollectorId               { get; set; } // SMALLINT
		/// <summary>
		/// Name of telemetry collector
		/// </summary>
		[Column("COLLECTOR_NAME"),                          NotNull] public string CollectorName             { get; set; } = null!; // VARCHAR(256)
		/// <summary>
		/// Status of telemetry collector
		/// </summary>
		[Column("COLLECTOR_STATUS"),                        NotNull] public object CollectorStatus           { get; set; } = null!; // BOOLEAN
		/// <summary>
		/// Version of telemetry collector
		/// </summary>
		[Column("COLLECTOR_VERSION"),                       NotNull] public short  CollectorVersion          { get; set; } // SMALLINT
		/// <summary>
		/// ID of statistics service data collector
		/// </summary>
		[Column("BASE_COLLECTOR_ID"),                       NotNull] public short  BaseCollectorId           { get; set; } // SMALLINT
		/// <summary>
		/// Collection interval of telemetry collector in hour
		/// </summary>
		[Column("COLLECTION_INTERVAL"),                     NotNull] public byte   CollectionInterval        { get; set; } // TINYINT
		/// <summary>
		/// Default collection interval of telemetry collector in hour
		/// </summary>
		[Column("DEFAULT_COLLECTION_INTERVAL"),             NotNull] public byte   DefaultCollectionInterval { get; set; } // TINYINT
		/// <summary>
		/// Minimum collection interval of telemetry collector in hour
		/// </summary>
		[Column("MIN_COLLECTION_INTERVAL"),                 NotNull] public byte   MinCollectionInterval     { get; set; } // TINYINT
		/// <summary>
		/// Maximum collection interval of telemetry collector in hour
		/// </summary>
		[Column("MAX_COLLECTION_INTERVAL"),                 NotNull] public byte   MaxCollectionInterval     { get; set; } // TINYINT
	}

	/// <summary>
	/// This table contains messages generated by create task command
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="CREATE_TASK_MESSAGES", IsView=true)]
	public partial class _SYS_TASK_CreateTaskMessage
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),    Nullable] public string?   SchemaName    { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),      Nullable] public string?   TaskName      { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The task plan operation producing the message
		/// </summary>
		[Column("OPERATION_NAME"), Nullable] public string?   OperationName { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Error, warning, or information
		/// </summary>
		[Column(),                 Nullable] public string?   SEVERITY      { get; set; } // NVARCHAR(12)
		/// <summary>
		/// The ID of the message
		/// </summary>
		[Column("MESSAGE_ID"),     Nullable] public string?   MessageId     { get; set; } // NVARCHAR(8)
		/// <summary>
		/// The message text
		/// </summary>
		[Column("MESSAGE_TEXT"),   Nullable] public string?   MessageText   { get; set; } // NVARCHAR(2048)
		/// <summary>
		/// The time the message was issued
		/// </summary>
		[Column("MESSAGE_TIME"),   Nullable] public DateTime? MessageTime   { get; set; } // SECONDDATE
	}

	[Table(Schema="_SYS_TASK", Name="CREATE_TASK_MESSAGES_")]
	public partial class _SYS_TASK_CreateTaskMessages
	{
		[Column("SCHEMA_NAME"),    Nullable] public string?   SchemaName    { get; set; } // NVARCHAR(256)
		[Column("TASK_NAME"),      Nullable] public string?   TaskName      { get; set; } // NVARCHAR(256)
		[Column("OPERATION_NAME"), Nullable] public string?   OperationName { get; set; } // NVARCHAR(128)
		[Column(),                 Nullable] public string?   SEVERITY      { get; set; } // NVARCHAR(12)
		[Column("MESSAGE_ID"),     Nullable] public string?   MessageId     { get; set; } // NVARCHAR(8)
		[Column("MESSAGE_TEXT"),   Nullable] public string?   MessageText   { get; set; } // NVARCHAR(2048)
		[Column("MESSAGE_TIME"),   Nullable] public DateTime? MessageTime   { get; set; } // SECONDDATE
	}

	/// <summary>
	/// Runtime data of column tables
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="CS_TABLES", IsView=true)]
	public partial class _SYS_TELEMETRY_CsTable
	{
		/// <summary>
		/// Timestamp (UTC) identifying when the statistics service performed a data collection. Data collections scheduled for the same time have the same snapshot ID.
		/// </summary>
		[Column("SNAPSHOT_ID"),                        NotNull    ] public DateTime SnapshotId                    { get; set; } // TIMESTAMP
		/// <summary>
		/// Total memory size is the sum of memory size in main, delta, and history parts
		/// </summary>
		[Column("MEMORY_SIZE_IN_TOTAL"),                  Nullable] public long?    MemorySizeInTotal             { get; set; } // BIGINT
		/// <summary>
		/// Estimated maximum memory consumption in total for table fully loaded (not including data for open transactions)
		/// </summary>
		[Column("ESTIMATED_MAX_MEMORY_SIZE_IN_TOTAL"),    Nullable] public long?    EstimatedMaxMemorySizeInTotal { get; set; } // BIGINT
		/// <summary>
		/// Record count
		/// </summary>
		[Column("RECORD_COUNT"),                          Nullable] public long?    RecordCount                   { get; set; } // BIGINT
		/// <summary>
		/// Number of read accesses on the table or partition. Note: This is not the number of SELECT statements against this table. A SELECT may involve several read accesses.
		/// </summary>
		[Column("READ_COUNT"),                            Nullable] public long?    ReadCount                     { get; set; } // BIGINT
		/// <summary>
		/// Number of write accesses on the table or partition. Note: This is not the number of DML & DDL statements against this table.  A DML or DDL statement may involve several write accesses.
		/// </summary>
		[Column("WRITE_COUNT"),                           Nullable] public long?    WriteCount                    { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_TASK", Name="CURRENT_VERSIONS_")]
	public partial class _SYS_TASK_CurrentVersions
	{
		[Column("VERSION_ID"),  PrimaryKey,  NotNull] public string VersionId  { get; set; } = null!; // NVARCHAR(20)
		[Column("VERSION_NUM"),    Nullable         ] public int?   VersionNum { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_XS", Name="DEBUG_PERMISSIONS")]
	public partial class _SYS_XS_DebugPermission
	{
		[Column, NotNull    ] public string   GRANTOR  { get; set; } = null!; // NVARCHAR(256)
		[Column, NotNull    ] public string   GRANTEE  { get; set; } = null!; // NVARCHAR(256)
		[Column, NotNull    ] public DateTime STARTING { get; set; } // TIMESTAMP
		[Column, NotNull    ] public DateTime UNTIL    { get; set; } // TIMESTAMP
		[Column,    Nullable] public string?  TOKEN    { get; set; } // NVARCHAR(32)
	}

	[Table(Schema="_SYS_EPM", Name="DELETE_CONTAINERS")]
	public partial class _SYS_EPM_DeleteContainer
	{
		[Column("USER_NAME"),        PrimaryKey(1), NotNull] public string    UserName       { get; set; } = null!; // NVARCHAR(256)
		[Column("SCHEMA_NAME"),      PrimaryKey(2), NotNull] public string    SchemaName     { get; set; } = null!; // NVARCHAR(256)
		[Column("MODEL_NAME"),       PrimaryKey(3), NotNull] public string    ModelName      { get; set; } = null!; // NVARCHAR(256)
		[Column(),                   PrimaryKey(4), NotNull] public int       VERSION        { get; set; } // INTEGER
		[Column(),                   PrimaryKey(5), NotNull] public string    CONTAINER      { get; set; } = null!; // NVARCHAR(256)
		[Column("TABLE_NAME"),          Nullable           ] public string?   TableName      { get; set; } // NVARCHAR(256)
		[Column("LAST_CHANGE_TIME"),    Nullable           ] public DateTime? LastChangeTime { get; set; } // TIMESTAMP
	}

	/// <summary>
	/// Disk usage information on host basis group by usage_types
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="DISK_USAGE", IsView=true)]
	public partial class _SYS_TELEMETRY_DiskUsage
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"), NotNull    ] public DateTime SnapshotId { get; set; } // TIMESTAMP
		/// <summary>
		/// Resource type like LOG, DATA, TRACE, DATA_BACKUP, LOG_BACKUP, CATALOG_BACKUP and ROOTKEY_BACKUP
		/// </summary>
		[Column("USAGE_TYPE"),  NotNull    ] public string   UsageType  { get; set; } = null!; // VARCHAR(32)
		/// <summary>
		/// Size of used disk space in bytes
		/// </summary>
		[Column("USED_SIZE"),      Nullable] public long?    UsedSize   { get; set; } // BIGINT
	}

	[Table(Schema="TESTHANA", Name="Doctor")]
	public partial class Doctor
	{
		[PrimaryKey, NotNull] public int    PersonID { get; set; } // INTEGER
		[Column,     NotNull] public string Taxonomy { get; set; } = null!; // NVARCHAR(50)

		#region Associations

		/// <summary>
		/// FK_Doctor_Person
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK_Doctor_Person", BackReferenceName="Doctor")]
		public Person Person { get; set; } = null!;

		#endregion
	}

	[Table(Schema="TESTHANAODBC", Name="Doctor")]
	public partial class TESTHANAODBC_Doctor
	{
		[PrimaryKey, NotNull] public int    PersonID { get; set; } // INTEGER
		[Column,     NotNull] public string Taxonomy { get; set; } = null!; // NVARCHAR(50)

		#region Associations

		/// <summary>
		/// FK_Doctor_Person
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK_Doctor_Person", BackReferenceName="Doctor")]
		public TESTHANAODBC_Person Person { get; set; } = null!;

		#endregion
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="EDGE_STATISTICS", IsView=true)]
	public partial class _SYS_SQL_ANALYZER_EdgeStatistic
	{
		[Column("USER_NAME"),                    Nullable] public string?   UserName                  { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"),       Nullable] public string?   StatementExecutionId      { get; set; } // VARCHAR(32)
		[Column("PLAN_ID"),                      Nullable] public string?   PlanId                    { get; set; } // VARCHAR(256)
		[Column("PARENT_OPERATOR_ID"),           Nullable] public string?   ParentOperatorId          { get; set; } // VARCHAR(256)
		[Column("CHILD_OPERATOR_ID"),            Nullable] public string?   ChildOperatorId           { get; set; } // VARCHAR(256)
		[Column("EDGE_NAME"),                    Nullable] public string?   EdgeName                  { get; set; } // VARCHAR(512)
		[Column("EXECUTED_OUTPUT_RECORD_COUNT"), Nullable] public long?     ExecutedOutputRecordCount { get; set; } // BIGINT
		[Column("OUTPUT_PAYLOAD_SIZE"),          Nullable] public long?     OutputPayloadSize         { get; set; } // BIGINT
		[Column("FETCH_CALL_COUNT"),             Nullable] public long?     FetchCallCount            { get; set; } // BIGINT
		[Column("NETWORK_IO_START_TIME"),        Nullable] public DateTime? NetworkIoStartTime        { get; set; } // TIMESTAMP
		[Column("NETWORK_IO_END_TIME"),          Nullable] public DateTime? NetworkIoEndTime          { get; set; } // TIMESTAMP
		[Column("ACCESSED_TABLE_NAMES"),         Nullable] public string?   AccessedTableNames        { get; set; } // NVARCHAR(5000)
		[Column("EDGE_DETAILS"),                 Nullable] public string?   EdgeDetails               { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="EDGE_STATISTICS_")]
	public partial class _SYS_SQL_ANALYZER_EdgeStatistics
	{
		[Column("USER_NAME"),                    Nullable] public string?   UserName                  { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"),       Nullable] public string?   StatementExecutionId      { get; set; } // VARCHAR(32)
		[Column("PLAN_ID"),                      Nullable] public string?   PlanId                    { get; set; } // VARCHAR(256)
		[Column("PARENT_OPERATOR_ID"),           Nullable] public string?   ParentOperatorId          { get; set; } // VARCHAR(256)
		[Column("CHILD_OPERATOR_ID"),            Nullable] public string?   ChildOperatorId           { get; set; } // VARCHAR(256)
		[Column("EDGE_NAME"),                    Nullable] public string?   EdgeName                  { get; set; } // VARCHAR(512)
		[Column("EXECUTED_OUTPUT_RECORD_COUNT"), Nullable] public long?     ExecutedOutputRecordCount { get; set; } // BIGINT
		[Column("OUTPUT_PAYLOAD_SIZE"),          Nullable] public long?     OutputPayloadSize         { get; set; } // BIGINT
		[Column("FETCH_CALL_COUNT"),             Nullable] public long?     FetchCallCount            { get; set; } // BIGINT
		[Column("NETWORK_IO_START_TIME"),        Nullable] public DateTime? NetworkIoStartTime        { get; set; } // TIMESTAMP
		[Column("NETWORK_IO_END_TIME"),          Nullable] public DateTime? NetworkIoEndTime          { get; set; } // TIMESTAMP
		[Column("ACCESSED_TABLE_NAMES"),         Nullable] public string?   AccessedTableNames        { get; set; } // NVARCHAR(5000)
		[Column("EDGE_DETAILS"),                 Nullable] public string?   EdgeDetails               { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_AFL", Name="EML_MODEL_CONFIGURATION")]
	public partial class _SYS_AFL_EmlModelConfiguration
	{
		[Column, Nullable] public string? Model     { get; set; } // VARCHAR(256)
		[Column, Nullable] public string? Parameter { get; set; } // VARCHAR(256)
		[Column, Nullable] public string? Value     { get; set; } // VARCHAR(256)
	}

	[Table(Schema="_SYS_EPM", Name="EPM_MODELS", IsView=true)]
	public partial class _SYS_EPM_EpmModel
	{
		[Column("SCHEMA_NAME"),       NotNull    ] public string    SchemaName      { get; set; } = null!; // NVARCHAR(256)
		[Column("MODEL_NAME"),        NotNull    ] public string    ModelName       { get; set; } = null!; // NVARCHAR(256)
		[Column(),                       Nullable] public string?   COMMENTS        { get; set; } // NVARCHAR(256)
		[Column(),                       Nullable] public string?   CDATA           { get; set; } // NCLOB
		[Column("LAST_CHANGED_TIME"),    Nullable] public DateTime? LastChangedTime { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_EPM", Name="EPM_QUERY_SOURCES", IsView=true)]
	public partial class _SYS_EPM_EpmQuerySource
	{
		[Column("SCHEMA_NAME"),       NotNull    ] public string    SchemaName      { get; set; } = null!; // NVARCHAR(256)
		[Column("QUERY_SOURCE_NAME"), NotNull    ] public string    QuerySourceName { get; set; } = null!; // NVARCHAR(256)
		[Column(),                       Nullable] public string?   COMMENTS        { get; set; } // NVARCHAR(256)
		[Column(),                       Nullable] public string?   CDATA           { get; set; } // NCLOB
		[Column("LAST_CHANGED_TIME"),    Nullable] public DateTime? LastChangedTime { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_EPM", Name="EPM_STATISTICS")]
	public partial class _SYS_EPM_EpmStatistic
	{
		[Column("USER_NAME"),           Nullable] public string?   UserName           { get; set; } // NVARCHAR(256)
		[Column("SCHEMA_NAME"),         Nullable] public string?   SchemaName         { get; set; } // NVARCHAR(256)
		[Column("MODEL_NAME"),          Nullable] public string?   ModelName          { get; set; } // NVARCHAR(256)
		[Column(),                      Nullable] public int?      VERSION            { get; set; } // INTEGER
		[Column("START_TIME"),          Nullable] public DateTime? StartTime          { get; set; } // TIMESTAMP
		[Column("EVENT_TIME"),          Nullable] public DateTime? EventTime          { get; set; } // TIMESTAMP
		[Column(),                      Nullable] public string?   EVENT              { get; set; } // NVARCHAR(32)
		[Column("LAST_CHANGE_TIME"),    Nullable] public DateTime? LastChangeTime     { get; set; } // TIMESTAMP
		[Column("MEMORY_SIZE"),         Nullable] public long?     MemorySize         { get; set; } // BIGINT
		[Column("ROWS_CHANGED"),        Nullable] public long?     RowsChanged        { get; set; } // BIGINT
		[Column("ROWS_SAVED"),          Nullable] public long?     RowsSaved          { get; set; } // BIGINT
		[Column("SESSION_INFORMATION"), Nullable] public string?   SessionInformation { get; set; } // NCLOB
	}

	/// <summary>
	/// Enterprise Search configuration
	/// </summary>
	[Table(Schema="_SYS_RT", Name="ESH_MODEL_")]
	public partial class _SYS_RT_EshModel
	{
		/// <summary>
		/// Schema name
		/// </summary>
		[Column("SCHEMA_NAME"),               PrimaryKey(1), NotNull] public string   SchemaName              { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// View name
		/// </summary>
		[Column("VIEW_NAME"),                 PrimaryKey(2), NotNull] public string   ViewName                { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Repository package id
		/// </summary>
		[Column("PACKAGE_ID"),                   Nullable           ] public string?  PackageId               { get; set; } // NVARCHAR(256)
		/// <summary>
		/// Repository object name
		/// </summary>
		[Column("OBJECT_NAME"),                  Nullable           ] public string?  ObjectName              { get; set; } // NVARCHAR(256)
		/// <summary>
		/// Repository object suffix
		/// </summary>
		[Column("OBJECT_SUFFIX"),                Nullable           ] public string?  ObjectSuffix            { get; set; } // NVARCHAR(255)
		/// <summary>
		/// Timestamp of last change (UTC)
		/// </summary>
		[Column("LAST_CHANGED"),                             NotNull] public DateTime LastChanged             { get; set; } // TIMESTAMP
		/// <summary>
		/// Enables CDS views for enterprise search
		/// </summary>
		[Column("ENTERPRISE_SEARCH_ENABLED"),                NotNull] public object   EnterpriseSearchEnabled { get; set; } = null!; // BOOLEAN
		/// <summary>
		/// Odata identifier
		/// </summary>
		[Column("ODATA_ID"),                     Nullable           ] public string?  OdataId                 { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Configuration identifier
		/// </summary>
		[Column("CONFIGURATION_ID"),             Nullable           ] public string?  ConfigurationId         { get; set; } // NVARCHAR(5000)
	}

	/// <summary>
	/// Enterprise Search configuration
	/// </summary>
	[Table(Schema="_SYS_RT", Name="ESH_MODEL", IsView=true)]
	public partial class _SYS_RT_EshModel0
	{
		/// <summary>
		/// Schema name
		/// </summary>
		[Column("SCHEMA_NAME"),               NotNull    ] public string   SchemaName              { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// View name
		/// </summary>
		[Column("VIEW_NAME"),                 NotNull    ] public string   ViewName                { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Repository package id
		/// </summary>
		[Column("PACKAGE_ID"),                   Nullable] public string?  PackageId               { get; set; } // NVARCHAR(256)
		/// <summary>
		/// Repository object name
		/// </summary>
		[Column("OBJECT_NAME"),                  Nullable] public string?  ObjectName              { get; set; } // NVARCHAR(256)
		/// <summary>
		/// Repository object suffix
		/// </summary>
		[Column("OBJECT_SUFFIX"),                Nullable] public string?  ObjectSuffix            { get; set; } // NVARCHAR(255)
		/// <summary>
		/// Timestamp of last change (UTC)
		/// </summary>
		[Column("LAST_CHANGED"),              NotNull    ] public DateTime LastChanged             { get; set; } // TIMESTAMP
		/// <summary>
		/// Enables CDS views for enterprise search
		/// </summary>
		[Column("ENTERPRISE_SEARCH_ENABLED"), NotNull    ] public object   EnterpriseSearchEnabled { get; set; } = null!; // BOOLEAN
		/// <summary>
		/// Odata identifier
		/// </summary>
		[Column("ODATA_ID"),                     Nullable] public string?  OdataId                 { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Configuration identifier
		/// </summary>
		[Column("CONFIGURATION_ID"),             Nullable] public string?  ConfigurationId         { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="_SYS_RT", Name="ESH_MODEL_AUTH_")]
	public partial class _SYS_RT_EshModelAuth
	{
		[Column("SCHEMA_NAME"),      NotNull    ] public string  SchemaName     { get; set; } = null!; // NVARCHAR(256)
		[Column("VIEW_NAME"),        NotNull    ] public string  ViewName       { get; set; } = null!; // NVARCHAR(256)
		[Column(),                   NotNull    ] public string  CHECKID        { get; set; } = null!; // NVARCHAR(256)
		[Column("AUTH_OBJCT"),          Nullable] public string? AuthObjct      { get; set; } // NVARCHAR(256)
		[Column("AUTH_COLUMN_NAME"),    Nullable] public string? AuthColumnName { get; set; } // NVARCHAR(256)
		[Column("VIEW_COLUMN_NAME"),    Nullable] public string? ViewColumnName { get; set; } // NVARCHAR(256)
		[Column(),                   NotNull    ] public string  TYPE           { get; set; } = null!; // NVARCHAR(256)
		[Column(),                      Nullable] public string? VALUE          { get; set; } // NVARCHAR(256)
	}

	/// <summary>
	/// Enterprise Search configuration properties
	/// </summary>
	[Table(Schema="_SYS_RT", Name="ESH_MODEL_PROPERTY_")]
	public partial class _SYS_RT_EshModelProperty
	{
		/// <summary>
		/// Schema name
		/// </summary>
		[Column("SCHEMA_NAME"), PrimaryKey(1), NotNull] public string SchemaName { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// View name
		/// </summary>
		[Column("VIEW_NAME"),   PrimaryKey(2), NotNull] public string ViewName   { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// View column name
		/// </summary>
		[Column("COLUMN_NAME"), PrimaryKey(3), NotNull] public string ColumnName { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Property name
		/// </summary>
		[Column(),              PrimaryKey(4), NotNull] public string PROPERTY   { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Property value
		/// </summary>
		[Column(),                             NotNull] public string VALUE      { get; set; } = null!; // NVARCHAR(5000)
	}

	/// <summary>
	/// Enterprise Search configuration properties
	/// </summary>
	[Table(Schema="_SYS_RT", Name="ESH_MODEL_PROPERTY", IsView=true)]
	public partial class _SYS_RT_EshModelProperty0
	{
		/// <summary>
		/// Schema name
		/// </summary>
		[Column("SCHEMA_NAME"), NotNull] public string SchemaName { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// View name
		/// </summary>
		[Column("VIEW_NAME"),   NotNull] public string ViewName   { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// View column name
		/// </summary>
		[Column("COLUMN_NAME"), NotNull] public string ColumnName { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Property name
		/// </summary>
		[Column(),              NotNull] public string PROPERTY   { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Property value
		/// </summary>
		[Column(),              NotNull] public string VALUE      { get; set; } = null!; // NVARCHAR(5000)
	}

	/// <summary>
	/// Internal events
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="EVENTS", IsView=true)]
	public partial class _SYS_TELEMETRY_EVENT
	{
		/// <summary>
		/// Timestamp (UTC) identifying when the statistics service performed a data collection. Data collections scheduled for the same time have the same snapshot ID.
		/// </summary>
		[Column("SNAPSHOT_ID"), NotNull    ] public DateTime  SnapshotId { get; set; } // TIMESTAMP
		/// <summary>
		/// Type of event
		/// </summary>
		[Column(),                 Nullable] public string?   TYPE       { get; set; } // VARCHAR(256)
		/// <summary>
		/// ID of event
		/// </summary>
		[Column(),              NotNull    ] public long      ID         { get; set; } // BIGINT
		/// <summary>
		/// Time event was created
		/// </summary>
		[Column("CREATE_TIME"),    Nullable] public DateTime? CreateTime { get; set; } // TIMESTAMP
		/// <summary>
		/// Time event was handled
		/// </summary>
		[Column("HANDLE_TIME"),    Nullable] public DateTime? HandleTime { get; set; } // TIMESTAMP
		/// <summary>
		/// State of event
		/// </summary>
		[Column(),                 Nullable] public string?   STATE      { get; set; } // VARCHAR(256)
	}

	/// <summary>
	/// Detailed feature usage statistics
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="FEATURE_USAGE", IsView=true)]
	public partial class _SYS_TELEMETRY_FeatureUsage
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"),    NotNull    ] public DateTime  SnapshotId    { get; set; } // TIMESTAMP
		/// <summary>
		/// Component name (see M_FEATURES)
		/// </summary>
		[Column("COMPONENT_NAME"), NotNull    ] public string    ComponentName { get; set; } = null!; // VARCHAR(32)
		/// <summary>
		/// Feature name (see M_FEATURES)
		/// </summary>
		[Column("FEATURE_NAME"),   NotNull    ] public string    FeatureName   { get; set; } = null!; // VARCHAR(64)
		/// <summary>
		/// Counter tracking the number of times, the feature was used since the last start of the indexserver (e.g. number of accesses to any history table).
		/// </summary>
		[Column("CALL_COUNT"),        Nullable] public long?     CallCount     { get; set; } // BIGINT
		/// <summary>
		/// Last point in time when the feature was used.
		/// </summary>
		[Column("LAST_TIMESTAMP"),    Nullable] public DateTime? LastTimestamp { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_AFL", Name="FUNCTION_EXECUTION_COUNTS")]
	public partial class _SYS_AFL_FunctionExecutionCount
	{
		[Column("AREA_NAME"),       PrimaryKey(1), NotNull] public string    AreaName       { get; set; } = null!; // NVARCHAR(256)
		[Column("FUNCTION_NAME"),   PrimaryKey(2), NotNull] public string    FunctionName   { get; set; } = null!; // NVARCHAR(256)
		[Column(),                  PrimaryKey(3), NotNull] public string    HOST           { get; set; } = null!; // VARCHAR(64)
		[Column(),                  PrimaryKey(4), NotNull] public int       PORT           { get; set; } // INTEGER
		[Column("EXECUTION_COUNT"),    Nullable           ] public long?     ExecutionCount { get; set; } // BIGINT
		[Column("LAST_EXECUTION"),     Nullable           ] public DateTime? LastExecution  { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_AFL", Name="FUNCTION_EXECUTION_COUNTS_CONTROL")]
	public partial class _SYS_AFL_FunctionExecutionCountsControl
	{
		[PrimaryKey, NotNull    ] public string KEY   { get; set; } = null!; // VARCHAR(64)
		[Column,        Nullable] public long?  VALUE { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_AFL", Name="FUNCTION_PROGRESS_IN_AFLBFL")]
	public partial class _SYS_AFL_FunctionProgressInAflbfl
	{
		[Column("EXECUTION_ID"),         Nullable] public string?   ExecutionId         { get; set; } // VARCHAR(64)
		[Column("FUNCTION_NAME"),        Nullable] public string?   FunctionName        { get; set; } // NVARCHAR(256)
		[Column(),                       Nullable] public string?   HOST                { get; set; } // VARCHAR(64)
		[Column(),                       Nullable] public int?      PORT                { get; set; } // INTEGER
		[Column("CONNECTION_ID"),        Nullable] public int?      ConnectionId        { get; set; } // INTEGER
		[Column("PROGRESS_TIMESTAMP"),   Nullable] public DateTime? ProgressTimestamp   { get; set; } // TIMESTAMP
		[Column("PROGRESS_ELAPSEDTIME"), Nullable] public int?      ProgressElapsedtime { get; set; } // INTEGER
		[Column("PROGRESS_CURRENT"),     Nullable] public int?      ProgressCurrent     { get; set; } // INTEGER
		[Column("PROGRESS_MAX"),         Nullable] public int?      ProgressMax         { get; set; } // INTEGER
		[Column("PROGRESS_LEVEL"),       Nullable] public string?   ProgressLevel       { get; set; } // VARCHAR(16)
		[Column("PROGRESS_MESSAGE"),     Nullable] public string?   ProgressMessage     { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_AFL", Name="FUNCTION_PROGRESS_IN_AFLPAL")]
	public partial class _SYS_AFL_FunctionProgressInAflpal
	{
		[Column("EXECUTION_ID"),         Nullable] public string?   ExecutionId         { get; set; } // VARCHAR(64)
		[Column("FUNCTION_NAME"),        Nullable] public string?   FunctionName        { get; set; } // NVARCHAR(256)
		[Column(),                       Nullable] public string?   HOST                { get; set; } // VARCHAR(64)
		[Column(),                       Nullable] public int?      PORT                { get; set; } // INTEGER
		[Column("CONNECTION_ID"),        Nullable] public int?      ConnectionId        { get; set; } // INTEGER
		[Column("PROGRESS_TIMESTAMP"),   Nullable] public DateTime? ProgressTimestamp   { get; set; } // TIMESTAMP
		[Column("PROGRESS_ELAPSEDTIME"), Nullable] public int?      ProgressElapsedtime { get; set; } // INTEGER
		[Column("PROGRESS_CURRENT"),     Nullable] public int?      ProgressCurrent     { get; set; } // INTEGER
		[Column("PROGRESS_MAX"),         Nullable] public int?      ProgressMax         { get; set; } // INTEGER
		[Column("PROGRESS_LEVEL"),       Nullable] public string?   ProgressLevel       { get; set; } // VARCHAR(16)
		[Column("PROGRESS_MESSAGE"),     Nullable] public string?   ProgressMessage     { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_AFL", Name="FUNCTION_PROGRESS_IN_LCAPPS_WRAPPER_AREA")]
	public partial class _SYS_AFL_FunctionProgressInLcappsWrapperArea
	{
		[Column("EXECUTION_ID"),         Nullable] public string?   ExecutionId         { get; set; } // VARCHAR(64)
		[Column("FUNCTION_NAME"),        Nullable] public string?   FunctionName        { get; set; } // NVARCHAR(256)
		[Column(),                       Nullable] public string?   HOST                { get; set; } // VARCHAR(64)
		[Column(),                       Nullable] public int?      PORT                { get; set; } // INTEGER
		[Column("CONNECTION_ID"),        Nullable] public int?      ConnectionId        { get; set; } // INTEGER
		[Column("PROGRESS_TIMESTAMP"),   Nullable] public DateTime? ProgressTimestamp   { get; set; } // TIMESTAMP
		[Column("PROGRESS_ELAPSEDTIME"), Nullable] public int?      ProgressElapsedtime { get; set; } // INTEGER
		[Column("PROGRESS_CURRENT"),     Nullable] public int?      ProgressCurrent     { get; set; } // INTEGER
		[Column("PROGRESS_MAX"),         Nullable] public int?      ProgressMax         { get; set; } // INTEGER
		[Column("PROGRESS_LEVEL"),       Nullable] public string?   ProgressLevel       { get; set; } // VARCHAR(16)
		[Column("PROGRESS_MESSAGE"),     Nullable] public string?   ProgressMessage     { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_AFL", Name="FUNCTION_PROGRESS_IN_OFL_AREA")]
	public partial class _SYS_AFL_FunctionProgressInOflArea
	{
		[Column("EXECUTION_ID"),         Nullable] public string?   ExecutionId         { get; set; } // VARCHAR(64)
		[Column("FUNCTION_NAME"),        Nullable] public string?   FunctionName        { get; set; } // NVARCHAR(256)
		[Column(),                       Nullable] public string?   HOST                { get; set; } // VARCHAR(64)
		[Column(),                       Nullable] public int?      PORT                { get; set; } // INTEGER
		[Column("CONNECTION_ID"),        Nullable] public int?      ConnectionId        { get; set; } // INTEGER
		[Column("PROGRESS_TIMESTAMP"),   Nullable] public DateTime? ProgressTimestamp   { get; set; } // TIMESTAMP
		[Column("PROGRESS_ELAPSEDTIME"), Nullable] public int?      ProgressElapsedtime { get; set; } // INTEGER
		[Column("PROGRESS_CURRENT"),     Nullable] public int?      ProgressCurrent     { get; set; } // INTEGER
		[Column("PROGRESS_MAX"),         Nullable] public int?      ProgressMax         { get; set; } // INTEGER
		[Column("PROGRESS_LEVEL"),       Nullable] public string?   ProgressLevel       { get; set; } // VARCHAR(16)
		[Column("PROGRESS_MESSAGE"),     Nullable] public string?   ProgressMessage     { get; set; } // NVARCHAR(256)
	}

	/// <summary>
	/// This table contains one row per info code generated by the geocode transformation process
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="GEOCODE_INFO_CODES", IsView=true)]
	public partial class _SYS_TASK_GeocodeInfoCode
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),       NotNull    ] public string  SchemaName      { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),         NotNull    ] public string  TaskName        { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"), NotNull    ] public long    TaskExecutionId { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),       Nullable] public string? OperationName   { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("TABLE_NAME"),           Nullable] public string? TableName       { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The unique ID of the row processed for this execution of the task plan
		/// </summary>
		[Column("ROW_ID"),            NotNull    ] public long    RowId           { get; set; } // BIGINT
		/// <summary>
		/// The source where the data was produced
		/// </summary>
		[Column("DATA_SOURCE"),          Nullable] public string? DataSource      { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The informational code generated by the geocode transformation operation
		/// </summary>
		[Column("INFO_CODE"),            Nullable] public string? InfoCode        { get; set; } // NVARCHAR(10)
	}

	[Table(Schema="_SYS_TASK", Name="GEOCODE_INFO_CODES_")]
	public partial class _SYS_TASK_GeocodeInfoCodes
	{
		[Column("TASK_EXECUTION_ID"), PrimaryKey(1), NotNull] public long    TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      PrimaryKey(2), NotNull] public int     OperationId     { get; set; } // INTEGER
		[Column("TABLE_ID"),          PrimaryKey(3), NotNull] public int     TableId         { get; set; } // INTEGER
		[Column("ROW_ID"),            PrimaryKey(4), NotNull] public long    RowId           { get; set; } // BIGINT
		[Column("DATA_SOURCE"),          Nullable           ] public string? DataSource      { get; set; } // NVARCHAR(256)
		[Column("INFO_CODE"),            Nullable           ] public string? InfoCode        { get; set; } // NVARCHAR(10)
	}

	/// <summary>
	/// This table contains a summary of Geocode statistics
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="GEOCODE_STATISTICS", IsView=true)]
	public partial class _SYS_TASK_GeocodeStatistic
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),       NotNull    ] public string  SchemaName      { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),         NotNull    ] public string  TaskName        { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"), NotNull    ] public long    TaskExecutionId { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),       Nullable] public string? OperationName   { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The total number of records processed
		/// </summary>
		[Column("NUM_RECORDS"),          Nullable] public long?   NumRecords      { get; set; } // BIGINT
		/// <summary>
		/// The number of assigned records processed
		/// </summary>
		[Column("NUM_ASSIGNED"),         Nullable] public long?   NumAssigned     { get; set; } // BIGINT
		/// <summary>
		/// The number of unassigned records processed
		/// </summary>
		[Column("NUM_UNASSIGNED"),       Nullable] public long?   NumUnassigned   { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_TASK", Name="GEOCODE_STATISTICS_")]
	public partial class _SYS_TASK_GeocodeStatistics
	{
		[Column("TASK_EXECUTION_ID"), Nullable] public long? TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      Nullable] public int?  OperationId     { get; set; } // INTEGER
		[Column("NUM_RECORDS"),       Nullable] public long? NumRecords      { get; set; } // BIGINT
		[Column("NUM_ASSIGNED"),      Nullable] public long? NumAssigned     { get; set; } // BIGINT
	}

	[Table(Schema="TESTHANAODBC", Name="GrandChild")]
	public partial class TESTHANAODBC_GrandChild
	{
		[Column, Nullable] public int? ParentID     { get; set; } // INTEGER
		[Column, Nullable] public int? ChildID      { get; set; } // INTEGER
		[Column, Nullable] public int? GrandChildID { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANA", Name="GrandChild")]
	public partial class GrandChild
	{
		[Column, Nullable] public int? ParentID     { get; set; } // INTEGER
		[Column, Nullable] public int? ChildID      { get; set; } // INTEGER
		[Column, Nullable] public int? GrandChildID { get; set; } // INTEGER
	}

	/// <summary>
	/// General HANA feature usage information
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="HANA_USAGE_ON_DEMAND", IsView=true)]
	public partial class _SYS_TELEMETRY_HanaUsageOnDemand
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"), NotNull    ] public DateTime SnapshotId { get; set; } // TIMESTAMP
		/// <summary>
		/// HANA feature name
		/// </summary>
		[Column("0SM_FEAT"),       Nullable] public string?  _0smFeat   { get; set; } // NVARCHAR(256)
		/// <summary>
		/// HANA feature type
		/// </summary>
		[Column("0SM_TYPE"),    NotNull    ] public string   _0smType   { get; set; } = null!; // VARCHAR(11)
		/// <summary>
		/// HANA feature subtype
		/// </summary>
		[Column("0SM_SUBT"),    NotNull    ] public string   _0smSubt   { get; set; } = null!; // VARCHAR(18)
		/// <summary>
		/// HANA feature usage
		/// </summary>
		[Column("0SM_TRAF"),       Nullable] public long?    _0smTraf   { get; set; } // BIGINT
		/// <summary>
		/// HANA feature subtype instance number
		/// </summary>
		[Column("0SM_NORM"),    NotNull    ] public long     _0smNorm   { get; set; } // BIGINT
	}

	/// <summary>
	/// Memory allocator statistics
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="HEAP_MEMORY", IsView=true)]
	public partial class _SYS_TELEMETRY_HeapMemory
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"),           NotNull    ] public DateTime SnapshotId         { get; set; } // TIMESTAMP
		/// <summary>
		/// Internal port
		/// </summary>
		[Column(),                        NotNull    ] public int      PORT               { get; set; } // INTEGER
		/// <summary>
		/// Persistence Volume ID
		/// </summary>
		[Column("VOLUME_ID"),             NotNull    ] public int      VolumeId           { get; set; } // INTEGER
		/// <summary>
		/// Allocator name
		/// </summary>
		[Column(),                        NotNull    ] public string   CATEGORY           { get; set; } = null!; // VARCHAR(128)
		/// <summary>
		/// Current size of this allocator
		/// </summary>
		[Column("EXCLUSIVE_SIZE_IN_USE"),    Nullable] public long?    ExclusiveSizeInUse { get; set; } // BIGINT
	}

	/// <summary>
	/// Host information such as machine, OS configuration
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="HOST_INFORMATION", IsView=true)]
	public partial class _SYS_TELEMETRY_HostInformation
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"), NotNull    ] public DateTime SnapshotId { get; set; } // TIMESTAMP
		/// <summary>
		/// Key
		/// </summary>
		[Column(),              NotNull    ] public string   KEY        { get; set; } = null!; // VARCHAR(32)
		/// <summary>
		/// Value
		/// </summary>
		[Column(),                 Nullable] public string?  VALUE      { get; set; } // VARCHAR(256)
	}

	[Table(Schema="_SYS_XS", Name="HTTP_DESTINATIONS")]
	public partial class _SYS_XS_HttpDestination
	{
		[Column("PACKAGE_ID"),               PrimaryKey(1), NotNull] public string  PackageId             { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),              PrimaryKey(2), NotNull] public string  ObjectName            { get; set; } = null!; // NVARCHAR(256)
		[Column(),                              Nullable           ] public string? DESCRIPTION           { get; set; } // NVARCHAR(512)
		[Column(),                                          NotNull] public string  HOST                  { get; set; } = null!; // NVARCHAR(2048)
		[Column(),                                          NotNull] public int     PORT                  { get; set; } // INTEGER
		[Column("PATH_PREFIX"),                 Nullable           ] public string? PathPrefix            { get; set; } // NVARCHAR(2048)
		[Column("PROXY_TYPE"),                              NotNull] public byte    ProxyType             { get; set; } // TINYINT
		[Column("PROXY_HOST"),                  Nullable           ] public string? ProxyHost             { get; set; } // NVARCHAR(2048)
		[Column("PROXY_PORT"),                              NotNull] public int     ProxyPort             { get; set; } // INTEGER
		[Column("AUTHENTICATION_TYPE"),                     NotNull] public byte    AuthenticationType    { get; set; } // TINYINT
		[Column("USE_SSL"),                                 NotNull] public byte    UseSsl                { get; set; } // TINYINT
		/// <summary>
		/// Timeout in ms
		/// </summary>
		[Column(),                                          NotNull] public int     TIMEOUT               { get; set; } // INTEGER
		[Column("REMOTE_SID"),                  Nullable           ] public string? RemoteSid             { get; set; } // NVARCHAR(12)
		[Column("REMOTE_CLIENT"),               Nullable           ] public string? RemoteClient          { get; set; } // NVARCHAR(12)
		[Column("SAML_PROVIDER"),               Nullable           ] public string? SamlProvider          { get; set; } // NVARCHAR(1024)
		[Column("SAML_NAMEID"),                             NotNull] public int     SamlNameid            { get; set; } // INTEGER
		[Column("SAML_ACS"),                    Nullable           ] public string? SamlAcs               { get; set; } // NVARCHAR(2048)
		[Column("SAML_ATTRIBUTES"),             Nullable           ] public string? SamlAttributes        { get; set; } // NVARCHAR(2048)
		[Column("OAUTH_APP_CONFIG_PACKAGE"),    Nullable           ] public string? OauthAppConfigPackage { get; set; } // NVARCHAR(256)
		[Column("OAUTH_APP_CONFIG"),            Nullable           ] public string? OauthAppConfig        { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_RT", Name="_INA_ACTIVE_OBJECT")]
	public partial class _SYS_RT_InaActiveObject
	{
		[Column("PACKAGE_ID"),            PrimaryKey(1), NotNull] public string PackageId           { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),           PrimaryKey(2), NotNull] public string ObjectName          { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),         PrimaryKey(3), NotNull] public string ObjectSuffix        { get; set; } = null!; // NVARCHAR(255)
		[Column("IS_SEARCH_SUPPORTED"),      Nullable           ] public char?  IsSearchSupported   { get; set; } // VARCHAR(1)
		[Column("SCHEMA_VERSION_NUMBER"),    Nullable           ] public int?   SchemaVersionNumber { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_RT", Name="_INA_ACTIVE_OBJECT_PROPERTY")]
	public partial class _SYS_RT_InaActiveObjectProperty
	{
		[Column("PACKAGE_ID"),    PrimaryKey(1), NotNull] public string PackageId    { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),   PrimaryKey(2), NotNull] public string ObjectName   { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"), PrimaryKey(3), NotNull] public string ObjectSuffix { get; set; } = null!; // NVARCHAR(255)
		[Column(),                PrimaryKey(4), NotNull] public string KEY          { get; set; } = null!; // NVARCHAR(256)
		[Column(),                PrimaryKey(5), NotNull] public string VALUE        { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="_SYS_RT", Name="_INA_ACTIVE_PERSPECTIVE_V", IsView=true)]
	public partial class _SYS_RT_InaActivePerspectiveV
	{
		[Column("PACKAGE_ID"),            Nullable] public string?   PackageId           { get; set; } // NVARCHAR(256)
		[Column("PERSPECTIVE_ID"),        Nullable] public string?   PerspectiveId       { get; set; } // NVARCHAR(256)
		[Column("SCHEMA_VERSION_NUMBER"), Nullable] public int?      SchemaVersionNumber { get; set; } // INTEGER
		[Column("IS_SEARCH_SUPPORTED"),   Nullable] public char?     IsSearchSupported   { get; set; } // VARCHAR(1)
		[Column("PROPERTY_KEY"),          Nullable] public string?   PropertyKey         { get; set; } // NVARCHAR(256)
		[Column("PROPERTY_VALUE"),        Nullable] public string?   PropertyValue       { get; set; } // NVARCHAR(256)
		[Column(),                        Nullable] public DateTime? TIMESTAMP           { get; set; } // TIMESTAMP
		[Column("USER_ID"),               Nullable] public string?   UserId              { get; set; } // NVARCHAR(256)
		[Column("CONTENT_TEXT_ID"),       Nullable] public string?   ContentTextId       { get; set; } // NVARCHAR(256)
		[Column("CONTENT_TEXT_TYPE"),     Nullable] public string?   ContentTextType     { get; set; } // NVARCHAR(32)
		[Column("CONTENT_TEXT_LANGUAGE"), Nullable] public string?   ContentTextLanguage { get; set; } // NVARCHAR(256)
		[Column("CONTENT_TEXT"),          Nullable] public string?   ContentText         { get; set; } // NVARCHAR(4000)
		[Column("DATASOURCE_OBJECT_ID"),  Nullable] public string?   DatasourceObjectId  { get; set; } // NVARCHAR(256)
		[Column("DATASOURCE_PACKAGE_ID"), Nullable] public string?   DatasourcePackageId { get; set; } // NVARCHAR(256)
		[Column("DATASOURCE_SCHEMA_ID"),  Nullable] public string?   DatasourceSchemaId  { get; set; } // NVARCHAR(256)
		[Column("TITLE_TEXT_LANGUAGE"),   Nullable] public string?   TitleTextLanguage   { get; set; } // NVARCHAR(256)
		[Column("TITLE_TEXT"),            Nullable] public string?   TitleText           { get; set; } // NVARCHAR(4000)
		[Column("SUMMARY_TEXT_LANGUAGE"), Nullable] public string?   SummaryTextLanguage { get; set; } // NVARCHAR(256)
		[Column("SUMMARY_TEXT"),          Nullable] public string?   SummaryText         { get; set; } // NVARCHAR(4000)
	}

	[Table(Schema="TESTHANAODBC", Name="IndexTable")]
	public partial class TESTHANAODBC_IndexTable
	{
		[PrimaryKey(1), NotNull] public int PKField1    { get; set; } // INTEGER
		[PrimaryKey(2), NotNull] public int PKField2    { get; set; } // INTEGER
		[Column,        NotNull] public int UniqueField { get; set; } // INTEGER
		[Column,        NotNull] public int IndexField  { get; set; } // INTEGER

		#region Associations

		/// <summary>
		/// FK_Patient2_IndexTable_BackReference
		/// </summary>
		[Association(ThisKey="PKField1, PKField2", OtherKey="PKField1, PKField2", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public TESTHANAODBC_IndexTable2? Patient { get; set; }

		#endregion
	}

	[Table(Schema="TESTHANA", Name="IndexTable")]
	public partial class IndexTable
	{
		[PrimaryKey(1), NotNull] public int PKField1    { get; set; } // INTEGER
		[PrimaryKey(2), NotNull] public int PKField2    { get; set; } // INTEGER
		[Column,        NotNull] public int UniqueField { get; set; } // INTEGER
		[Column,        NotNull] public int IndexField  { get; set; } // INTEGER

		#region Associations

		/// <summary>
		/// FK_Patient2_IndexTable_BackReference
		/// </summary>
		[Association(ThisKey="PKField1, PKField2", OtherKey="PKField1, PKField2", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public IndexTable2? Patient { get; set; }

		#endregion
	}

	[Table(Schema="TESTHANAODBC", Name="IndexTable2")]
	public partial class TESTHANAODBC_IndexTable2
	{
		[PrimaryKey(1), NotNull] public int PKField1 { get; set; } // INTEGER
		[PrimaryKey(2), NotNull] public int PKField2 { get; set; } // INTEGER

		#region Associations

		/// <summary>
		/// FK_Patient2_IndexTable
		/// </summary>
		[Association(ThisKey="PKField1, PKField2", OtherKey="PKField1, PKField2", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK_Patient2_IndexTable", BackReferenceName="Patient")]
		public TESTHANAODBC_IndexTable Patient2IndexTable { get; set; } = null!;

		#endregion
	}

	[Table(Schema="TESTHANA", Name="IndexTable2")]
	public partial class IndexTable2
	{
		[PrimaryKey(1), NotNull] public int PKField1 { get; set; } // INTEGER
		[PrimaryKey(2), NotNull] public int PKField2 { get; set; } // INTEGER

		#region Associations

		/// <summary>
		/// FK_Patient2_IndexTable
		/// </summary>
		[Association(ThisKey="PKField1, PKField2", OtherKey="PKField1, PKField2", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK_Patient2_IndexTable", BackReferenceName="Patient")]
		public IndexTable Patient2IndexTable { get; set; } = null!;

		#endregion
	}

	[Table(Schema="TESTHANAODBC", Name="InheritanceChild")]
	public partial class TESTHANAODBC_InheritanceChild
	{
		[PrimaryKey, NotNull    ] public int     InheritanceChildId  { get; set; } // INTEGER
		[Column,     NotNull    ] public int     InheritanceParentId { get; set; } // INTEGER
		[Column,        Nullable] public int?    TypeDiscriminator   { get; set; } // INTEGER
		[Column,        Nullable] public string? Name                { get; set; } // NVARCHAR(50)
	}

	[Table(Schema="TESTHANA", Name="InheritanceChild")]
	public partial class InheritanceChild
	{
		[PrimaryKey, NotNull    ] public int     InheritanceChildId  { get; set; } // INTEGER
		[Column,     NotNull    ] public int     InheritanceParentId { get; set; } // INTEGER
		[Column,        Nullable] public int?    TypeDiscriminator   { get; set; } // INTEGER
		[Column,        Nullable] public string? Name                { get; set; } // NVARCHAR(50)
	}

	[Table(Schema="TESTHANAODBC", Name="InheritanceParent")]
	public partial class TESTHANAODBC_InheritanceParent
	{
		[PrimaryKey, NotNull    ] public int     InheritanceParentId { get; set; } // INTEGER
		[Column,        Nullable] public int?    TypeDiscriminator   { get; set; } // INTEGER
		[Column,        Nullable] public string? Name                { get; set; } // NVARCHAR(50)
	}

	[Table(Schema="TESTHANA", Name="InheritanceParent")]
	public partial class InheritanceParent
	{
		[PrimaryKey, NotNull    ] public int     InheritanceParentId { get; set; } // INTEGER
		[Column,        Nullable] public int?    TypeDiscriminator   { get; set; } // INTEGER
		[Column,        Nullable] public string? Name                { get; set; } // NVARCHAR(50)
	}

	/// <summary>
	/// Configuration information from inifiles
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="INIFILE_CONTENTS", IsView=true)]
	public partial class _SYS_TELEMETRY_InifileContent
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"), NotNull    ] public DateTime SnapshotId { get; set; } // TIMESTAMP
		/// <summary>
		/// Configuration file name
		/// </summary>
		[Column("FILE_NAME"),   NotNull    ] public string   FileName   { get; set; } = null!; // VARCHAR(256)
		/// <summary>
		/// Configuration layer: DEFAULT, SYSTEM, HOST, DATABASE
		/// </summary>
		[Column("LAYER_NAME"),  NotNull    ] public string   LayerName  { get; set; } = null!; // VARCHAR(16)
		/// <summary>
		/// Configuration section name
		/// </summary>
		[Column(),              NotNull    ] public string   SECTION    { get; set; } = null!; // VARCHAR(128)
		/// <summary>
		/// Configuration key name
		/// </summary>
		[Column(),              NotNull    ] public string   KEY        { get; set; } = null!; // VARCHAR(128)
		/// <summary>
		/// Configuration value
		/// </summary>
		[Column(),                 Nullable] public string?  VALUE      { get; set; } // VARCHAR(5000)
	}

	[Table(Schema="_SYS_XS", Name="JOBS")]
	public partial class _SYS_XS_JOB
	{
		[Column(),                    PrimaryKey,  NotNull] public string    NAME             { get; set; } = null!; // NVARCHAR(512)
		[Column(),                                 NotNull] public string    DESCRIPTION      { get; set; } = null!; // NVARCHAR(512)
		[Column(),                                 NotNull] public string    ACTION           { get; set; } = null!; // NVARCHAR(512)
		[Column(),                       Nullable         ] public string?   USER             { get; set; } // NVARCHAR(256)
		[Column(),                       Nullable         ] public string?   LOCALE           { get; set; } // VARCHAR(64)
		[Column(),                                 NotNull] public string    STATUS           { get; set; } = null!; // VARCHAR(16)
		[Column("START_TIME"),           Nullable         ] public DateTime? StartTime        { get; set; } // TIMESTAMP
		[Column("END_TIME"),             Nullable         ] public DateTime? EndTime          { get; set; } // TIMESTAMP
		[Column("SESSION_TIMEOUT"),      Nullable         ] public int?      SessionTimeout   { get; set; } // INTEGER
		[Column("SIGNATURE_VERSION"),    Nullable         ] public int?      SignatureVersion { get; set; } // INTEGER
		[Column("ACTIVATED_BY"),         Nullable         ] public string?   ActivatedBy      { get; set; } // NVARCHAR(256)
		[Column("ACTIVATED_AT"),         Nullable         ] public DateTime? ActivatedAt      { get; set; } // TIMESTAMP
		[Column("CONFIGURED_BY"),        Nullable         ] public string?   ConfiguredBy     { get; set; } // NVARCHAR(256)
		[Column("CONFIGURED_AT"),        Nullable         ] public DateTime? ConfiguredAt     { get; set; } // TIMESTAMP
		[Column("SCHEMA_NAME"),          Nullable         ] public string?   SchemaName       { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_XS", Name="JOB_LOG")]
	public partial class _SYS_XS_JobLog
	{
		[Column(),                PrimaryKey(1), NotNull] public string    NAME         { get; set; } = null!; // NVARCHAR(512)
		[Column(),                PrimaryKey(2), NotNull] public long      ID           { get; set; } // BIGINT
		[Column("PLANNED_TIME"),  PrimaryKey(3), NotNull] public DateTime  PlannedTime  { get; set; } // TIMESTAMP
		[Column(),                               NotNull] public string    STATUS       { get; set; } = null!; // VARCHAR(16)
		[Column("ERROR_MESSAGE"),    Nullable           ] public string?   ErrorMessage { get; set; } // NVARCHAR(2048)
		[Column("STARTED_AT"),       Nullable           ] public DateTime? StartedAt    { get; set; } // TIMESTAMP
		[Column("FINISHED_AT"),      Nullable           ] public DateTime? FinishedAt   { get; set; } // TIMESTAMP
		[Column(),                   Nullable           ] public string?   HOST         { get; set; } // NVARCHAR(256)
		[Column(),                   Nullable           ] public string?   PORT         { get; set; } // VARCHAR(5)
		[Column(),                   Nullable           ] public string?   ACTION       { get; set; } // NVARCHAR(512)
		[Column(),                   Nullable           ] public string?   USER         { get; set; } // NVARCHAR(256)
		[Column(),                   Nullable           ] public string?   LOCALE       { get; set; } // VARCHAR(64)
		[Column("THREAD_ID"),        Nullable           ] public long?     ThreadId     { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_XS", Name="JOB_SCHEDULES")]
	public partial class _SYS_XS_JobSchedule
	{
		[Column(),             PrimaryKey,  NotNull] public long      ID          { get; set; } // BIGINT
		[Column("JOB_NAME"),                NotNull] public string    JobName     { get; set; } = null!; // NVARCHAR(512)
		[Column(),                          NotNull] public string    XSCRON      { get; set; } = null!; // NVARCHAR(256)
		[Column(),                Nullable         ] public string?   DESCRIPTION { get; set; } // NVARCHAR(512)
		[Column(),                Nullable         ] public string?   PARAMETER   { get; set; } // NCLOB
		[Column(),                Nullable         ] public string?   ORIGIN      { get; set; } // VARCHAR(11)
		[Column(),                          NotNull] public string    STATUS      { get; set; } = null!; // VARCHAR(16)
		[Column("CHANGED_BY"),    Nullable         ] public string?   ChangedBy   { get; set; } // NVARCHAR(256)
		[Column("CHANGED_AT"),    Nullable         ] public DateTime? ChangedAt   { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_XS", Name="JS_RECOMPILE_ISSUES")]
	public partial class _SYS_XS_JsRecompileIssue
	{
		[Column("PACKAGE_ID"),    PrimaryKey(1), NotNull] public string   PackageId    { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),   PrimaryKey(2), NotNull] public string   ObjectName   { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"), PrimaryKey(3), NotNull] public string   ObjectSuffix { get; set; } = null!; // NVARCHAR(255)
		[Column(),                PrimaryKey(4), NotNull] public DateTime STAMP        { get; set; } // TIMESTAMP
		[Column(),                               NotNull] public string   MESSAGE      { get; set; } = null!; // NVARCHAR(2048)
	}

	[Table(Schema="_SYS_EPM", Name="LIBRARY_VERSION")]
	public partial class _SYS_EPM_LibraryVersion
	{
		[Column("LIBRARY_NAME"),  PrimaryKey,  NotNull] public string  LibraryName  { get; set; } = null!; // VARCHAR(32)
		[Column(),                   Nullable         ] public string? VERSION      { get; set; } // VARCHAR(32)
		[Column("MAJOR_VERSION"),    Nullable         ] public int?    MajorVersion { get; set; } // INTEGER
		[Column("MINOR_VERSION"),    Nullable         ] public int?    MinorVersion { get; set; } // INTEGER
		[Column(),                   Nullable         ] public string? GITHASH      { get; set; } // VARCHAR(64)
	}

	/// <summary>
	/// Information on all licenses (if any) so far installed on this system
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="LICENSES", IsView=true)]
	public partial class _SYS_TELEMETRY_License
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"),             NotNull    ] public DateTime  SnapshotId            { get; set; } // TIMESTAMP
		/// <summary>
		/// Name of the licensed software product, e.g. SAP HANA
		/// </summary>
		[Column("PRODUCT_NAME"),               Nullable] public string?   ProductName           { get; set; } // VARCHAR(256)
		/// <summary>
		/// Allowed product usage as specified by the license (e.g. main memory)
		/// </summary>
		[Column("PRODUCT_LIMIT"),              Nullable] public long?     ProductLimit          { get; set; } // BIGINT
		/// <summary>
		/// Date of the first installation of the license
		/// </summary>
		[Column("FIRST_INSTALLATION_TIME"),    Nullable] public DateTime? FirstInstallationTime { get; set; } // TIMESTAMP
		/// <summary>
		/// Start date of the validity period of the license
		/// </summary>
		[Column("START_DATE"),                 Nullable] public DateTime? StartDate             { get; set; } // TIMESTAMP
		/// <summary>
		/// Expiration date of the validity period of the license
		/// </summary>
		[Column("EXPIRATION_DATE"),            Nullable] public DateTime? ExpirationDate        { get; set; } // TIMESTAMP
		/// <summary>
		/// TRUE if the license is a permanent one, FALSE if the license is a temporary one
		/// </summary>
		[Column(),                             Nullable] public string?   PERMANENT             { get; set; } // VARCHAR(5)
		/// <summary>
		/// TRUE if the license is currently valid, otherwise FALSE
		/// </summary>
		[Column(),                             Nullable] public string?   VALID                 { get; set; } // VARCHAR(5)
		/// <summary>
		/// TRUE if the license has a product usage limit (license type is enforced), otherwise FALSE
		/// </summary>
		[Column(),                             Nullable] public string?   ENFORCED              { get; set; } // VARCHAR(5)
	}

	/// <summary>
	/// Information on the currently valid license (if any) installed on this system
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="LICENSE", IsView=true)]
	public partial class _SYS_TELEMETRY_LICENSE
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"),     NotNull    ] public DateTime  SnapshotId     { get; set; } // TIMESTAMP
		/// <summary>
		/// Name of the licensed software product, e.g. SAP HANA
		/// </summary>
		[Column("PRODUCT_NAME"),       Nullable] public string?   ProductName    { get; set; } // VARCHAR(256)
		/// <summary>
		/// Licensed amount of main memory as specified by the license
		/// </summary>
		[Column("PRODUCT_LIMIT"),      Nullable] public long?     ProductLimit   { get; set; } // BIGINT
		/// <summary>
		/// Peak used memory during last 13 months, measured periodically
		/// </summary>
		[Column("PRODUCT_USAGE"),      Nullable] public long?     ProductUsage   { get; set; } // BIGINT
		/// <summary>
		/// Start date of the validity period of the license
		/// </summary>
		[Column("START_DATE"),         Nullable] public DateTime? StartDate      { get; set; } // TIMESTAMP
		/// <summary>
		/// Expiration date of the validity period of the license
		/// </summary>
		[Column("EXPIRATION_DATE"),    Nullable] public DateTime? ExpirationDate { get; set; } // TIMESTAMP
		/// <summary>
		/// TRUE if the license is a permanent one, FALSE if the license is a temporary one
		/// </summary>
		[Column(),                     Nullable] public string?   PERMANENT      { get; set; } // VARCHAR(5)
		/// <summary>
		/// TRUE if the license is currently valid, otherwise FALSE
		/// </summary>
		[Column(),                     Nullable] public string?   VALID          { get; set; } // VARCHAR(5)
		/// <summary>
		/// TRUE if the license is a memory-enforced license, otherwise FALSE
		/// </summary>
		[Column(),                     Nullable] public string?   ENFORCED       { get; set; } // VARCHAR(5)
		/// <summary>
		/// TRUE if the system is locked down due to license status, otherwise FALSE
		/// </summary>
		[Column("LOCKED_DOWN"),        Nullable] public string?   LockedDown     { get; set; } // VARCHAR(5)
	}

	[Table(Schema="TESTHANAODBC", Name="LinqDataTypes")]
	public partial class TESTHANAODBC_LinqDataType
	{
		[Column, Nullable] public int?      ID             { get; set; } // INTEGER
		[Column, Nullable] public decimal?  MoneyValue     { get; set; } // DECIMAL(10, 4)
		[Column, Nullable] public DateTime? DateTimeValue  { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? DateTimeValue2 { get; set; } // TIMESTAMP
		[Column, Nullable] public byte?     BoolValue      { get; set; } // TINYINT
		[Column, Nullable] public string?   GuidValue      { get; set; } // VARCHAR(36)
		[Column, Nullable] public byte[]?   BinaryValue    { get; set; } // VARBINARY(5000)
		[Column, Nullable] public short?    SmallIntValue  { get; set; } // SMALLINT
		[Column, Nullable] public int?      IntValue       { get; set; } // INTEGER
		[Column, Nullable] public long?     BigIntValue    { get; set; } // BIGINT
		[Column, Nullable] public string?   StringValue    { get; set; } // NVARCHAR(50)
	}

	[Table(Schema="TESTHANA", Name="LinqDataTypes")]
	public partial class LinqDataType
	{
		[Column, Nullable] public int?      ID             { get; set; } // INTEGER
		[Column, Nullable] public decimal?  MoneyValue     { get; set; } // DECIMAL(10, 4)
		[Column, Nullable] public DateTime? DateTimeValue  { get; set; } // TIMESTAMP
		[Column, Nullable] public DateTime? DateTimeValue2 { get; set; } // TIMESTAMP
		[Column, Nullable] public byte?     BoolValue      { get; set; } // TINYINT
		[Column, Nullable] public string?   GuidValue      { get; set; } // VARCHAR(36)
		[Column, Nullable] public byte[]?   BinaryValue    { get; set; } // VARBINARY(5000)
		[Column, Nullable] public short?    SmallIntValue  { get; set; } // SMALLINT
		[Column, Nullable] public int?      IntValue       { get; set; } // INTEGER
		[Column, Nullable] public long?     BigIntValue    { get; set; } // BIGINT
		[Column, Nullable] public string?   StringValue    { get; set; } // NVARCHAR(50)
	}

	/// <summary>
	/// Log buffer statistics
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="LOG_BUFFERS", IsView=true)]
	public partial class _SYS_TELEMETRY_LogBuffer
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"),         NotNull    ] public DateTime SnapshotId        { get; set; } // TIMESTAMP
		/// <summary>
		/// Host name
		/// </summary>
		[Column(),                      NotNull    ] public string   HOST              { get; set; } = null!; // VARCHAR(64)
		/// <summary>
		/// Internal port
		/// </summary>
		[Column(),                      NotNull    ] public int      PORT              { get; set; } // INTEGER
		/// <summary>
		/// Persistence Volume ID
		/// </summary>
		[Column("VOLUME_ID"),           NotNull    ] public int      VolumeId          { get; set; } // INTEGER
		/// <summary>
		/// Log mode
		/// </summary>
		[Column("LOG_MODE"),            NotNull    ] public string   LogMode           { get; set; } = null!; // VARCHAR(16)
		/// <summary>
		/// Size of one log buffer in memory
		/// </summary>
		[Column("BUFFER_SIZE"),            Nullable] public long?    BufferSize        { get; set; } // BIGINT
		/// <summary>
		/// Count of log buffers in memory
		/// </summary>
		[Column("BUFFER_COUNT"),           Nullable] public long?    BufferCount       { get; set; } // BIGINT
		/// <summary>
		/// Maximum size of one log segment
		/// </summary>
		[Column("SEGMENT_SIZE"),           Nullable] public long?    SegmentSize       { get; set; } // BIGINT
		/// <summary>
		/// Log segment backup enabled: TRUE/FALSE (FALSE on log backup history broken)
		/// </summary>
		[Column("BACKUP_ENABLED"),         Nullable] public string?  BackupEnabled     { get; set; } // VARCHAR(5)
		/// <summary>
		/// Log segment backup timeout
		/// </summary>
		[Column("BACKUP_TIMEOUT"),         Nullable] public long?    BackupTimeout     { get; set; } // BIGINT
		/// <summary>
		/// Count of buffer switches without blocking on buffer semaphore
		/// </summary>
		[Column("SWITCH_NOWAIT_COUNT"),    Nullable] public long?    SwitchNowaitCount { get; set; } // BIGINT
		/// <summary>
		/// Count of buffer switches with blocking on buffer semaphore
		/// </summary>
		[Column("SWITCH_WAIT_COUNT"),      Nullable] public long?    SwitchWaitCount   { get; set; } // BIGINT
		/// <summary>
		/// Count of ignored still-open buffer switches (resolved races)
		/// </summary>
		[Column("SWITCH_OPEN_COUNT"),      Nullable] public long?    SwitchOpenCount   { get; set; } // BIGINT
	}

	/// <summary>
	/// Log segment statistics
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="LOG_SEGMENTS", IsView=true)]
	public partial class _SYS_TELEMETRY_LogSegment
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"),         NotNull    ] public DateTime  SnapshotId        { get; set; } // TIMESTAMP
		/// <summary>
		/// Host name
		/// </summary>
		[Column(),                      NotNull    ] public string    HOST              { get; set; } = null!; // VARCHAR(64)
		/// <summary>
		/// Internal port
		/// </summary>
		[Column(),                      NotNull    ] public int       PORT              { get; set; } // INTEGER
		/// <summary>
		/// Persistence Volume ID
		/// </summary>
		[Column("VOLUME_ID"),           NotNull    ] public int       VolumeId          { get; set; } // INTEGER
		/// <summary>
		/// Log partition ID
		/// </summary>
		[Column("PARTITION_ID"),        NotNull    ] public long      PartitionId       { get; set; } // BIGINT
		/// <summary>
		/// Log segment ID within partition
		/// </summary>
		[Column("SEGMENT_ID"),          NotNull    ] public long      SegmentId         { get; set; } // BIGINT
		/// <summary>
		/// Log segment file name
		/// </summary>
		[Column("FILE_NAME"),              Nullable] public string?   FileName          { get; set; } // VARCHAR(512)
		/// <summary>
		/// Start position of log segment in the file
		/// </summary>
		[Column("FILE_OFFSET"),            Nullable] public long?     FileOffset        { get; set; } // BIGINT
		/// <summary>
		/// Log segment state
		/// </summary>
		[Column(),                         Nullable] public string?   STATE             { get; set; } // VARCHAR(16)
		/// <summary>
		/// First position contained in this log segment
		/// </summary>
		[Column("MIN_POSITION"),           Nullable] public long?     MinPosition       { get; set; } // BIGINT
		/// <summary>
		/// Position behind the last log record in this log segment (closed log segments only)
		/// </summary>
		[Column("MAX_POSITION"),           Nullable] public long?     MaxPosition       { get; set; } // BIGINT
		/// <summary>
		/// Start position of the log hole before this log segment (equal to min position if no hole)
		/// </summary>
		[Column("HOLE_POSITION"),          Nullable] public long?     HolePosition      { get; set; } // BIGINT
		/// <summary>
		/// Used log segment size in bytes
		/// </summary>
		[Column("USED_SIZE"),              Nullable] public long?     UsedSize          { get; set; } // BIGINT
		/// <summary>
		/// Total log segment size in bytes
		/// </summary>
		[Column("TOTAL_SIZE"),             Nullable] public long?     TotalSize         { get; set; } // BIGINT
		/// <summary>
		/// Flag for log segment in backup: 'TRUE'/'FALSE'
		/// </summary>
		[Column("IN_BACKUP"),              Nullable] public string?   InBackup          { get; set; } // VARCHAR(5)
		/// <summary>
		/// Timestamp of the last commit in this log segment
		/// </summary>
		[Column("LAST_COMMIT_TIME"),       Nullable] public DateTime? LastCommitTime    { get; set; } // TIMESTAMP
		/// <summary>
		/// Hash of key used for log segment encryption
		/// </summary>
		[Column("ENCRYPTION_KEY_HASH"),    Nullable] public string?   EncryptionKeyHash { get; set; } // VARCHAR(64)
	}

	[Table(Schema="_SYS_TASK", Name="MATCH_GROUP_INFO_")]
	public partial class _SYS_TASK_MatchGroupInfo
	{
		[Column("TASK_EXECUTION_ID"), PrimaryKey(1), NotNull] public long  TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      PrimaryKey(2), NotNull] public int   OperationId     { get; set; } // INTEGER
		[Column("GROUP_ID"),          PrimaryKey(3), NotNull] public int   GroupId         { get; set; } // INTEGER
		[Column("GROUP_COUNT"),          Nullable           ] public int?  GroupCount      { get; set; } // INTEGER
		[Column("SOURCE_COUNT"),         Nullable           ] public int?  SourceCount     { get; set; } // INTEGER
		[Column("REVIEW_GROUP"),         Nullable           ] public char? ReviewGroup     { get; set; } // NVARCHAR(1)
		[Column("CONFLICT_GROUP"),       Nullable           ] public char? ConflictGroup   { get; set; } // NVARCHAR(1)
	}

	/// <summary>
	/// This table contains one row for each match group
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="MATCH_GROUP_INFO", IsView=true)]
	public partial class _SYS_TASK_MatchGroupInfo0
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),       NotNull    ] public string  SchemaName      { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),         NotNull    ] public string  TaskName        { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"), NotNull    ] public long    TaskExecutionId { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),       Nullable] public string? OperationName   { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The group identification number
		/// </summary>
		[Column("GROUP_ID"),          NotNull    ] public int     GroupId         { get; set; } // INTEGER
		/// <summary>
		/// The number of records in the match group
		/// </summary>
		[Column("GROUP_COUNT"),          Nullable] public int?    GroupCount      { get; set; } // INTEGER
		/// <summary>
		/// The number of sources represented in the match group
		/// </summary>
		[Column("SOURCE_COUNT"),         Nullable] public int?    SourceCount     { get; set; } // INTEGER
		/// <summary>
		/// Contains whether the group is flagged for review
		/// </summary>
		[Column("REVIEW_GROUP"),         Nullable] public char?   ReviewGroup     { get; set; } // NVARCHAR(1)
		/// <summary>
		/// Contains whether the group is flagged for conflict
		/// </summary>
		[Column("CONFLICT_GROUP"),       Nullable] public char?   ConflictGroup   { get; set; } // NVARCHAR(1)
	}

	[Table(Schema="_SYS_TASK", Name="MATCH_POLICIES_")]
	public partial class _SYS_TASK_MatchPolicies
	{
		[Column("TASK_EXECUTION_ID"), PrimaryKey(1), NotNull] public long    TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      PrimaryKey(2), NotNull] public int     OperationId     { get; set; } // INTEGER
		[Column("POLICY_ID"),         PrimaryKey(3), NotNull] public int     PolicyId        { get; set; } // INTEGER
		[Column("POLICY_NAME"),          Nullable           ] public string? PolicyName      { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_TASK", Name="MATCH_RECORD_INFO_")]
	public partial class _SYS_TASK_MatchRecordInfo
	{
		[Column("TASK_EXECUTION_ID"), PrimaryKey(1), NotNull] public long TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      PrimaryKey(2), NotNull] public int  OperationId     { get; set; } // INTEGER
		[Column("TABLE_ID"),          PrimaryKey(3), NotNull] public int  TableId         { get; set; } // INTEGER
		[Column("ROW_ID"),            PrimaryKey(4), NotNull] public long RowId           { get; set; } // BIGINT
		[Column("GROUP_ID"),             Nullable           ] public int? GroupId         { get; set; } // INTEGER
	}

	/// <summary>
	/// This table contains one row for each matching record per level
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="MATCH_RECORD_INFO", IsView=true)]
	public partial class _SYS_TASK_MatchRecordInfo0
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),       NotNull    ] public string  SchemaName      { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),         NotNull    ] public string  TaskName        { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"), NotNull    ] public long    TaskExecutionId { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),       Nullable] public string? OperationName   { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("TABLE_NAME"),           Nullable] public string? TableName       { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The unique ID of the row processed for this execution of the task plan
		/// </summary>
		[Column("ROW_ID"),            NotNull    ] public long    RowId           { get; set; } // BIGINT
		/// <summary>
		/// The group identification number
		/// </summary>
		[Column("GROUP_ID"),             Nullable] public int?    GroupId         { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_TASK", Name="MATCH_RULES_")]
	public partial class _SYS_TASK_MatchRules
	{
		[Column("TASK_EXECUTION_ID"), PrimaryKey(1), NotNull] public long    TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      PrimaryKey(2), NotNull] public int     OperationId     { get; set; } // INTEGER
		[Column("RULE_ID"),           PrimaryKey(3), NotNull] public string  RuleId          { get; set; } = null!; // NVARCHAR(20)
		[Column("RULE_NAME"),            Nullable           ] public string? RuleName        { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_TASK", Name="MATCH_SOURCE_INFO_")]
	public partial class _SYS_TASK_MatchSourceInfo
	{
		[Column("TASK_EXECUTION_ID"), PrimaryKey(1), NotNull] public long    TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      PrimaryKey(2), NotNull] public int     OperationId     { get; set; } // INTEGER
		[Column("SOURCE_ID"),         PrimaryKey(3), NotNull] public int     SourceId        { get; set; } // INTEGER
		[Column("SOURCE_NAME"),          Nullable           ] public string? SourceName      { get; set; } // NVARCHAR(256)
	}

	/// <summary>
	/// This table contains counts of matches within and between data sources
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="MATCH_SOURCE_STATISTICS", IsView=true)]
	public partial class _SYS_TASK_MatchSourceStatistic
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),         NotNull    ] public string  SchemaName        { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),           NotNull    ] public string  TaskName          { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),   NotNull    ] public long    TaskExecutionId   { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),         Nullable] public string? OperationName     { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The data source name
		/// </summary>
		[Column("SOURCE_NAME"),            Nullable] public string? SourceName        { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The related data source name
		/// </summary>
		[Column("RELATED_SOURCE_NAME"),    Nullable] public string? RelatedSourceName { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The number of comparisons resulting in a match decision between records in each SOURCE_NAME / RELATED_SOURCE_NAME pair
		/// </summary>
		[Column("NUM_MATCH_DECISIONS"),    Nullable] public int?    NumMatchDecisions { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_TASK", Name="MATCH_SOURCE_STATISTICS_")]
	public partial class _SYS_TASK_MatchSourceStatistics
	{
		[Column("TASK_EXECUTION_ID"),   PrimaryKey(1), NotNull] public long   TaskExecutionId   { get; set; } // BIGINT
		[Column("OPERATION_ID"),        PrimaryKey(2), NotNull] public int    OperationId       { get; set; } // INTEGER
		[Column("SOURCE_ID"),           PrimaryKey(3), NotNull] public string SourceId          { get; set; } = null!; // NVARCHAR(12)
		[Column("RELATED_SOURCE_ID"),   PrimaryKey(4), NotNull] public string RelatedSourceId   { get; set; } = null!; // NVARCHAR(12)
		[Column("NUM_MATCH_DECISIONS"),    Nullable           ] public int?   NumMatchDecisions { get; set; } // INTEGER
	}

	/// <summary>
	/// This table contains statistics regarding the run of the transformation operation
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="MATCH_STATISTICS", IsView=true)]
	public partial class _SYS_TASK_MatchStatistic
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),               NotNull    ] public string  SchemaName              { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),                 NotNull    ] public string  TaskName                { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),         NotNull    ] public long    TaskExecutionId         { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),               Nullable] public string? OperationName           { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Total number of records in the input data sources
		/// </summary>
		[Column("NUM_RECORDS"),                  Nullable] public long?   NumRecords              { get; set; } // BIGINT
		/// <summary>
		/// Number of records selected for the matching process
		/// </summary>
		[Column("NUM_SELECTED_RECORDS"),         Nullable] public long?   NumSelectedRecords      { get; set; } // BIGINT
		/// <summary>
		/// Number of records that reside in match groups
		/// </summary>
		[Column("NUM_MATCH_RECORDS"),            Nullable] public long?   NumMatchRecords         { get; set; } // BIGINT
		/// <summary>
		/// Number of non-matching records that do not reside in match groups
		/// </summary>
		[Column("NUM_NON_MATCH_RECORDS"),        Nullable] public long?   NumNonMatchRecords      { get; set; } // BIGINT
		/// <summary>
		/// Number of match groups identified
		/// </summary>
		[Column("NUM_MATCH_GROUPS"),             Nullable] public long?   NumMatchGroups          { get; set; } // BIGINT
		/// <summary>
		/// Number of  match groups flagged for review
		/// </summary>
		[Column("NUM_REVIEW_GROUPS"),            Nullable] public long?   NumReviewGroups         { get; set; } // BIGINT
		/// <summary>
		/// Number of  match groups not flagged for review
		/// </summary>
		[Column("NUM_NON_REVIEW_GROUPS"),        Nullable] public long?   NumNonReviewGroups      { get; set; } // BIGINT
		/// <summary>
		/// Number of  match groups flagged with conflicts
		/// </summary>
		[Column("NUM_CONFLICT_GROUPS"),          Nullable] public long?   NumConflictGroups       { get; set; } // BIGINT
		/// <summary>
		///  Number of comparisons performed by the transformation operation
		/// </summary>
		[Column("NUM_COMPARISONS_PERFORMED"),    Nullable] public long?   NumComparisonsPerformed { get; set; } // BIGINT
		/// <summary>
		/// Number of comparisons resulting in a match decision
		/// </summary>
		[Column("NUM_MATCH_DECISIONS"),          Nullable] public long?   NumMatchDecisions       { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_TASK", Name="MATCH_STATISTICS_")]
	public partial class _SYS_TASK_MatchStatistics
	{
		[Column("TASK_EXECUTION_ID"),         PrimaryKey(1), NotNull] public long  TaskExecutionId         { get; set; } // BIGINT
		[Column("OPERATION_ID"),              PrimaryKey(2), NotNull] public int   OperationId             { get; set; } // INTEGER
		[Column("NUM_RECORDS"),                  Nullable           ] public long? NumRecords              { get; set; } // BIGINT
		[Column("NUM_MATCH_RECORDS"),            Nullable           ] public long? NumMatchRecords         { get; set; } // BIGINT
		[Column("NUM_MATCH_GROUPS"),             Nullable           ] public long? NumMatchGroups          { get; set; } // BIGINT
		[Column("NUM_REVIEW_GROUPS"),            Nullable           ] public long? NumReviewGroups         { get; set; } // BIGINT
		[Column("NUM_CONFLICT_GROUPS"),          Nullable           ] public long? NumConflictGroups       { get; set; } // BIGINT
		[Column("NUM_COMPARISONS_PERFORMED"),    Nullable           ] public long? NumComparisonsPerformed { get; set; } // BIGINT
		[Column("NUM_MATCH_DECISIONS"),          Nullable           ] public long? NumMatchDecisions       { get; set; } // BIGINT
		[Column("NUM_SELECTED_RECORDS"),         Nullable           ] public long? NumSelectedRecords      { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_TASK", Name="MATCH_TRACING_")]
	public partial class _SYS_TASK_MatchTracing
	{
		[Column("TASK_EXECUTION_ID"), PrimaryKey(1), NotNull] public long    TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_ID"),      PrimaryKey(2), NotNull] public int     OperationId     { get; set; } // INTEGER
		[Column("TABLE_ID"),          PrimaryKey(3), NotNull] public int     TableId         { get; set; } // INTEGER
		[Column("ROW_ID"),            PrimaryKey(4), NotNull] public long    RowId           { get; set; } // BIGINT
		[Column("RELATED_TABLE_ID"),  PrimaryKey(5), NotNull] public int     RelatedTableId  { get; set; } // INTEGER
		[Column("RELATED_ROW_ID"),    PrimaryKey(6), NotNull] public long    RelatedRowId    { get; set; } // BIGINT
		[Column("POLICY_ID"),            Nullable           ] public int?    PolicyId        { get; set; } // INTEGER
		[Column("RULE_ID"),              Nullable           ] public string? RuleId          { get; set; } // NVARCHAR(20)
		[Column(),                       Nullable           ] public int?    SCORE           { get; set; } // INTEGER
	}

	/// <summary>
	/// This table contains one row for each match decision made during the matching process
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="MATCH_TRACING", IsView=true)]
	public partial class _SYS_TASK_MatchTracing0
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),        NotNull    ] public string  SchemaName       { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),          NotNull    ] public string  TaskName         { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"),  NotNull    ] public long    TaskExecutionId  { get; set; } // BIGINT
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),        Nullable] public string? OperationName    { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("TABLE_NAME"),            Nullable] public string? TableName        { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The unique ID of the row processed for this execution of the task plan
		/// </summary>
		[Column("ROW_ID"),             NotNull    ] public long    RowId            { get; set; } // BIGINT
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("RELATED_TABLE_NAME"),    Nullable] public string? RelatedTableName { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The unique ID of the row processed for this execution of the task plan
		/// </summary>
		[Column("RELATED_ROW_ID"),     NotNull    ] public long    RelatedRowId     { get; set; } // BIGINT
		/// <summary>
		/// The name of the match policy that processed the related rows
		/// </summary>
		[Column("POLICY_NAME"),           Nullable] public string? PolicyName       { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The name of the match rule that processed the related rows
		/// </summary>
		[Column("RULE_NAME"),             Nullable] public string? RuleName         { get; set; } // NVARCHAR(256)
		/// <summary>
		/// The similarity score of the related rows
		/// </summary>
		[Column(),                        Nullable] public int?    SCORE            { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_EPM", Name="MDS_METADATA")]
	public partial class _SYS_EPM_MdsMetadata
	{
		[Column("SCHEMA_NAME"),       PrimaryKey(1), NotNull] public string    SchemaName      { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),       PrimaryKey(2), NotNull] public string    ObjectName      { get; set; } = null!; // NVARCHAR(256)
		[Column(),                       Nullable           ] public string?   TYPE            { get; set; } // NVARCHAR(256)
		[Column(),                       Nullable           ] public string?   JSON            { get; set; } // NCLOB
		[Column("LAST_CHANGED_TIME"),    Nullable           ] public DateTime? LastChangedTime { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_EPM", Name="MDS_METADATA_DOCUMENTS", IsView=true)]
	public partial class _SYS_EPM_MdsMetadataDocument
	{
		[Column("SCHEMA_NAME"),       NotNull    ] public string    SchemaName      { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),       NotNull    ] public string    ObjectName      { get; set; } = null!; // NVARCHAR(256)
		[Column(),                       Nullable] public string?   TYPE            { get; set; } // NVARCHAR(256)
		[Column(),                       Nullable] public string?   JSON            { get; set; } // NCLOB
		[Column("LAST_CHANGED_TIME"),    Nullable] public DateTime? LastChangedTime { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_EPM", Name="MODEL_ADMINS")]
	public partial class _SYS_EPM_ModelAdmin
	{
		[Column("ADMIN_USER_ID"), PrimaryKey, NotNull] public long AdminUserId { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_EPM", Name="MODEL_MIGRATIONS")]
	public partial class _SYS_EPM_ModelMigration
	{
		[Column("SCHEMA_NAME"),            PrimaryKey(1), NotNull] public string    SchemaName           { get; set; } = null!; // NVARCHAR(256)
		[Column("MODEL_NAME"),             PrimaryKey(2), NotNull] public string    ModelName            { get; set; } = null!; // NVARCHAR(256)
		[Column("MIGRATION_ID"),           PrimaryKey(3), NotNull] public int       MigrationId          { get; set; } // INTEGER
		[Column("ACTIVATION_TIME"),           Nullable           ] public DateTime? ActivationTime       { get; set; } // TIMESTAMP
		[Column("MIGRATION_DEFINITION"),      Nullable           ] public string?   MigrationDefinition  { get; set; } // NCLOB
		[Column("DEBUG_MODEL_DEFINITION"),    Nullable           ] public string?   DebugModelDefinition { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_XS", Name="OAUTH_ACCESS_TOKEN")]
	public partial class _SYS_XS_OauthAccessToken
	{
		[Column("CLIENT_PACKAGE"),   PrimaryKey(1), NotNull] public string    ClientPackage  { get; set; } = null!; // NVARCHAR(256)
		[Column("CLIENT_NAME"),      PrimaryKey(2), NotNull] public string    ClientName     { get; set; } = null!; // NVARCHAR(256)
		[Column(),                   PrimaryKey(3), NotNull] public string    USER           { get; set; } = null!; // NVARCHAR(256)
		[Column("TOKEN_TYPE"),       PrimaryKey(4), NotNull] public byte      TokenType      { get; set; } // TINYINT
		[Column("TOKEN_LIFETIME"),      Nullable           ] public int?      TokenLifetime  { get; set; } // INTEGER
		[Column("TOKEN_GRANT_TIME"),    Nullable           ] public DateTime? TokenGrantTime { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_XS", Name="OAUTH_ACCESS_TOKEN_SCOPES")]
	public partial class _SYS_XS_OauthAccessTokenScope
	{
		[Column("CLIENT_PACKAGE"), PrimaryKey(1), NotNull] public string ClientPackage { get; set; } = null!; // NVARCHAR(256)
		[Column("CLIENT_NAME"),    PrimaryKey(2), NotNull] public string ClientName    { get; set; } = null!; // NVARCHAR(256)
		[Column(),                 PrimaryKey(3), NotNull] public string USER          { get; set; } = null!; // NVARCHAR(256)
		[Column("TOKEN_TYPE"),     PrimaryKey(4), NotNull] public byte   TokenType     { get; set; } // TINYINT
		[Column(),                 PrimaryKey(5), NotNull] public string SCOPE         { get; set; } = null!; // NVARCHAR(512)
		[Column("SCOPE_TYPE"),        Nullable           ] public byte?  ScopeType     { get; set; } // TINYINT
	}

	[Table(Schema="_SYS_XS", Name="OAUTH_APP_CONFIG")]
	public partial class _SYS_XS_OauthAppConfig
	{
		[Column("PACKAGE_ID"),     PrimaryKey(1), NotNull] public string    PackageId     { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),    PrimaryKey(2), NotNull] public string    ObjectName    { get; set; } = null!; // NVARCHAR(256)
		[Column("CLIENT_PACKAGE"),    Nullable           ] public string?   ClientPackage { get; set; } // NVARCHAR(256)
		[Column("CLIENT_NAME"),       Nullable           ] public string?   ClientName    { get; set; } // NVARCHAR(256)
		[Column(),                    Nullable           ] public string?   DESCRIPTION   { get; set; } // NVARCHAR(512)
		[Column("CHANGED_BY"),        Nullable           ] public string?   ChangedBy     { get; set; } // NVARCHAR(256)
		[Column("CHANGED_AT"),        Nullable           ] public DateTime? ChangedAt     { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_XS", Name="OAUTH_APP_CONFIG_SCOPES")]
	public partial class _SYS_XS_OauthAppConfigScope
	{
		[Column("PACKAGE_ID"),     PrimaryKey(1), NotNull] public string  PackageId     { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),    PrimaryKey(2), NotNull] public string  ObjectName    { get; set; } = null!; // NVARCHAR(256)
		[Column(),                 PrimaryKey(3), NotNull] public string  SCOPE         { get; set; } = null!; // NVARCHAR(256)
		[Column(),                    Nullable           ] public byte?   MANDATORY     { get; set; } // TINYINT
		[Column("CLIENT_PACKAGE"),    Nullable           ] public string? ClientPackage { get; set; } // NVARCHAR(256)
		[Column("CLIENT_NAME"),       Nullable           ] public string? ClientName    { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_XS", Name="OAUTH_CLIENT_CONFIG")]
	public partial class _SYS_XS_OauthClientConfig
	{
		[Column("CLIENT_PACKAGE"),             PrimaryKey(1), NotNull] public string    ClientPackage            { get; set; } = null!; // NVARCHAR(256)
		[Column("CLIENT_NAME"),                PrimaryKey(2), NotNull] public string    ClientName               { get; set; } = null!; // NVARCHAR(256)
		[Column("FLAVOR_PACKAGE"),                Nullable           ] public string?   FlavorPackage            { get; set; } // NVARCHAR(256)
		[Column("FLAVOR_NAME"),                   Nullable           ] public string?   FlavorName               { get; set; } // NVARCHAR(256)
		[Column("CLIENT_ID"),                     Nullable           ] public string?   ClientId                 { get; set; } // NVARCHAR(512)
		[Column("CLIENT_AUTHENTICATION_TYPE"),                NotNull] public byte      ClientAuthenticationType { get; set; } // TINYINT
		[Column("URL_TOKEN_ENDPOINT"),            Nullable           ] public string?   UrlTokenEndpoint         { get; set; } // NVARCHAR(2048)
		[Column("URL_REVOCATION_ENDPOINT"),       Nullable           ] public string?   UrlRevocationEndpoint    { get; set; } // NVARCHAR(2048)
		[Column("URL_AUTHORIZATION_ENDPOINT"),    Nullable           ] public string?   UrlAuthorizationEndpoint { get; set; } // NVARCHAR(2048)
		[Column("SAML_ISSUER"),                   Nullable           ] public string?   SamlIssuer               { get; set; } // NVARCHAR(512)
		[Column(),                                            NotNull] public byte      FLOW                     { get; set; } // TINYINT
		[Column("URL_REDIRECT"),                  Nullable           ] public string?   UrlRedirect              { get; set; } // NVARCHAR(2048)
		[Column(),                                            NotNull] public byte      SHARED                   { get; set; } // TINYINT
		[Column("SCOPE_REQUEST"),                             NotNull] public byte      ScopeRequest             { get; set; } // TINYINT
		[Column(),                                Nullable           ] public string?   DESCRIPTION              { get; set; } // NVARCHAR(512)
		[Column("CHANGED_BY"),                    Nullable           ] public string?   ChangedBy                { get; set; } // NVARCHAR(256)
		[Column("CHANGED_AT"),                    Nullable           ] public DateTime? ChangedAt                { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_XS", Name="OAUTH_CLIENT_FLAVOR")]
	public partial class _SYS_XS_OauthClientFlavor
	{
		[Column("FLAVOR_PACKAGE"),  PrimaryKey(1), NotNull] public string    FlavorPackage  { get; set; } = null!; // NVARCHAR(256)
		[Column("FLAVOR_NAME"),     PrimaryKey(2), NotNull] public string    FlavorName     { get; set; } = null!; // NVARCHAR(256)
		[Column("FLAVOR_STEP"),     PrimaryKey(3), NotNull] public string    FlavorStep     { get; set; } = null!; // NVARCHAR(4)
		[Column("PARAM_LOCATION"),  PrimaryKey(4), NotNull] public string    ParamLocation  { get; set; } = null!; // NVARCHAR(4)
		[Column("PARAM_NAME"),      PrimaryKey(5), NotNull] public string    ParamName      { get; set; } = null!; // NVARCHAR(256)
		[Column("PARAM_VALUE"),        Nullable           ] public string?   ParamValue     { get; set; } // NVARCHAR(2048)
		[Column("VALUE_TYPE"),         Nullable           ] public string?   ValueType      { get; set; } // NVARCHAR(4)
		[Column("PARAM_MANDATORY"),                NotNull] public byte      ParamMandatory { get; set; } // TINYINT
		[Column("CHANGED_BY"),         Nullable           ] public string?   ChangedBy      { get; set; } // NVARCHAR(256)
		[Column("CHANGED_AT"),         Nullable           ] public DateTime? ChangedAt      { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_XS", Name="ODATA_SERVICES", IsView=true)]
	public partial class _SYS_XS_OdataService
	{
		[Column(),                NotNull    ] public string   PACKAGE      { get; set; } = null!; // NVARCHAR(256)
		[Column("SERVICE_NAME"),  NotNull    ] public string   ServiceName  { get; set; } = null!; // NVARCHAR(256)
		[Column(),                NotNull    ] public string   TYPE         { get; set; } = null!; // NVARCHAR(255)
		[Column("ACTIVATED_AT"),  NotNull    ] public DateTime ActivatedAt  { get; set; } // TIMESTAMP
		[Column("DELIVERY_UNIT"), NotNull    ] public string   DeliveryUnit { get; set; } = null!; // NVARCHAR(256)
		[Column(),                   Nullable] public string?  AUTHOR       { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="OPERATOR_DETAILS", IsView=true)]
	public partial class _SYS_SQL_ANALYZER_OperatorDetail
	{
		[Column("USER_NAME"),              Nullable] public string? UserName             { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"), Nullable] public string? StatementExecutionId { get; set; } // VARCHAR(32)
		[Column("OPERATOR_ID"),            Nullable] public string? OperatorId           { get; set; } // VARCHAR(256)
		[Column("OPERATOR_DETAILS_KEY"),   Nullable] public string? OperatorDetailsKey   { get; set; } // NVARCHAR(512)
		[Column("OPERATOR_DETAILS_VALUE"), Nullable] public string? OperatorDetailsValue { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="OPERATOR_DETAILS_")]
	public partial class _SYS_SQL_ANALYZER_OperatorDetails
	{
		[Column("USER_NAME"),              Nullable] public string? UserName             { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"), Nullable] public string? StatementExecutionId { get; set; } // VARCHAR(32)
		[Column("OPERATOR_ID"),            Nullable] public string? OperatorId           { get; set; } // VARCHAR(256)
		[Column("OPERATOR_DETAILS_KEY"),   Nullable] public string? OperatorDetailsKey   { get; set; } // NVARCHAR(512)
		[Column("OPERATOR_DETAILS_VALUE"), Nullable] public string? OperatorDetailsValue { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="OPERATOR_SOURCE_DETAILS", IsView=true)]
	public partial class _SYS_SQL_ANALYZER_OperatorSourceDetail
	{
		[Column("USER_NAME"),                 Nullable] public string? UserName                { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"),    Nullable] public string? StatementExecutionId    { get; set; } // VARCHAR(32)
		[Column("OPERATOR_SOURCE_POSITIONS"), Nullable] public string? OperatorSourcePositions { get; set; } // CLOB
		[Column("COMPILED_OPERATOR_ID"),      Nullable] public string? CompiledOperatorId      { get; set; } // VARCHAR(256)
		[Column("EXECUTED_OPERATOR_ID"),      Nullable] public string? ExecutedOperatorId      { get; set; } // VARCHAR(256)
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="OPERATOR_SOURCE_DETAILS_")]
	public partial class _SYS_SQL_ANALYZER_OperatorSourceDetails
	{
		[Column("USER_NAME"),                 Nullable] public string? UserName                { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"),    Nullable] public string? StatementExecutionId    { get; set; } // VARCHAR(32)
		[Column("OPERATOR_SOURCE_POSITIONS"), Nullable] public string? OperatorSourcePositions { get; set; } // CLOB
		[Column("COMPILED_OPERATOR_ID"),      Nullable] public string? CompiledOperatorId      { get; set; } // VARCHAR(256)
		[Column("EXECUTED_OPERATOR_ID"),      Nullable] public string? ExecutedOperatorId      { get; set; } // VARCHAR(256)
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="OPERATOR_STATISTICS", IsView=true)]
	public partial class _SYS_SQL_ANALYZER_OperatorStatistic
	{
		[Column("FROM_PLV"),                     Nullable] public string?   FromPlv                   { get; set; } // VARCHAR(5)
		[Column("USER_NAME"),                    Nullable] public string?   UserName                  { get; set; } // NVARCHAR(256)
		[Column("SCHEMA_NAME"),                  Nullable] public string?   SchemaName                { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"),       Nullable] public string?   StatementExecutionId      { get; set; } // VARCHAR(32)
		[Column("OPERATOR_ID"),                  Nullable] public string?   OperatorId                { get; set; } // VARCHAR(256)
		[Column("OPERATOR_NAME"),                Nullable] public string?   OperatorName              { get; set; } // VARCHAR(256)
		[Column("OPERATOR_TYPE"),                Nullable] public string?   OperatorType              { get; set; } // VARCHAR(32)
		[Column("IS_LOGICAL"),                   Nullable] public string?   IsLogical                 { get; set; } // VARCHAR(5)
		[Column("EXECUTION_ENGINE"),             Nullable] public string?   ExecutionEngine           { get; set; } // VARCHAR(64)
		[Column("PLAN_ID"),                      Nullable] public string?   PlanId                    { get; set; } // VARCHAR(256)
		[Column("SUB_PLAN"),                     Nullable] public string?   SubPlan                   { get; set; } // CLOB
		[Column("CHILD_OPERATOR_ID"),            Nullable] public string?   ChildOperatorId           { get; set; } // CLOB
		[Column("EXECUTION_STATUS"),             Nullable] public string?   ExecutionStatus           { get; set; } // VARCHAR(32)
		[Column("ACCESSED_OBJECT_NAMES"),        Nullable] public string?   AccessedObjectNames       { get; set; } // NVARCHAR(5000)
		[Column("TABLE_TYPE"),                   Nullable] public string?   TableType                 { get; set; } // VARCHAR(256)
		[Column("HOST_EXECUTED"),                Nullable] public string?   HostExecuted              { get; set; } // VARCHAR(64)
		[Column("PORT_EXECUTED"),                Nullable] public int?      PortExecuted              { get; set; } // INTEGER
		[Column("ACCESSED_PARTITION"),           Nullable] public string?   AccessedPartition         { get; set; } // VARCHAR(256)
		[Column("EXCLUSIVE_EXECUTION_TIME"),     Nullable] public long?     ExclusiveExecutionTime    { get; set; } // BIGINT
		[Column("EXECUTION_START_TIME"),         Nullable] public DateTime? ExecutionStartTime        { get; set; } // TIMESTAMP
		[Column("EXECUTION_END_TIME"),           Nullable] public DateTime? ExecutionEndTime          { get; set; } // TIMESTAMP
		[Column("EXECUTION_TIMESTAMPS"),         Nullable] public string?   ExecutionTimestamps       { get; set; } // CLOB
		[Column("CPU_TIME_SELF"),                Nullable] public long?     CpuTimeSelf               { get; set; } // BIGINT
		[Column("ESTIMATED_OUTPUT_SIZE"),        Nullable] public double?   EstimatedOutputSize       { get; set; } // DOUBLE
		[Column("EXECUTED_OUTPUT_RECORD_COUNT"), Nullable] public long?     ExecutedOutputRecordCount { get; set; } // BIGINT
		[Column("OUTPUT_PAYLOAD_SIZE"),          Nullable] public long?     OutputPayloadSize         { get; set; } // BIGINT
		[Column("OPERATOR_DETAILS_SUMMARY"),     Nullable] public string?   OperatorDetailsSummary    { get; set; } // NCLOB
		[Column("OPERATOR_DETAILS"),             Nullable] public string?   OperatorDetails           { get; set; } // NCLOB
		[Column("REL_ID"),                       Nullable] public string?   RelId                     { get; set; } // VARCHAR(32)
		[Column("MATERIALIZED_COLUMNS"),         Nullable] public string?   MaterializedColumns       { get; set; } // NCLOB
		[Column("RELATED_COLUMNS"),              Nullable] public string?   RelatedColumns            { get; set; } // NCLOB
		[Column("EXCLUSIVE_ESTIMATED_COST"),     Nullable] public double?   ExclusiveEstimatedCost    { get; set; } // DOUBLE
		[Column("INCLUSIVE_ESTIMATED_COST"),     Nullable] public double?   InclusiveEstimatedCost    { get; set; } // DOUBLE
		[Column("CPU_TIME_KERNEL"),              Nullable] public long?     CpuTimeKernel             { get; set; } // BIGINT
		[Column("TABLES_INVOLVED"),              Nullable] public string?   TablesInvolved            { get; set; } // NCLOB
		[Column("TABLES_DETAILS"),               Nullable] public string?   TablesDetails             { get; set; } // NCLOB
		[Column("ALTERNATIVE_ID"),               Nullable] public string?   AlternativeId             { get; set; } // VARCHAR(256)
		[Column("INCLUSIVE_EXECUTION_TIME"),     Nullable] public long?     InclusiveExecutionTime    { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="OPERATOR_STATISTICS_")]
	public partial class _SYS_SQL_ANALYZER_OperatorStatistics
	{
		[Column("FROM_PLV"),                     Nullable] public string?   FromPlv                   { get; set; } // VARCHAR(5)
		[Column("USER_NAME"),                    Nullable] public string?   UserName                  { get; set; } // NVARCHAR(256)
		[Column("SCHEMA_NAME"),                  Nullable] public string?   SchemaName                { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"),       Nullable] public string?   StatementExecutionId      { get; set; } // VARCHAR(32)
		[Column("OPERATOR_ID"),                  Nullable] public string?   OperatorId                { get; set; } // VARCHAR(256)
		[Column("OPERATOR_NAME"),                Nullable] public string?   OperatorName              { get; set; } // VARCHAR(256)
		[Column("OPERATOR_TYPE"),                Nullable] public string?   OperatorType              { get; set; } // VARCHAR(32)
		[Column("IS_LOGICAL"),                   Nullable] public string?   IsLogical                 { get; set; } // VARCHAR(5)
		[Column("EXECUTION_ENGINE"),             Nullable] public string?   ExecutionEngine           { get; set; } // VARCHAR(64)
		[Column("PLAN_ID"),                      Nullable] public string?   PlanId                    { get; set; } // VARCHAR(256)
		[Column("SUB_PLAN"),                     Nullable] public string?   SubPlan                   { get; set; } // CLOB
		[Column("CHILD_OPERATOR_ID"),            Nullable] public string?   ChildOperatorId           { get; set; } // CLOB
		[Column("EXECUTION_STATUS"),             Nullable] public string?   ExecutionStatus           { get; set; } // VARCHAR(32)
		[Column("ACCESSED_OBJECT_NAMES"),        Nullable] public string?   AccessedObjectNames       { get; set; } // NVARCHAR(5000)
		[Column("TABLE_TYPE"),                   Nullable] public string?   TableType                 { get; set; } // VARCHAR(256)
		[Column("HOST_EXECUTED"),                Nullable] public string?   HostExecuted              { get; set; } // VARCHAR(64)
		[Column("PORT_EXECUTED"),                Nullable] public int?      PortExecuted              { get; set; } // INTEGER
		[Column("ACCESSED_PARTITION"),           Nullable] public string?   AccessedPartition         { get; set; } // VARCHAR(256)
		[Column("EXCLUSIVE_EXECUTION_TIME"),     Nullable] public long?     ExclusiveExecutionTime    { get; set; } // BIGINT
		[Column("EXECUTION_START_TIME"),         Nullable] public DateTime? ExecutionStartTime        { get; set; } // TIMESTAMP
		[Column("EXECUTION_END_TIME"),           Nullable] public DateTime? ExecutionEndTime          { get; set; } // TIMESTAMP
		[Column("EXECUTION_TIMESTAMPS"),         Nullable] public string?   ExecutionTimestamps       { get; set; } // CLOB
		[Column("CPU_TIME_SELF"),                Nullable] public long?     CpuTimeSelf               { get; set; } // BIGINT
		[Column("ESTIMATED_OUTPUT_SIZE"),        Nullable] public double?   EstimatedOutputSize       { get; set; } // DOUBLE
		[Column("EXECUTED_OUTPUT_RECORD_COUNT"), Nullable] public long?     ExecutedOutputRecordCount { get; set; } // BIGINT
		[Column("OUTPUT_PAYLOAD_SIZE"),          Nullable] public long?     OutputPayloadSize         { get; set; } // BIGINT
		[Column("OPERATOR_DETAILS_SUMMARY"),     Nullable] public string?   OperatorDetailsSummary    { get; set; } // NCLOB
		[Column("OPERATOR_DETAILS"),             Nullable] public string?   OperatorDetails           { get; set; } // NCLOB
		[Column("REL_ID"),                       Nullable] public string?   RelId                     { get; set; } // VARCHAR(32)
		[Column("MATERIALIZED_COLUMNS"),         Nullable] public string?   MaterializedColumns       { get; set; } // NCLOB
		[Column("RELATED_COLUMNS"),              Nullable] public string?   RelatedColumns            { get; set; } // NCLOB
		[Column("EXCLUSIVE_ESTIMATED_COST"),     Nullable] public double?   ExclusiveEstimatedCost    { get; set; } // DOUBLE
		[Column("INCLUSIVE_ESTIMATED_COST"),     Nullable] public double?   InclusiveEstimatedCost    { get; set; } // DOUBLE
		[Column("CPU_TIME_KERNEL"),              Nullable] public long?     CpuTimeKernel             { get; set; } // BIGINT
		[Column("TABLES_INVOLVED"),              Nullable] public string?   TablesInvolved            { get; set; } // NCLOB
		[Column("TABLES_DETAILS"),               Nullable] public string?   TablesDetails             { get; set; } // NCLOB
		[Column("ALTERNATIVE_ID"),               Nullable] public string?   AlternativeId             { get; set; } // VARCHAR(256)
		[Column("INCLUSIVE_EXECUTION_TIME"),     Nullable] public long?     InclusiveExecutionTime    { get; set; } // BIGINT
	}

	/// <summary>
	/// Disposition specific memory object statistics. The statistics are calculated and reading them may take a while.
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="OUT_OF_MEMORY_EVENTS", IsView=true)]
	public partial class _SYS_TELEMETRY_OutOfMemoryEvent
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"),          NotNull    ] public DateTime  SnapshotId         { get; set; } // TIMESTAMP
		/// <summary>
		/// Time of OOM
		/// </summary>
		[Column(),                          Nullable] public DateTime? TIME               { get; set; } // TIMESTAMP
		/// <summary>
		/// Prepared statement ID
		/// </summary>
		[Column("STATEMENT_ID"),            Nullable] public string?   StatementId        { get; set; } // VARCHAR(20)
		/// <summary>
		/// Allocator name in case of a heap memory failure
		/// </summary>
		[Column("HEAP_MEMORY_CATEGORY"),    Nullable] public string?   HeapMemoryCategory { get; set; } // VARCHAR(128)
		/// <summary>
		/// The size in bytes of the failed memory allocation
		/// </summary>
		[Column("MEMORY_REQUEST_SIZE"),     Nullable] public long?     MemoryRequestSize  { get; set; } // BIGINT
		/// <summary>
		/// The size in bytes currently allocated, depends on EVENT_REASON
		/// </summary>
		[Column("MEMORY_USED_SIZE"),        Nullable] public long?     MemoryUsedSize     { get; set; } // BIGINT
		/// <summary>
		/// Reason for OOM, e.g. GLOBAL ALLOCATION LIMIT, PROCESS ALLOCATION LIMIT, STATEMENT MEMORY LIMIT
		/// </summary>
		[Column("EVENT_REASON"),            Nullable] public string?   EventReason        { get; set; } // VARCHAR(32)
		/// <summary>
		/// The size of the limit, depends on EVENT_REASON
		/// </summary>
		[Column("MEMORY_LIMIT_SIZE"),       Nullable] public long?     MemoryLimitSize    { get; set; } // BIGINT
	}

	[Table(Schema="TESTHANAODBC", Name="Parent")]
	public partial class TESTHANAODBC_Parent
	{
		[Column, Nullable] public int? ParentID { get; set; } // INTEGER
		[Column, Nullable] public int? Value1   { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANA", Name="Parent")]
	public partial class Parent
	{
		[Column, Nullable] public int? ParentID { get; set; } // INTEGER
		[Column, Nullable] public int? Value1   { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANAODBC", Name="ParentChildView", IsView=true)]
	public partial class TESTHANAODBC_ParentChildView
	{
		[Column, Nullable] public int? ParentID { get; set; } // INTEGER
		[Column, Nullable] public int? Value1   { get; set; } // INTEGER
		[Column, Nullable] public int? ChildID  { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANA", Name="ParentChildView", IsView=true)]
	public partial class ParentChildView
	{
		[Column, Nullable] public int? ParentID { get; set; } // INTEGER
		[Column, Nullable] public int? Value1   { get; set; } // INTEGER
		[Column, Nullable] public int? ChildID  { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANAODBC", Name="ParentView", IsView=true)]
	public partial class TESTHANAODBC_ParentView
	{
		[Column, Nullable] public int? ParentID { get; set; } // INTEGER
		[Column, Nullable] public int? Value1   { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANA", Name="ParentView", IsView=true)]
	public partial class ParentView
	{
		[Column, Nullable] public int? ParentID { get; set; } // INTEGER
		[Column, Nullable] public int? Value1   { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANA", Name="Patient")]
	public partial class Patient
	{
		[PrimaryKey, NotNull] public int    PersonID  { get; set; } // INTEGER
		[Column,     NotNull] public string Diagnosis { get; set; } = null!; // NVARCHAR(256)

		#region Associations

		/// <summary>
		/// FK_Patient_Person
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK_Patient_Person", BackReferenceName="Patient")]
		public Person Person { get; set; } = null!;

		#endregion
	}

	[Table(Schema="TESTHANAODBC", Name="Patient")]
	public partial class TESTHANAODBC_Patient
	{
		[PrimaryKey, NotNull] public int    PersonID  { get; set; } // INTEGER
		[Column,     NotNull] public string Diagnosis { get; set; } = null!; // NVARCHAR(256)

		#region Associations

		/// <summary>
		/// FK_Patient_Person
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK_Patient_Person", BackReferenceName="Patient")]
		public TESTHANAODBC_Person Person { get; set; } = null!;

		#endregion
	}

	[Table(Schema="_SYS_TASK", Name="PENDING_DROP_TASKS_")]
	public partial class _SYS_TASK_PendingDropTasks
	{
		[Column("TASK_OID"), Nullable] public long? TaskOid { get; set; } // BIGINT
	}

	[Table(Schema="TESTHANA", Name="Person")]
	public partial class Person
	{
		[PrimaryKey, Identity   ] public int     PersonID   { get; set; } // INTEGER
		[Column,     NotNull    ] public string  FirstName  { get; set; } = null!; // NVARCHAR(50)
		[Column,     NotNull    ] public string  LastName   { get; set; } = null!; // NVARCHAR(50)
		[Column,        Nullable] public string? MiddleName { get; set; } // NVARCHAR(50)
		[Column,     NotNull    ] public char    Gender     { get; set; } // CHAR(1)

		#region Associations

		/// <summary>
		/// FK_Doctor_Person_BackReference
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public Doctor? Doctor { get; set; }

		/// <summary>
		/// FK_Patient_Person_BackReference
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public Patient? Patient { get; set; }

		#endregion
	}

	[Table(Schema="TESTHANAODBC", Name="Person")]
	public partial class TESTHANAODBC_Person
	{
		[PrimaryKey, Identity   ] public int     PersonID   { get; set; } // INTEGER
		[Column,     NotNull    ] public string  FirstName  { get; set; } = null!; // NVARCHAR(50)
		[Column,     NotNull    ] public string  LastName   { get; set; } = null!; // NVARCHAR(50)
		[Column,        Nullable] public string? MiddleName { get; set; } // NVARCHAR(50)
		[Column,     NotNull    ] public char    Gender     { get; set; } // CHAR(1)

		#region Associations

		/// <summary>
		/// FK_Doctor_Person_BackReference
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public TESTHANAODBC_Doctor? Doctor { get; set; }

		/// <summary>
		/// FK_Patient_Person_BackReference
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public TESTHANAODBC_Patient? Patient { get; set; }

		#endregion
	}

	[Table(Schema="_SYS_PLAN_STABILITY", Name="PLAN_STABILITY_CONFIG_")]
	public partial class _SYS_PLAN_STABILITY_PlanStabilityConfig
	{
		[Column(),                   NotNull    ] public string    ITEM           { get; set; } = null!; // NVARCHAR(256)
		[Column(),                      Nullable] public string?   VALUE          { get; set; } // NVARCHAR(5000)
		[Column(),                      Nullable] public string?   NOTES          { get; set; } // NVARCHAR(5000)
		[Column("LAST_UPDATE_TIME"),    Nullable] public DateTime? LastUpdateTime { get; set; } // TIMESTAMP
		[Column("LAST_UPDATE_USER"),    Nullable] public string?   LastUpdateUser { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_PLAN_STABILITY", Name="PLAN_STABILITY_STATISTICS_")]
	public partial class _SYS_PLAN_STABILITY_PlanStabilityStatistics
	{
		[Column("ABSTRACT_SQL_PLAN_ID"),                                 PrimaryKey,  NotNull] public long      AbstractSqlPlanId                             { get; set; } // BIGINT
		[Column("AVG_COMPILATION_TIME_USING_ABSTRACT_SQL_PLAN"),            Nullable         ] public long?     AvgCompilationTimeUsingAbstractSqlPlan        { get; set; } // BIGINT
		[Column("MIN_EXECUTION_TIME_USING_ABSTRACT_SQL_PLAN"),              Nullable         ] public long?     MinExecutionTimeUsingAbstractSqlPlan          { get; set; } // BIGINT
		[Column("MAX_EXECUTION_TIME_USING_ABSTRACT_SQL_PLAN"),              Nullable         ] public long?     MaxExecutionTimeUsingAbstractSqlPlan          { get; set; } // BIGINT
		[Column("AVG_EXECUTION_TIME_USING_ABSTRACT_SQL_PLAN"),              Nullable         ] public long?     AvgExecutionTimeUsingAbstractSqlPlan          { get; set; } // BIGINT
		[Column("TOTAL_EXECUTION_COUNT_USING_ABSTRACT_SQL_PLAN"),           Nullable         ] public long?     TotalExecutionCountUsingAbstractSqlPlan       { get; set; } // BIGINT
		[Column("LAST_EXECUTION_TIMESTAMP_USING_ABSTRACT_SQL_PLAN"),        Nullable         ] public DateTime? LastExecutionTimestampUsingAbstractSqlPlan    { get; set; } // TIMESTAMP
		[Column("AVG_COMPILATION_TIME_NOT_USING_ABSTRACT_SQL_PLAN"),        Nullable         ] public long?     AvgCompilationTimeNotUsingAbstractSqlPlan     { get; set; } // BIGINT
		[Column("MIN_EXECUTION_TIME_NOT_USING_ABSTRACT_SQL_PLAN"),          Nullable         ] public long?     MinExecutionTimeNotUsingAbstractSqlPlan       { get; set; } // BIGINT
		[Column("MAX_EXECUTION_TIME_NOT_USING_ABSTRACT_SQL_PLAN"),          Nullable         ] public long?     MaxExecutionTimeNotUsingAbstractSqlPlan       { get; set; } // BIGINT
		[Column("AVG_EXECUTION_TIME_NOT_USING_ABSTRACT_SQL_PLAN"),          Nullable         ] public long?     AvgExecutionTimeNotUsingAbstractSqlPlan       { get; set; } // BIGINT
		[Column("TOTAL_EXECUTION_COUNT_NOT_USING_ABSTRACT_SQL_PLAN"),       Nullable         ] public long?     TotalExecutionCountNotUsingAbstractSqlPlan    { get; set; } // BIGINT
		[Column("LAST_EXECUTION_TIMESTAMP_NOT_USING_ABSTRACT_SQL_PLAN"),    Nullable         ] public DateTime? LastExecutionTimestampNotUsingAbstractSqlPlan { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="PLAN_STATISTICS", IsView=true)]
	public partial class _SYS_SQL_ANALYZER_PlanStatistic
	{
		[Column("USER_NAME"),                      Nullable] public string?   UserName                     { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"),         Nullable] public string?   StatementExecutionId         { get; set; } // VARCHAR(32)
		[Column("PLAN_ID"),                        Nullable] public string?   PlanId                       { get; set; } // VARCHAR(256)
		[Column("PLAN_SOURCE"),                    Nullable] public string?   PlanSource                   { get; set; } // VARCHAR(32)
		[Column("PLAN_TYPE"),                      Nullable] public string?   PlanType                     { get; set; } // VARCHAR(32)
		[Column("STATEMENT_HASH"),                 Nullable] public string?   StatementHash                { get; set; } // VARCHAR(32)
		[Column("STATEMENT_STRING"),               Nullable] public string?   StatementString              { get; set; } // NCLOB
		[Column("COMPILATION_START_TIME"),         Nullable] public DateTime? CompilationStartTime         { get; set; } // TIMESTAMP
		[Column("COMPILATION_END_TIME"),           Nullable] public DateTime? CompilationEndTime           { get; set; } // TIMESTAMP
		[Column("COMPILATION_SUMMARY"),            Nullable] public string?   CompilationSummary           { get; set; } // NCLOB
		[Column("USED_MEMORY_SIZE"),               Nullable] public string?   UsedMemorySize               { get; set; } // NCLOB
		[Column("SQLSCRIPT_STATEMENT_STATISTICS"), Nullable] public string?   SqlscriptStatementStatistics { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="PLAN_STATISTICS_")]
	public partial class _SYS_SQL_ANALYZER_PlanStatistics
	{
		[Column("USER_NAME"),                      Nullable] public string?   UserName                     { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"),         Nullable] public string?   StatementExecutionId         { get; set; } // VARCHAR(32)
		[Column("PLAN_ID"),                        Nullable] public string?   PlanId                       { get; set; } // VARCHAR(256)
		[Column("PLAN_SOURCE"),                    Nullable] public string?   PlanSource                   { get; set; } // VARCHAR(32)
		[Column("PLAN_TYPE"),                      Nullable] public string?   PlanType                     { get; set; } // VARCHAR(32)
		[Column("STATEMENT_HASH"),                 Nullable] public string?   StatementHash                { get; set; } // VARCHAR(32)
		[Column("STATEMENT_STRING"),               Nullable] public string?   StatementString              { get; set; } // NCLOB
		[Column("COMPILATION_START_TIME"),         Nullable] public DateTime? CompilationStartTime         { get; set; } // TIMESTAMP
		[Column("COMPILATION_END_TIME"),           Nullable] public DateTime? CompilationEndTime           { get; set; } // TIMESTAMP
		[Column("COMPILATION_SUMMARY"),            Nullable] public string?   CompilationSummary           { get; set; } // NCLOB
		[Column("USED_MEMORY_SIZE"),               Nullable] public string?   UsedMemorySize               { get; set; } // NCLOB
		[Column("SQLSCRIPT_STATEMENT_STATISTICS"), Nullable] public string?   SqlscriptStatementStatistics { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_AFL", Name="PLUGIN_ERRORS")]
	public partial class _SYS_AFL_PluginError
	{
		[Column("PLUGIN_NAME"),    Nullable] public string? PluginName    { get; set; } // VARCHAR(32)
		[Column("ERROR_TEXT"),     Nullable] public string? ErrorText     { get; set; } // NVARCHAR(1024)
		[Column("AREA_NAME"),      Nullable] public string? AreaName      { get; set; } // NVARCHAR(256)
		[Column("AREA_STATUS"),    Nullable] public string? AreaStatus    { get; set; } // VARCHAR(32)
		[Column("PACKAGE_NAME"),   Nullable] public string? PackageName   { get; set; } // NVARCHAR(256)
		[Column("PACKAGE_STATUS"), Nullable] public string? PackageStatus { get; set; } // VARCHAR(32)
	}

	[Table(Schema="_SYS_RT", Name="PP_A_ALGORITHM")]
	public partial class _SYS_RT_PpAAlgorithm
	{
		[Column("PACKAGE_ID"),  PrimaryKey(1), NotNull] public string  PackageId   { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"), PrimaryKey(2), NotNull] public string  ObjectName  { get; set; } = null!; // NVARCHAR(256)
		[Column("PDC_NAME"),       Nullable           ] public string? PdcName     { get; set; } // NVARCHAR(256)
		[Column("PDC_PACKAGE"),    Nullable           ] public string? PdcPackage  { get; set; } // NVARCHAR(256)
		[Column(),                 Nullable           ] public string? DESCRIPTION { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_RT", Name="PP_A_CHA")]
	public partial class _SYS_RT_PpACha
	{
		[Column("PACKAGE_ID"),  PrimaryKey(1), NotNull] public string  PackageId   { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"), PrimaryKey(2), NotNull] public string  ObjectName  { get; set; } = null!; // NVARCHAR(256)
		[Column(),                 Nullable           ] public string? DESCRIPTION { get; set; } // NVARCHAR(256)
		[Column("MSD_TABLE"),      Nullable           ] public string? MsdTable    { get; set; } // NVARCHAR(256)
		[Column(),                 Nullable           ] public long?   DATATYPE    { get; set; } // BIGINT
		[Column(),                 Nullable           ] public long?   LENGTH      { get; set; } // BIGINT
		[Column("READ_VIEW"),      Nullable           ] public string? ReadView    { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_RT", Name="PP_A_DATACONTAINER")]
	public partial class _SYS_RT_PpADatacontainer
	{
		[Column("PACKAGE_ID"),  PrimaryKey(1), NotNull] public string  PackageId  { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"), PrimaryKey(2), NotNull] public string  ObjectName { get; set; } = null!; // NVARCHAR(256)
		[Column("FACT_TABLE"),     Nullable           ] public string? FactTable  { get; set; } // NVARCHAR(256)
		[Column("READ_VIEW"),      Nullable           ] public string? ReadView   { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_RT", Name="PP_A_KYF")]
	public partial class _SYS_RT_PpAKyf
	{
		[Column("PACKAGE_ID"),  PrimaryKey(1), NotNull] public string  PackageId     { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"), PrimaryKey(2), NotNull] public string  ObjectName    { get; set; } = null!; // NVARCHAR(256)
		[Column(),                 Nullable           ] public string? DESCRIPTION   { get; set; } // NVARCHAR(256)
		[Column(),                 Nullable           ] public string? UNITDIMENSION { get; set; } // NVARCHAR(256)
		[Column(),                 Nullable           ] public string? CHARGEDUNIT   { get; set; } // NVARCHAR(256)
		[Column(),                 Nullable           ] public long?   DATATYPE      { get; set; } // BIGINT
		[Column(),                 Nullable           ] public long?   LENGTH        { get; set; } // BIGINT
		[Column(),                 Nullable           ] public long?   SCALE         { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_RT", Name="PP_A_SESSION")]
	public partial class _SYS_RT_PpASession
	{
		[Column("PACKAGE_ID"),  PrimaryKey(1), NotNull] public string  PackageId  { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"), PrimaryKey(2), NotNull] public string  ObjectName { get; set; } = null!; // NVARCHAR(256)
		[Column(),              PrimaryKey(4), NotNull] public int     VERSION    { get; set; } // INTEGER
		[Column("READ_VIEW"),   PrimaryKey(3), NotNull] public string  ReadView   { get; set; } = null!; // NVARCHAR(256)
		[Column(),                 Nullable           ] public string? USER       { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="TESTHANAODBC", Name="prd.global.ecc/CV_MARA")]
	public partial class TESTHANAODBC_PrdGlobalEccCvMara
	{
		[PrimaryKey, NotNull] public int Id { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANA", Name="prd.global.ecc/CV_MARA")]
	public partial class PrdGlobalEccCvMara
	{
		[PrimaryKey, NotNull] public int Id { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_EPM", Name="PUBLISH_GRANTS")]
	public partial class _SYS_EPM_PublishGrant
	{
		[Column(),                            Nullable           ] public string? NAME                 { get; set; } // NVARCHAR(256)
		[Column(),                         PrimaryKey(1), NotNull] public long    ID                   { get; set; } // BIGINT
		[Column("PUBLISH_PRIVILEGE_NAME"), PrimaryKey(2), NotNull] public string  PublishPrivilegeName { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="_SYS_EPM", Name="PUBLISH_PRIVILEGES")]
	public partial class _SYS_EPM_PublishPrivilege
	{
		[Column("PUBLISH_PRIVILEGE_NAME"), PrimaryKey,  NotNull] public string  PublishPrivilegeName { get; set; } = null!; // NVARCHAR(256)
		[Column("SCHEMA_NAME"),               Nullable         ] public string? SchemaName           { get; set; } // NVARCHAR(256)
		[Column("OBJECT_NAME"),               Nullable         ] public string? ObjectName           { get; set; } // NVARCHAR(256)
		[Column(),                            Nullable         ] public string? FILTER               { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_XS", Name="RUNTIME_CONFIGURATION")]
	public partial class _SYS_XS_RuntimeConfiguration
	{
		[Column("PACKAGE_ID"), PrimaryKey,  NotNull] public string    PackageId     { get; set; } = null!; // NVARCHAR(256)
		[Column(),                          NotNull] public string    CONFIGURATION { get; set; } = null!; // NVARCHAR(2048)
		[Column("CHANGED_BY"),    Nullable         ] public string?   ChangedBy     { get; set; } // NVARCHAR(256)
		[Column("CHANGED_AT"),    Nullable         ] public DateTime? ChangedAt     { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_DATA_ANONYMIZATION", Name="RUNTIME_DATA_")]
	public partial class _SYS_DATA_ANONYMIZATION_RuntimeData
	{
		[Column("ANONYMIZATION_ID"), PrimaryKey(1), NotNull] public string AnonymizationId { get; set; } = null!; // NVARCHAR(1024)
		[Column("PARAMETER_KEY"),    PrimaryKey(2), NotNull] public string ParameterKey    { get; set; } = null!; // VARCHAR(256)
		[Column("PARAMETER_VALUE"),                 NotNull] public string ParameterValue  { get; set; } = null!; // NCLOB
	}

	[Table(Schema="_SYS_XS", Name="RUNTIME_JSON_EXTENSIONS")]
	public partial class _SYS_XS_RuntimeJsonExtension
	{
		[Column("PACKAGE_ID"),    PrimaryKey(1), NotNull] public string  PackageId    { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),   PrimaryKey(2), NotNull] public string  ObjectName   { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"), PrimaryKey(3), NotNull] public string  ObjectSuffix { get; set; } = null!; // NVARCHAR(255)
		[Column(),                   Nullable           ] public string? CONTENT      { get; set; } // NVARCHAR(4096)
		[Column(),                   Nullable           ] public string? DESCRIPTION  { get; set; } // NVARCHAR(512)
	}

	[Table(Schema="_SYS_XS", Name="RUNTIME_JSON_OBJECTS")]
	public partial class _SYS_XS_RuntimeJsonObject
	{
		[Column("PACKAGE_ID"),    PrimaryKey(1), NotNull] public string  PackageId    { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),   PrimaryKey(2), NotNull] public string  ObjectName   { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"), PrimaryKey(3), NotNull] public string  ObjectSuffix { get; set; } = null!; // NVARCHAR(255)
		[Column(),                   Nullable           ] public string? CONTENT      { get; set; } // NVARCHAR(4096)
	}

	[Table(Schema="_SYS_XS", Name="SAML_PROVIDER_CONFIG")]
	public partial class _SYS_XS_SamlProviderConfig
	{
		[Column("SAML_PROVIDER"),       PrimaryKey(1), NotNull] public string  SamlProvider       { get; set; } = null!; // NVARCHAR(256)
		[Column("PROFILE_TYPE"),        PrimaryKey(2), NotNull] public byte    ProfileType        { get; set; } // TINYINT
		[Column("BINDING_TYPE"),        PrimaryKey(3), NotNull] public byte    BindingType        { get; set; } // TINYINT
		[Column("DESTINATION_PACKAGE"),                NotNull] public string  DestinationPackage { get; set; } = null!; // NVARCHAR(256)
		[Column("DESTINATION_NAME"),                   NotNull] public string  DestinationName    { get; set; } = null!; // NVARCHAR(256)
		[Column(),                         Nullable           ] public string? PATH               { get; set; } // NVARCHAR(2048)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db.admin::UIS_APPSITES_PROPERTIES_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbAdminUisAppsitesPropertiesView
	{
		[Column(),             NotNull    ] public string    ID        { get; set; } = null!; // VARCHAR(50)
		[Column("TENANT_ID"),  NotNull    ] public string    TenantId  { get; set; } = null!; // VARCHAR(50)
		[Column(),             NotNull    ] public string    DTYPE     { get; set; } = null!; // VARCHAR(20)
		[Column("SITE_ID"),    NotNull    ] public string    SiteId    { get; set; } = null!; // NVARCHAR(2000)
		[Column(),             NotNull    ] public string    KEY       { get; set; } = null!; // NVARCHAR(300)
		[Column(),                Nullable] public string?   VALUE     { get; set; } // NCLOB
		[Column("VALUE_TYPE"),    Nullable] public string?   ValueType { get; set; } // NVARCHAR(20)
		[Column(),                Nullable] public int?      VERSION   { get; set; } // INTEGER
		[Column(),                Nullable] public DateTime? CREATED   { get; set; } // TIMESTAMP
		[Column(),                Nullable] public DateTime? UPDATED   { get; set; } // TIMESTAMP
		[Column("UPDATED_BY"),    Nullable] public string?   UpdatedBy { get; set; } // NVARCHAR(300)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db.admin::UIS_APPSITES_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbAdminUisAppsitesView
	{
		[Column(),            NotNull    ] public string  ID          { get; set; } = null!; // NVARCHAR(2000)
		[Column("TENANT_ID"), NotNull    ] public string  TenantId    { get; set; } = null!; // VARCHAR(50)
		[Column(),            NotNull    ] public string  DTYPE       { get; set; } = null!; // VARCHAR(20)
		[Column(),               Nullable] public string? NAME        { get; set; } // NVARCHAR(300)
		[Column(),               Nullable] public string? LAYOUT      { get; set; } // CLOB
		[Column(),               Nullable] public string? DESCRIPTION { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db.admin::UIS_PAGES_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbAdminUisPagesView
	{
		[Column(),            NotNull    ] public string  ID       { get; set; } = null!; // VARCHAR(50)
		[Column("TENANT_ID"), NotNull    ] public string  TenantId { get; set; } = null!; // VARCHAR(50)
		[Column(),            NotNull    ] public string  DTYPE    { get; set; } = null!; // VARCHAR(20)
		[Column("SITE_ID"),   NotNull    ] public string  SiteId   { get; set; } = null!; // NVARCHAR(2000)
		[Column(),               Nullable] public string? NAME     { get; set; } // NVARCHAR(300)
		[Column(),               Nullable] public string? LAYOUT   { get; set; } // CLOB
		[Column("LAYOUT_ID"),    Nullable] public string? LayoutId { get; set; } // VARCHAR(50)
		[Column("PARENT_ID"),    Nullable] public string? ParentId { get; set; } // VARCHAR(50)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db.admin::UIS_PERMISSIONS_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbAdminUisPermissionsView
	{
		[Column("OBJECT_ID"),   NotNull    ] public string    ObjectId   { get; set; } = null!; // NVARCHAR(2000)
		[Column("OBJECT_TYPE"), NotNull    ] public string    ObjectType { get; set; } = null!; // NVARCHAR(2000)
		[Column("ROLE_ID"),     NotNull    ] public string    RoleId     { get; set; } = null!; // NVARCHAR(300)
		[Column(),              NotNull    ] public string    OPERATION  { get; set; } = null!; // NVARCHAR(50)
		[Column(),                 Nullable] public DateTime? CREATED    { get; set; } // TIMESTAMP
		[Column(),                 Nullable] public DateTime? UPDATED    { get; set; } // TIMESTAMP
		[Column(),                 Nullable] public int?      VERSION    { get; set; } // INTEGER
		[Column(),              NotNull    ] public string    DTYPE      { get; set; } = null!; // NVARCHAR(50)
		[Column("TENANT_ID"),   NotNull    ] public string    TenantId   { get; set; } = null!; // NVARCHAR(50)
		[Column(),              NotNull    ] public string    NAMESPACE  { get; set; } = null!; // NVARCHAR(4000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db.admin::UIS_WIDGETS_PROPERTIES_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbAdminUisWidgetsPropertiesView
	{
		[Column("TENANT_ID"), NotNull    ] public string  TenantId { get; set; } = null!; // VARCHAR(50)
		[Column(),            NotNull    ] public string  ID       { get; set; } = null!; // VARCHAR(50)
		[Column(),            NotNull    ] public string  KEY      { get; set; } = null!; // NVARCHAR(300)
		[Column(),               Nullable] public string? VALUE    { get; set; } // NVARCHAR(5000)
		[Column("SITE_ID"),   NotNull    ] public string  SiteId   { get; set; } = null!; // NVARCHAR(2000)
		[Column(),            NotNull    ] public string  DTYPE    { get; set; } = null!; // VARCHAR(20)
		[Column("WIDGET_ID"), NotNull    ] public string  WidgetId { get; set; } = null!; // VARCHAR(50)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db.admin::UIS_WIDGETS_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbAdminUisWidgetsView
	{
		[Column("TENANT_ID"),               NotNull    ] public string  TenantId             { get; set; } = null!; // VARCHAR(50)
		[Column(),                          NotNull    ] public string  ID                   { get; set; } = null!; // VARCHAR(50)
		[Column(),                          NotNull    ] public string  DTYPE                { get; set; } = null!; // VARCHAR(20)
		[Column("WIDGET_TEMPLATE_LIST_ID"),    Nullable] public string? WidgetTemplateListId { get; set; } // NVARCHAR(2000)
		[Column("TEMPLATE_ID"),                Nullable] public string? TemplateId           { get; set; } // NVARCHAR(5000)
		[Column("SITE_ID"),                 NotNull    ] public string  SiteId               { get; set; } = null!; // NVARCHAR(2000)
		[Column("PARENT_ID"),                  Nullable] public string? ParentId             { get; set; } // VARCHAR(50)
		[Column("LAYOUT_ID"),                  Nullable] public string? LayoutId             { get; set; } // VARCHAR(50)
		[Column(),                             Nullable] public string? TYPE                 { get; set; } // NVARCHAR(300)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db.admin::UIS_WIDGET_TEMPLATE_LISTS_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbAdminUisWidgetTemplateListsView
	{
		[Column("TENANT_ID"),     NotNull    ] public string  TenantId     { get; set; } = null!; // VARCHAR(50)
		[Column("REPOSITORY_ID"), NotNull    ] public string  RepositoryId { get; set; } = null!; // NVARCHAR(2000)
		[Column(),                   Nullable] public string? NAME         { get; set; } // NVARCHAR(300)
		[Column(),                   Nullable] public string? TYPE         { get; set; } // VARCHAR(10)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db.admin::UIS_WIDGET_TEMPLATE_PROPERTIES_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbAdminUisWidgetTemplatePropertiesView
	{
		[Column("TENANT_ID"),          NotNull    ] public string  TenantId         { get; set; } = null!; // VARCHAR(50)
		[Column("REPOSITORY_ID"),      NotNull    ] public string  RepositoryId     { get; set; } = null!; // NVARCHAR(2000)
		[Column("WIDGET_TEMPLATE_ID"), NotNull    ] public string  WidgetTemplateId { get; set; } = null!; // VARCHAR(50)
		[Column(),                     NotNull    ] public string  KEY              { get; set; } = null!; // NVARCHAR(300)
		[Column(),                        Nullable] public string? VALUE            { get; set; } // NVARCHAR(5000)
		[Column(),                     NotNull    ] public string  ID               { get; set; } = null!; // VARCHAR(50)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db.admin::UIS_WIDGET_TEMPLATES_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbAdminUisWidgetTemplatesView
	{
		[Column("TENANT_ID"),     NotNull    ] public string  TenantId     { get; set; } = null!; // VARCHAR(50)
		[Column("REPOSITORY_ID"), NotNull    ] public string  RepositoryId { get; set; } = null!; // NVARCHAR(2000)
		[Column(),                NotNull    ] public string  ID           { get; set; } = null!; // VARCHAR(50)
		[Column(),                   Nullable] public string? TYPE         { get; set; } // NVARCHAR(300)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::CONFIGURATIONS")]
	public partial class UIS_SapHanaUisDbConfiguration
	{
		[PrimaryKey, NotNull    ] public string    KEY         { get; set; } = null!; // NVARCHAR(1000)
		[Column,        Nullable] public DateTime? CREATED     { get; set; } // TIMESTAMP
		[Column,        Nullable] public DateTime? UPDATED     { get; set; } // TIMESTAMP
		[Column,        Nullable] public string?   VERSION     { get; set; } // NVARCHAR(5000)
		[Column,        Nullable] public string?   VALUE       { get; set; } // NVARCHAR(5000)
		[Column,        Nullable] public string?   DESCRIPTION { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::FIORI_CATALOG_CORE_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbFioriCatalogCoreView
	{
		[Column("PACKAGE_ID"),          Nullable] public string? PackageId       { get; set; } // NVARCHAR(2000)
		[Column("OBJECT_NAME"),         Nullable] public string? ObjectName      { get; set; } // NVARCHAR(2000)
		[Column("REPOSITORY_ID"),    NotNull    ] public string  RepositoryId    { get; set; } = null!; // NVARCHAR(2000)
		[Column("TILE_ID"),          NotNull    ] public string  TileId          { get; set; } = null!; // VARCHAR(50)
		[Column("TILE_NAME"),           Nullable] public string? TileName        { get; set; } // NVARCHAR(300)
		[Column("TILE_URL"),            Nullable] public string? TileUrl         { get; set; } // NVARCHAR(5000)
		[Column("TILE_THUMBNAIL"),      Nullable] public string? TileThumbnail   { get; set; } // CLOB
		[Column("TILE_TYPE"),           Nullable] public string? TileType        { get; set; } // NVARCHAR(300)
		[Column("TILE_DESCRIPTION"),    Nullable] public string? TileDescription { get; set; } // NVARCHAR(5000)
		[Column("TENANT_ID"),        NotNull    ] public string  TenantId        { get; set; } = null!; // VARCHAR(50)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::GET_USER_ROLES_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbGetUserRolesView
	{
		[Column, Nullable] public string? NAME  { get; set; } // NVARCHAR(256)
		[Column, Nullable] public string? VALUE { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::INTENT_ALIAS_MAPPING_V2")]
	public partial class UIS_SapHanaUisDbIntentAliasMappingV2
	{
		/// <summary>
		/// The Intent ID
		/// </summary>
		[Column(),                  PrimaryKey,  NotNull] public string  ID             { get; set; } = null!; // VARCHAR(64)
		/// <summary>
		/// The Semantic Object part of the Intent
		/// </summary>
		[Column("SEMANTIC_OBJECT"),              NotNull] public string  SemanticObject { get; set; } = null!; // VARCHAR(64)
		/// <summary>
		/// The Action part of the Intent
		/// </summary>
		[Column(),                               NotNull] public string  ACTION         { get; set; } = null!; // VARCHAR(64)
		/// <summary>
		/// The Area part of the Alias
		/// </summary>
		[Column(),                               NotNull] public string  AREA           { get; set; } = null!; // VARCHAR(64)
		/// <summary>
		/// Alias
		/// </summary>
		[Column(),                               NotNull] public string  ALIAS          { get; set; } = null!; // VARCHAR(256)
		/// <summary>
		/// Optional. Used to link this mapping with specific Widget List Catalog
		/// </summary>
		[Column(),                     Nullable         ] public string? CONTEXT        { get; set; } // NVARCHAR(5000)
		/// <summary>
		/// Optional. Intent Information
		/// </summary>
		[Column(),                     Nullable         ] public string? INFO           { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::NAVIGATION_TARGET")]
	public partial class UIS_SapHanaUisDbNavigationTarget
	{
		/// <summary>
		/// Navigation target URI
		/// </summary>
		[Column(),                                        NotNull] public string  URI                   { get; set; } = null!; // NVARCHAR(5000)
		/// <summary>
		/// Navigation object type
		/// </summary>
		[Column(),                                        NotNull] public string  TYPE                  { get; set; } = null!; // VARCHAR(64)
		/// <summary>
		/// Navigation target description
		/// </summary>
		[Column(),                            Nullable           ] public string? DESCRIPTION           { get; set; } // NVARCHAR(5000)
		/// <summary>
		/// The Area part of the Alias
		/// </summary>
		[Column(),                         PrimaryKey(1), NotNull] public string  AREA                  { get; set; } = null!; // VARCHAR(64)
		/// <summary>
		/// Alias
		/// </summary>
		[Column(),                         PrimaryKey(2), NotNull] public string  ALIAS                 { get; set; } = null!; // VARCHAR(256)
		/// <summary>
		/// Navigation target title
		/// </summary>
		[Column(),                            Nullable           ] public string? TITLE                 { get; set; } // NVARCHAR(256)
		/// <summary>
		/// UI5 View name for displaying objects of this type
		/// </summary>
		[Column("VIEW_NAME"),                 Nullable           ] public string? ViewName              { get; set; } // VARCHAR(512)
		/// <summary>
		/// Parameters passed to the target application
		/// </summary>
		[Column("APPLICATION_PARAMETERS"),    Nullable           ] public string? ApplicationParameters { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::NAVIGATION_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbNavigationView
	{
		[Column("TENANT_ID"),        NotNull    ] public string  TenantId         { get; set; } = null!; // VARCHAR(4)
		[Column("id"),               NotNull    ] public string  Id               { get; set; } = null!; // VARCHAR(129)
		[Column("applicationType"),  NotNull    ] public string  ApplicationType  { get; set; } = null!; // VARCHAR(64)
		[Column("applicationData"),     Nullable] public string? ApplicationData  { get; set; } // VARCHAR(512)
		[Column("postParameters"),      Nullable] public string? PostParameters   { get; set; } // NVARCHAR(5000)
		[Column("text"),                Nullable] public string? Text             { get; set; } // NVARCHAR(256)
		[Column("applicationAlias"), NotNull    ] public string  ApplicationAlias { get; set; } = null!; // VARCHAR(256)
		[Column("semanticObject"),   NotNull    ] public string  SemanticObject   { get; set; } = null!; // VARCHAR(64)
		[Column("action"),           NotNull    ] public string  Action           { get; set; } = null!; // VARCHAR(64)
		[Column("url"),                 Nullable] public string? Url              { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db.personalization::_UIS_USER_WIDGETS_TEMPORARY")]
	public partial class UIS_SapHanaUisDbPersonalizationUisUserWidgetsTemporary
	{
		[Column(),                          NotNull    ] public string  ID                   { get; set; } = null!; // VARCHAR(50)
		[Column("TEMPLATE_ID"),             NotNull    ] public string  TemplateId           { get; set; } = null!; // NVARCHAR(5000)
		[Column("WIDGET_TEMPLATE_LIST_ID"),    Nullable] public string? WidgetTemplateListId { get; set; } // NVARCHAR(2000)
		[Column("SITE_ID"),                 NotNull    ] public string  SiteId               { get; set; } = null!; // NVARCHAR(2000)
		[Column("PARENT_ID"),                  Nullable] public string? ParentId             { get; set; } // VARCHAR(50)
		[Column("TENANT_ID"),               NotNull    ] public string  TenantId             { get; set; } = null!; // VARCHAR(50)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::SEMANTIC_OBJECTS")]
	public partial class UIS_SapHanaUisDbSemanticObject
	{
		/// <summary>
		/// Semantic Object
		/// </summary>
		[Column("SEMANTIC_OBJECT"),      PrimaryKey, NotNull] public string SemanticObject     { get; set; } = null!; // VARCHAR(64)
		/// <summary>
		/// Semantic Object Name
		/// </summary>
		[Column("SEMANTIC_OBJECT_NAME"),             NotNull] public string SemanticObjectName { get; set; } = null!; // VARCHAR(256)
		/// <summary>
		/// Semantic Object Description
		/// </summary>
		[Column("SEMANTIC_OBJECT_DESC"),             NotNull] public string SemanticObjectDesc { get; set; } = null!; // VARCHAR(5000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::SEMANTIC_OBJECT_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbSemanticObjectView
	{
		[Column("SEMANTIC_OBJECT"),      NotNull] public string SemanticObject     { get; set; } = null!; // VARCHAR(64)
		[Column("SEMANTIC_OBJECT_NAME"), NotNull] public string SemanticObjectName { get; set; } = null!; // VARCHAR(256)
		[Column("SEMANTIC_OBJECT_DESC"), NotNull] public string SemanticObjectDesc { get; set; } = null!; // VARCHAR(5000)
		[Column("TENANT_ID"),            NotNull] public string TenantId           { get; set; } = null!; // VARCHAR(4)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::THEMES")]
	public partial class UIS_SapHanaUisDbTheme
	{
		[Column(),            PrimaryKey,  NotNull] public string  ID       { get; set; } = null!; // NVARCHAR(256)
		[Column(),                         NotNull] public string  NAME     { get; set; } = null!; // NVARCHAR(256)
		[Column("ROOT_PATH"),    Nullable         ] public string? RootPath { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_APPSITES_DATA_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisAppsitesDataView
	{
		[Column("SITE_ID"),        NotNull    ] public string  SiteId       { get; set; } = null!; // NVARCHAR(2000)
		[Column("SITE_NAME"),         Nullable] public string? SiteName     { get; set; } // NVARCHAR(300)
		[Column("SITE_LAYOUT"),       Nullable] public string? SiteLayout   { get; set; } // CLOB
		[Column("PG_LAYOUT_ID"),      Nullable] public string? PgLayoutId   { get; set; } // VARCHAR(50)
		[Column("PG_ID"),             Nullable] public string? PgId         { get; set; } // VARCHAR(50)
		[Column("PG_NAME"),           Nullable] public string? PgName       { get; set; } // NVARCHAR(300)
		[Column("PG_LAYOUT"),         Nullable] public string? PgLayout     { get; set; } // CLOB
		[Column("WG_LAYOUT_ID"),      Nullable] public string? WgLayoutId   { get; set; } // VARCHAR(50)
		[Column("WG_ID"),             Nullable] public string? WgId         { get; set; } // VARCHAR(50)
		[Column("WG_NAME"),           Nullable] public string? WgName       { get; set; } // NVARCHAR(300)
		[Column(),                    Nullable] public string? SRC          { get; set; } // VARCHAR(5000)
		[Column(),                    Nullable] public string? ICON         { get; set; } // CLOB
		[Column(),                    Nullable] public string? KEY          { get; set; } // NVARCHAR(300)
		[Column(),                    Nullable] public string? VALUE        { get; set; } // NVARCHAR(5000)
		[Column("PARENT_PAGE_ID"),    Nullable] public string? ParentPageId { get; set; } // VARCHAR(50)
		[Column("TEMPLATE_ID"),       Nullable] public string? TemplateId   { get; set; } // NVARCHAR(5000)
		[Column(),                    Nullable] public string? TYPE         { get; set; } // NVARCHAR(300)
		[Column("TENANT_ID"),      NotNull    ] public string  TenantId     { get; set; } = null!; // VARCHAR(50)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_APPSITES_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisAppsitesView
	{
		[Column(),              NotNull    ] public string  ID          { get; set; } = null!; // NVARCHAR(2000)
		[Column("name"),           Nullable] public string? Name        { get; set; } // NVARCHAR(300)
		[Column("description"),    Nullable] public string? Description { get; set; } // NVARCHAR(5000)
		[Column("package_id"),     Nullable] public string? PackageId   { get; set; } // NVARCHAR(2000)
		[Column("object_name"),    Nullable] public string? ObjectName  { get; set; } // NVARCHAR(2000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_CATALOGS")]
	public partial class UIS_SapHanaUisDbUisCatalog
	{
		[Column(),                      PrimaryKey,  NotNull] public string  ID                { get; set; } = null!; // VARCHAR(256)
		[Column(),                                   NotNull] public string  NAME              { get; set; } = null!; // NVARCHAR(1000)
		[Column(),                         Nullable         ] public string? DESCRIPTION       { get; set; } // NVARCHAR(5000)
		[Column("CATALOG_PROPERTIES"),     Nullable         ] public string? CatalogProperties { get; set; } // NVARCHAR(5000)
		[Column("ITEMS_SOURCE_SYSTEM"),              NotNull] public string  ItemsSourceSystem { get; set; } = null!; // NVARCHAR(5000)
		[Column("ITEM_TYPES"),                       NotNull] public string  ItemTypes         { get; set; } = null!; // NVARCHAR(5000)
		[Column("ITEM_PROPERTIES"),        Nullable         ] public string? ItemProperties    { get; set; } // NVARCHAR(5000)
		[Column("ITEM_ACTIONS"),           Nullable         ] public string? ItemActions       { get; set; } // NVARCHAR(5000)
		[Column(),                         Nullable         ] public string? URI               { get; set; } // NVARCHAR(5000)
		[Column(),                                   NotNull] public string  TYPE              { get; set; } = null!; // VARCHAR(1000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_CATALOGS_TRANSLATION_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisCatalogsTranslationView
	{
		[Column("PACKAGE_ID"),       Nullable] public string? PackageId    { get; set; } // NVARCHAR(2000)
		[Column("OBJECT_NAME"),      Nullable] public string? ObjectName   { get; set; } // NVARCHAR(2000)
		[Column("OBJECT_SUFFIX"), NotNull    ] public string  ObjectSuffix { get; set; } = null!; // VARCHAR(8)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_CATALOGS_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisCatalogsView
	{
		[Column(),            NotNull    ] public string  ID       { get; set; } = null!; // VARCHAR(256)
		[Column("name"),      NotNull    ] public string  Name     { get; set; } = null!; // NVARCHAR(1000)
		[Column(),            NotNull    ] public string  TYPE     { get; set; } = null!; // VARCHAR(1000)
		[Column(),               Nullable] public string? URI      { get; set; } // NVARCHAR(5000)
		[Column("TENANT_ID"), NotNull    ] public string  TenantId { get; set; } = null!; // VARCHAR(4)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_FIORI_CATALOGS_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisFioriCatalogsView
	{
		[Column("PACKAGE_ID"),          Nullable] public string? PackageId       { get; set; } // NVARCHAR(2000)
		[Column("OBJECT_NAME"),         Nullable] public string? ObjectName      { get; set; } // NVARCHAR(2000)
		[Column("TILE_ID"),          NotNull    ] public string  TileId          { get; set; } = null!; // VARCHAR(50)
		[Column("CATALOG_NAME"),        Nullable] public string? CatalogName     { get; set; } // NVARCHAR(300)
		[Column("TILE_NAME"),           Nullable] public string? TileName        { get; set; } // NVARCHAR(300)
		[Column("TILE_URL"),            Nullable] public string? TileUrl         { get; set; } // NVARCHAR(5000)
		[Column("TILE_THUMBNAIL"),      Nullable] public string? TileThumbnail   { get; set; } // CLOB
		[Column("TILE_TYPE"),        NotNull    ] public string  TileType        { get; set; } = null!; // NVARCHAR(300)
		[Column("TILE_DESCRIPTION"),    Nullable] public string? TileDescription { get; set; } // NVARCHAR(5000)
		[Column(),                      Nullable] public string? KEY             { get; set; } // NVARCHAR(300)
		[Column(),                      Nullable] public string? VALUE           { get; set; } // NVARCHAR(5000)
		[Column("TENANT_ID"),        NotNull    ] public string  TenantId        { get; set; } = null!; // VARCHAR(50)
		[Column("REPOSITORY_ID"),    NotNull    ] public string  RepositoryId    { get; set; } = null!; // NVARCHAR(2000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_INTENT_ALIAS_MAPPING_V2_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisIntentAliasMappingV2View
	{
		[Column(),                  NotNull    ] public string  ID             { get; set; } = null!; // VARCHAR(64)
		[Column("SEMANTIC_OBJECT"), NotNull    ] public string  SemanticObject { get; set; } = null!; // VARCHAR(64)
		[Column(),                  NotNull    ] public string  ACTION         { get; set; } = null!; // VARCHAR(64)
		[Column(),                  NotNull    ] public string  AREA           { get; set; } = null!; // VARCHAR(64)
		[Column(),                  NotNull    ] public string  ALIAS          { get; set; } = null!; // VARCHAR(256)
		[Column(),                     Nullable] public string? CONTEXT        { get; set; } // NVARCHAR(5000)
		[Column(),                     Nullable] public string? INFO           { get; set; } // NVARCHAR(5000)
		[Column("TENANT_ID"),       NotNull    ] public string  TenantId       { get; set; } = null!; // VARCHAR(4)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_NAVIGATION_TARGET_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisNavigationTargetView
	{
		[Column(),                         NotNull    ] public string  URI                   { get; set; } = null!; // NVARCHAR(5000)
		[Column(),                         NotNull    ] public string  TYPE                  { get; set; } = null!; // VARCHAR(64)
		[Column(),                            Nullable] public string? DESCRIPTION           { get; set; } // NVARCHAR(5000)
		[Column(),                         NotNull    ] public string  AREA                  { get; set; } = null!; // VARCHAR(64)
		[Column(),                         NotNull    ] public string  ALIAS                 { get; set; } = null!; // VARCHAR(256)
		[Column(),                            Nullable] public string? TITLE                 { get; set; } // NVARCHAR(256)
		[Column("VIEW_NAME"),                 Nullable] public string? ViewName              { get; set; } // VARCHAR(512)
		[Column("APPLICATION_PARAMETERS"),    Nullable] public string? ApplicationParameters { get; set; } // NVARCHAR(5000)
		[Column("TENANT_ID"),              NotNull    ] public string  TenantId              { get; set; } = null!; // VARCHAR(4)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::_UIS_PERMISSIONS")]
	public partial class UIS_SapHanaUisDbUisPermission
	{
		[Column("OBJECT_ID"),   PrimaryKey(3), NotNull] public string    ObjectId   { get; set; } = null!; // NVARCHAR(2000)
		[Column("OBJECT_TYPE"), PrimaryKey(4), NotNull] public string    ObjectType { get; set; } = null!; // NVARCHAR(2000)
		[Column("ROLE_ID"),     PrimaryKey(5), NotNull] public string    RoleId     { get; set; } = null!; // NVARCHAR(300)
		[Column(),              PrimaryKey(6), NotNull] public string    OPERATION  { get; set; } = null!; // NVARCHAR(50)
		[Column(),                 Nullable           ] public DateTime? CREATED    { get; set; } // TIMESTAMP
		[Column(),                 Nullable           ] public DateTime? UPDATED    { get; set; } // TIMESTAMP
		[Column(),                 Nullable           ] public int?      VERSION    { get; set; } // INTEGER
		[Column(),              PrimaryKey(2), NotNull] public string    DTYPE      { get; set; } = null!; // NVARCHAR(50)
		[Column("TENANT_ID"),   PrimaryKey(1), NotNull] public string    TenantId   { get; set; } = null!; // NVARCHAR(50)
		[Column(),              PrimaryKey(7), NotNull] public string    NAMESPACE  { get; set; } = null!; // NVARCHAR(4000)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_THEMES_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisThemesView
	{
		[Column(),            NotNull    ] public string  ID       { get; set; } = null!; // NVARCHAR(256)
		[Column(),            NotNull    ] public string  NAME     { get; set; } = null!; // NVARCHAR(256)
		[Column("ROOT_PATH"),    Nullable] public string? RootPath { get; set; } // NVARCHAR(5000)
		[Column("TENANT_ID"), NotNull    ] public string  TenantId { get; set; } = null!; // VARCHAR(4)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_TRANSLATION_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisTranslationView
	{
		[Column("PACKAGE_ID"),       Nullable] public string? PackageId    { get; set; } // NVARCHAR(2000)
		[Column("OBJECT_NAME"),      Nullable] public string? ObjectName   { get; set; } // NVARCHAR(2000)
		[Column("OBJECT_SUFFIX"), NotNull    ] public string  ObjectSuffix { get; set; } = null!; // VARCHAR(9)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_WIDGETS_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisWidgetsView
	{
		[Column(),              NotNull    ] public string  ID          { get; set; } = null!; // VARCHAR(50)
		[Column("name"),           Nullable] public string? Name        { get; set; } // NVARCHAR(300)
		[Column("description"),    Nullable] public string? Description { get; set; } // NVARCHAR(5000)
		[Column(),                 Nullable] public string? URI         { get; set; } // NVARCHAR(5000)
		[Column("type"),        NotNull    ] public string  Type        { get; set; } = null!; // VARCHAR(6)
	}

	[Table(Schema="UIS", Name="sap.hana.uis.db::UIS_WIDGET_TEMPLATES_VIEW", IsView=true)]
	public partial class UIS_SapHanaUisDbUisWidgetTemplatesView
	{
		[Column("PACKAGE_ID"),          Nullable] public string? PackageId       { get; set; } // NVARCHAR(2000)
		[Column("OBJECT_NAME"),         Nullable] public string? ObjectName      { get; set; } // NVARCHAR(2000)
		[Column("REPOSITORY_ID"),    NotNull    ] public string  RepositoryId    { get; set; } = null!; // NVARCHAR(2000)
		[Column("TILE_ID"),          NotNull    ] public string  TileId          { get; set; } = null!; // VARCHAR(50)
		[Column("TILE_NAME"),           Nullable] public string? TileName        { get; set; } // NVARCHAR(300)
		[Column("TILE_URL"),            Nullable] public string? TileUrl         { get; set; } // NVARCHAR(5000)
		[Column("TILE_THUMBNAIL"),      Nullable] public string? TileThumbnail   { get; set; } // CLOB
		[Column("TILE_TYPE"),           Nullable] public string? TileType        { get; set; } // NVARCHAR(300)
		[Column("TILE_DESCRIPTION"),    Nullable] public string? TileDescription { get; set; } // NVARCHAR(5000)
		[Column("TENANT_ID"),        NotNull    ] public string  TenantId        { get; set; } = null!; // VARCHAR(50)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.db::fetchAllRolesView", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminDbFetchAllRolesView
	{
		[Column, Nullable] public string? VALUE { get; set; } // NVARCHAR(512)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.db::samlIdpListCount", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminDbSamlIdpListCount
	{
		[Column, Nullable] public string? VALUE { get; set; } // NVARCHAR(512)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.jobs.server.db::DISTINCT_ID", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctId
	{
		[Column(),           NotNull] public long   ID      { get; set; } // BIGINT
		[Column("JOB_NAME"), NotNull] public string JobName { get; set; } = null!; // NVARCHAR(512)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.jobs.server.db::DISTINCT_LOG_ID", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctLogId
	{
		[Column(),           NotNull] public long   ID      { get; set; } // BIGINT
		[Column("JOB_NAME"), NotNull] public string JobName { get; set; } = null!; // NVARCHAR(512)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.jobs.server.db::DISTINCT_LOG_STATUS", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctLogStatus
	{
		[Column, NotNull] public string STATUS { get; set; } = null!; // VARCHAR(16)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.jobs.server.db::DISTINCT_SCHEDULE_ID", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctScheduleId
	{
		[Column(),           NotNull] public long   ID      { get; set; } // BIGINT
		[Column("JOB_NAME"), NotNull] public string JobName { get; set; } = null!; // NVARCHAR(512)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.jobs.server.db::DISTINCT_SCHEDULE_STATUS", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctScheduleStatus
	{
		[Column, NotNull] public string STATUS { get; set; } = null!; // VARCHAR(16)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.jobs.server.db::DISTINCT_USER", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminJobsServerDbDistinctUser
	{
		[Column, Nullable] public string? USER { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.jobs.server.db::JOBS", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminJobsServerDbJob
	{
		[Column(),                    NotNull    ] public string    NAME             { get; set; } = null!; // NVARCHAR(512)
		[Column("JOB_NAME"),             Nullable] public string?   JobName          { get; set; } // NVARCHAR(512)
		[Column(),                       Nullable] public string?   PCKG             { get; set; } // NVARCHAR(512)
		[Column(),                    NotNull    ] public string    DESCRIPTION      { get; set; } = null!; // NVARCHAR(512)
		[Column(),                    NotNull    ] public string    ACTION           { get; set; } = null!; // NVARCHAR(512)
		[Column(),                    NotNull    ] public string    USER             { get; set; } = null!; // NVARCHAR(256)
		[Column(),                       Nullable] public string?   LOCALE           { get; set; } // VARCHAR(64)
		[Column(),                    NotNull    ] public string    STATUS           { get; set; } = null!; // VARCHAR(16)
		[Column("START_TIME"),           Nullable] public DateTime? StartTime        { get; set; } // TIMESTAMP
		[Column("END_TIME"),             Nullable] public DateTime? EndTime          { get; set; } // TIMESTAMP
		[Column(),                       Nullable] public string?   LRSTATUS         { get; set; } // VARCHAR(16)
		[Column("DATE_FORMAT"),       NotNull    ] public string    DateFormat       { get; set; } = null!; // NVARCHAR(5000)
		[Column("TIME_FORMAT"),       NotNull    ] public string    TimeFormat       { get; set; } = null!; // NVARCHAR(5000)
		[Column("DATE_TIME_FORMAT"),  NotNull    ] public string    DateTimeFormat   { get; set; } = null!; // NVARCHAR(5000)
		[Column("SESSION_TIMEOUT"),      Nullable] public int?      SessionTimeout   { get; set; } // INTEGER
		[Column("SIGNATURE_VERSION"),    Nullable] public int?      SignatureVersion { get; set; } // INTEGER
		[Column("ACTIVATED_BY"),         Nullable] public string?   ActivatedBy      { get; set; } // NVARCHAR(256)
		[Column("ACTIVATED_AT"),         Nullable] public DateTime? ActivatedAt      { get; set; } // TIMESTAMP
		[Column("CONFIGURED_BY"),        Nullable] public string?   ConfiguredBy     { get; set; } // NVARCHAR(256)
		[Column("CONFIGURED_AT"),        Nullable] public DateTime? ConfiguredAt     { get; set; } // TIMESTAMP
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.jobs.server.db::LOGS", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminJobsServerDbLog
	{
		[Column(),                   Nullable] public long?     ID             { get; set; } // BIGINT
		[Column("JOB_NAME"),         Nullable] public string?   JobName        { get; set; } // NVARCHAR(512)
		[Column(),                   Nullable] public string?   XSCRON         { get; set; } // NVARCHAR(512)
		[Column(),                   Nullable] public string?   DESCRIPTION    { get; set; } // NVARCHAR(512)
		[Column(),                   Nullable] public string?   PARAMETER      { get; set; } // NCLOB
		[Column("PLANNED_TIME"),     Nullable] public DateTime? PlannedTime    { get; set; } // TIMESTAMP
		[Column(),                   Nullable] public string?   STATUS         { get; set; } // NVARCHAR(512)
		[Column("ERROR_MESSAGE"),    Nullable] public string?   ErrorMessage   { get; set; } // NVARCHAR(512)
		[Column("STARTED_AT"),       Nullable] public DateTime? StartedAt      { get; set; } // TIMESTAMP
		[Column("FINISHED_AT"),      Nullable] public DateTime? FinishedAt     { get; set; } // TIMESTAMP
		[Column("TIME_TAKEN_MS"),    Nullable] public long?     TimeTakenMs    { get; set; } // BIGINT
		[Column("DATE_FORMAT"),      Nullable] public string?   DateFormat     { get; set; } // NVARCHAR(512)
		[Column("TIME_FORMAT"),      Nullable] public string?   TimeFormat     { get; set; } // NVARCHAR(512)
		[Column("DATE_TIME_FORMAT"), Nullable] public string?   DateTimeFormat { get; set; } // NVARCHAR(512)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.jobs.server.db::SCHEDULES", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminJobsServerDbSchedule
	{
		[Column(),                   Nullable] public long?     ID             { get; set; } // BIGINT
		[Column("JOB_NAME"),         Nullable] public string?   JobName        { get; set; } // NVARCHAR(512)
		[Column(),                   Nullable] public string?   XSCRON         { get; set; } // NVARCHAR(512)
		[Column(),                   Nullable] public string?   DESCRIPTION    { get; set; } // NVARCHAR(512)
		[Column(),                   Nullable] public string?   PARAMETER      { get; set; } // NCLOB
		[Column("PLANNED_TIME"),     Nullable] public DateTime? PlannedTime    { get; set; } // TIMESTAMP
		[Column(),                   Nullable] public string?   STATUS         { get; set; } // NVARCHAR(512)
		[Column("ERROR_MESSAGE"),    Nullable] public string?   ErrorMessage   { get; set; } // NVARCHAR(512)
		[Column("STARTED_AT"),       Nullable] public DateTime? StartedAt      { get; set; } // TIMESTAMP
		[Column("FINISHED_AT"),      Nullable] public DateTime? FinishedAt     { get; set; } // TIMESTAMP
		[Column("TIME_TAKEN_MS"),    Nullable] public long?     TimeTakenMs    { get; set; } // BIGINT
		[Column(),                   Nullable] public string?   ORIGIN         { get; set; } // NVARCHAR(512)
		[Column("CHANGED_BY"),       Nullable] public string?   ChangedBy      { get; set; } // NVARCHAR(512)
		[Column("CHANGED_AT"),       Nullable] public DateTime? ChangedAt      { get; set; } // TIMESTAMP
		[Column("DATE_FORMAT"),      Nullable] public string?   DateFormat     { get; set; } // NVARCHAR(512)
		[Column("TIME_FORMAT"),      Nullable] public string?   TimeFormat     { get; set; } // NVARCHAR(512)
		[Column("DATE_TIME_FORMAT"), Nullable] public string?   DateTimeFormat { get; set; } // NVARCHAR(512)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.admin.webdispatcher.server.db::APPLICATION_DETAILS", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsAdminWebdispatcherServerDbApplicationDetail
	{
		[Column("APPLICATION_NAME"),  Nullable] public string? ApplicationName { get; set; } // VARCHAR(256)
		[Column("DELIVERY_UNIT"),     Nullable] public string? DeliveryUnit    { get; set; } // VARCHAR(256)
		[Column(),                    Nullable] public string? VENDOR          { get; set; } // VARCHAR(256)
		[Column(),                    Nullable] public string? VALUE           { get; set; } // VARCHAR(512)
		[Column(),                    Nullable] public string? APP             { get; set; } // VARCHAR(512)
		[Column("LAYER_NAME"),        Nullable] public string? LayerName       { get; set; } // VARCHAR(512)
		[Column("TRACING_ENABLED"),   Nullable] public string? TracingEnabled  { get; set; } // VARCHAR(3)
		[Column("APP_PATH"),          Nullable] public string? AppPath         { get; set; } // VARCHAR(512)
		[Column("NEW_TRACING_STATE"), Nullable] public string? NewTracingState { get; set; } // VARCHAR(3)
	}

	[Table(Schema="SAP_REST_API", Name="sap.hana.xs.dt.base.OData::OwnerWorkspace", IsView=true)]
	public partial class SAP_REST_API_SapHanaXsDtBaseODataOwnerWorkspace
	{
		[Column, NotNull] public string OWNER     { get; set; } = null!; // NVARCHAR(256)
		[Column, NotNull] public string WORKSPACE { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="SAP_REST_API", Name="sap.hana.xs.dt.base.server.DTAccess::dtaa", IsView=true)]
	public partial class SAP_REST_API_SapHanaXsDtBaseServerDTAccessDtaa
	{
		[Column, NotNull    ] public string  NAMESPACE  { get; set; } = null!; // NVARCHAR(256)
		[Column, NotNull    ] public string  NAME       { get; set; } = null!; // NVARCHAR(256)
		[Column,    Nullable] public string? TYPE       { get; set; } // NVARCHAR(255)
		[Column, NotNull    ] public int     VERSION    { get; set; } // INTEGER
		[Column, NotNull    ] public string  OWNER      { get; set; } = null!; // NVARCHAR(256)
		[Column,    Nullable] public string? DEFINITION { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="SAP_REST_API", Name="sap.hana.xs.dt.base.server.DTAccess::dtai", IsView=true)]
	public partial class SAP_REST_API_SapHanaXsDtBaseServerDTAccessDtai
	{
		[Column, NotNull    ] public string  NAMESPACE { get; set; } = null!; // NVARCHAR(256)
		[Column, NotNull    ] public string  NAME      { get; set; } = null!; // NVARCHAR(256)
		[Column,    Nullable] public string? TYPE      { get; set; } // NVARCHAR(255)
	}

	[Table(Schema="SAP_REST_API", Name="sap.hana.xs.dt.base.server.persistency::CatalogAndRepositoryAnalyticalPrivileges", IsView=true)]
	public partial class SAP_REST_API_SapHanaXsDtBaseServerPersistencyCatalogAndRepositoryAnalyticalPrivilege
	{
		[Column,    Nullable] public string? NAMESPACE { get; set; } // NVARCHAR(256)
		[Column,    Nullable] public string? NAME      { get; set; } // NVARCHAR(769)
		[Column, NotNull    ] public string  TYPE      { get; set; } = null!; // VARCHAR(17)
		[Column, NotNull    ] public string  MODE      { get; set; } = null!; // VARCHAR(2)
	}

	[Table(Schema="SAP_REST_API", Name="sap.hana.xs.dt.base.server.persistency::CatalogAndRepositoryRoles", IsView=true)]
	public partial class SAP_REST_API_SapHanaXsDtBaseServerPersistencyCatalogAndRepositoryRole
	{
		[Column,    Nullable] public string? NAMESPACE { get; set; } // NVARCHAR(256)
		[Column,    Nullable] public string? NAME      { get; set; } // NVARCHAR(514)
		[Column, NotNull    ] public string  TYPE      { get; set; } = null!; // VARCHAR(4)
		[Column, NotNull    ] public string  MODE      { get; set; } = null!; // VARCHAR(2)
	}

	[Table(Schema="SAP_REST_API", Name="sap.hana.xs.dt.base.server.persistency::ExtensionWhitelist")]
	public partial class SAP_REST_API_SapHanaXsDtBaseServerPersistencyExtensionWhitelist
	{
		/// <summary>
		/// Extension Identifier
		/// </summary>
		[PrimaryKey, NotNull] public int    ExtensionID          { get; set; } // INTEGER
		/// <summary>
		/// Extension Point Caller
		/// </summary>
		[Column,     NotNull] public string ExtensionPointCaller { get; set; } = null!; // VARCHAR(128)
		/// <summary>
		/// Extension Point Mode
		/// </summary>
		[Column,     NotNull] public string ExtensionPointMode   { get; set; } = null!; // VARCHAR(20)
		/// <summary>
		/// Extension Libname
		/// </summary>
		[Column,     NotNull] public string ExtensionLibName     { get; set; } = null!; // VARCHAR(60)
		/// <summary>
		/// Extension LibLocation
		/// </summary>
		[Column,     NotNull] public string ExtensionLibLocation { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="SAP_REST_API", Name="sap.hana.xs.dt.base.server.persistency::RepositoryPackages", IsView=true)]
	public partial class SAP_REST_API_SapHanaXsDtBaseServerPersistencyRepositoryPackage
	{
		[Column("PACKAGE_ID"),              NotNull    ] public string  PackageId             { get; set; } = null!; // NVARCHAR(256)
		[Column("SRC_SYSTEM"),                 Nullable] public string? SrcSystem             { get; set; } // NVARCHAR(256)
		[Column("SRC_TENANT"),                 Nullable] public string? SrcTenant             { get; set; } // VARCHAR(256)
		[Column(),                             Nullable] public string? DESCRIPTION           { get; set; } // NVARCHAR(256)
		[Column(),                             Nullable] public string? RESPONSIBLE           { get; set; } // NVARCHAR(256)
		[Column("ORIG_LANG"),                  Nullable] public string? OrigLang              { get; set; } // NVARCHAR(42)
		[Column("IS_STRUCTURAL"),              Nullable] public byte?   IsStructural          { get; set; } // TINYINT
		[Column("DELIVERY_UNIT"),              Nullable] public string? DeliveryUnit          { get; set; } // NVARCHAR(256)
		[Column("TEXT_COLLECTION"),            Nullable] public string? TextCollection        { get; set; } // NVARCHAR(256)
		[Column("TEXT_STATUS"),                Nullable] public string? TextStatus            { get; set; } // NVARCHAR(64)
		[Column("TEXT_TERMINOLOGY_DOMAIN"),    Nullable] public string? TextTerminologyDomain { get; set; } // NVARCHAR(256)
		[Column("HINTS_FOR_TRANSLATION"),      Nullable] public string? HintsForTranslation   { get; set; } // NVARCHAR(256)
		[Column("DU_VENDOR"),                  Nullable] public string? DuVendor              { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_REST_API", Name="sap.hana.xs.dt.base.server.persistency::SystemAndApplicationPrivileges", IsView=true)]
	public partial class SAP_REST_API_SapHanaXsDtBaseServerPersistencySystemAndApplicationPrivilege
	{
		[Column, NotNull] public string NAME { get; set; } = null!; // NVARCHAR(256)
		[Column, NotNull] public string TYPE { get; set; } = null!; // VARCHAR(32)
	}

	[Table(Schema="SAP_REST_API", Name="sap.hana.xs.dt.base.server.persistency.userpreferences::UserPreferences", IsView=true)]
	public partial class SAP_REST_API_SapHanaXsDtBaseServerPersistencyUserpreferencesUserPreference
	{
		[Column, NotNull] public string UserID       { get; set; } = null!; // NVARCHAR(60)
		[Column, NotNull] public string Node         { get; set; } = null!; // NVARCHAR(160)
		[Column, NotNull] public string UserSettings { get; set; } = null!; // NCLOB
	}

	[Table(Schema="SAP_REST_API", Name="sap.hana.xs.dt.base.server.persistency.userpreferences::UserPreferencesIntern")]
	public partial class SAP_REST_API_SapHanaXsDtBaseServerPersistencyUserpreferencesUserPreferencesIntern
	{
		/// <summary>
		/// User ID
		/// </summary>
		[PrimaryKey(1), NotNull] public string UserID       { get; set; } = null!; // NVARCHAR(60)
		/// <summary>
		/// Node
		/// </summary>
		[PrimaryKey(2), NotNull] public string Node         { get; set; } = null!; // NVARCHAR(160)
		/// <summary>
		/// User Context Object (JSON)
		/// </summary>
		[Column,        NotNull] public string UserSettings { get; set; } = null!; // NCLOB
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.formLogin.profile.db::USER_PREFERENCES")]
	public partial class HANA_XS_BASE_SapHanaXsFormLoginProfileDbUserPreference
	{
		/// <summary>
		/// Preferences key
		/// </summary>
		[Column(),            PrimaryKey, NotNull] public string KEY      { get; set; } = null!; // NVARCHAR(512)
		/// <summary>
		/// Preferences value
		/// </summary>
		[Column(),                        NotNull] public string VALUE    { get; set; } = null!; // NVARCHAR(512)
		/// <summary>
		/// Preferences item type
		/// </summary>
		[Column("ITEM_TYPE"),             NotNull] public string ItemType { get; set; } = null!; // NVARCHAR(512)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.formLogin.profile.db::USER_PROFILE_VIEW", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsFormLoginProfileDbUserProfileView
	{
		[Column("USER_NAME"),     Nullable] public string? UserName     { get; set; } // NVARCHAR(512)
		[Column("EMAIL_ADDRESS"), Nullable] public string? EmailAddress { get; set; } // NVARCHAR(512)
		[Column(),                Nullable] public string? LOCALE       { get; set; } // NVARCHAR(512)
		[Column("DATE_FORMAT"),   Nullable] public string? DateFormat   { get; set; } // NVARCHAR(512)
		[Column("TIME_FORMAT"),   Nullable] public string? TimeFormat   { get; set; } // NVARCHAR(512)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::ACTION_LOG")]
	public partial class SAP_XS_LM_SapHanaXsLmDbActionLog
	{
		[Column("PROCESS_ID"), NotNull    ] public string   ProcessId { get; set; } = null!; // NVARCHAR(90)
		[Column("LOG_ID"),        Nullable] public string?  LogId     { get; set; } // NVARCHAR(60)
		[Column(),             NotNull    ] public string   USER      { get; set; } = null!; // NVARCHAR(40)
		[Column(),             NotNull    ] public DateTime TIME      { get; set; } // TIMESTAMP
		[Column(),                Nullable] public int?     RC        { get; set; } // INTEGER
		[Column(),             NotNull    ] public string   TYPE      { get; set; } = null!; // NVARCHAR(40)
		[Column(),                Nullable] public string?  MESSAGE   { get; set; } // NVARCHAR(5000)
		[Column(),                Nullable] public string?  SID       { get; set; } // NVARCHAR(256)
		[Column(),                Nullable] public string?  HOST      { get; set; } // NVARCHAR(255)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::ACTIVATION_ERROR")]
	public partial class SAP_XS_LM_SapHanaXsLmDbActivationError
	{
		[Column("PROCESS_ID"),    NotNull    ] public string   ProcessId    { get; set; } = null!; // NVARCHAR(90)
		/// <summary>
		/// ['123', '1234',...]
		/// </summary>
		[Column("CONTENT_IDS"),      Nullable] public string?  ContentIds   { get; set; } // NVARCHAR(5000)
		[Column("PACKAGE_ID"),    NotNull    ] public string   PackageId    { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),   NotNull    ] public string   ObjectName   { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"), NotNull    ] public string   ObjectSuffix { get; set; } = null!; // NVARCHAR(256)
		[Column("ERROR_CODE"),    NotNull    ] public string   ErrorCode    { get; set; } = null!; // VARCHAR(10)
		[Column(),                NotNull    ] public char     SEVERITY     { get; set; } // VARCHAR(1)
		[Column("IS_IMPACTED"),      Nullable] public char?    IsImpacted   { get; set; } // VARCHAR(1)
		[Column(),                NotNull    ] public string   MESSAGE      { get; set; } = null!; // NVARCHAR(1000)
		[Column(),                   Nullable] public char?    MODE         { get; set; } // VARCHAR(1)
		[Column(),                   Nullable] public string?  DETAILS      { get; set; } // NCLOB
		[Column(),                NotNull    ] public DateTime TIME         { get; set; } // TIMESTAMP
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::CONF_HISTORY")]
	public partial class SAP_XS_LM_SapHanaXsLmDbConfHistory
	{
		[Column(),              NotNull    ] public string   ENTITY     { get; set; } = null!; // NVARCHAR(30)
		[Column(),              NotNull    ] public string   NAME       { get; set; } = null!; // NVARCHAR(256)
		[Column(),              NotNull    ] public string   ACTION     { get; set; } = null!; // NVARCHAR(8)
		[Column("NEW_VALUE"),      Nullable] public string?  NewValue   { get; set; } // NCLOB
		[Column("MODIFIED_BY"), NotNull    ] public string   ModifiedBy { get; set; } = null!; // NVARCHAR(40)
		[Column("MODIFIED_AT"), NotNull    ] public DateTime ModifiedAt { get; set; } // TIMESTAMP
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::CONFIGURATION")]
	public partial class SAP_XS_LM_SapHanaXsLmDbConfiguration
	{
		[PrimaryKey, NotNull] public string KEY   { get; set; } = null!; // NVARCHAR(30)
		[Column,     NotNull] public string VALUE { get; set; } = null!; // NCLOB
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::CONFIGURATION_VIEW", IsView=true)]
	public partial class SAP_XS_LM_SapHanaXsLmDbConfigurationView
	{
		[Column, NotNull] public string KEY   { get; set; } = null!; // NVARCHAR(30)
		[Column, NotNull] public string VALUE { get; set; } = null!; // NCLOB
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::CONTAINER_DETAILS")]
	public partial class SAP_XS_LM_SapHanaXsLmDbContainerDetail
	{
		[Column("CONTAINER_ID"), PrimaryKey(1), NotNull] public string ContainerId { get; set; } = null!; // NVARCHAR(60)
		[Column(),               PrimaryKey(2), NotNull] public string NAME        { get; set; } = null!; // NVARCHAR(256)
		[Column(),               PrimaryKey(3), NotNull] public string VENDOR      { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// ['stack' | 'pd' | 'slm' |'du' | 'ldu']
		/// </summary>
		[Column(),               PrimaryKey(4), NotNull] public string TYPE        { get; set; } = null!; // NVARCHAR(10)
		[Column("CONTENT_ID"),                  NotNull] public long   ContentId   { get; set; } // BIGINT
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::CONTAINER_HEADER")]
	public partial class SAP_XS_LM_SapHanaXsLmDbContainerHeader
	{
		[Column("CONTAINER_ID"),   PrimaryKey, NotNull] public string   ContainerId   { get; set; } = null!; // NVARCHAR(60)
		[Column("CREATION_TIME"),              NotNull] public DateTime CreationTime  { get; set; } // TIMESTAMP
		/// <summary>
		/// ['PV' | 'SCV' | 'SCVS' | 'PM']
		/// </summary>
		[Column("CONTAINER_TYPE"),             NotNull] public string   ContainerType { get; set; } = null!; // NVARCHAR(10)
		[Column(),                             NotNull] public string   DESCRIPTION   { get; set; } = null!; // NVARCHAR(1024)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::CONTAINER_INSTANCES_INTERNAL")]
	public partial class SAP_XS_LM_SapHanaXsLmDbContainerInstancesInternal
	{
		[Column("CONTAINER_ID"), PrimaryKey(1), NotNull] public string  ContainerId { get; set; } = null!; // NVARCHAR(60)
		[Column("INSTANCE_ID"),  PrimaryKey(2), NotNull] public string  InstanceId  { get; set; } = null!; // NVARCHAR(3)
		[Column(),                  Nullable           ] public string? CAPTION     { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::CONTAINER_PV_INTERNAL")]
	public partial class SAP_XS_LM_SapHanaXsLmDbContainerPvInternal
	{
		[Column("CONTAINER_ID"), PrimaryKey,  NotNull] public string  ContainerId { get; set; } = null!; // NVARCHAR(60)
		[Column(),                            NotNull] public string  NAME        { get; set; } = null!; // NVARCHAR(256)
		[Column(),                            NotNull] public string  VENDOR      { get; set; } = null!; // NVARCHAR(256)
		[Column(),                            NotNull] public string  VERSION     { get; set; } = null!; // NVARCHAR(256)
		[Column("SAP_NOTE"),        Nullable         ] public string? SapNote     { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::CONTAINER_SCV_INTERNAL")]
	public partial class SAP_XS_LM_SapHanaXsLmDbContainerScvInternal
	{
		[Column("CONTAINER_ID"),  PrimaryKey(1), NotNull] public string ContainerId  { get; set; } = null!; // NVARCHAR(60)
		[Column(),                PrimaryKey(2), NotNull] public string NAME         { get; set; } = null!; // NVARCHAR(256)
		[Column(),                PrimaryKey(3), NotNull] public string VENDOR       { get; set; } = null!; // NVARCHAR(256)
		[Column(),                               NotNull] public string VERSION      { get; set; } = null!; // NVARCHAR(256)
		[Column("VERSION_SP"),                   NotNull] public string VersionSp    { get; set; } = null!; // NVARCHAR(16)
		[Column("VERSION_PATCH"),                NotNull] public string VersionPatch { get; set; } = null!; // NVARCHAR(16)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::CONTENT")]
	public partial class SAP_XS_LM_SapHanaXsLmDbContent
	{
		[Column("CONTENT_ID"), PrimaryKey, NotNull] public long   ContentId { get; set; } // BIGINT
		[Column(),                         NotNull] public byte[] CONTENT   { get; set; } = null!; // BLOB
		[Column(),                         NotNull] public int    SIZE      { get; set; } // INTEGER
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::CONTENT_OBJECTS")]
	public partial class SAP_XS_LM_SapHanaXsLmDbContentObject
	{
		[Column("CONTENT_ID"),    NotNull] public long   ContentId    { get; set; } // BIGINT
		[Column("PROCESS_ID"),    NotNull] public string ProcessId    { get; set; } = null!; // NVARCHAR(90)
		[Column(),                NotNull] public string PACKAGE      { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),   NotNull] public string ObjectName   { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"), NotNull] public string ObjectSuffix { get; set; } = null!; // NVARCHAR(255)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::IMPORTED_DU")]
	public partial class SAP_XS_LM_SapHanaXsLmDbImportedDu
	{
		[Column("PROCESS_ID"),  PrimaryKey(1), NotNull] public string   ProcessId  { get; set; } = null!; // NVARCHAR(90)
		[Column("CONTENT_ID"),  PrimaryKey(2), NotNull] public long     ContentId  { get; set; } // BIGINT
		[Column("IMPORTED_AT"),                NotNull] public DateTime ImportedAt { get; set; } // TIMESTAMP
		[Column("IMPORT_TYPE"),    Nullable           ] public char?    ImportType { get; set; } // VARCHAR(1)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::INSTALLATION_CONTAINER_PV_VARIANT")]
	public partial class SAP_XS_LM_SapHanaXsLmDbInstallationContainerPvVariant
	{
		/// <summary>
		/// Container Id
		/// </summary>
		[Column("CONTAINER_ID"),                     NotNull] public string   ContainerId        { get; set; } = null!; // NVARCHAR(60)
		/// <summary>
		/// Instances JSON Object
		/// </summary>
		[Column(),                         Nullable         ] public string?  INSTANCES          { get; set; } // NVARCHAR(200)
		/// <summary>
		/// Options JSON Object
		/// </summary>
		[Column(),                         Nullable         ] public string?  OPTIONS            { get; set; } // NVARCHAR(500)
		[Column("CREATED_AT"),                       NotNull] public DateTime CreatedAt          { get; set; } // TIMESTAMP
		/// <summary>
		/// Variant ID
		/// </summary>
		[Column("VARIANT_ID"),          PrimaryKey,  NotNull] public string   VariantId          { get; set; } = null!; // NVARCHAR(60)
		/// <summary>
		/// Description
		/// </summary>
		[Column("VARIANT_DESCRIPTION"),    Nullable         ] public string?  VariantDescription { get; set; } // NVARCHAR(80)
		/// <summary>
		/// 0 = public usable variant
		/// </summary>
		[Column("VARIANT_TYPE"),                     NotNull] public int      VariantType        { get; set; } // INTEGER
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::INSTALLATION_CONTAINER_SCV_VARIANT")]
	public partial class SAP_XS_LM_SapHanaXsLmDbInstallationContainerScvVariant
	{
		/// <summary>
		/// Container Id
		/// </summary>
		[Column("CONTAINER_ID"),                     NotNull] public string   ContainerId        { get; set; } = null!; // NVARCHAR(60)
		/// <summary>
		/// Software Components JSON Object
		/// </summary>
		[Column(),                         Nullable         ] public string?  SCVS               { get; set; } // NVARCHAR(5000)
		/// <summary>
		/// Options JSON Object
		/// </summary>
		[Column(),                         Nullable         ] public string?  OPTIONS            { get; set; } // NVARCHAR(500)
		[Column("CREATED_AT"),                       NotNull] public DateTime CreatedAt          { get; set; } // TIMESTAMP
		/// <summary>
		/// Variant ID
		/// </summary>
		[Column("VARIANT_ID"),          PrimaryKey,  NotNull] public string   VariantId          { get; set; } = null!; // NVARCHAR(60)
		/// <summary>
		/// Description
		/// </summary>
		[Column("VARIANT_DESCRIPTION"),    Nullable         ] public string?  VariantDescription { get; set; } // NVARCHAR(80)
		/// <summary>
		/// 0 = public usable variant
		/// </summary>
		[Column("VARIANT_TYPE"),                     NotNull] public int      VariantType        { get; set; } // INTEGER
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::LOG_SYNC")]
	public partial class SAP_XS_LM_SapHanaXsLmDbLogSync
	{
		[Column("PROCESS_ID"), NotNull] public string ProcessId { get; set; } = null!; // NVARCHAR(90)
		[Column("SYSTEM_ID"),  NotNull] public long   SystemId  { get; set; } // BIGINT
		[Column(),             NotNull] public byte   RUNNING   { get; set; } // TINYINT
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::PROCESS")]
	public partial class SAP_XS_LM_SapHanaXsLmDbProcess
	{
		[Column("PROCESS_ID"),     PrimaryKey,  NotNull] public string    ProcessId     { get; set; } = null!; // NVARCHAR(90)
		[Column("SRC_HOST"),          Nullable         ] public string?   SrcHost       { get; set; } // NVARCHAR(255)
		[Column("SRC_SID"),           Nullable         ] public string?   SrcSid        { get; set; } // NVARCHAR(256)
		[Column("TARGET_HOST"),       Nullable         ] public string?   TargetHost    { get; set; } // NVARCHAR(255)
		[Column("TARGET_SID"),        Nullable         ] public string?   TargetSid     { get; set; } // NVARCHAR(256)
		[Column(),                              NotNull] public string    USER          { get; set; } = null!; // NVARCHAR(40)
		[Column("START_TIME"),                  NotNull] public DateTime  StartTime     { get; set; } // TIMESTAMP
		[Column("END_TIME"),          Nullable         ] public DateTime? EndTime       { get; set; } // TIMESTAMP
		[Column(),                    Nullable         ] public int?      RC            { get; set; } // INTEGER
		[Column(),                    Nullable         ] public char?     TYPE          { get; set; } // VARCHAR(1)
		[Column(),                    Nullable         ] public string?   DUS           { get; set; } // NVARCHAR(5000)
		[Column("CONTENT_IDS"),       Nullable         ] public string?   ContentIds    { get; set; } // VARCHAR(1000)
		[Column("TRANSPORT_UNIT"),              NotNull] public char      TransportUnit { get; set; } // VARCHAR(1)
		[Column("PRODUCT_NAME"),      Nullable         ] public string?   ProductName   { get; set; } // NVARCHAR(256)
		[Column("PRODUCT_VENDOR"),    Nullable         ] public string?   ProductVendor { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::PROCESS_VIEW", IsView=true)]
	public partial class SAP_XS_LM_SapHanaXsLmDbProcessView
	{
		[Column("PROCESS_ID"),     NotNull    ] public string    ProcessId     { get; set; } = null!; // NVARCHAR(90)
		[Column("SRC_HOST"),          Nullable] public string?   SrcHost       { get; set; } // NVARCHAR(255)
		[Column("SRC_SID"),           Nullable] public string?   SrcSid        { get; set; } // NVARCHAR(256)
		[Column("TARGET_HOST"),       Nullable] public string?   TargetHost    { get; set; } // NVARCHAR(255)
		[Column("TARGET_SID"),        Nullable] public string?   TargetSid     { get; set; } // NVARCHAR(256)
		[Column(),                 NotNull    ] public string    USER          { get; set; } = null!; // NVARCHAR(40)
		[Column("START_TIME"),     NotNull    ] public DateTime  StartTime     { get; set; } // TIMESTAMP
		[Column("END_TIME"),          Nullable] public DateTime? EndTime       { get; set; } // TIMESTAMP
		[Column(),                    Nullable] public int?      RC            { get; set; } // INTEGER
		[Column(),                    Nullable] public char?     TYPE          { get; set; } // VARCHAR(1)
		[Column(),                    Nullable] public string?   DUS           { get; set; } // NVARCHAR(5000)
		[Column("CONTENT_IDS"),       Nullable] public string?   ContentIds    { get; set; } // VARCHAR(1000)
		[Column("TRANSPORT_UNIT"), NotNull    ] public char      TransportUnit { get; set; } // VARCHAR(1)
		[Column("PRODUCT_NAME"),      Nullable] public string?   ProductName   { get; set; } // NVARCHAR(256)
		[Column("PRODUCT_VENDOR"),    Nullable] public string?   ProductVendor { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::PRODUCTS", IsView=true)]
	public partial class SAP_XS_LM_SapHanaXsLmDbProduct
	{
		[Column(),                   NotNull    ] public string  NAME           { get; set; } = null!; // NVARCHAR(30)
		[Column(),                   NotNull    ] public string  VENDOR         { get; set; } = null!; // NVARCHAR(256)
		[Column(),                      Nullable] public string? VERSION        { get; set; } // NVARCHAR(30)
		[Column("VERSION_SP"),          Nullable] public string? VersionSp      { get; set; } // NVARCHAR(16)
		[Column(),                      Nullable] public string? CAPTION        { get; set; } // NVARCHAR(256)
		[Column("PPMS_ID"),             Nullable] public string? PpmsId         { get; set; } // NVARCHAR(20)
		[Column("SP_STACK_ID"),         Nullable] public string? SpStackId      { get; set; } // NVARCHAR(20)
		[Column("SP_STACK_CAPTION"),    Nullable] public string? SpStackCaption { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::PRODUCTS_EXTENSION")]
	public partial class SAP_XS_LM_SapHanaXsLmDbProductsExtension
	{
		[Column(),             PrimaryKey(1), NotNull] public string  NAME      { get; set; } = null!; // NVARCHAR(30)
		[Column(),             PrimaryKey(2), NotNull] public string  VENDOR    { get; set; } = null!; // NVARCHAR(256)
		[Column("VERSION_SP"),    Nullable           ] public string? VersionSp { get; set; } // NVARCHAR(16)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::SLP_DEPLOY_TASKS", IsView=true)]
	public partial class SAP_XS_LM_SapHanaXsLmDbSlpDeployTask
	{
		[Column(),                  NotNull    ] public string  ID            { get; set; } = null!; // NVARCHAR(32)
		[Column(),                     Nullable] public string? TYPE          { get; set; } // NVARCHAR(30)
		[Column("TECH_NAME"),          Nullable] public string? TechName      { get; set; } // VARCHAR(33)
		[Column(),                     Nullable] public string? STATUS        { get; set; } // VARCHAR(30)
		[Column(),                     Nullable] public string? LOGS          { get; set; } // VARCHAR(30)
		[Column("PROCESS_ID"),      NotNull    ] public string  ProcessId     { get; set; } = null!; // VARCHAR(32)
		[Column("TASK_ID"),         NotNull    ] public string  TaskId        { get; set; } = null!; // NVARCHAR(32)
		[Column(),                     Nullable] public string? FILEID        { get; set; } // NVARCHAR(32)
		[Column(),                     Nullable] public string? FILEPATH      { get; set; } // NVARCHAR(256)
		[Column(),                     Nullable] public string? FILENAME      { get; set; } // NVARCHAR(256)
		[Column(),                     Nullable] public string? CTSERRORCODE  { get; set; } // VARCHAR(32)
		[Column(),                     Nullable] public string? CTSPROCESSID  { get; set; } // VARCHAR(32)
		[Column("HALM_PROCESS_ID"),    Nullable] public string? HalmProcessId { get; set; } // NVARCHAR(90)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::SLP_TASKS_EXT")]
	public partial class SAP_XS_LM_SapHanaXsLmDbSlpTasksExt
	{
		/// <summary>
		/// Task ID
		/// </summary>
		[Column("TASK_ID"),         PrimaryKey,  NotNull] public string  TaskId        { get; set; } = null!; // NVARCHAR(32)
		/// <summary>
		/// File ID
		/// </summary>
		[Column(),                     Nullable         ] public string? FILEID        { get; set; } // NVARCHAR(32)
		/// <summary>
		/// File path
		/// </summary>
		[Column(),                     Nullable         ] public string? FILEPATH      { get; set; } // NVARCHAR(256)
		/// <summary>
		/// File name
		/// </summary>
		[Column(),                     Nullable         ] public string? FILENAME      { get; set; } // NVARCHAR(256)
		/// <summary>
		/// CTS error code
		/// </summary>
		[Column(),                     Nullable         ] public string? CTSERRORCODE  { get; set; } // VARCHAR(32)
		/// <summary>
		/// CTS process ID
		/// </summary>
		[Column(),                     Nullable         ] public string? CTSPROCESSID  { get; set; } // VARCHAR(32)
		/// <summary>
		/// HALM Process Id
		/// </summary>
		[Column("HALM_PROCESS_ID"),    Nullable         ] public string? HalmProcessId { get; set; } // NVARCHAR(90)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::SYSTEM")]
	public partial class SAP_XS_LM_SapHanaXsLmDbSystem
	{
		[Column("SYSTEM_ID"), PrimaryKey,  NotNull] public long     SystemId    { get; set; } // BIGINT
		[Column(),               Nullable         ] public string?  SID         { get; set; } // NVARCHAR(256)
		[Column(),               Nullable         ] public decimal? INSTANCE    { get; set; } // DECIMAL(2, 0)
		[Column(),               Nullable         ] public string?  COMMENT     { get; set; } // NVARCHAR(255)
		[Column(),               Nullable         ] public string?  DESTINATION { get; set; } // VARCHAR(255)
		[Column(),               Nullable         ] public string?  HOST        { get; set; } // VARCHAR(64)
		[Column("IS_CTS"),       Nullable         ] public char?    IsCts       { get; set; } // VARCHAR(1)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::SYSTEM_STATE")]
	public partial class SAP_XS_LM_SapHanaXsLmDbSystemState
	{
		[Column("SYSTEM_ID"),         NotNull    ] public long      SystemId        { get; set; } // BIGINT
		[Column(),                       Nullable] public int?      STATUS          { get; set; } // INTEGER
		[Column("STATUS_UPDATED_AT"),    Nullable] public DateTime? StatusUpdatedAt { get; set; } // TIMESTAMP
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::SYSTEM_VIEW", IsView=true)]
	public partial class SAP_XS_LM_SapHanaXsLmDbSystemView
	{
		[Column("SYSTEM_ID"), NotNull    ] public long     SystemId    { get; set; } // BIGINT
		[Column(),               Nullable] public string?  SID         { get; set; } // NVARCHAR(256)
		[Column(),               Nullable] public decimal? INSTANCE    { get; set; } // DECIMAL(2, 0)
		[Column(),               Nullable] public string?  COMMENT     { get; set; } // NVARCHAR(255)
		[Column(),               Nullable] public string?  DESTINATION { get; set; } // VARCHAR(255)
		[Column(),               Nullable] public string?  HOST        { get; set; } // VARCHAR(64)
		[Column("IS_CTS"),       Nullable] public char?    IsCts       { get; set; } // VARCHAR(1)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::TRANSPORT_CONTENT")]
	public partial class SAP_XS_LM_SapHanaXsLmDbTransportContent
	{
		[Column("TRANSPORT_CONTENT_ID"), PrimaryKey,  NotNull] public long      TransportContentId { get; set; } // BIGINT
		[Column("DU_NAME"),                           NotNull] public string    DuName             { get; set; } = null!; // NVARCHAR(256)
		[Column("DU_VENDOR"),                         NotNull] public string    DuVendor           { get; set; } = null!; // NVARCHAR(256)
		[Column("DU_VERSION"),              Nullable         ] public string?   DuVersion          { get; set; } // NVARCHAR(256)
		[Column("DU_VERSION_SP"),           Nullable         ] public string?   DuVersionSp        { get; set; } // NVARCHAR(256)
		[Column("DU_VERSION_PATCH"),        Nullable         ] public string?   DuVersionPatch     { get; set; } // NVARCHAR(256)
		[Column(),                          Nullable         ] public byte[]?   CONTENT            { get; set; } // BLOB
		[Column("TRANSPORT_UNIT_TYPE"),               NotNull] public int       TransportUnitType  { get; set; } // INTEGER
		[Column("REPOSITORY_VERSION"),                NotNull] public int       RepositoryVersion  { get; set; } // INTEGER
		[Column("INCL_OBJS_FROM"),          Nullable         ] public DateTime? InclObjsFrom       { get; set; } // TIMESTAMP
		[Column("INCL_OBJS_TO"),            Nullable         ] public DateTime? InclObjsTo         { get; set; } // TIMESTAMP
		[Column("SRC_SYSTEM_SID"),          Nullable         ] public string?   SrcSystemSid       { get; set; } // NVARCHAR(256)
		[Column("SRC_SYSTEM_HOST"),         Nullable         ] public string?   SrcSystemHost      { get; set; } // NVARCHAR(255)
		[Column("KEEP_CONTENT"),            Nullable         ] public char?     KeepContent        { get; set; } // VARCHAR(1)
		[Column("SAVED_AT"),                Nullable         ] public DateTime? SavedAt            { get; set; } // TIMESTAMP
		[Column("DU_ACH"),                  Nullable         ] public string?   DuAch              { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::TRANSPORTED_CHANGE")]
	public partial class SAP_XS_LM_SapHanaXsLmDbTransportedChange
	{
		[Column("PROCESS_ID"),          NotNull    ] public string    ProcessId         { get; set; } = null!; // NVARCHAR(90)
		[Column(),                         Nullable] public string?   PACKAGE           { get; set; } // NVARCHAR(256)
		[Column("DU_NAME"),             NotNull    ] public string    DuName            { get; set; } = null!; // NVARCHAR(256)
		[Column("DU_VENDOR"),           NotNull    ] public string    DuVendor          { get; set; } = null!; // NVARCHAR(256)
		[Column("CHANGE_ID"),              Nullable] public int?      ChangeId          { get; set; } // INTEGER
		[Column("CHANGE_RELEASE_TIME"),    Nullable] public DateTime? ChangeReleaseTime { get; set; } // TIMESTAMP
		[Column("TRANSPORTED_BY"),         Nullable] public string?   TransportedBy     { get; set; } // NVARCHAR(8)
		[Column("SRC_SYSTEM"),          NotNull    ] public string    SrcSystem         { get; set; } = null!; // NVARCHAR(256)
		[Column(),                         Nullable] public char?     RELEASED          { get; set; } // VARCHAR(1)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::TRANSPORT_ROUTE")]
	public partial class SAP_XS_LM_SapHanaXsLmDbTransportRoute
	{
		[Column("TRANSPORT_ROUTE_ID"), PrimaryKey,  NotNull] public long    TransportRouteId { get; set; } // BIGINT
		[Column("SRC_SYSTEM"),                      NotNull] public long    SrcSystem        { get; set; } // BIGINT
		[Column("TARGET_SYSTEM"),                   NotNull] public long    TargetSystem     { get; set; } // BIGINT
		[Column(),                        Nullable         ] public string? COMMENT          { get; set; } // NVARCHAR(1024)
		[Column("TRANSPORT_MODE"),                  NotNull] public char    TransportMode    { get; set; } // VARCHAR(1)
		[Column(),                                  NotNull] public char    VALID            { get; set; } // VARCHAR(1)
		[Column("TRANSPORT_UNIT"),                  NotNull] public char    TransportUnit    { get; set; } // VARCHAR(1)
		[Column("PRODUCT_NAME"),          Nullable         ] public string? ProductName      { get; set; } // NVARCHAR(256)
		[Column("PRODUCT_VENDOR"),        Nullable         ] public string? ProductVendor    { get; set; } // NVARCHAR(256)
		[Column("PRODUCT_INSTANCE"),      Nullable         ] public string? ProductInstance  { get; set; } // NVARCHAR(3)
		[Column(),                        Nullable         ] public string? NAME             { get; set; } // NVARCHAR(64)
		[Column("LATEST_PROCESS"),        Nullable         ] public string? LatestProcess    { get; set; } // NVARCHAR(128)
		[Column("LATEST_PROCESSID"),      Nullable         ] public string? LatestProcessid  { get; set; } // NVARCHAR(60)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::TRANSPORT_ROUTE_DU")]
	public partial class SAP_XS_LM_SapHanaXsLmDbTransportRouteDu
	{
		[Column("TRANSPORT_ROUTE_ID"), PrimaryKey(1), NotNull] public long   TransportRouteId { get; set; } // BIGINT
		[Column(),                     PrimaryKey(2), NotNull] public string VENDOR           { get; set; } = null!; // NVARCHAR(256)
		[Column(),                     PrimaryKey(3), NotNull] public string NAME             { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::TRANSPORT_ROUTE_VIEW", IsView=true)]
	public partial class SAP_XS_LM_SapHanaXsLmDbTransportRouteView
	{
		[Column("TRANSPORT_ROUTE_ID"), NotNull    ] public long    TransportRouteId { get; set; } // BIGINT
		[Column("SRC_SYSTEM"),         NotNull    ] public long    SrcSystem        { get; set; } // BIGINT
		[Column("TARGET_SYSTEM"),      NotNull    ] public long    TargetSystem     { get; set; } // BIGINT
		[Column(),                        Nullable] public string? COMMENT          { get; set; } // NVARCHAR(1024)
		[Column("TRANSPORT_MODE"),     NotNull    ] public char    TransportMode    { get; set; } // VARCHAR(1)
		[Column(),                     NotNull    ] public char    VALID            { get; set; } // VARCHAR(1)
		[Column("TRANSPORT_UNIT"),     NotNull    ] public char    TransportUnit    { get; set; } // VARCHAR(1)
		[Column("PRODUCT_NAME"),          Nullable] public string? ProductName      { get; set; } // NVARCHAR(256)
		[Column("PRODUCT_VENDOR"),        Nullable] public string? ProductVendor    { get; set; } // NVARCHAR(256)
		[Column("PRODUCT_INSTANCE"),      Nullable] public string? ProductInstance  { get; set; } // NVARCHAR(3)
		[Column(),                        Nullable] public string? NAME             { get; set; } // NVARCHAR(64)
		[Column("LATEST_PROCESS"),        Nullable] public string? LatestProcess    { get; set; } // NVARCHAR(128)
		[Column("LATEST_PROCESSID"),      Nullable] public string? LatestProcessid  { get; set; } // NVARCHAR(60)
		[Column("DU_VENDOR"),             Nullable] public string? DuVendor         { get; set; } // NVARCHAR(256)
		[Column("DU_NAME"),               Nullable] public string? DuName           { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.db::UPLOADED_FILE")]
	public partial class SAP_XS_LM_SapHanaXsLmDbUploadedFile
	{
		[Column("UPLOAD_ID"),   PrimaryKey(1), NotNull] public string    UploadId   { get; set; } = null!; // NVARCHAR(60)
		[Column(),                 Nullable           ] public string?   DIRECTORY  { get; set; } // NVARCHAR(256)
		[Column(),                             NotNull] public string    FILENAME   { get; set; } = null!; // NVARCHAR(256)
		[Column("CONTENT_ID"),  PrimaryKey(2), NotNull] public long      ContentId  { get; set; } // BIGINT
		[Column("UPLOAD_TIME"),    Nullable           ] public DateTime? UploadTime { get; set; } // TIMESTAMP
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.installation::DELIVERY_UNITS_INST", IsView=true)]
	public partial class SAP_XS_LM_SapHanaXsLmInstallationDeliveryUnitsInst
	{
		[Column("SC_VENDOR"),           NotNull    ] public string    ScVendor          { get; set; } = null!; // NVARCHAR(256)
		[Column("SC_NAME"),             NotNull    ] public string    ScName            { get; set; } = null!; // NVARCHAR(256)
		[Column("SC_TYPE"),                Nullable] public string?   ScType            { get; set; } // NVARCHAR(20)
		[Column("PRODUCT_VENDOR"),      NotNull    ] public string    ProductVendor     { get; set; } = null!; // NVARCHAR(256)
		[Column("PRODUCT_NAME"),        NotNull    ] public string    ProductName       { get; set; } = null!; // NVARCHAR(30)
		[Column("PRODUCT_INSTANCE_ID"), NotNull    ] public string    ProductInstanceId { get; set; } = null!; // NVARCHAR(3)
		[Column("DELIVERY_UNIT"),          Nullable] public string?   DeliveryUnit      { get; set; } // NVARCHAR(256)
		[Column(),                         Nullable] public string?   RESPONSIBLE       { get; set; } // NVARCHAR(256)
		[Column(),                         Nullable] public string?   VERSION           { get; set; } // NVARCHAR(256)
		[Column(),                         Nullable] public string?   VENDOR            { get; set; } // NVARCHAR(256)
		[Column("VERSION_SP"),             Nullable] public string?   VersionSp         { get; set; } // NVARCHAR(16)
		[Column("VERSION_PATCH"),          Nullable] public string?   VersionPatch      { get; set; } // NVARCHAR(16)
		[Column("PPMS_ID"),                Nullable] public string?   PpmsId            { get; set; } // VARCHAR(20)
		[Column(),                         Nullable] public string?   CAPTION           { get; set; } // NVARCHAR(256)
		[Column("LAST_UPDATE"),            Nullable] public DateTime? LastUpdate        { get; set; } // TIMESTAMP
		[Column("SP_PPMS_ID"),             Nullable] public string?   SpPpmsId          { get; set; } // VARCHAR(20)
		[Column(),                         Nullable] public string?   ACH               { get; set; } // NVARCHAR(64)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.content.demo.db::DEMO_VARIANT_CONTAINER")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeContentDemoDbDemoVariantContainer
	{
		/// <summary>
		/// ID
		/// </summary>
		[Column("VARIANT_ID"),          PrimaryKey,  NotNull] public string  VariantId          { get; set; } = null!; // VARCHAR(60)
		/// <summary>
		/// 0 = public usable variant
		/// </summary>
		[Column("VARIANT_TYPE"),                     NotNull] public int     VariantType        { get; set; } // INTEGER
		/// <summary>
		/// Description
		/// </summary>
		[Column("VARIANT_DESCRIPTION"),    Nullable         ] public string? VariantDescription { get; set; } // VARCHAR(80)
		/// <summary>
		/// Who sends Hello to the World
		/// </summary>
		[Column(),                                   NotNull] public string  Sender             { get; set; } = null!; // NVARCHAR(60)
		/// <summary>
		/// The Message
		/// </summary>
		[Column(),                                   NotNull] public string  MessageToTheWorld  { get; set; } = null!; // NVARCHAR(200)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_OBJECTS")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationObject
	{
		[Column("PACKAGE_ID"),    PrimaryKey(1), NotNull] public string    PackageId    { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),   PrimaryKey(2), NotNull] public string    ObjectName   { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"), PrimaryKey(3), NotNull] public string    ObjectSuffix { get; set; } = null!; // NVARCHAR(255)
		[Column("ACTIVATED_AT"),     Nullable           ] public DateTime? ActivatedAt  { get; set; } // TIMESTAMP
		[Column("DELIVERY_UNIT"),    Nullable           ] public string?   DeliveryUnit { get; set; } // NVARCHAR(256)
		[Column(),                   Nullable           ] public string?   VENDOR       { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_SCENARIO", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationScenario
	{
		[Column("VARIANT_ID"),          NotNull    ] public string    VariantId             { get; set; } = null!; // VARCHAR(60)
		[Column("VARIANT_TYPE"),        NotNull    ] public int       VariantType           { get; set; } // INTEGER
		[Column("VARIANT_DESCRIPTION"),    Nullable] public string?   VariantDescription    { get; set; } // VARCHAR(80)
		[Column("mode"),                   Nullable] public char?     Mode                  { get; set; } // VARCHAR(1)
		[Column("activationFailed"),       Nullable] public int?      ActivationFailed      { get; set; } // INTEGER
		[Column(),                         Nullable] public int?      Status                { get; set; } // INTEGER
		[Column(),                         Nullable] public string?   ServiceID             { get; set; } // NVARCHAR(320)
		[Column(),                         Nullable] public string?   ScenarioID            { get; set; } // NVARCHAR(320)
		[Column("PACKAGE_ID"),             Nullable] public string?   PackageId             { get; set; } // NVARCHAR(256)
		[Column("OBJECT_NAME"),            Nullable] public string?   ObjectName            { get; set; } // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),       NotNull    ] public string    ObjectSuffix          { get; set; } = null!; // NVARCHAR(256)
		[Column("DELIVERY_UNIT"),          Nullable] public string?   DeliveryUnit          { get; set; } // NVARCHAR(256)
		[Column(),                         Nullable] public string?   VENDOR                { get; set; } // NVARCHAR(256)
		[Column("REPO_ACTIVATED_AT"),      Nullable] public DateTime? RepoActivatedAt       { get; set; } // TIMESTAMP
		[Column(),                         Nullable] public string?   FileDataKey           { get; set; } // VARCHAR(256)
		[Column("strServiceData"),         Nullable] public string?   StrServiceData        { get; set; } // NVARCHAR(2000)
		[Column(),                         Nullable] public string?   ServiceStepDataKey    { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   ServiceVariantDataKey { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   XSScriptParamDataKey  { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   TextRepoDataKey       { get; set; } // VARCHAR(256)
		[Column("strScenarioData"),        Nullable] public string?   StrScenarioData       { get; set; } // NVARCHAR(2000)
		[Column(),                         Nullable] public string?   ScenarioPhaseDataKey  { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   OriginalLanguage      { get; set; } // NVARCHAR(6)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_SERVICE", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationService
	{
		[Column("VARIANT_ID"),          NotNull    ] public string    VariantId             { get; set; } = null!; // VARCHAR(60)
		[Column("VARIANT_TYPE"),        NotNull    ] public int       VariantType           { get; set; } // INTEGER
		[Column("VARIANT_DESCRIPTION"),    Nullable] public string?   VariantDescription    { get; set; } // VARCHAR(80)
		[Column("mode"),                   Nullable] public char?     Mode                  { get; set; } // VARCHAR(1)
		[Column("activationFailed"),       Nullable] public int?      ActivationFailed      { get; set; } // INTEGER
		[Column(),                         Nullable] public int?      Status                { get; set; } // INTEGER
		[Column(),                         Nullable] public string?   ServiceID             { get; set; } // NVARCHAR(320)
		[Column(),                         Nullable] public string?   ScenarioID            { get; set; } // NVARCHAR(320)
		[Column("PACKAGE_ID"),             Nullable] public string?   PackageId             { get; set; } // NVARCHAR(256)
		[Column("OBJECT_NAME"),            Nullable] public string?   ObjectName            { get; set; } // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),       NotNull    ] public string    ObjectSuffix          { get; set; } = null!; // NVARCHAR(256)
		[Column("DELIVERY_UNIT"),          Nullable] public string?   DeliveryUnit          { get; set; } // NVARCHAR(256)
		[Column(),                         Nullable] public string?   VENDOR                { get; set; } // NVARCHAR(256)
		[Column("REPO_ACTIVATED_AT"),      Nullable] public DateTime? RepoActivatedAt       { get; set; } // TIMESTAMP
		[Column(),                         Nullable] public string?   FileDataKey           { get; set; } // VARCHAR(256)
		[Column("strServiceData"),         Nullable] public string?   StrServiceData        { get; set; } // NVARCHAR(2000)
		[Column(),                         Nullable] public string?   ServiceStepDataKey    { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   ServiceVariantDataKey { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   XSScriptParamDataKey  { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   TextRepoDataKey       { get; set; } // VARCHAR(256)
		[Column("strScenarioData"),        Nullable] public string?   StrScenarioData       { get; set; } // NVARCHAR(2000)
		[Column(),                         Nullable] public string?   ScenarioPhaseDataKey  { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   OriginalLanguage      { get; set; } // NVARCHAR(6)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_VALUE_BUFFER")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationValueBuffer
	{
		[Column("ACTIVATION_KEY"), PrimaryKey,  NotNull] public string  ActivationKey { get; set; } = null!; // VARCHAR(256)
		[Column(),                    Nullable         ] public string? VALUE         { get; set; } // NCLOB
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_VARIANTS")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVariant
	{
		[Column("VARIANT_ID"),          PrimaryKey,  NotNull] public string    VariantId             { get; set; } = null!; // VARCHAR(60)
		/// <summary>
		/// 0 = public usable variant
		/// </summary>
		[Column("VARIANT_TYPE"),                     NotNull] public int       VariantType           { get; set; } // INTEGER
		/// <summary>
		/// Description
		/// </summary>
		[Column("VARIANT_DESCRIPTION"),    Nullable         ] public string?   VariantDescription    { get; set; } // VARCHAR(80)
		[Column("mode"),                   Nullable         ] public char?     Mode                  { get; set; } // VARCHAR(1)
		[Column("activationFailed"),       Nullable         ] public int?      ActivationFailed      { get; set; } // INTEGER
		[Column(),                         Nullable         ] public int?      Status                { get; set; } // INTEGER
		[Column(),                         Nullable         ] public string?   ServiceID             { get; set; } // NVARCHAR(320)
		[Column(),                         Nullable         ] public string?   ScenarioID            { get; set; } // NVARCHAR(320)
		[Column("PACKAGE_ID"),             Nullable         ] public string?   PackageId             { get; set; } // NVARCHAR(256)
		[Column("OBJECT_NAME"),            Nullable         ] public string?   ObjectName            { get; set; } // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),          Nullable         ] public string?   ObjectSuffix          { get; set; } // NVARCHAR(256)
		[Column("DELIVERY_UNIT"),          Nullable         ] public string?   DeliveryUnit          { get; set; } // NVARCHAR(256)
		[Column(),                         Nullable         ] public string?   VENDOR                { get; set; } // NVARCHAR(256)
		[Column("REPO_ACTIVATED_AT"),      Nullable         ] public DateTime? RepoActivatedAt       { get; set; } // TIMESTAMP
		[Column(),                         Nullable         ] public string?   FileDataKey           { get; set; } // VARCHAR(256)
		[Column("strServiceData"),         Nullable         ] public string?   StrServiceData        { get; set; } // NVARCHAR(2000)
		[Column(),                         Nullable         ] public string?   ServiceStepDataKey    { get; set; } // VARCHAR(256)
		[Column(),                         Nullable         ] public string?   ServiceVariantDataKey { get; set; } // VARCHAR(256)
		[Column(),                         Nullable         ] public string?   XSScriptParamDataKey  { get; set; } // VARCHAR(256)
		[Column(),                         Nullable         ] public string?   TextRepoDataKey       { get; set; } // VARCHAR(256)
		[Column("strScenarioData"),        Nullable         ] public string?   StrScenarioData       { get; set; } // NVARCHAR(2000)
		[Column(),                         Nullable         ] public string?   ScenarioPhaseDataKey  { get; set; } // VARCHAR(256)
		[Column(),                         Nullable         ] public string?   OriginalLanguage      { get; set; } // NVARCHAR(6)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_VAR_SCENARIO", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarScenario
	{
		[Column(),                        NotNull    ] public string    ID                   { get; set; } = null!; // NVARCHAR(320)
		[Column("SHORT_ID"),              NotNull    ] public string    ShortId              { get; set; } = null!; // NVARCHAR(60)
		[Column(),                        NotNull    ] public string    SCOPE                { get; set; } = null!; // NVARCHAR(80)
		[Column("EXTERNAL_INFO"),            Nullable] public string?   ExternalInfo         { get; set; } // NVARCHAR(256)
		[Column("BEST_PRACTICES"),           Nullable] public string?   BestPractices        { get; set; } // NVARCHAR(256)
		[Column("TEXT_ID_DESCRIPTION"),   NotNull    ] public string    TextIdDescription    { get; set; } = null!; // VARCHAR(320)
		[Column("TEXT_ID_DISPLAYNAME"),   NotNull    ] public string    TextIdDisplayname    { get; set; } = null!; // VARCHAR(320)
		[Column(),                           Nullable] public int?      STATUS               { get; set; } // INTEGER
		[Column("PACKAGE_ID"),            NotNull    ] public string    PackageId            { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),           NotNull    ] public string    ObjectName           { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),            Nullable] public string?   ObjectSuffix         { get; set; } // NVARCHAR(256)
		[Column("REPO_ACTIVATED_AT"),        Nullable] public DateTime? RepoActivatedAt      { get; set; } // TIMESTAMP
		[Column("ACTIVATED_AT"),             Nullable] public DateTime? ActivatedAt          { get; set; } // TIMESTAMP
		[Column("ACTIVATED_BY"),             Nullable] public string?   ActivatedBy          { get; set; } // NVARCHAR(256)
		[Column("APPLICATION_COMPONENT"),    Nullable] public string?   ApplicationComponent { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_VAR_SCENARIO_PHASE", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarScenarioPhase
	{
		[Column("SCENARIO_ID"),         NotNull    ] public string  ScenarioId        { get; set; } = null!; // NVARCHAR(320)
		[Column(),                      NotNull    ] public int     POS               { get; set; } // INTEGER
		[Column("PHASE_ID"),            NotNull    ] public string  PhaseId           { get; set; } = null!; // NVARCHAR(60)
		[Column("EXTERNAL_INFO"),          Nullable] public string? ExternalInfo      { get; set; } // NVARCHAR(256)
		[Column("BEST_PRACTICES"),         Nullable] public string? BestPractices     { get; set; } // NVARCHAR(256)
		[Column("TEXT_ID_DESCRIPTION"), NotNull    ] public string  TextIdDescription { get; set; } = null!; // VARCHAR(320)
		[Column("TEXT_ID_DISPLAYNAME"), NotNull    ] public string  TextIdDisplayname { get; set; } = null!; // VARCHAR(320)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_VAR_SERVICE", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarService
	{
		[Column(),                        NotNull    ] public string    ID                   { get; set; } = null!; // NVARCHAR(320)
		[Column("SHORT_ID"),              NotNull    ] public string    ShortId              { get; set; } = null!; // NVARCHAR(60)
		[Column("SCENARIO_ID"),           NotNull    ] public string    ScenarioId           { get; set; } = null!; // NVARCHAR(320)
		[Column("TEXT_ID_DESCRIPTION"),   NotNull    ] public string    TextIdDescription    { get; set; } = null!; // VARCHAR(320)
		[Column("TEXT_ID_DISPLAYNAME"),   NotNull    ] public string    TextIdDisplayname    { get; set; } = null!; // VARCHAR(320)
		[Column("VAR_ODATA_SRV"),            Nullable] public string?   VarOdataSrv          { get; set; } // NVARCHAR(256)
		[Column("VAR_MAINT_UI"),             Nullable] public string?   VarMaintUi           { get; set; } // NVARCHAR(2048)
		[Column(),                           Nullable] public int?      STATUS               { get; set; } // INTEGER
		[Column("PACKAGE_ID"),            NotNull    ] public string    PackageId            { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),           NotNull    ] public string    ObjectName           { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),            Nullable] public string?   ObjectSuffix         { get; set; } // NVARCHAR(256)
		[Column("REPO_ACTIVATED_AT"),        Nullable] public DateTime? RepoActivatedAt      { get; set; } // TIMESTAMP
		[Column("ACTIVATED_AT"),             Nullable] public DateTime? ActivatedAt          { get; set; } // TIMESTAMP
		[Column("ACTIVATED_BY"),             Nullable] public string?   ActivatedBy          { get; set; } // NVARCHAR(256)
		[Column("APPLICATION_COMPONENT"),    Nullable] public string?   ApplicationComponent { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_VAR_SERVICE_STEP", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarServiceStep
	{
		[Column("SERVICE_ID"),            NotNull    ] public string  ServiceId            { get; set; } = null!; // NVARCHAR(320)
		[Column(),                        NotNull    ] public int     POS                  { get; set; } // INTEGER
		[Column("STEP_ID"),               NotNull    ] public string  StepId               { get; set; } = null!; // NVARCHAR(60)
		[Column(),                        NotNull    ] public string  TYPE                 { get; set; } = null!; // NVARCHAR(10)
		[Column(),                           Nullable] public string? SCHEMA               { get; set; } // NVARCHAR(127)
		[Column(),                        NotNull    ] public string  EXECUTABLE           { get; set; } = null!; // NVARCHAR(127)
		[Column("TEXT_ID_DESCRIPTION"),   NotNull    ] public string  TextIdDescription    { get; set; } = null!; // VARCHAR(320)
		[Column("TEXT_ID_DISPLAYNAME"),   NotNull    ] public string  TextIdDisplayname    { get; set; } = null!; // VARCHAR(320)
		[Column("PACKAGE_ID"),            NotNull    ] public string  PackageId            { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),           NotNull    ] public string  ObjectName           { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),         NotNull    ] public string  ObjectSuffix         { get; set; } = null!; // NVARCHAR(256)
		[Column("SUB_OBJECT_NAME"),          Nullable] public string? SubObjectName        { get; set; } // NVARCHAR(256)
		[Column("APPLICATION_COMPONENT"),    Nullable] public string? ApplicationComponent { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_VAR_SERVICE_VARIANT", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarServiceVariant
	{
		[Column("SERVICE_ID"),      NotNull    ] public string  ServiceId     { get; set; } = null!; // NVARCHAR(320)
		[Column("VAR_CONT_SCHEMA"), NotNull    ] public string  VarContSchema { get; set; } = null!; // NVARCHAR(127)
		[Column("VAR_CONT_TABLE"),  NotNull    ] public string  VarContTable  { get; set; } = null!; // NVARCHAR(127)
		[Column(),                  NotNull    ] public int     TYPE          { get; set; } // INTEGER
		[Column("PARAM_NAME"),         Nullable] public string? ParamName     { get; set; } // NVARCHAR(127)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_VAR_TEXT_REPOSITORY", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarTextRepository
	{
		[Column(),                  NotNull    ] public string  ID            { get; set; } = null!; // NVARCHAR(320)
		[Column(),                  NotNull    ] public string  LANG          { get; set; } = null!; // NVARCHAR(256)
		[Column(),                     Nullable] public string? CONTENT       { get; set; } // NVARCHAR(4000)
		[Column("PACKAGE_ID"),      NotNull    ] public string  PackageId     { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),     NotNull    ] public string  ObjectName    { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),   NotNull    ] public string  ObjectSuffix  { get; set; } = null!; // NVARCHAR(256)
		[Column("TEXT_ID"),            Nullable] public string? TextId        { get; set; } // NVARCHAR(256)
		[Column("SUB_OBJECT_NAME"),    Nullable] public string? SubObjectName { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_VAR_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarView
	{
		[Column("VARIANT_ID"),          NotNull    ] public string    VariantId             { get; set; } = null!; // VARCHAR(60)
		[Column("VARIANT_TYPE"),        NotNull    ] public int       VariantType           { get; set; } // INTEGER
		[Column("VARIANT_DESCRIPTION"),    Nullable] public string?   VariantDescription    { get; set; } // VARCHAR(80)
		[Column("mode"),                   Nullable] public char?     Mode                  { get; set; } // VARCHAR(1)
		[Column("activationFailed"),       Nullable] public int?      ActivationFailed      { get; set; } // INTEGER
		[Column(),                         Nullable] public int?      Status                { get; set; } // INTEGER
		[Column(),                         Nullable] public string?   ServiceID             { get; set; } // NVARCHAR(320)
		[Column(),                         Nullable] public string?   ScenarioID            { get; set; } // NVARCHAR(320)
		[Column("PACKAGE_ID"),             Nullable] public string?   PackageId             { get; set; } // NVARCHAR(256)
		[Column("OBJECT_NAME"),            Nullable] public string?   ObjectName            { get; set; } // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),          Nullable] public string?   ObjectSuffix          { get; set; } // NVARCHAR(256)
		[Column("DELIVERY_UNIT"),          Nullable] public string?   DeliveryUnit          { get; set; } // NVARCHAR(256)
		[Column(),                         Nullable] public string?   VENDOR                { get; set; } // NVARCHAR(256)
		[Column("REPO_ACTIVATED_AT"),      Nullable] public DateTime? RepoActivatedAt       { get; set; } // TIMESTAMP
		[Column(),                         Nullable] public string?   FileDataKey           { get; set; } // VARCHAR(256)
		[Column("strServiceData"),         Nullable] public string?   StrServiceData        { get; set; } // NVARCHAR(2000)
		[Column(),                         Nullable] public string?   ServiceStepDataKey    { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   ServiceVariantDataKey { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   XSScriptParamDataKey  { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   TextRepoDataKey       { get; set; } // VARCHAR(256)
		[Column("strScenarioData"),        Nullable] public string?   StrScenarioData       { get; set; } // NVARCHAR(2000)
		[Column(),                         Nullable] public string?   ScenarioPhaseDataKey  { get; set; } // VARCHAR(256)
		[Column(),                         Nullable] public string?   OriginalLanguage      { get; set; } // NVARCHAR(6)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::ACTIVATION_VAR_XSSCRIPT_PARAMETERS", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVarXsscriptParameter
	{
		[Column(),                    NotNull    ] public string  EXECUTABLE      { get; set; } = null!; // NVARCHAR(256)
		[Column("PARAMETER_NAME"),    NotNull    ] public string  ParameterName   { get; set; } = null!; // NVARCHAR(256)
		[Column("DATA_TYPE_NAME"),       Nullable] public string? DataTypeName    { get; set; } // VARCHAR(16)
		[Column("TABLE_TYPE_SCHEMA"),    Nullable] public string? TableTypeSchema { get; set; } // NVARCHAR(256)
		[Column("TABLE_TYPE_NAME"),      Nullable] public string? TableTypeName   { get; set; } // NVARCHAR(256)
		[Column("PARAMETER_TYPE"),    NotNull    ] public string  ParameterType   { get; set; } = null!; // VARCHAR(7)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::APPLICATION_VARIANTS")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbApplicationVariant
	{
		[Column("SERVICE_ID"),          PrimaryKey(1), NotNull] public string  ServiceId          { get; set; } = null!; // NVARCHAR(320)
		/// <summary>
		/// ID, allowed char [A-Za-z0-9_]
		/// </summary>
		[Column("VARIANT_ID"),          PrimaryKey(2), NotNull] public string  VariantId          { get; set; } = null!; // VARCHAR(60)
		/// <summary>
		/// 0 = public usable variant
		/// </summary>
		[Column("VARIANT_TYPE"),                       NotNull] public int     VariantType        { get; set; } // INTEGER
		/// <summary>
		/// Description
		/// </summary>
		[Column("VARIANT_DESCRIPTION"),    Nullable           ] public string? VariantDescription { get; set; } // NVARCHAR(80)
		[Column("PE_PARAM_01"),            Nullable           ] public string? PeParam01          { get; set; } // NVARCHAR(256)
		[Column("PE_PARAM_02"),            Nullable           ] public string? PeParam02          { get; set; } // NVARCHAR(256)
		[Column("PE_PARAM_03"),            Nullable           ] public string? PeParam03          { get; set; } // NVARCHAR(256)
		[Column("PE_PARAM_04"),            Nullable           ] public string? PeParam04          { get; set; } // NVARCHAR(256)
		[Column("PE_PARAM_05"),            Nullable           ] public string? PeParam05          { get; set; } // NVARCHAR(256)
		[Column("PE_PARAM_06"),            Nullable           ] public string? PeParam06          { get; set; } // NVARCHAR(256)
		[Column("PE_PARAM_07"),            Nullable           ] public string? PeParam07          { get; set; } // NVARCHAR(256)
		[Column("PE_PARAM_08"),            Nullable           ] public string? PeParam08          { get; set; } // NVARCHAR(256)
		[Column("PE_PARAM_09"),            Nullable           ] public string? PeParam09          { get; set; } // NVARCHAR(256)
		[Column("PE_PARAM_10"),            Nullable           ] public string? PeParam10          { get; set; } // NVARCHAR(256)
		[Column("PE_SEC_PARAM_01"),        Nullable           ] public string? PeSecParam01       { get; set; } // NVARCHAR(256)
		[Column("PE_SEC_PARAM_02"),        Nullable           ] public string? PeSecParam02       { get; set; } // NVARCHAR(256)
		[Column("PE_SEC_PARAM_03"),        Nullable           ] public string? PeSecParam03       { get; set; } // NVARCHAR(256)
		[Column("PE_SEC_PARAM_04"),        Nullable           ] public string? PeSecParam04       { get; set; } // NVARCHAR(256)
		[Column("PE_SEC_PARAM_05"),        Nullable           ] public string? PeSecParam05       { get; set; } // NVARCHAR(256)
		[Column("PE_SEC_PARAM_06"),        Nullable           ] public string? PeSecParam06       { get; set; } // NVARCHAR(256)
		[Column("PE_SEC_PARAM_07"),        Nullable           ] public string? PeSecParam07       { get; set; } // NVARCHAR(256)
		[Column("PE_SEC_PARAM_08"),        Nullable           ] public string? PeSecParam08       { get; set; } // NVARCHAR(256)
		[Column("PE_SEC_PARAM_09"),        Nullable           ] public string? PeSecParam09       { get; set; } // NVARCHAR(256)
		[Column("PE_SEC_PARAM_10"),        Nullable           ] public string? PeSecParam10       { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::LOG")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbLog
	{
		/// <summary>
		/// GUID
		/// </summary>
		[Column(),               PrimaryKey(1), NotNull] public string   ID          { get; set; } = null!; // NVARCHAR(32)
		[Column("MSG_TS"),       PrimaryKey(2), NotNull] public DateTime MsgTs       { get; set; } // TIMESTAMP
		[Column("MSG_TYPE"),                    NotNull] public char     MsgType     { get; set; } // VARCHAR(1)
		[Column("MSG_TEXT"),        Nullable           ] public string?  MsgText     { get; set; } // NVARCHAR(3072)
		[Column(),                  Nullable           ] public string?  LOCATION    { get; set; } // NVARCHAR(256)
		[Column("DETAIL_LEVEL"),    Nullable           ] public int?     DetailLevel { get; set; } // INTEGER
		[Column("EXT_LOG_ID"),      Nullable           ] public string?  ExtLogId    { get; set; } // NVARCHAR(127)
		[Column("EXT_LOG_LINK"),    Nullable           ] public string?  ExtLogLink  { get; set; } // NVARCHAR(2048)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::LOG_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbLogView
	{
		[Column("PROCESS_ID"),   NotNull    ] public string   ProcessId   { get; set; } = null!; // NVARCHAR(90)
		[Column("TASK_POS"),     NotNull    ] public int      TaskPos     { get; set; } // INTEGER
		[Column("MSG_TS"),       NotNull    ] public DateTime MsgTs       { get; set; } // TIMESTAMP
		[Column("MSG_TYPE"),     NotNull    ] public char     MsgType     { get; set; } // VARCHAR(1)
		[Column(),                  Nullable] public string?  LOCATION    { get; set; } // NVARCHAR(256)
		[Column("MSG_TEXT"),        Nullable] public string?  MsgText     { get; set; } // NVARCHAR(3072)
		[Column("DETAIL_LEVEL"),    Nullable] public int?     DetailLevel { get; set; } // INTEGER
		[Column("EXT_LOG_ID"),      Nullable] public string?  ExtLogId    { get; set; } // NVARCHAR(127)
		[Column("EXT_LOG_LINK"),    Nullable] public string?  ExtLogLink  { get; set; } // NVARCHAR(2048)
		[Column("STEP_ID"),      NotNull    ] public string   StepId      { get; set; } = null!; // NVARCHAR(60)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcess
	{
		[Column(),              PrimaryKey,  NotNull] public string    ID         { get; set; } = null!; // NVARCHAR(90)
		[Column("SNAPSHOT_ID"),              NotNull] public int       SnapshotId { get; set; } // INTEGER
		[Column("SERVICE_ID"),               NotNull] public string    ServiceId  { get; set; } = null!; // NVARCHAR(320)
		[Column(),                 Nullable         ] public int?      STATUS     { get; set; } // INTEGER
		[Column("LAST_USER"),      Nullable         ] public string?   LastUser   { get; set; } // NVARCHAR(256)
		[Column("START_TS"),       Nullable         ] public DateTime? StartTs    { get; set; } // TIMESTAMP
		[Column("END_TS"),         Nullable         ] public DateTime? EndTs      { get; set; } // TIMESTAMP
		[Column("LOG_ID"),         Nullable         ] public string?   LogId      { get; set; } // NVARCHAR(32)
		[Column("VARIANT_ID"),     Nullable         ] public string?   VariantId  { get; set; } // VARCHAR(60)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_LOG", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessLog
	{
		[Column("PROCESS_ID"),   NotNull    ] public string   ProcessId   { get; set; } = null!; // NVARCHAR(90)
		[Column("TASK_POS"),     NotNull    ] public int      TaskPos     { get; set; } // INTEGER
		[Column("MSG_TS"),       NotNull    ] public DateTime MsgTs       { get; set; } // TIMESTAMP
		[Column("MSG_TYPE"),     NotNull    ] public char     MsgType     { get; set; } // VARCHAR(1)
		[Column(),                  Nullable] public string?  LOCATION    { get; set; } // NVARCHAR(256)
		[Column("MSG_TEXT"),        Nullable] public string?  MsgText     { get; set; } // NVARCHAR(3072)
		[Column("DETAIL_LEVEL"),    Nullable] public int?     DetailLevel { get; set; } // INTEGER
		[Column("EXT_LOG_ID"),      Nullable] public string?  ExtLogId    { get; set; } // NVARCHAR(127)
		[Column("EXT_LOG_LINK"),    Nullable] public string?  ExtLogLink  { get; set; } // NVARCHAR(2048)
		[Column("STEP_ID"),      NotNull    ] public string   StepId      { get; set; } = null!; // VARCHAR(2)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_PARAMETER")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessParameter
	{
		[Column("PROCESS_ID"),      PrimaryKey(1), NotNull] public string  ProcessId      { get; set; } = null!; // NVARCHAR(90)
		[Column("PARAMETER_TABLE"), PrimaryKey(2), NotNull] public string  ParameterTable { get; set; } = null!; // NVARCHAR(127)
		[Column("TASK_POS"),        PrimaryKey(3), NotNull] public int     TaskPos        { get; set; } // INTEGER
		[Column("PARAMETER_NAME"),  PrimaryKey(4), NotNull] public string  ParameterName  { get; set; } = null!; // NVARCHAR(127)
		[Column(),                  PrimaryKey(5), NotNull] public int     ROW            { get; set; } // INTEGER
		[Column("VALUE_DISPLAY"),      Nullable           ] public string? ValueDisplay   { get; set; } // NVARCHAR(5000)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_PARAMETER_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessParameterView
	{
		[Column("PROCESS_ID"),      NotNull    ] public string  ProcessId      { get; set; } = null!; // NVARCHAR(90)
		[Column("PARAMETER_TABLE"), NotNull    ] public string  ParameterTable { get; set; } = null!; // NVARCHAR(127)
		[Column("TASK_POS"),        NotNull    ] public int     TaskPos        { get; set; } // INTEGER
		[Column("PARAMETER_NAME"),  NotNull    ] public string  ParameterName  { get; set; } = null!; // NVARCHAR(127)
		[Column(),                  NotNull    ] public int     ROW            { get; set; } // INTEGER
		[Column("PARAMETER_TYPE"),  NotNull    ] public int     ParameterType  { get; set; } // INTEGER
		[Column("PARAMETER_TEXT"),     Nullable] public string? ParameterText  { get; set; } // NVARCHAR(255)
		[Column(),                     Nullable] public string? VALUE          { get; set; } // NVARCHAR(5000)
		[Column(),                     Nullable] public string? STEP           { get; set; } // NVARCHAR(4000)
		[Column("STEP_ID"),            Nullable] public string? StepId         { get; set; } // NVARCHAR(60)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_SEMAPHORE")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessSemaphore
	{
		[Column("PROCESS_ID"), PrimaryKey,  NotNull] public string    ProcessId { get; set; } = null!; // NVARCHAR(90)
		/// <summary>
		/// 0: Do not stop 1: Stop
		/// </summary>
		[Column(),                          NotNull] public int       STOP      { get; set; } // INTEGER
		[Column("CHG_USER"),      Nullable         ] public string?   ChgUser   { get; set; } // NVARCHAR(256)
		[Column("CHG_TS"),        Nullable         ] public DateTime? ChgTs     { get; set; } // TIMESTAMP
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_SERVICE")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessService
	{
		[Column("SNAPSHOT_ID"),           PrimaryKey(1), NotNull] public int       SnapshotId           { get; set; } // INTEGER
		[Column(),                        PrimaryKey(2), NotNull] public string    ID                   { get; set; } = null!; // NVARCHAR(320)
		[Column("SHORT_ID"),                             NotNull] public string    ShortId              { get; set; } = null!; // NVARCHAR(60)
		[Column("SCENARIO_ID"),                          NotNull] public string    ScenarioId           { get; set; } = null!; // NVARCHAR(320)
		[Column("TEXT_ID_DESCRIPTION"),                  NotNull] public string    TextIdDescription    { get; set; } = null!; // VARCHAR(320)
		[Column("TEXT_ID_DISPLAYNAME"),                  NotNull] public string    TextIdDisplayname    { get; set; } = null!; // VARCHAR(320)
		[Column("VAR_ODATA_SRV"),            Nullable           ] public string?   VarOdataSrv          { get; set; } // NVARCHAR(256)
		[Column("VAR_MAINT_UI"),             Nullable           ] public string?   VarMaintUi           { get; set; } // NVARCHAR(256)
		[Column(),                           Nullable           ] public int?      STATUS               { get; set; } // INTEGER
		[Column("PACKAGE_ID"),                           NotNull] public string    PackageId            { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),                          NotNull] public string    ObjectName           { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),            Nullable           ] public string?   ObjectSuffix         { get; set; } // NVARCHAR(256)
		[Column("REPO_ACTIVATED_AT"),        Nullable           ] public DateTime? RepoActivatedAt      { get; set; } // TIMESTAMP
		[Column("ACTIVATED_AT"),             Nullable           ] public DateTime? ActivatedAt          { get; set; } // TIMESTAMP
		[Column("ACTIVATED_BY"),             Nullable           ] public string?   ActivatedBy          { get; set; } // NVARCHAR(256)
		[Column("APPLICATION_COMPONENT"),    Nullable           ] public string?   ApplicationComponent { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_SERVICE_STEP")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessServiceStep
	{
		[Column("SNAPSHOT_ID"),           PrimaryKey(1), NotNull] public int     SnapshotId           { get; set; } // INTEGER
		[Column("SERVICE_ID"),            PrimaryKey(2), NotNull] public string  ServiceId            { get; set; } = null!; // NVARCHAR(320)
		[Column(),                        PrimaryKey(3), NotNull] public int     POS                  { get; set; } // INTEGER
		[Column("STEP_ID"),                              NotNull] public string  StepId               { get; set; } = null!; // NVARCHAR(60)
		[Column(),                                       NotNull] public string  TYPE                 { get; set; } = null!; // NVARCHAR(10)
		[Column(),                           Nullable           ] public string? SCHEMA               { get; set; } // NVARCHAR(127)
		[Column(),                                       NotNull] public string  EXECUTABLE           { get; set; } = null!; // NVARCHAR(127)
		[Column("TEXT_ID_DESCRIPTION"),                  NotNull] public string  TextIdDescription    { get; set; } = null!; // VARCHAR(320)
		[Column("TEXT_ID_DISPLAYNAME"),                  NotNull] public string  TextIdDisplayname    { get; set; } = null!; // VARCHAR(320)
		[Column("PACKAGE_ID"),                           NotNull] public string  PackageId            { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),                          NotNull] public string  ObjectName           { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),                        NotNull] public string  ObjectSuffix         { get; set; } = null!; // NVARCHAR(256)
		[Column("SUB_OBJECT_NAME"),          Nullable           ] public string? SubObjectName        { get; set; } // NVARCHAR(256)
		[Column("APPLICATION_COMPONENT"),    Nullable           ] public string? ApplicationComponent { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_SERVICE_VARIANT")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessServiceVariant
	{
		[Column("SNAPSHOT_ID"),     PrimaryKey(1), NotNull] public int     SnapshotId     { get; set; } // INTEGER
		[Column("SERVICE_ID"),      PrimaryKey(2), NotNull] public string  ServiceId      { get; set; } = null!; // NVARCHAR(320)
		[Column("VAR_CONT_SCHEMA"), PrimaryKey(3), NotNull] public string  VarContSchema  { get; set; } = null!; // NVARCHAR(127)
		[Column("VAR_CONT_TABLE"),  PrimaryKey(4), NotNull] public string  VarContTable   { get; set; } = null!; // NVARCHAR(127)
		/// <summary>
		/// 1: Scalar Param 2: Table Type
		/// </summary>
		[Column(),                                 NotNull] public int     TYPE           { get; set; } // INTEGER
		/// <summary>
		/// Only for Table Type
		/// </summary>
		[Column("PARAM_NAME"),         Nullable           ] public string? ParamName      { get; set; } // NVARCHAR(127)
		[Column("PARAMETER_TABLE"),                NotNull] public string  ParameterTable { get; set; } = null!; // NVARCHAR(127)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_TASK")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessTask
	{
		[Column("PROCESS_ID"), PrimaryKey(1), NotNull] public string    ProcessId  { get; set; } = null!; // NVARCHAR(90)
		[Column(),             PrimaryKey(2), NotNull] public int       POS        { get; set; } // INTEGER
		[Column(),                            NotNull] public string    TYPE       { get; set; } = null!; // NVARCHAR(10)
		[Column(),                Nullable           ] public string?   SCHEMA     { get; set; } // NVARCHAR(127)
		[Column(),                            NotNull] public string    EXECUTABLE { get; set; } = null!; // NVARCHAR(127)
		[Column(),                Nullable           ] public int?      STATUS     { get; set; } // INTEGER
		[Column("LAST_USER"),     Nullable           ] public string?   LastUser   { get; set; } // NVARCHAR(256)
		[Column("START_TS"),      Nullable           ] public DateTime? StartTs    { get; set; } // TIMESTAMP
		[Column("END_TS"),        Nullable           ] public DateTime? EndTs      { get; set; } // TIMESTAMP
		[Column("LOG_ID"),        Nullable           ] public string?   LogId      { get; set; } // NVARCHAR(32)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_VARIABLE")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessVariable
	{
		[Column("PROCESS_ID"),      PrimaryKey(1), NotNull] public string  ProcessId      { get; set; } = null!; // NVARCHAR(90)
		[Column("PARAMETER_TABLE"), PrimaryKey(2), NotNull] public string  ParameterTable { get; set; } = null!; // NVARCHAR(127)
		[Column("VAR_CONT_SCHEMA"),                NotNull] public string  VarContSchema  { get; set; } = null!; // NVARCHAR(127)
		[Column("VAR_CONT_TABLE"),                 NotNull] public string  VarContTable   { get; set; } = null!; // NVARCHAR(127)
		/// <summary>
		/// 1: Scalar Param 2: Table Type
		/// </summary>
		[Column(),                                 NotNull] public int     TYPE           { get; set; } // INTEGER
		/// <summary>
		/// Only for Table Type
		/// </summary>
		[Column("PARAM_NAME"),         Nullable           ] public string? ParamName      { get; set; } // NVARCHAR(127)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_VARIABLE_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessVariableView
	{
		[Column("PROCESS_ID"),      NotNull    ] public string  ProcessId      { get; set; } = null!; // NVARCHAR(90)
		[Column("PARAMETER_TABLE"), NotNull    ] public string  ParameterTable { get; set; } = null!; // NVARCHAR(127)
		[Column(),                  NotNull    ] public int     TYPE           { get; set; } // INTEGER
		[Column("PARAMETER_NAME"),  NotNull    ] public string  ParameterName  { get; set; } = null!; // NVARCHAR(256)
		[Column("DATA_TYPE"),          Nullable] public string? DataType       { get; set; } // VARCHAR(16)
		[Column("IS_PRIMARY_KEY"),  NotNull    ] public string  IsPrimaryKey   { get; set; } = null!; // VARCHAR(5)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::PROCESS_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbProcessView
	{
		[Column(),                NotNull    ] public string    ID          { get; set; } = null!; // NVARCHAR(90)
		[Column(),                NotNull    ] public string    SERVICE     { get; set; } = null!; // NVARCHAR(329)
		[Column("SERVICE_ID"),    NotNull    ] public string    ServiceId   { get; set; } = null!; // NVARCHAR(320)
		[Column("VAR_ODATA_SRV"),    Nullable] public string?   VarOdataSrv { get; set; } // NVARCHAR(256)
		[Column("VAR_MAINT_UI"),     Nullable] public string?   VarMaintUi  { get; set; } // NVARCHAR(256)
		[Column("VARIANT_ID"),       Nullable] public string?   VariantId   { get; set; } // VARCHAR(60)
		[Column("SCENARIO_ID"),      Nullable] public string?   ScenarioId  { get; set; } // NVARCHAR(320)
		[Column(),                   Nullable] public int?      STATUS      { get; set; } // INTEGER
		[Column("TOOL_STATUS"),      Nullable] public int?      ToolStatus  { get; set; } // INTEGER
		[Column("SLMP_STATUS"),      Nullable] public string?   SlmpStatus  { get; set; } // VARCHAR(26)
		[Column("SLPP_STATUS"),      Nullable] public string?   SlppStatus  { get; set; } // VARCHAR(30)
		[Column("LAST_USER"),        Nullable] public string?   LastUser    { get; set; } // NVARCHAR(256)
		[Column("START_TS"),         Nullable] public DateTime? StartTs     { get; set; } // TIMESTAMP
		[Column("END_TS"),           Nullable] public DateTime? EndTs       { get; set; } // TIMESTAMP
		[Column(),                NotNull    ] public string    DISPLAYNAME { get; set; } = null!; // NVARCHAR(4000)
		[Column(),                   Nullable] public string?   DESCRIPTION { get; set; } // NVARCHAR(4000)
		[Column("LOG_TOTAL"),     NotNull    ] public long      LogTotal    { get; set; } // BIGINT
		[Column("LOG_OK"),        NotNull    ] public long      LogOk       { get; set; } // BIGINT
		[Column("LOG_ERROR"),     NotNull    ] public long      LogError    { get; set; } // BIGINT
		[Column("LOG_WARNING"),   NotNull    ] public long      LogWarning  { get; set; } // BIGINT
		[Column(),                   Nullable] public decimal?  PROGRESS    { get; set; } // DECIMAL(25, 6)
		[Column("ACTION_ID"),     NotNull    ] public string    ActionId    { get; set; } = null!; // VARCHAR(3)
		[Column("METADATA_ID"),   NotNull    ] public string    MetadataId  { get; set; } = null!; // VARCHAR(4)
		[Column("SUPPORT_INFO"),  NotNull    ] public string    SupportInfo { get; set; } = null!; // NVARCHAR(313)
		[Column("SNAPSHOT_ID"),   NotNull    ] public int       SnapshotId  { get; set; } // INTEGER
		[Column("LOG_ID"),           Nullable] public string?   LogId       { get; set; } // NVARCHAR(32)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SCENARIO")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbScenario
	{
		[Column(),                        PrimaryKey,  NotNull] public string    ID                   { get; set; } = null!; // NVARCHAR(320)
		[Column("SHORT_ID"),                           NotNull] public string    ShortId              { get; set; } = null!; // NVARCHAR(60)
		[Column(),                                     NotNull] public string    SCOPE                { get; set; } = null!; // NVARCHAR(80)
		[Column("EXTERNAL_INFO"),            Nullable         ] public string?   ExternalInfo         { get; set; } // NVARCHAR(256)
		[Column("BEST_PRACTICES"),           Nullable         ] public string?   BestPractices        { get; set; } // NVARCHAR(256)
		[Column("TEXT_ID_DESCRIPTION"),                NotNull] public string    TextIdDescription    { get; set; } = null!; // VARCHAR(320)
		[Column("TEXT_ID_DISPLAYNAME"),                NotNull] public string    TextIdDisplayname    { get; set; } = null!; // VARCHAR(320)
		[Column(),                           Nullable         ] public int?      STATUS               { get; set; } // INTEGER
		[Column("PACKAGE_ID"),                         NotNull] public string    PackageId            { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),                        NotNull] public string    ObjectName           { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),            Nullable         ] public string?   ObjectSuffix         { get; set; } // NVARCHAR(256)
		[Column("REPO_ACTIVATED_AT"),        Nullable         ] public DateTime? RepoActivatedAt      { get; set; } // TIMESTAMP
		[Column("ACTIVATED_AT"),             Nullable         ] public DateTime? ActivatedAt          { get; set; } // TIMESTAMP
		[Column("ACTIVATED_BY"),             Nullable         ] public string?   ActivatedBy          { get; set; } // NVARCHAR(256)
		[Column("APPLICATION_COMPONENT"),    Nullable         ] public string?   ApplicationComponent { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SCENARIO_PHASE")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioPhase
	{
		[Column("SCENARIO_ID"),         PrimaryKey(1), NotNull] public string  ScenarioId        { get; set; } = null!; // NVARCHAR(320)
		[Column(),                      PrimaryKey(2), NotNull] public int     POS               { get; set; } // INTEGER
		[Column("PHASE_ID"),                           NotNull] public string  PhaseId           { get; set; } = null!; // NVARCHAR(60)
		[Column("EXTERNAL_INFO"),          Nullable           ] public string? ExternalInfo      { get; set; } // NVARCHAR(256)
		[Column("BEST_PRACTICES"),         Nullable           ] public string? BestPractices     { get; set; } // NVARCHAR(256)
		[Column("TEXT_ID_DESCRIPTION"),                NotNull] public string  TextIdDescription { get; set; } = null!; // VARCHAR(320)
		[Column("TEXT_ID_DISPLAYNAME"),                NotNull] public string  TextIdDisplayname { get; set; } = null!; // VARCHAR(320)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SCENARIO_PHASE_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioPhaseView
	{
		[Column("SCENARIO_ID"),    NotNull    ] public string  ScenarioId    { get; set; } = null!; // NVARCHAR(320)
		[Column(),                 NotNull    ] public int     POS           { get; set; } // INTEGER
		[Column("PHASE_ID"),       NotNull    ] public string  PhaseId       { get; set; } = null!; // NVARCHAR(60)
		[Column("EXTERNAL_INFO"),     Nullable] public string? ExternalInfo  { get; set; } // NVARCHAR(256)
		[Column("BEST_PRACTICES"),    Nullable] public string? BestPractices { get; set; } // NVARCHAR(256)
		[Column(),                    Nullable] public string? DISPLAYNAME   { get; set; } // NVARCHAR(4000)
		[Column(),                    Nullable] public string? DESCRIPTION   { get; set; } // NVARCHAR(4000)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SCENARIO_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioView
	{
		[Column(),                        NotNull    ] public string  ID                   { get; set; } = null!; // NVARCHAR(320)
		[Column("SHORT_ID"),              NotNull    ] public string  ShortId              { get; set; } = null!; // NVARCHAR(60)
		[Column(),                        NotNull    ] public string  SCOPE                { get; set; } = null!; // NVARCHAR(80)
		[Column("EXTERNAL_INFO"),            Nullable] public string? ExternalInfo         { get; set; } // NVARCHAR(256)
		[Column("BEST_PRACTICES"),           Nullable] public string? BestPractices        { get; set; } // NVARCHAR(256)
		[Column("APPLICATION_COMPONENT"),    Nullable] public string? ApplicationComponent { get; set; } // NVARCHAR(256)
		[Column(),                        NotNull    ] public string  DISPLAYNAME          { get; set; } = null!; // NVARCHAR(4000)
		[Column(),                           Nullable] public string? DESCRIPTION          { get; set; } // NVARCHAR(4000)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SERVICE")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbService
	{
		[Column(),                        PrimaryKey,  NotNull] public string    ID                   { get; set; } = null!; // NVARCHAR(320)
		[Column("SHORT_ID"),                           NotNull] public string    ShortId              { get; set; } = null!; // NVARCHAR(60)
		[Column("SCENARIO_ID"),                        NotNull] public string    ScenarioId           { get; set; } = null!; // NVARCHAR(320)
		[Column("TEXT_ID_DESCRIPTION"),                NotNull] public string    TextIdDescription    { get; set; } = null!; // VARCHAR(320)
		[Column("TEXT_ID_DISPLAYNAME"),                NotNull] public string    TextIdDisplayname    { get; set; } = null!; // VARCHAR(320)
		[Column("VAR_ODATA_SRV"),            Nullable         ] public string?   VarOdataSrv          { get; set; } // NVARCHAR(256)
		[Column("VAR_MAINT_UI"),             Nullable         ] public string?   VarMaintUi           { get; set; } // NVARCHAR(2048)
		[Column(),                           Nullable         ] public int?      STATUS               { get; set; } // INTEGER
		[Column("PACKAGE_ID"),                         NotNull] public string    PackageId            { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),                        NotNull] public string    ObjectName           { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),            Nullable         ] public string?   ObjectSuffix         { get; set; } // NVARCHAR(256)
		[Column("REPO_ACTIVATED_AT"),        Nullable         ] public DateTime? RepoActivatedAt      { get; set; } // TIMESTAMP
		[Column("ACTIVATED_AT"),             Nullable         ] public DateTime? ActivatedAt          { get; set; } // TIMESTAMP
		[Column("ACTIVATED_BY"),             Nullable         ] public string?   ActivatedBy          { get; set; } // NVARCHAR(256)
		[Column("APPLICATION_COMPONENT"),    Nullable         ] public string?   ApplicationComponent { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SERVICE_ACTIVATION", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbServiceActivation
	{
		[Column(),                                    Nullable] public string? ID                           { get; set; } // NVARCHAR(513)
		[Column("SHORT_ID"),                          Nullable] public string? ShortId                      { get; set; } // NVARCHAR(256)
		[Column("FILTER_SHORT_ID"),                   Nullable] public string? FilterShortId                { get; set; } // NVARCHAR(256)
		[Column(),                                    Nullable] public string? DISPLAYNAME                  { get; set; } // NVARCHAR(4000)
		[Column("FILTER_DISPLAYNAME"),                Nullable] public string? FilterDisplayname            { get; set; } // NVARCHAR(4000)
		[Column(),                                    Nullable] public string? DESCRIPTION                  { get; set; } // NVARCHAR(4000)
		[Column("FILTER_DESCRIPTION"),                Nullable] public string? FilterDescription            { get; set; } // NVARCHAR(4000)
		[Column("VAR_ODATA_SRV"),                     Nullable] public string? VarOdataSrv                  { get; set; } // NVARCHAR(256)
		[Column("VAR_MAINT_UI"),                      Nullable] public string? VarMaintUi                   { get; set; } // NVARCHAR(2048)
		[Column("APPLICATION_COMPONENT"),             Nullable] public string? ApplicationComponent         { get; set; } // NVARCHAR(256)
		[Column(),                                 NotNull    ] public string  SLPPVERSION                  { get; set; } = null!; // VARCHAR(5)
		[Column("SCENARIO_ID"),                    NotNull    ] public string  ScenarioId                   { get; set; } = null!; // NVARCHAR(320)
		[Column("SCENARIO_SHORT_ID"),              NotNull    ] public string  ScenarioShortId              { get; set; } = null!; // NVARCHAR(60)
		[Column("FILTER_SCENARIO_SHORT_ID"),          Nullable] public string? FilterScenarioShortId        { get; set; } // NVARCHAR(60)
		[Column("SCENARIO_SCOPE"),                 NotNull    ] public string  ScenarioScope                { get; set; } = null!; // NVARCHAR(80)
		[Column("FILTER_SCENARIO_SCOPE"),             Nullable] public string? FilterScenarioScope          { get; set; } // NVARCHAR(80)
		[Column("SCENARIO_DISPLAYNAME"),           NotNull    ] public string  ScenarioDisplayname          { get; set; } = null!; // NVARCHAR(4000)
		[Column("FILTER_SCENARIO_DISPLAYNAME"),       Nullable] public string? FilterScenarioDisplayname    { get; set; } // NVARCHAR(4000)
		[Column("SCENARIO_DESCRIPTION"),              Nullable] public string? ScenarioDescription          { get; set; } // NVARCHAR(4000)
		[Column("SCENARIO_EXTERNAL_INFO"),            Nullable] public string? ScenarioExternalInfo         { get; set; } // NVARCHAR(256)
		[Column("SCENARIO_BEST_PRACTICES"),           Nullable] public string? ScenarioBestPractices        { get; set; } // NVARCHAR(256)
		[Column("SCENARIO_APPLICATION_COMPONENT"),    Nullable] public string? ScenarioApplicationComponent { get; set; } // NVARCHAR(256)
		[Column("SUPPORT_INFO"),                   NotNull    ] public string  SupportInfo                  { get; set; } = null!; // NVARCHAR(450)
		[Column("PROC_ACTIVE"),                    NotNull    ] public long    ProcActive                   { get; set; } // BIGINT
		[Column("ACTIVATION_STATE"),               NotNull    ] public char    ActivationState              { get; set; } // VARCHAR(1)
		[Column("ACTIVATION_VARIANT_ID"),          NotNull    ] public string  ActivationVariantId          { get; set; } = null!; // VARCHAR(60)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SERVICE_PARAMETER_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbServiceParameterView
	{
		[Column("SERVICE_ID"),      NotNull    ] public string  ServiceId     { get; set; } = null!; // NVARCHAR(320)
		[Column("VAR_CONT_SCHEMA"), NotNull    ] public string  VarContSchema { get; set; } = null!; // NVARCHAR(127)
		[Column("VAR_CONT_TABLE"),  NotNull    ] public string  VarContTable  { get; set; } = null!; // NVARCHAR(127)
		[Column(),                  NotNull    ] public int     TYPE          { get; set; } // INTEGER
		[Column("PARAMETER_NAME"),     Nullable] public string? ParameterName { get; set; } // NVARCHAR(256)
		[Column("DATA_TYPE"),          Nullable] public string? DataType      { get; set; } // NVARCHAR(127)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SERVICE_SCENARIO", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbServiceScenario
	{
		[Column(),                                 NotNull    ] public string  ID                           { get; set; } = null!; // NVARCHAR(320)
		[Column("SHORT_ID"),                       NotNull    ] public string  ShortId                      { get; set; } = null!; // NVARCHAR(60)
		[Column(),                                 NotNull    ] public string  DISPLAYNAME                  { get; set; } = null!; // NVARCHAR(4000)
		[Column(),                                    Nullable] public string? DESCRIPTION                  { get; set; } // NVARCHAR(4000)
		[Column("VAR_ODATA_SRV"),                     Nullable] public string? VarOdataSrv                  { get; set; } // NVARCHAR(256)
		[Column("VAR_MAINT_UI"),                      Nullable] public string? VarMaintUi                   { get; set; } // NVARCHAR(2048)
		[Column("APPLICATION_COMPONENT"),             Nullable] public string? ApplicationComponent         { get; set; } // NVARCHAR(256)
		[Column(),                                 NotNull    ] public string  SLPPVERSION                  { get; set; } = null!; // VARCHAR(5)
		[Column("SCENARIO_ID"),                    NotNull    ] public string  ScenarioId                   { get; set; } = null!; // NVARCHAR(320)
		[Column("SCENARIO_SHORT_ID"),                 Nullable] public string? ScenarioShortId              { get; set; } // NVARCHAR(60)
		[Column("SCENARIO_SCOPE"),                    Nullable] public string? ScenarioScope                { get; set; } // NVARCHAR(80)
		[Column("SCENARIO_DISPLAYNAME"),              Nullable] public string? ScenarioDisplayname          { get; set; } // NVARCHAR(4000)
		[Column("SCENARIO_DESCRIPTION"),              Nullable] public string? ScenarioDescription          { get; set; } // NVARCHAR(4000)
		[Column("SCENARIO_EXTERNAL_INFO"),            Nullable] public string? ScenarioExternalInfo         { get; set; } // NVARCHAR(256)
		[Column("SCENARIO_BEST_PRACTICES"),           Nullable] public string? ScenarioBestPractices        { get; set; } // NVARCHAR(256)
		[Column("SCENARIO_APPLICATION_COMPONENT"),    Nullable] public string? ScenarioApplicationComponent { get; set; } // NVARCHAR(256)
		[Column("SUPPORT_INFO"),                   NotNull    ] public string  SupportInfo                  { get; set; } = null!; // NVARCHAR(450)
		[Column("PROC_ACTIVE"),                    NotNull    ] public long    ProcActive                   { get; set; } // BIGINT
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SERVICE_STEP")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbServiceStep
	{
		[Column("SERVICE_ID"),            PrimaryKey(1), NotNull] public string  ServiceId            { get; set; } = null!; // NVARCHAR(320)
		[Column(),                        PrimaryKey(2), NotNull] public int     POS                  { get; set; } // INTEGER
		[Column("STEP_ID"),                              NotNull] public string  StepId               { get; set; } = null!; // NVARCHAR(60)
		[Column(),                                       NotNull] public string  TYPE                 { get; set; } = null!; // NVARCHAR(10)
		[Column(),                           Nullable           ] public string? SCHEMA               { get; set; } // NVARCHAR(127)
		[Column(),                                       NotNull] public string  EXECUTABLE           { get; set; } = null!; // NVARCHAR(127)
		[Column("TEXT_ID_DESCRIPTION"),                  NotNull] public string  TextIdDescription    { get; set; } = null!; // VARCHAR(320)
		[Column("TEXT_ID_DISPLAYNAME"),                  NotNull] public string  TextIdDisplayname    { get; set; } = null!; // VARCHAR(320)
		[Column("PACKAGE_ID"),                           NotNull] public string  PackageId            { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),                          NotNull] public string  ObjectName           { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),                        NotNull] public string  ObjectSuffix         { get; set; } = null!; // NVARCHAR(256)
		[Column("SUB_OBJECT_NAME"),          Nullable           ] public string? SubObjectName        { get; set; } // NVARCHAR(256)
		[Column("APPLICATION_COMPONENT"),    Nullable           ] public string? ApplicationComponent { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SERVICE_VARIANT")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbServiceVariant
	{
		[Column("SERVICE_ID"),      PrimaryKey(1), NotNull] public string  ServiceId     { get; set; } = null!; // NVARCHAR(320)
		[Column("VAR_CONT_SCHEMA"), PrimaryKey(2), NotNull] public string  VarContSchema { get; set; } = null!; // NVARCHAR(127)
		[Column("VAR_CONT_TABLE"),  PrimaryKey(3), NotNull] public string  VarContTable  { get; set; } = null!; // NVARCHAR(127)
		/// <summary>
		/// 1: Scalar Param 2: Table Type
		/// </summary>
		[Column(),                                 NotNull] public int     TYPE          { get; set; } // INTEGER
		/// <summary>
		/// Only for Table Type
		/// </summary>
		[Column("PARAM_NAME"),         Nullable           ] public string? ParamName     { get; set; } // NVARCHAR(127)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SERVICE_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbServiceView
	{
		[Column(),                        NotNull    ] public string  ID                   { get; set; } = null!; // NVARCHAR(320)
		[Column("SHORT_ID"),              NotNull    ] public string  ShortId              { get; set; } = null!; // NVARCHAR(60)
		[Column("SCENARIO_ID"),           NotNull    ] public string  ScenarioId           { get; set; } = null!; // NVARCHAR(320)
		[Column("VAR_ODATA_SRV"),            Nullable] public string? VarOdataSrv          { get; set; } // NVARCHAR(256)
		[Column("VAR_MAINT_UI"),             Nullable] public string? VarMaintUi           { get; set; } // NVARCHAR(2048)
		[Column("APPLICATION_COMPONENT"),    Nullable] public string? ApplicationComponent { get; set; } // NVARCHAR(256)
		[Column(),                        NotNull    ] public string  DISPLAYNAME          { get; set; } = null!; // NVARCHAR(4000)
		[Column(),                           Nullable] public string? DESCRIPTION          { get; set; } // NVARCHAR(4000)
		[Column(),                        NotNull    ] public string  PROCESSES            { get; set; } = null!; // VARCHAR(9)
		[Column(),                        NotNull    ] public string  SLPPVERSION          { get; set; } = null!; // VARCHAR(5)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_ACTION_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpActionView
	{
		[Column(),              NotNull] public string ID          { get; set; } = null!; // VARCHAR(6)
		[Column("ACTION_TYPE"), NotNull] public string ActionType  { get; set; } = null!; // VARCHAR(17)
		[Column(),              NotNull] public string INDIALOG    { get; set; } = null!; // VARCHAR(5)
		[Column(),              NotNull] public string DISPLAYNAME { get; set; } = null!; // VARCHAR(6)
		[Column(),              NotNull] public string DESCRIPTION { get; set; } = null!; // VARCHAR(6)
		[Column("ACTION_ID"),   NotNull] public string ActionId    { get; set; } = null!; // VARCHAR(3)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_BREAKPOINT_CURRENT_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpBreakpointCurrentView
	{
		[Column(),                Nullable] public string? ID          { get; set; } // NVARCHAR(101)
		[Column("PROCESS_ID"), NotNull    ] public string  ProcessId   { get; set; } = null!; // NVARCHAR(90)
		[Column(),             NotNull    ] public string  EXECUTABLE  { get; set; } = null!; // NVARCHAR(127)
		[Column(),             NotNull    ] public string  ENABLED     { get; set; } = null!; // VARCHAR(5)
		[Column(),             NotNull    ] public string  STATUS      { get; set; } = null!; // VARCHAR(24)
		[Column(),                Nullable] public string? DISPLAYNAME { get; set; } // NVARCHAR(4000)
		[Column(),                Nullable] public string? DESCRIPTION { get; set; } // NVARCHAR(4000)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_BREAKPOINT_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpBreakpointView
	{
		[Column(),                Nullable] public string? ID          { get; set; } // NVARCHAR(101)
		[Column("PROCESS_ID"), NotNull    ] public string  ProcessId   { get; set; } = null!; // NVARCHAR(90)
		[Column(),             NotNull    ] public string  EXECUTABLE  { get; set; } = null!; // NVARCHAR(127)
		[Column(),             NotNull    ] public string  ENABLED     { get; set; } = null!; // VARCHAR(5)
		[Column(),             NotNull    ] public string  STATUS      { get; set; } = null!; // VARCHAR(24)
		[Column(),                Nullable] public string? DISPLAYNAME { get; set; } // NVARCHAR(4000)
		[Column(),                Nullable] public string? DESCRIPTION { get; set; } // NVARCHAR(4000)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_CONFIG_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpConfigView
	{
		[Column(),                Nullable] public string? ID        { get; set; } // NVARCHAR(347)
		[Column("PROCESS_ID"), NotNull    ] public string  ProcessId { get; set; } = null!; // NVARCHAR(90)
		[Column(),             NotNull    ] public string  NAME      { get; set; } = null!; // NVARCHAR(256)
		[Column(),             NotNull    ] public string  TYPE      { get; set; } = null!; // VARCHAR(25)
		[Column(),             NotNull    ] public char    DEFAULT   { get; set; } // VARCHAR(1)
		[Column(),             NotNull    ] public string  REQUIRED  { get; set; } = null!; // VARCHAR(4)
		[Column(),             NotNull    ] public string  SECURE    { get; set; } = null!; // VARCHAR(5)
		[Column(),             NotNull    ] public string  VALUE     { get; set; } = null!; // NVARCHAR(5000)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_DIALOG_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpDialogView
	{
		[Column(),            NotNull] public string ID          { get; set; } = null!; // VARCHAR(6)
		[Column(),            NotNull] public string DISPLAYNAME { get; set; } = null!; // VARCHAR(6)
		[Column(),            NotNull] public string DESCRIPTION { get; set; } = null!; // VARCHAR(6)
		[Column("ACTION_ID"), NotNull] public string ActionId    { get; set; } = null!; // VARCHAR(3)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_LOG_CONTENT_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpLogContentView
	{
		[Column(),               NotNull    ] public string   ID         { get; set; } = null!; // NVARCHAR(90)
		[Column("TASK_POS"),     NotNull    ] public int      TaskPos    { get; set; } // INTEGER
		[Column("MSG_TS"),       NotNull    ] public DateTime MsgTs      { get; set; } // TIMESTAMP
		[Column("MSG_TYPE"),     NotNull    ] public char     MsgType    { get; set; } // VARCHAR(1)
		[Column(),                  Nullable] public string?  LOCATION   { get; set; } // NVARCHAR(256)
		[Column("MSG_TEXT"),        Nullable] public string?  MsgText    { get; set; } // NVARCHAR(3072)
		[Column("EXT_LOG_ID"),      Nullable] public string?  ExtLogId   { get; set; } // NVARCHAR(127)
		[Column("EXT_LOG_LINK"),    Nullable] public string?  ExtLogLink { get; set; } // NVARCHAR(2048)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_LOG_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpLogView
	{
		[Column(),                     Nullable] public string?   ID             { get; set; } // NVARCHAR(5000)
		[Column("PROCESS_ID"),      NotNull    ] public string    ProcessId      { get; set; } = null!; // NVARCHAR(90)
		[Column(),                  NotNull    ] public string    NAME           { get; set; } = null!; // VARCHAR(14)
		[Column("MSG_TS"),             Nullable] public DateTime? MsgTs          { get; set; } // TIMESTAMP
		[Column(),                  NotNull    ] public string    FORMAT         { get; set; } = null!; // NVARCHAR(127)
		[Column(),                     Nullable] public string?   LOGCONTENT     { get; set; } // NVARCHAR(2048)
		[Column("SLPP_LOGCONTENT"),    Nullable] public string?   SlppLogcontent { get; set; } // NVARCHAR(5000)
		[Column(),                  NotNull    ] public string    DISPLAYNAME    { get; set; } = null!; // VARCHAR(20)
		[Column(),                  NotNull    ] public string    DESCRIPTION    { get; set; } = null!; // VARCHAR(20)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_METADATA_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpMetadataView
	{
		[Column, NotNull] public string ID          { get; set; } = null!; // VARCHAR(4)
		[Column, NotNull] public string SLPPVERSION { get; set; } = null!; // VARCHAR(5)
		[Column, NotNull] public string SLMPVERSION { get; set; } = null!; // VARCHAR(5)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_MONITOR_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpMonitorView
	{
		[Column(),                 Nullable] public string?   ID          { get; set; } // NVARCHAR(101)
		[Column("PROCESS_ID"),  NotNull    ] public string    ProcessId   { get; set; } = null!; // NVARCHAR(90)
		[Column(),              NotNull    ] public int       POS         { get; set; } // INTEGER
		[Column(),              NotNull    ] public string    TYPE        { get; set; } = null!; // NVARCHAR(10)
		[Column("SLPP_TYPE"),   NotNull    ] public string    SlppType    { get; set; } = null!; // VARCHAR(26)
		[Column(),              NotNull    ] public string    PARENT      { get; set; } = null!; // NVARCHAR(100)
		[Column("PARENT_ID"),   NotNull    ] public string    ParentId    { get; set; } = null!; // NVARCHAR(91)
		[Column(),                 Nullable] public decimal?  PROGRESS    { get; set; } // DECIMAL(25, 6)
		[Column(),                 Nullable] public string?   SCHEMA      { get; set; } // NVARCHAR(127)
		[Column(),              NotNull    ] public string    EXECUTABLE  { get; set; } = null!; // NVARCHAR(127)
		[Column("STEP_ID"),     NotNull    ] public string    StepId      { get; set; } = null!; // NVARCHAR(91)
		[Column(),                 Nullable] public int?      STATUS      { get; set; } // INTEGER
		[Column("TOOL_STATUS"),    Nullable] public int?      ToolStatus  { get; set; } // INTEGER
		[Column("SLPP_STATUS"),    Nullable] public string?   SlppStatus  { get; set; } // VARCHAR(30)
		[Column("LAST_USER"),      Nullable] public string?   LastUser    { get; set; } // NVARCHAR(256)
		[Column("START_TS"),       Nullable] public DateTime? StartTs     { get; set; } // TIMESTAMP
		[Column("END_TS"),         Nullable] public DateTime? EndTs       { get; set; } // TIMESTAMP
		[Column(),                 Nullable] public string?   DISPLAYNAME { get; set; } // NVARCHAR(4000)
		[Column(),                 Nullable] public string?   DESCRIPTION { get; set; } // NVARCHAR(4000)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_PROPERTY_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpPropertyView
	{
		[Column(),               Nullable] public string? ID          { get; set; } // VARCHAR(51)
		[Column(),               Nullable] public string? VALUE       { get; set; } // NVARCHAR(5000)
		[Column(),               Nullable] public string? DESCRIPTION { get; set; } // VARCHAR(309)
		[Column(),               Nullable] public string? DISPLAYNAME { get; set; } // VARCHAR(32)
		[Column(),               Nullable] public string? INFO        { get; set; } // VARCHAR(64)
		[Column("ACTION_ID"), NotNull    ] public string  ActionId    { get; set; } = null!; // VARCHAR(3)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_ROADMAP_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpRoadmapView
	{
		[Column(),              NotNull    ] public string    ID          { get; set; } = null!; // NVARCHAR(101)
		[Column("PROCESS_ID"),  NotNull    ] public string    ProcessId   { get; set; } = null!; // NVARCHAR(90)
		[Column(),              NotNull    ] public int       POS         { get; set; } // INTEGER
		[Column(),              NotNull    ] public string    TYPE        { get; set; } = null!; // NVARCHAR(10)
		[Column("SLPP_TYPE"),   NotNull    ] public string    SlppType    { get; set; } = null!; // VARCHAR(26)
		[Column(),              NotNull    ] public string    PARENT      { get; set; } = null!; // NVARCHAR(100)
		[Column("PARENT_ID"),   NotNull    ] public string    ParentId    { get; set; } = null!; // NVARCHAR(91)
		[Column(),                 Nullable] public decimal?  PROGRESS    { get; set; } // DECIMAL(25, 6)
		[Column(),              NotNull    ] public string    SCHEMA      { get; set; } = null!; // NVARCHAR(127)
		[Column(),              NotNull    ] public string    EXECUTABLE  { get; set; } = null!; // NVARCHAR(127)
		[Column("STEP_ID"),     NotNull    ] public string    StepId      { get; set; } = null!; // NVARCHAR(91)
		[Column(),                 Nullable] public int?      STATUS      { get; set; } // INTEGER
		[Column("TOOL_STATUS"),    Nullable] public int?      ToolStatus  { get; set; } // INTEGER
		[Column("SLPP_STATUS"),    Nullable] public string?   SlppStatus  { get; set; } // VARCHAR(30)
		[Column("LAST_USER"),      Nullable] public string?   LastUser    { get; set; } // NVARCHAR(256)
		[Column("START_TS"),       Nullable] public DateTime? StartTs     { get; set; } // TIMESTAMP
		[Column("END_TS"),         Nullable] public DateTime? EndTs       { get; set; } // TIMESTAMP
		[Column(),              NotNull    ] public string    DISPLAYNAME { get; set; } = null!; // NVARCHAR(4000)
		[Column(),                 Nullable] public string?   DESCRIPTION { get; set; } // NVARCHAR(4000)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_TASKLOG_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpTasklogView
	{
		[Column(),                     Nullable] public string? ID             { get; set; } // NVARCHAR(5000)
		[Column("PROCESS_ID"),      NotNull    ] public string  ProcessId      { get; set; } = null!; // NVARCHAR(90)
		[Column("TASK_POS"),        NotNull    ] public int     TaskPos        { get; set; } // INTEGER
		[Column("STEP_ID"),         NotNull    ] public string  StepId         { get; set; } = null!; // NVARCHAR(60)
		[Column(),                  NotNull    ] public string  NAME           { get; set; } = null!; // VARCHAR(11)
		[Column(),                  NotNull    ] public string  FORMAT         { get; set; } = null!; // NVARCHAR(127)
		[Column(),                     Nullable] public string? LOGCONTENT     { get; set; } // NVARCHAR(2048)
		[Column("SLPP_LOGCONTENT"),    Nullable] public string? SlppLogcontent { get; set; } // NVARCHAR(5000)
		[Column(),                  NotNull    ] public string  DISPLAYNAME    { get; set; } = null!; // VARCHAR(18)
		[Column(),                  NotNull    ] public string  DESCRIPTION    { get; set; } = null!; // VARCHAR(18)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::SLP_VERSION_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbSlpVersionView
	{
		[Column(),            NotNull] public string ID          { get; set; } = null!; // VARCHAR(11)
		[Column(),            NotNull] public string COMPONENT   { get; set; } = null!; // VARCHAR(11)
		[Column(),            NotNull] public string VERSION     { get; set; } = null!; // VARCHAR(5)
		[Column(),            NotNull] public string DESCRIPTION { get; set; } = null!; // VARCHAR(19)
		[Column(),            NotNull] public string DISPLAYNAME { get; set; } = null!; // VARCHAR(19)
		[Column("ACTION_ID"), NotNull] public string ActionId    { get; set; } = null!; // VARCHAR(3)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::STEP_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbStepView
	{
		[Column("SERVICE_ID"),      NotNull    ] public string  ServiceId     { get; set; } = null!; // NVARCHAR(320)
		[Column(),                  NotNull    ] public int     POS           { get; set; } // INTEGER
		[Column("STEP_ID"),         NotNull    ] public string  StepId        { get; set; } = null!; // NVARCHAR(60)
		[Column(),                  NotNull    ] public string  TYPE          { get; set; } = null!; // NVARCHAR(10)
		[Column(),                  NotNull    ] public string  EXECUTABLE    { get; set; } = null!; // NVARCHAR(127)
		[Column(),                     Nullable] public string? SCHEMA        { get; set; } // NVARCHAR(127)
		[Column(),                     Nullable] public string? DISPLAYNAME   { get; set; } // NVARCHAR(4000)
		[Column(),                     Nullable] public string? DESCRIPTION   { get; set; } // NVARCHAR(4000)
		[Column("PACKAGE_ID"),      NotNull    ] public string  PackageId     { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),     NotNull    ] public string  ObjectName    { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),   NotNull    ] public string  ObjectSuffix  { get; set; } = null!; // NVARCHAR(256)
		[Column("SUB_OBJECT_NAME"),    Nullable] public string? SubObjectName { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::TASKLIST_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbTasklistView
	{
		[Column(),                 Nullable] public string?   ID          { get; set; } // NVARCHAR(101)
		[Column("PROCESS_ID"),  NotNull    ] public string    ProcessId   { get; set; } = null!; // NVARCHAR(90)
		[Column(),              NotNull    ] public int       POS         { get; set; } // INTEGER
		[Column(),              NotNull    ] public string    TYPE        { get; set; } = null!; // NVARCHAR(10)
		[Column("SLPP_TYPE"),   NotNull    ] public string    SlppType    { get; set; } = null!; // VARCHAR(26)
		[Column(),              NotNull    ] public string    PARENT      { get; set; } = null!; // NVARCHAR(100)
		[Column("PARENT_ID"),   NotNull    ] public string    ParentId    { get; set; } = null!; // NVARCHAR(91)
		[Column(),                 Nullable] public decimal?  PROGRESS    { get; set; } // DECIMAL(25, 6)
		[Column(),                 Nullable] public string?   SCHEMA      { get; set; } // NVARCHAR(127)
		[Column(),              NotNull    ] public string    EXECUTABLE  { get; set; } = null!; // NVARCHAR(127)
		[Column("STEP_ID"),     NotNull    ] public string    StepId      { get; set; } = null!; // NVARCHAR(91)
		[Column(),                 Nullable] public int?      STATUS      { get; set; } // INTEGER
		[Column("TOOL_STATUS"),    Nullable] public int?      ToolStatus  { get; set; } // INTEGER
		[Column("SLPP_STATUS"),    Nullable] public string?   SlppStatus  { get; set; } // VARCHAR(30)
		[Column("LAST_USER"),      Nullable] public string?   LastUser    { get; set; } // NVARCHAR(256)
		[Column("START_TS"),       Nullable] public DateTime? StartTs     { get; set; } // TIMESTAMP
		[Column("END_TS"),         Nullable] public DateTime? EndTs       { get; set; } // TIMESTAMP
		[Column(),                 Nullable] public string?   DISPLAYNAME { get; set; } // NVARCHAR(4000)
		[Column(),                 Nullable] public string?   DESCRIPTION { get; set; } // NVARCHAR(4000)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::TASK_LOG", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbTaskLog
	{
		[Column("PROCESS_ID"),   NotNull    ] public string   ProcessId   { get; set; } = null!; // NVARCHAR(90)
		[Column("TASK_POS"),     NotNull    ] public int      TaskPos     { get; set; } // INTEGER
		[Column("MSG_TS"),       NotNull    ] public DateTime MsgTs       { get; set; } // TIMESTAMP
		[Column("MSG_TYPE"),     NotNull    ] public char     MsgType     { get; set; } // VARCHAR(1)
		[Column(),                  Nullable] public string?  LOCATION    { get; set; } // NVARCHAR(256)
		[Column("MSG_TEXT"),        Nullable] public string?  MsgText     { get; set; } // NVARCHAR(3072)
		[Column("DETAIL_LEVEL"),    Nullable] public int?     DetailLevel { get; set; } // INTEGER
		[Column("EXT_LOG_ID"),      Nullable] public string?  ExtLogId    { get; set; } // NVARCHAR(127)
		[Column("EXT_LOG_LINK"),    Nullable] public string?  ExtLogLink  { get; set; } // NVARCHAR(2048)
		[Column("STEP_ID"),      NotNull    ] public string   StepId      { get; set; } = null!; // NVARCHAR(60)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::TASK_LOG_F", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbTaskLogF
	{
		[Column("PROCESS_ID"),   NotNull    ] public string   ProcessId   { get; set; } = null!; // NVARCHAR(90)
		[Column("TASK_POS"),     NotNull    ] public int      TaskPos     { get; set; } // INTEGER
		[Column("MSG_TS"),       NotNull    ] public DateTime MsgTs       { get; set; } // TIMESTAMP
		[Column("MSG_TYPE"),     NotNull    ] public char     MsgType     { get; set; } // VARCHAR(1)
		[Column(),                  Nullable] public string?  LOCATION    { get; set; } // NVARCHAR(256)
		[Column("MSG_TEXT"),        Nullable] public string?  MsgText     { get; set; } // NVARCHAR(3072)
		[Column("DETAIL_LEVEL"),    Nullable] public int?     DetailLevel { get; set; } // INTEGER
		[Column("EXT_LOG_ID"),      Nullable] public string?  ExtLogId    { get; set; } // NVARCHAR(127)
		[Column("EXT_LOG_LINK"),    Nullable] public string?  ExtLogLink  { get; set; } // NVARCHAR(2048)
		[Column("STEP_ID"),      NotNull    ] public string   StepId      { get; set; } = null!; // NVARCHAR(60)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::TASK_VIEW", IsView=true)]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbTaskView
	{
		[Column(),                 Nullable] public string?   ID            { get; set; } // NVARCHAR(101)
		[Column("PROCESS_ID"),  NotNull    ] public string    ProcessId     { get; set; } = null!; // NVARCHAR(90)
		[Column(),              NotNull    ] public int       POS           { get; set; } // INTEGER
		[Column(),              NotNull    ] public string    TYPE          { get; set; } = null!; // NVARCHAR(10)
		[Column("SLPP_TYPE"),   NotNull    ] public string    SlppType      { get; set; } = null!; // VARCHAR(18)
		[Column(),              NotNull    ] public char      PARENT        { get; set; } // VARCHAR(1)
		[Column("PARENT_ID"),   NotNull    ] public char      ParentId      { get; set; } // VARCHAR(1)
		[Column(),              NotNull    ] public string    PROGRESS      { get; set; } = null!; // VARCHAR(2)
		[Column(),                 Nullable] public string?   SCHEMA        { get; set; } // NVARCHAR(127)
		[Column(),              NotNull    ] public string    EXECUTABLE    { get; set; } = null!; // NVARCHAR(127)
		[Column(),              NotNull    ] public string    TECHNICALNAME { get; set; } = null!; // NVARCHAR(127)
		[Column("STEP_ID"),     NotNull    ] public string    StepId        { get; set; } = null!; // NVARCHAR(60)
		[Column(),                 Nullable] public int?      STATUS        { get; set; } // INTEGER
		[Column("TOOL_STATUS"),    Nullable] public int?      ToolStatus    { get; set; } // INTEGER
		[Column("SLPP_STATUS"),    Nullable] public string?   SlppStatus    { get; set; } // VARCHAR(30)
		[Column("LAST_USER"),      Nullable] public string?   LastUser      { get; set; } // NVARCHAR(256)
		[Column("START_TS"),       Nullable] public DateTime? StartTs       { get; set; } // TIMESTAMP
		[Column("END_TS"),         Nullable] public DateTime? EndTs         { get; set; } // TIMESTAMP
		[Column(),                 Nullable] public string?   DISPLAYNAME   { get; set; } // NVARCHAR(4000)
		[Column(),                 Nullable] public string?   DESCRIPTION   { get; set; } // NVARCHAR(4000)
		[Column("LOG_TOTAL"),   NotNull    ] public long      LogTotal      { get; set; } // BIGINT
		[Column("LOG_OK"),      NotNull    ] public long      LogOk         { get; set; } // BIGINT
		[Column("LOG_ERROR"),   NotNull    ] public long      LogError      { get; set; } // BIGINT
		[Column("LOG_WARNING"), NotNull    ] public long      LogWarning    { get; set; } // BIGINT
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::TEXT_REPOSITORY")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbTextRepository
	{
		[Column(),                  PrimaryKey(1), NotNull] public string  ID            { get; set; } = null!; // NVARCHAR(320)
		[Column(),                  PrimaryKey(2), NotNull] public string  LANG          { get; set; } = null!; // NVARCHAR(256)
		[Column(),                     Nullable           ] public string? CONTENT       { get; set; } // NVARCHAR(4000)
		[Column("PACKAGE_ID"),                     NotNull] public string  PackageId     { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),                    NotNull] public string  ObjectName    { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_SUFFIX"),                  NotNull] public string  ObjectSuffix  { get; set; } = null!; // NVARCHAR(256)
		[Column("TEXT_ID"),            Nullable           ] public string? TextId        { get; set; } // NVARCHAR(256)
		[Column("SUB_OBJECT_NAME"),    Nullable           ] public string? SubObjectName { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="SAP_XS_LM_PE", Name="sap.hana.xs.lm.pe.db::XSSCRIPT_PARAMETERS")]
	public partial class SAP_XS_LM_PE_SapHanaXsLmPeDbXsscriptParameter
	{
		[Column(),                    PrimaryKey(1), NotNull] public string  EXECUTABLE      { get; set; } = null!; // NVARCHAR(256)
		[Column("PARAMETER_NAME"),    PrimaryKey(2), NotNull] public string  ParameterName   { get; set; } = null!; // NVARCHAR(256)
		[Column("DATA_TYPE_NAME"),       Nullable           ] public string? DataTypeName    { get; set; } // VARCHAR(16)
		[Column("TABLE_TYPE_SCHEMA"),    Nullable           ] public string? TableTypeSchema { get; set; } // NVARCHAR(256)
		[Column("TABLE_TYPE_NAME"),      Nullable           ] public string? TableTypeName   { get; set; } // NVARCHAR(256)
		[Column("PARAMETER_TYPE"),                   NotNull] public string  ParameterType   { get; set; } = null!; // VARCHAR(7)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.slp::FILES")]
	public partial class SAP_XS_LM_SapHanaXsLmSlpFile
	{
		/// <summary>
		/// File ID
		/// </summary>
		[Column(),             PrimaryKey,  NotNull] public long    ID        { get; set; } // BIGINT
		/// <summary>
		/// File Name
		/// </summary>
		[Column(),                Nullable         ] public string? NAME      { get; set; } // NVARCHAR(100)
		/// <summary>
		/// File Size
		/// </summary>
		[Column(),                Nullable         ] public long?   SIZE      { get; set; } // BIGINT
		/// <summary>
		/// Digest Algorithm
		/// </summary>
		[Column("DIGEST_ALG"),    Nullable         ] public string? DigestAlg { get; set; } // VARCHAR(20)
		/// <summary>
		/// Digest
		/// </summary>
		[Column(),                Nullable         ] public string? DIGEST    { get; set; } // VARCHAR(33)
		/// <summary>
		/// File Content ID
		/// </summary>
		[Column("CONTENT_ID"),              NotNull] public long    ContentId { get; set; } // BIGINT
		/// <summary>
		/// File Content
		/// </summary>
		[Column(),                Nullable         ] public byte[]? CONTENT   { get; set; } // BLOB
		/// <summary>
		/// Service ID
		/// </summary>
		[Column(),                Nullable         ] public string? SERVICE   { get; set; } // VARCHAR(20)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.slp::LOGS")]
	public partial class SAP_XS_LM_SapHanaXsLmSlpLog
	{
		/// <summary>
		/// Unique identifier of the log
		/// </summary>
		[Column(),                PrimaryKey(1), NotNull] public string   ID           { get; set; } = null!; // VARCHAR(75)
		/// <summary>
		/// Log collection ID
		/// </summary>
		[Column("COLLECTION_ID"), PrimaryKey(2), NotNull] public string   CollectionId { get; set; } = null!; // VARCHAR(32)
		/// <summary>
		/// Last modification of the log
		/// </summary>
		[Column(),                               NotNull] public DateTime LASTMODIFIED { get; set; } // TIMESTAMP
		/// <summary>
		/// Link to the log content
		/// </summary>
		[Column(),                   Nullable           ] public string?  CONTENT      { get; set; } // VARCHAR(85)
		/// <summary>
		/// Format of the log
		/// </summary>
		[Column(),                   Nullable           ] public string?  FORMAT       { get; set; } // VARCHAR(32)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.slp::PARAMETERS1")]
	public partial class SAP_XS_LM_SapHanaXsLmSlpPARAMETERS1
	{
		/// <summary>
		/// Process id
		/// </summary>
		[Column("PROCESS_ID"), Nullable] public string? ProcessId { get; set; } // VARCHAR(32)
		/// <summary>
		/// Collection type: 1-process, 2-config
		/// </summary>
		[Column("COLL_TYPE"),  Nullable] public char?   CollType  { get; set; } // VARCHAR(1)
		/// <summary>
		/// Parameter collection in XML
		/// </summary>
		[Column("COLL_XML"),   Nullable] public string? CollXml   { get; set; } // TEXT
		/// <summary>
		/// Parameter list sequence ID
		/// </summary>
		[Column("SEQ_ID"),     Nullable] public long?   SeqId     { get; set; } // BIGINT
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.slp::PROCESSES")]
	public partial class SAP_XS_LM_SapHanaXsLmSlpProcess
	{
		/// <summary>
		/// Process ID
		/// </summary>
		[PrimaryKey, NotNull    ] public string  ID          { get; set; } = null!; // NVARCHAR(32)
		/// <summary>
		/// Description
		/// </summary>
		[Column,        Nullable] public string? DESCRIPTION { get; set; } // NVARCHAR(30)
		/// <summary>
		/// Service ID
		/// </summary>
		[Column,        Nullable] public string? SERVICE     { get; set; } // VARCHAR(20)
		/// <summary>
		/// Status
		/// </summary>
		[Column,        Nullable] public string? STATUS      { get; set; } // VARCHAR(30)
		/// <summary>
		/// Version ID
		/// </summary>
		[Column,        Nullable] public string? VERSION     { get; set; } // VARCHAR(30)
	}

	[Table(Schema="SAP_XS_LM", Name="sap.hana.xs.lm.slp::TASKS")]
	public partial class SAP_XS_LM_SapHanaXsLmSlpTask
	{
		/// <summary>
		/// Task ID
		/// </summary>
		[Column(),             PrimaryKey,  NotNull] public string  ID        { get; set; } = null!; // NVARCHAR(32)
		/// <summary>
		/// The type of the task
		/// </summary>
		[Column(),                Nullable         ] public string? TYPE      { get; set; } // NVARCHAR(30)
		/// <summary>
		/// Internal technical name of the task
		/// </summary>
		[Column("TECH_NAME"),     Nullable         ] public string? TechName  { get; set; } // VARCHAR(33)
		/// <summary>
		/// Current status of the task
		/// </summary>
		[Column(),                Nullable         ] public string? STATUS    { get; set; } // VARCHAR(30)
		/// <summary>
		/// Reference to a resource containing log element
		/// </summary>
		[Column(),                Nullable         ] public string? LOGS      { get; set; } // VARCHAR(30)
		/// <summary>
		/// Unique identifier of the process
		/// </summary>
		[Column("PROCESS_ID"),              NotNull] public string  ProcessId { get; set; } = null!; // VARCHAR(32)
	}

	[Table(Schema="SAP_XS_USAGE", Name="sap.hana.xs.lm.usage.db::SUSAGE")]
	public partial class SAP_XS_USAGE_SapHanaXsLmUsageDbSusage
	{
		[Column(),                 PrimaryKey(1), NotNull] public string  PPMSPV        { get; set; } = null!; // VARCHAR(60)
		[Column(),                 PrimaryKey(2), NotNull] public string  FEATURE       { get; set; } = null!; // VARCHAR(60)
		[Column(),                 PrimaryKey(3), NotNull] public string  TYPE          { get; set; } = null!; // VARCHAR(30)
		[Column(),                 PrimaryKey(4), NotNull] public string  SUBTYPE       { get; set; } = null!; // VARCHAR(30)
		[Column("CALENDAR_MONTH"), PrimaryKey(5), NotNull] public string  CalendarMonth { get; set; } = null!; // NVARCHAR(6)
		[Column(),                    Nullable           ] public double? TRAFFIC       { get; set; } // DOUBLE
		[Column(),                    Nullable           ] public double? NORM          { get; set; } // DOUBLE
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.selfService.admin.db::ACCESS_LISTS")]
	public partial class HANA_XS_BASE_SapHanaXsSelfServiceAdminDbAccessList
	{
		/// <summary>
		/// Access List Item
		/// </summary>
		[Column(),                 PrimaryKey,  NotNull] public string ITEM          { get; set; } = null!; // NVARCHAR(512)
		/// <summary>
		/// Access list Item Type
		/// </summary>
		[Column("ITEM_TYPE"),                   NotNull] public string ItemType      { get; set; } = null!; // NVARCHAR(512)
		/// <summary>
		/// Blacklisted Status
		/// </summary>
		[Column("IS_BLACKLISTED"),    Nullable         ] public byte?  IsBlacklisted { get; set; } // TINYINT
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.selfService.admin.db::USS_EMAIL_TEMPLATES")]
	public partial class HANA_XS_BASE_SapHanaXsSelfServiceAdminDbUssEmailTemplate
	{
		/// <summary>
		/// Template ID
		/// </summary>
		[Column("TEMPLATE_ID"),      PrimaryKey, NotNull] public string TemplateId      { get; set; } = null!; // NVARCHAR(512)
		/// <summary>
		/// Email Subject
		/// </summary>
		[Column("TEMPLATE_SUBJECT"),             NotNull] public string TemplateSubject { get; set; } = null!; // NVARCHAR(512)
		/// <summary>
		/// Email Body
		/// </summary>
		[Column("TEMPLATE_BODY"),                NotNull] public string TemplateBody    { get; set; } = null!; // NVARCHAR(1024)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.selfService.admin.db::USS_REQUESTS_VIEW", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsSelfServiceAdminDbUssRequestsView
	{
		[Column("USER_NAME"),           Nullable] public string?  UserName           { get; set; } // NVARCHAR(512)
		[Column("REQUEST_ATTEMPTS"),    Nullable] public decimal? RequestAttempts    { get; set; } // DECIMAL(34, 0)
		[Column("ORIGIN_LOCATION"),     Nullable] public string?  OriginLocation     { get; set; } // NVARCHAR(512)
		[Column(),                      Nullable] public string?  VALUE              { get; set; } // NVARCHAR(512)
		[Column("REQUEST_STATUS"),      Nullable] public string?  RequestStatus      { get; set; } // NVARCHAR(512)
		[Column("DEACTIVATION_STATUS"), Nullable] public string?  DeactivationStatus { get; set; } // NVARCHAR(512)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.selfService.user.db::INI_PARAMS_DETAILS", IsView=true)]
	public partial class HANA_XS_BASE_SapHanaXsSelfServiceUserDbIniParamsDetail
	{
		[Column, Nullable] public string? KEY      { get; set; } // NVARCHAR(512)
		[Column, Nullable] public string? VALUE    { get; set; } // NVARCHAR(512)
		[Column, Nullable] public int?    PRIORITY { get; set; } // INTEGER
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.selfService.user.db::SECURITY_QUESTIONS")]
	public partial class HANA_XS_BASE_SapHanaXsSelfServiceUserDbSecurityQuestion
	{
		/// <summary>
		/// Unique ID for the Secret Question
		/// </summary>
		[Column("QUESTION_ID"),          PrimaryKey, NotNull] public string QuestionId          { get; set; } = null!; // VARCHAR(256)
		/// <summary>
		/// Question Description
		/// </summary>
		[Column("QUESTION_DESCRIPTION"),             NotNull] public string QuestionDescription { get; set; } = null!; // VARCHAR(256)
	}

	[Table(Schema="HANA_XS_BASE", Name="sap.hana.xs.selfService.user.db::USER_REQUESTS")]
	public partial class HANA_XS_BASE_SapHanaXsSelfServiceUserDbUserRequest
	{
		/// <summary>
		/// Username
		/// </summary>
		[Column("USER_NAME"),        PrimaryKey,  NotNull] public string  UserName        { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// No of User requests attempted by the same email address
		/// </summary>
		[Column("REQUEST_ATTEMPTS"),              NotNull] public decimal RequestAttempts { get; set; } // DECIMAL(10, 0)
		/// <summary>
		/// Origin location
		/// </summary>
		[Column("ORIGIN_LOCATION"),               NotNull] public string  OriginLocation  { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Status of the self service request
		/// </summary>
		[Column("REQUEST_STATUS"),      Nullable         ] public string? RequestStatus   { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_EPM", Name="SAVED_CONTAINERS")]
	public partial class _SYS_EPM_SavedContainer
	{
		[Column("USER_NAME"),        PrimaryKey(1), NotNull] public string    UserName       { get; set; } = null!; // NVARCHAR(256)
		[Column("SCHEMA_NAME"),      PrimaryKey(2), NotNull] public string    SchemaName     { get; set; } = null!; // NVARCHAR(256)
		[Column("MODEL_NAME"),       PrimaryKey(3), NotNull] public string    ModelName      { get; set; } = null!; // NVARCHAR(256)
		[Column(),                   PrimaryKey(4), NotNull] public int       VERSION        { get; set; } // INTEGER
		[Column(),                   PrimaryKey(5), NotNull] public string    CONTAINER      { get; set; } = null!; // NVARCHAR(256)
		[Column("TABLE_NAME"),          Nullable           ] public string?   TableName      { get; set; } // NVARCHAR(256)
		[Column("LAST_CHANGE_TIME"),    Nullable           ] public DateTime? LastChangeTime { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_EPM", Name="SCHEMAVERSION")]
	public partial class _SYS_EPM_SCHEMAVERSION
	{
		[Column("SCHEMA_TYPE"),       PrimaryKey,  NotNull] public string  SchemaType      { get; set; } = null!; // NVARCHAR(16)
		[Column("DB_SCHEMA_RELEASE"),    Nullable         ] public string? DbSchemaRelease { get; set; } // NVARCHAR(16)
		[Column("DB_SCHEMA_VERSION"),    Nullable         ] public int?    DbSchemaVersion { get; set; } // INTEGER
		[Column("IS_CONSISTENT"),                  NotNull] public byte    IsConsistent    { get; set; } // TINYINT
	}

	[Table(Schema="_SYS_RT", Name="SEARCH_RULE_SETS")]
	public partial class _SYS_RT_SearchRuleSet
	{
		[Column("SCHEMA_NAME"), Nullable] public string? SchemaName { get; set; } // NVARCHAR(256)
		[Column("PACKAGE_ID"),  Nullable] public string? PackageId  { get; set; } // NVARCHAR(256)
		[Column("RULE_SET"),    Nullable] public string? RuleSet    { get; set; } // NVARCHAR(256)
		[Column("RULE_ID"),     Nullable] public string? RuleId     { get; set; } // NVARCHAR(256)
		[Column("ORDER_"),      Nullable] public int?    Order      { get; set; } // INTEGER
		[Column(),              Nullable] public string? COLUMN     { get; set; } // NVARCHAR(256)
		[Column(),              Nullable] public string? PARAMETER  { get; set; } // NVARCHAR(256)
		[Column(),              Nullable] public string? VALUE      { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_XS", Name="SECURE_STORE")]
	public partial class _SYS_XS_SecureStore
	{
		[Column("STORE_ID"),   PrimaryKey(1), NotNull] public string StoreId   { get; set; } = null!; // NVARCHAR(530)
		[Column("USER_ID"),    PrimaryKey(2), NotNull] public long   UserId    { get; set; } // BIGINT
		[Column("DATA_ID"),    PrimaryKey(3), NotNull] public string DataId    { get; set; } = null!; // NVARCHAR(1024)
		[Column("DATA_VALUE"),                NotNull] public byte[] DataValue { get; set; } = null!; // VARBINARY(5000)
	}

	[Table(Schema="_SYS_XS", Name="SECURE_STORE_LIST")]
	public partial class _SYS_XS_SecureStoreList
	{
		[Column("PACKAGE_ID"),  PrimaryKey(1), NotNull] public string PackageId  { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"), PrimaryKey(2), NotNull] public string ObjectName { get; set; } = null!; // NVARCHAR(256)
		[Column("IS_ACTIVE"),                  NotNull] public byte   IsActive   { get; set; } // TINYINT
	}

	/// <summary>
	/// Telemetry Server Information
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="SERVER")]
	public partial class _SYS_TELEMETRY_SERVER
	{
		/// <summary>
		/// Telemetry central server URL.
		/// </summary>
		[Column("SERVER_URL"), NotNull] public string ServerUrl { get; set; } = null!; // VARCHAR(2083)
	}

	/// <summary>
	/// Detailed information on memory utilization by services
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="SERVICE_MEMORY", IsView=true)]
	public partial class _SYS_TELEMETRY_ServiceMemory
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"),                      NotNull    ] public DateTime SnapshotId                   { get; set; } // TIMESTAMP
		/// <summary>
		/// Service name
		/// </summary>
		[Column("SERVICE_NAME"),                     NotNull    ] public string   ServiceName                  { get; set; } = null!; // VARCHAR(32)
		/// <summary>
		/// Virtual memory size (operating system perspective)
		/// </summary>
		[Column("LOGICAL_MEMORY_SIZE"),                 Nullable] public long?    LogicalMemorySize            { get; set; } // BIGINT
		/// <summary>
		/// Physical/resident memory size (operating system perspective)
		/// </summary>
		[Column("PHYSICAL_MEMORY_SIZE"),                Nullable] public long?    PhysicalMemorySize           { get; set; } // BIGINT
		/// <summary>
		/// Stack size
		/// </summary>
		[Column("STACK_SIZE"),                          Nullable] public long?    StackSize                    { get; set; } // BIGINT
		/// <summary>
		/// Heap part of the memory pool
		/// </summary>
		[Column("HEAP_MEMORY_ALLOCATED_SIZE"),          Nullable] public long?    HeapMemoryAllocatedSize      { get; set; } // BIGINT
		/// <summary>
		/// Amount of pool heap memory that is currently actually in use
		/// </summary>
		[Column("HEAP_MEMORY_USED_SIZE"),               Nullable] public long?    HeapMemoryUsedSize           { get; set; } // BIGINT
		/// <summary>
		/// Shared memory part of the memory pool
		/// </summary>
		[Column("SHARED_MEMORY_ALLOCATED_SIZE"),        Nullable] public long?    SharedMemoryAllocatedSize    { get; set; } // BIGINT
		/// <summary>
		/// Amount of pool shared memory that is currently actually in use
		/// </summary>
		[Column("SHARED_MEMORY_USED_SIZE"),             Nullable] public long?    SharedMemoryUsedSize         { get; set; } // BIGINT
		/// <summary>
		/// Effective maximum memory pool size, considering pool sizes of other processes (computed value)
		/// </summary>
		[Column("EFFECTIVE_ALLOCATION_LIMIT"),          Nullable] public long?    EffectiveAllocationLimit     { get; set; } // BIGINT
		/// <summary>
		/// Blocked memory
		/// </summary>
		[Column("BLOCKED_MEMORY_LIMIT"),                Nullable] public long?    BlockedMemoryLimit           { get; set; } // BIGINT
		/// <summary>
		/// Free allocated memory
		/// </summary>
		[Column("FREE_MEMORY_SIZE"),                    Nullable] public long?    FreeMemorySize               { get; set; } // BIGINT
		/// <summary>
		/// Minimal segment size
		/// </summary>
		[Column("MIN_SEGMENT_SIZE"),                    Nullable] public long?    MinSegmentSize               { get; set; } // BIGINT
		/// <summary>
		/// Amount of memory from the memory pool that is currently actually in use
		/// </summary>
		[Column("TOTAL_MEMORY_USED_SIZE"),              Nullable] public long?    TotalMemoryUsedSize          { get; set; } // BIGINT
		/// <summary>
		/// Used virtual address space
		/// </summary>
		[Column("VIRTUAL_ADDRESS_SPACE_USED_SIZE"),     Nullable] public long?    VirtualAddressSpaceUsedSize  { get; set; } // BIGINT
		/// <summary>
		/// Total virtual address space for each process
		/// </summary>
		[Column("VIRTUAL_ADDRESS_SPACE_TOTAL_SIZE"),    Nullable] public long?    VirtualAddressSpaceTotalSize { get; set; } // BIGINT
		/// <summary>
		/// Amount of memory that is currently held by HANA memory management, but cannot be easily reused for new memory allocations
		/// </summary>
		[Column("FRAGMENTED_MEMORY_SIZE"),              Nullable] public long?    FragmentedMemorySize         { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_XS", Name="SQL_CONNECTIONS")]
	public partial class _SYS_XS_SqlConnection
	{
		[Column(),                 PrimaryKey,  NotNull] public string    NAME         { get; set; } = null!; // NVARCHAR(512)
		[Column("PACKAGE_ID"),                  NotNull] public string    PackageId    { get; set; } = null!; // NVARCHAR(256)
		[Column("OBJECT_NAME"),                 NotNull] public string    ObjectName   { get; set; } = null!; // NVARCHAR(256)
		[Column(),                    Nullable         ] public string?   USERNAME     { get; set; } // NVARCHAR(256)
		[Column(),                              NotNull] public string    DESCRIPTION  { get; set; } = null!; // NVARCHAR(2048)
		[Column("ASSIGNED_BY"),       Nullable         ] public string?   AssignedBy   { get; set; } // NVARCHAR(256)
		[Column("ASSIGNED_AT"),       Nullable         ] public DateTime? AssignedAt   { get; set; } // TIMESTAMP
		[Column("AUTO_USER_ROLE"),    Nullable         ] public string?   AutoUserRole { get; set; } // NVARCHAR(256)
		[Column(),                              NotNull] public string    STATUS       { get; set; } = null!; // VARCHAR(16)
	}

	/// <summary>
	/// This table contains messages generated by start task command
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="START_TASK_MESSAGES", IsView=true)]
	public partial class _SYS_TASK_StartTaskMessage
	{
		/// <summary>
		/// The unique ID for a particular run of a task plan created when "START TASK" is called
		/// </summary>
		[Column("TASK_EXECUTION_ID"), NotNull    ] public long      TaskExecutionId { get; set; } // BIGINT
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),       NotNull    ] public string    SchemaName      { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),         NotNull    ] public string    TaskName        { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the operation producing the message
		/// </summary>
		[Column("OPERATION_NAME"),       Nullable] public string?   OperationName   { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Error, warning, or information
		/// </summary>
		[Column(),                       Nullable] public string?   SEVERITY        { get; set; } // NVARCHAR(12)
		/// <summary>
		/// The ID of the message
		/// </summary>
		[Column("MESSAGE_ID"),           Nullable] public string?   MessageId       { get; set; } // NVARCHAR(8)
		/// <summary>
		/// The message text
		/// </summary>
		[Column("MESSAGE_TEXT"),         Nullable] public string?   MessageText     { get; set; } // NVARCHAR(2048)
		/// <summary>
		/// The time the message was issued
		/// </summary>
		[Column("MESSAGE_TIME"),         Nullable] public DateTime? MessageTime     { get; set; } // SECONDDATE
	}

	[Table(Schema="_SYS_TASK", Name="START_TASK_MESSAGES_")]
	public partial class _SYS_TASK_StartTaskMessages
	{
		[Column("TASK_EXECUTION_ID"), Nullable] public long?     TaskExecutionId { get; set; } // BIGINT
		[Column("OPERATION_NAME"),    Nullable] public string?   OperationName   { get; set; } // NVARCHAR(128)
		[Column(),                    Nullable] public string?   SEVERITY        { get; set; } // NVARCHAR(12)
		[Column("MESSAGE_ID"),        Nullable] public string?   MessageId       { get; set; } // NVARCHAR(8)
		[Column("MESSAGE_TEXT"),      Nullable] public string?   MessageText     { get; set; } // NVARCHAR(2048)
		[Column("MESSAGE_TIME"),      Nullable] public DateTime? MessageTime     { get; set; } // SECONDDATE
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="STATEMENT_STATISTICS", IsView=true)]
	public partial class _SYS_SQL_ANALYZER_StatementStatistic
	{
		[Column("FROM_PLV"),                       Nullable] public string?   FromPlv                      { get; set; } // VARCHAR(5)
		[Column("FEATURE_VERSION"),                Nullable] public int?      FeatureVersion               { get; set; } // INTEGER
		[Column("SYSTEM_VERSION"),                 Nullable] public string?   SystemVersion                { get; set; } // VARCHAR(512)
		[Column("CONNECTION_ID"),                  Nullable] public int?      ConnectionId                 { get; set; } // INTEGER
		[Column("USER_NAME"),                      Nullable] public string?   UserName                     { get; set; } // NVARCHAR(256)
		[Column("SCHEMA_NAME"),                    Nullable] public string?   SchemaName                   { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"),         Nullable] public string?   StatementExecutionId         { get; set; } // VARCHAR(32)
		[Column("CHILD_STATEMENT_EXECUTION_ID"),   Nullable] public string?   ChildStatementExecutionId    { get; set; } // CLOB
		[Column("STATEMENT_HASH"),                 Nullable] public string?   StatementHash                { get; set; } // VARCHAR(32)
		[Column("STATEMENT_STRING"),               Nullable] public string?   StatementString              { get; set; } // NCLOB
		[Column("COMPILATION_START_TIME"),         Nullable] public DateTime? CompilationStartTime         { get; set; } // TIMESTAMP
		[Column("COMPILATION_END_TIME"),           Nullable] public DateTime? CompilationEndTime           { get; set; } // TIMESTAMP
		[Column("COMPILATION_SUMMARY"),            Nullable] public string?   CompilationSummary           { get; set; } // NCLOB
		[Column("EXECUTION_STATUS"),               Nullable] public string?   ExecutionStatus              { get; set; } // VARCHAR(32)
		[Column("EXECUTION_START_TIME"),           Nullable] public DateTime? ExecutionStartTime           { get; set; } // TIMESTAMP
		[Column("EXECUTION_END_TIME"),             Nullable] public DateTime? ExecutionEndTime             { get; set; } // TIMESTAMP
		[Column("EXECUTED_OUTPUT_RECORD_COUNT"),   Nullable] public long?     ExecutedOutputRecordCount    { get; set; } // BIGINT
		[Column("USED_MEMORY_SIZE"),               Nullable] public string?   UsedMemorySize               { get; set; } // NCLOB
		[Column("SQLSCRIPT_STATEMENT_STATISTICS"), Nullable] public string?   SqlscriptStatementStatistics { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="STATEMENT_STATISTICS_")]
	public partial class _SYS_SQL_ANALYZER_StatementStatistics
	{
		[Column("FROM_PLV"),                       Nullable] public string?   FromPlv                      { get; set; } // VARCHAR(5)
		[Column("FEATURE_VERSION"),                Nullable] public int?      FeatureVersion               { get; set; } // INTEGER
		[Column("SYSTEM_VERSION"),                 Nullable] public string?   SystemVersion                { get; set; } // VARCHAR(512)
		[Column("CONNECTION_ID"),                  Nullable] public int?      ConnectionId                 { get; set; } // INTEGER
		[Column("USER_NAME"),                      Nullable] public string?   UserName                     { get; set; } // NVARCHAR(256)
		[Column("SCHEMA_NAME"),                    Nullable] public string?   SchemaName                   { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"),         Nullable] public string?   StatementExecutionId         { get; set; } // VARCHAR(32)
		[Column("CHILD_STATEMENT_EXECUTION_ID"),   Nullable] public string?   ChildStatementExecutionId    { get; set; } // CLOB
		[Column("STATEMENT_HASH"),                 Nullable] public string?   StatementHash                { get; set; } // VARCHAR(32)
		[Column("STATEMENT_STRING"),               Nullable] public string?   StatementString              { get; set; } // NCLOB
		[Column("COMPILATION_START_TIME"),         Nullable] public DateTime? CompilationStartTime         { get; set; } // TIMESTAMP
		[Column("COMPILATION_END_TIME"),           Nullable] public DateTime? CompilationEndTime           { get; set; } // TIMESTAMP
		[Column("COMPILATION_SUMMARY"),            Nullable] public string?   CompilationSummary           { get; set; } // NCLOB
		[Column("EXECUTION_STATUS"),               Nullable] public string?   ExecutionStatus              { get; set; } // VARCHAR(32)
		[Column("EXECUTION_START_TIME"),           Nullable] public DateTime? ExecutionStartTime           { get; set; } // TIMESTAMP
		[Column("EXECUTION_END_TIME"),             Nullable] public DateTime? ExecutionEndTime             { get; set; } // TIMESTAMP
		[Column("EXECUTED_OUTPUT_RECORD_COUNT"),   Nullable] public long?     ExecutedOutputRecordCount    { get; set; } // BIGINT
		[Column("USED_MEMORY_SIZE"),               Nullable] public string?   UsedMemorySize               { get; set; } // NCLOB
		[Column("SQLSCRIPT_STATEMENT_STATISTICS"), Nullable] public string?   SqlscriptStatementStatistics { get; set; } // NCLOB
	}

	[Table(Schema="_SYS_SECURITY", Name="_SYS_OBJECT_PRIVILEGES")]
	public partial class _SYS_SECURITY_SysObjectPrivilege
	{
		[Column("OBJECT_TYPE"), PrimaryKey(1), NotNull] public string ObjectType { get; set; } = null!; // VARCHAR(32)
		[Column(),              PrimaryKey(2), NotNull] public string PRIVILEGE  { get; set; } = null!; // VARCHAR(40)
	}

	[Table(Schema="_SYS_SECURITY", Name="_SYS_PASSWORD_BLACKLIST")]
	public partial class _SYS_SECURITY_SysPasswordBlacklist
	{
		[Column("BLACKLIST_TERM"),         PrimaryKey(3), NotNull] public string BlacklistTerm        { get; set; } = null!; // NVARCHAR(256)
		[Column("CHECK_PARTIAL_PASSWORD"), PrimaryKey(1), NotNull] public string CheckPartialPassword { get; set; } = null!; // VARCHAR(6)
		[Column("CHECK_CASE_SENSITIVE"),   PrimaryKey(2), NotNull] public string CheckCaseSensitive   { get; set; } = null!; // VARCHAR(6)
	}

	/// <summary>
	/// Overview of system status including important resource usage information and alerts
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="SYSTEM_OVERVIEW", IsView=true)]
	public partial class _SYS_TELEMETRY_SystemOverview
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"), NotNull    ] public DateTime SnapshotId { get; set; } // TIMESTAMP
		/// <summary>
		/// Section name
		/// </summary>
		[Column(),              NotNull    ] public string   SECTION    { get; set; } = null!; // VARCHAR(16)
		/// <summary>
		/// Key name in section
		/// </summary>
		[Column(),              NotNull    ] public string   NAME       { get; set; } = null!; // VARCHAR(32)
		/// <summary>
		/// Status value: OK, ERROR, WARNING or empty for info items
		/// </summary>
		[Column(),                 Nullable] public string?  STATUS     { get; set; } // VARCHAR(8)
		/// <summary>
		/// Key value in section
		/// </summary>
		[Column(),                 Nullable] public string?  VALUE      { get; set; } // VARCHAR(256)
	}

	[Table(Schema="_SYS_RT", Name="TABLE_PLACEMENT")]
	public partial class _SYS_RT_TablePlacement
	{
		[Column, Nullable] public int? DUMMY { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_TASK", Name="TASK_CLIENT_MAPPING_")]
	public partial class _SYS_TASK_TaskClientMapping
	{
		[Column("TASK_OID"), PrimaryKey,  NotNull] public long    TaskOid { get; set; } // BIGINT
		[Column(),              Nullable         ] public string? CLIENT  { get; set; } // NVARCHAR(128)
	}

	/// <summary>
	/// Provides the client mapping when a task is created by the ABAP API
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="TASK_CLIENT_MAPPING", IsView=true)]
	public partial class _SYS_TASK_TaskClientMapping0
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"), NotNull    ] public string  SchemaName { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),   NotNull    ] public string  TaskName   { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The client name that created the task by the ABAP API
		/// </summary>
		[Column(),                 Nullable] public string? CLIENT     { get; set; } // NVARCHAR(128)
	}

	/// <summary>
	/// Defines the columns present in a particular table
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="TASK_COLUMN_DEFINITIONS", IsView=true)]
	public partial class _SYS_TASK_TaskColumnDefinition
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),    NotNull    ] public string  SchemaName    { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),      NotNull    ] public string  TaskName      { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),    Nullable] public string? OperationName { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("TABLE_NAME"),        Nullable] public string? TableName     { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the column used in the task plan within a table
		/// </summary>
		[Column("COLUMN_NAME"),       Nullable] public string? ColumnName    { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The mapped name of the column used in a task plan within a table
		/// </summary>
		[Column("MAPPED_NAME"),       Nullable] public string? MappedName    { get; set; } // NVARCHAR(128)
	}

	[Table(Schema="_SYS_TASK", Name="TASK_COLUMN_DEFINITIONS_")]
	public partial class _SYS_TASK_TaskColumnDefinitions
	{
		[Column("TASK_OID"),     PrimaryKey(1), NotNull] public long    TaskOid     { get; set; } // BIGINT
		[Column("OPERATION_ID"), PrimaryKey(2), NotNull] public int     OperationId { get; set; } // INTEGER
		[Column("TABLE_ID"),     PrimaryKey(3), NotNull] public int     TableId     { get; set; } // INTEGER
		[Column("COLUMN_ID"),    PrimaryKey(4), NotNull] public int     ColumnId    { get; set; } // INTEGER
		[Column("COLUMN_NAME"),     Nullable           ] public string? ColumnName  { get; set; } // NVARCHAR(128)
		[Column("MAPPED_NAME"),     Nullable           ] public string? MappedName  { get; set; } // NVARCHAR(128)
	}

	/// <summary>
	/// Task Execution Statistics.
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="TASK_EXECUTIONS", IsView=true)]
	public partial class _SYS_TASK_TaskExecution
	{
		/// <summary>
		/// Host name
		/// </summary>
		[Column(),                              Nullable] public string?   HOST                  { get; set; } // VARCHAR(64)
		/// <summary>
		/// Internal port
		/// </summary>
		[Column(),                              Nullable] public int?      PORT                  { get; set; } // INTEGER
		/// <summary>
		/// Schema name used in the task
		/// </summary>
		[Column("SCHEMA_NAME"),              NotNull    ] public string    SchemaName            { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Name of the task
		/// </summary>
		[Column("TASK_NAME"),                NotNull    ] public string    TaskName              { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Connection Identifier
		/// </summary>
		[Column("CONNECTION_ID"),               Nullable] public int?      ConnectionId          { get; set; } // INTEGER
		/// <summary>
		/// Transaction Identifier used for the task execution
		/// </summary>
		[Column("TRANSACTION_ID"),              Nullable] public int?      TransactionId         { get; set; } // INTEGER
		/// <summary>
		/// Task execution unique identifier
		/// </summary>
		[Column("TASK_EXECUTION_ID"),        NotNull    ] public long      TaskExecutionId       { get; set; } // BIGINT
		/// <summary>
		/// Parent Task identifier
		/// </summary>
		[Column("PARENT_TASK_EXECUTION_ID"),    Nullable] public long?     ParentTaskExecutionId { get; set; } // BIGINT
		/// <summary>
		/// 'TRUE' if the task is asynchronous task, else 'FALSE'
		/// </summary>
		[Column("IS_ASYNC"),                    Nullable] public string?   IsAsync               { get; set; } // VARCHAR(5)
		/// <summary>
		/// Input parameters for the task
		/// </summary>
		[Column(),                              Nullable] public string?   PARAMETERS            { get; set; } // NVARCHAR(5000)
		/// <summary>
		/// Input procedure parameters for the task
		/// </summary>
		[Column("PROCEDURE_PARAMETERS"),        Nullable] public string?   ProcedureParameters   { get; set; } // NVARCHAR(5000)
		/// <summary>
		/// Start time of the task
		/// </summary>
		[Column("START_TIME"),                  Nullable] public DateTime? StartTime             { get; set; } // TIMESTAMP
		/// <summary>
		/// End time of the task
		/// </summary>
		[Column("END_TIME"),                    Nullable] public DateTime? EndTime               { get; set; } // TIMESTAMP
		/// <summary>
		/// Execution time of the task (microseconds)
		/// </summary>
		[Column(),                              Nullable] public long?     DURATION              { get; set; } // BIGINT
		/// <summary>
		/// Status of the task: STARTING/RUNNING/FAILED/COMPLETED
		/// </summary>
		[Column(),                              Nullable] public string?   STATUS                { get; set; } // VARCHAR(16)
		/// <summary>
		/// Current operation of the task
		/// </summary>
		[Column("CURRENT_OPERATION"),           Nullable] public string?   CurrentOperation      { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Total number of records processed
		/// </summary>
		[Column("PROCESSED_RECORDS"),           Nullable] public long?     ProcessedRecords      { get; set; } // BIGINT
		/// <summary>
		/// Total number of task partitions for a task execution (1 if no task partitioning)
		/// </summary>
		[Column("PARTITION_COUNT"),             Nullable] public int?      PartitionCount        { get; set; } // INTEGER
		/// <summary>
		/// Total task progress (percent)
		/// </summary>
		[Column("TOTAL_PROGRESS_PERCENT"),      Nullable] public double?   TotalProgressPercent  { get; set; } // DOUBLE
		/// <summary>
		/// User name
		/// </summary>
		[Column("USER_NAME"),                   Nullable] public string?   UserName              { get; set; } // NVARCHAR(256)
		/// <summary>
		/// Application user name
		/// </summary>
		[Column("APPLICATION_USER_NAME"),       Nullable] public string?   ApplicationUserName   { get; set; } // NVARCHAR(256)
		/// <summary>
		/// 'TRUE' if the task produces side effect data, else 'FALSE'
		/// </summary>
		[Column("HAS_SIDE_EFFECTS"),            Nullable] public string?   HasSideEffects        { get; set; } // VARCHAR(5)
	}

	[Table(Schema="_SYS_TASK", Name="TASK_EXECUTIONS_")]
	public partial class _SYS_TASK_TaskExecutions
	{
		[Column("TASK_OID"),                 PrimaryKey(1), NotNull] public long      TaskOid               { get; set; } // BIGINT
		[Column(),                              Nullable           ] public string?   HOST                  { get; set; } // VARCHAR(64)
		[Column(),                              Nullable           ] public int?      PORT                  { get; set; } // INTEGER
		[Column("CONNECTION_ID"),               Nullable           ] public int?      ConnectionId          { get; set; } // INTEGER
		[Column("TRANSACTION_ID"),              Nullable           ] public int?      TransactionId         { get; set; } // INTEGER
		[Column("TASK_EXECUTION_ID"),        PrimaryKey(2), NotNull] public long      TaskExecutionId       { get; set; } // BIGINT
		[Column("PARENT_TASK_EXECUTION_ID"),    Nullable           ] public long?     ParentTaskExecutionId { get; set; } // BIGINT
		[Column("IS_ASYNC"),                    Nullable           ] public string?   IsAsync               { get; set; } // VARCHAR(5)
		[Column(),                              Nullable           ] public string?   PARAMETERS            { get; set; } // NVARCHAR(5000)
		[Column("PROCEDURE_PARAMETERS"),        Nullable           ] public string?   ProcedureParameters   { get; set; } // NVARCHAR(5000)
		[Column("START_TIME"),                  Nullable           ] public DateTime? StartTime             { get; set; } // TIMESTAMP
		[Column("END_TIME"),                    Nullable           ] public DateTime? EndTime               { get; set; } // TIMESTAMP
		[Column(),                              Nullable           ] public string?   STATUS                { get; set; } // VARCHAR(16)
		[Column("CURRENT_OPERATION"),           Nullable           ] public string?   CurrentOperation      { get; set; } // NVARCHAR(128)
		[Column("PROCESSED_RECORDS"),           Nullable           ] public long?     ProcessedRecords      { get; set; } // BIGINT
		[Column("PARTITION_COUNT"),             Nullable           ] public int?      PartitionCount        { get; set; } // INTEGER
		[Column("TOTAL_OPERATIONS"),            Nullable           ] public int?      TotalOperations       { get; set; } // INTEGER
		[Column("TOTAL_PROGRESS_PERCENT"),      Nullable           ] public double?   TotalProgressPercent  { get; set; } // DOUBLE
		[Column("USER_NAME"),                   Nullable           ] public string?   UserName              { get; set; } // NVARCHAR(256)
		[Column("APPLICATION_USER_NAME"),       Nullable           ] public string?   ApplicationUserName   { get; set; } // NVARCHAR(256)
		[Column("HAS_SIDE_EFFECTS"),            Nullable           ] public string?   HasSideEffects        { get; set; } // VARCHAR(5)
		[Column("STATEMENT_EXECUTION_ID"),      Nullable           ] public long?     StatementExecutionId  { get; set; } // BIGINT
		[Column("LOGICAL_CONNECTION_ID"),       Nullable           ] public int?      LogicalConnectionId   { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_TASK", Name="TASK_LOCALIZATION_")]
	public partial class _SYS_TASK_TaskLocalization
	{
		[Column("LOC_TYPE_ID"), PrimaryKey(1), NotNull] public int     LocTypeId   { get; set; } // INTEGER
		[Column("LOC_ID"),      PrimaryKey(2), NotNull] public string  LocId       { get; set; } = null!; // NVARCHAR(64)
		[Column(),              PrimaryKey(3), NotNull] public char    LANGUAGE    { get; set; } // NVARCHAR(1)
		[Column(),                 Nullable           ] public string? DESCRIPTION { get; set; } // NVARCHAR(1024)
	}

	/// <summary>
	/// Contains localized values for the task framework tables
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="TASK_LOCALIZATION", IsView=true)]
	public partial class _SYS_TASK_TaskLocalization0
	{
		/// <summary>
		/// The ID of the type of entity being localized
		/// </summary>
		[Column("LOC_TYPE_ID"), NotNull    ] public int     LocTypeId   { get; set; } // INTEGER
		/// <summary>
		/// The ID of the entity being localized
		/// </summary>
		[Column("LOC_ID"),      NotNull    ] public string  LocId       { get; set; } = null!; // NVARCHAR(64)
		/// <summary>
		/// The one character code of the localized language
		/// </summary>
		[Column(),              NotNull    ] public char    LANGUAGE    { get; set; } // NVARCHAR(1)
		/// <summary>
		/// The localized description
		/// </summary>
		[Column(),                 Nullable] public string? DESCRIPTION { get; set; } // NVARCHAR(1024)
	}

	/// <summary>
	/// Contains all operations and details about those operations that exist for a given task
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="TASK_OPERATIONS", IsView=true)]
	public partial class _SYS_TASK_TaskOperation
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),      NotNull    ] public string  SchemaName     { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),        NotNull    ] public string  TaskName       { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),      Nullable] public string? OperationName  { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Comments made on the operation
		/// </summary>
		[Column(),                      Nullable] public string? COMMENTS       { get; set; } // NVARCHAR(512)
		/// <summary>
		/// Whether the operation has side-effect data
		/// </summary>
		[Column("HAS_SIDE_EFFECTS"),    Nullable] public byte?   HasSideEffects { get; set; } // TINYINT
		/// <summary>
		/// The type of operation in the task plan
		/// </summary>
		[Column("OPERATION_TYPE"),      Nullable] public string? OperationType  { get; set; } // NVARCHAR(128)
	}

	[Table(Schema="_SYS_TASK", Name="TASK_OPERATIONS_")]
	public partial class _SYS_TASK_TaskOperations
	{
		[Column("TASK_OID"),         PrimaryKey(1), NotNull] public int     TaskOid        { get; set; } // INTEGER
		[Column("OPERATION_ID"),     PrimaryKey(2), NotNull] public int     OperationId    { get; set; } // INTEGER
		[Column("OPERATION_NAME"),      Nullable           ] public string? OperationName  { get; set; } // NVARCHAR(128)
		[Column(),                      Nullable           ] public string? COMMENTS       { get; set; } // NVARCHAR(512)
		[Column("HAS_SIDE_EFFECTS"),    Nullable           ] public byte?   HasSideEffects { get; set; } // TINYINT
		[Column("OPERATION_TYPE"),      Nullable           ] public string? OperationType  { get; set; } // NVARCHAR(128)
	}

	/// <summary>
	/// Task Operations Execution Statistics
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="TASK_OPERATIONS_EXECUTIONS", IsView=true)]
	public partial class _SYS_TASK_TaskOperationsExecution
	{
		/// <summary>
		/// Host name
		/// </summary>
		[Column(),                                Nullable] public string?   HOST                     { get; set; } // VARCHAR(64)
		/// <summary>
		/// Internal port
		/// </summary>
		[Column(),                                Nullable] public int?      PORT                     { get; set; } // INTEGER
		/// <summary>
		/// Task execution unique identifier
		/// </summary>
		[Column("TASK_EXECUTION_ID"),          NotNull    ] public long      TaskExecutionId          { get; set; } // BIGINT
		[Column("PARTITION_ID"),                  Nullable] public long?     PartitionId              { get; set; } // BIGINT
		/// <summary>
		/// Connection Identifier
		/// </summary>
		[Column("CONNECTION_ID"),                 Nullable] public int?      ConnectionId             { get; set; } // INTEGER
		/// <summary>
		/// Transaction Identifier used for the task execution
		/// </summary>
		[Column("TRANSACTION_ID"),                Nullable] public int?      TransactionId            { get; set; } // INTEGER
		/// <summary>
		/// Name of operation
		/// </summary>
		[Column("CURRENT_OPERATION"),             Nullable] public string?   CurrentOperation         { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Type of operation
		/// </summary>
		[Column("OPERATION_TYPE"),                Nullable] public string?   OperationType            { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Internal name of operation
		/// </summary>
		[Column("OPERATION_NAME"),             NotNull    ] public string    OperationName            { get; set; } = null!; // NVARCHAR(128)
		/// <summary>
		/// Start time of operation
		/// </summary>
		[Column("START_TIME"),                    Nullable] public DateTime? StartTime                { get; set; } // TIMESTAMP
		/// <summary>
		/// End time of operation
		/// </summary>
		[Column("END_TIME"),                      Nullable] public DateTime? EndTime                  { get; set; } // TIMESTAMP
		/// <summary>
		/// Execution time of operation (microseconds)
		/// </summary>
		[Column(),                                Nullable] public decimal?  DURATION                 { get; set; } // DECIMAL(25, 6)
		/// <summary>
		/// Status of the operation: STARTING/RUNNING/FAILED/COMPLETED
		/// </summary>
		[Column(),                                Nullable] public string?   STATUS                   { get; set; } // VARCHAR(16)
		/// <summary>
		/// Total number of records processed
		/// </summary>
		[Column("PROCESSED_RECORDS"),             Nullable] public long?     ProcessedRecords         { get; set; } // BIGINT
		/// <summary>
		/// Operation progress (percent)
		/// </summary>
		[Column("OPERATION_PROGRESS_PERCENT"),    Nullable] public double?   OperationProgressPercent { get; set; } // DOUBLE
		/// <summary>
		/// 'TRUE' if the operation produces side effect data, else 'FALSE'
		/// </summary>
		[Column("HAS_SIDE_EFFECTS"),              Nullable] public string?   HasSideEffects           { get; set; } // VARCHAR(5)
	}

	[Table(Schema="_SYS_TASK", Name="TASK_OPERATIONS_EXECUTIONS_")]
	public partial class _SYS_TASK_TaskOperationsExecutions
	{
		[Column(),                                Nullable           ] public string?   HOST                     { get; set; } // VARCHAR(64)
		[Column(),                                Nullable           ] public int?      PORT                     { get; set; } // INTEGER
		[Column("CONNECTION_ID"),                 Nullable           ] public int?      ConnectionId             { get; set; } // INTEGER
		[Column("TRANSACTION_ID"),                Nullable           ] public int?      TransactionId            { get; set; } // INTEGER
		[Column("TASK_EXECUTION_ID"),          PrimaryKey(1), NotNull] public long      TaskExecutionId          { get; set; } // BIGINT
		[Column("PARTITION_ID"),               PrimaryKey(2), NotNull] public int       PartitionId              { get; set; } // INTEGER
		[Column("OPERATION_NAME"),             PrimaryKey(3), NotNull] public string    OperationName            { get; set; } = null!; // NVARCHAR(128)
		[Column("CURRENT_OPERATION"),             Nullable           ] public string?   CurrentOperation         { get; set; } // NVARCHAR(128)
		[Column("OPERATION_TYPE"),                Nullable           ] public string?   OperationType            { get; set; } // NVARCHAR(128)
		[Column("START_TIME"),                    Nullable           ] public DateTime? StartTime                { get; set; } // TIMESTAMP
		[Column("END_TIME"),                      Nullable           ] public DateTime? EndTime                  { get; set; } // TIMESTAMP
		[Column(),                                Nullable           ] public string?   STATUS                   { get; set; } // VARCHAR(16)
		[Column("PROCESSED_RECORDS"),             Nullable           ] public long?     ProcessedRecords         { get; set; } // BIGINT
		[Column("OPERATION_PROGRESS_PERCENT"),    Nullable           ] public double?   OperationProgressPercent { get; set; } // DOUBLE
		[Column("HAS_SIDE_EFFECTS"),              Nullable           ] public string?   HasSideEffects           { get; set; } // VARCHAR(5)
	}

	/// <summary>
	/// Task Partition Statistics.
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="TASK_PARTITION_EXECUTIONS", IsView=true)]
	public partial class _SYS_TASK_TaskPartitionExecution
	{
		/// <summary>
		/// Host name
		/// </summary>
		[Column(),                            Nullable] public string?   HOST                 { get; set; } // VARCHAR(64)
		/// <summary>
		/// Internal port
		/// </summary>
		[Column(),                            Nullable] public int?      PORT                 { get; set; } // INTEGER
		/// <summary>
		/// Schema name of the task
		/// </summary>
		[Column("SCHEMA_NAME"),            NotNull    ] public string    SchemaName           { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Name of the task
		/// </summary>
		[Column("TASK_NAME"),              NotNull    ] public string    TaskName             { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Connection Identifier
		/// </summary>
		[Column("CONNECTION_ID"),             Nullable] public int?      ConnectionId         { get; set; } // INTEGER
		/// <summary>
		/// Transaction Identifier used for the task execution
		/// </summary>
		[Column("TRANSACTION_ID"),            Nullable] public int?      TransactionId        { get; set; } // INTEGER
		/// <summary>
		/// Task execution unique identifier
		/// </summary>
		[Column("TASK_EXECUTION_ID"),      NotNull    ] public long      TaskExecutionId      { get; set; } // BIGINT
		/// <summary>
		/// Task partition unique identifier
		/// </summary>
		[Column("PARTITION_ID"),           NotNull    ] public long      PartitionId          { get; set; } // BIGINT
		/// <summary>
		/// Name of the partition
		/// </summary>
		[Column("PARTITION_NAME"),            Nullable] public string?   PartitionName        { get; set; } // NVARCHAR(5000)
		/// <summary>
		/// Start time of the partition
		/// </summary>
		[Column("START_TIME"),                Nullable] public DateTime? StartTime            { get; set; } // TIMESTAMP
		/// <summary>
		/// End time of the partition
		/// </summary>
		[Column("END_TIME"),                  Nullable] public DateTime? EndTime              { get; set; } // TIMESTAMP
		/// <summary>
		/// Execution time of the partition (microseconds)
		/// </summary>
		[Column(),                            Nullable] public long?     DURATION             { get; set; } // BIGINT
		/// <summary>
		/// Status of the task: STARTING/RUNNING/FAILED/COMPLETED
		/// </summary>
		[Column(),                            Nullable] public string?   STATUS               { get; set; } // VARCHAR(16)
		/// <summary>
		/// Total number of records processed
		/// </summary>
		[Column("PROCESSED_RECORDS"),         Nullable] public long?     ProcessedRecords     { get; set; } // BIGINT
		/// <summary>
		/// Total partition progress (percent)
		/// </summary>
		[Column("TOTAL_PROGRESS_PERCENT"),    Nullable] public double?   TotalProgressPercent { get; set; } // DOUBLE
	}

	[Table(Schema="_SYS_TASK", Name="TASK_PARTITION_EXECUTIONS_")]
	public partial class _SYS_TASK_TaskPartitionExecutions
	{
		[Column("TASK_OID"),               PrimaryKey(1), NotNull] public long      TaskOid              { get; set; } // BIGINT
		[Column(),                            Nullable           ] public string?   HOST                 { get; set; } // VARCHAR(64)
		[Column(),                            Nullable           ] public int?      PORT                 { get; set; } // INTEGER
		[Column("CONNECTION_ID"),             Nullable           ] public int?      ConnectionId         { get; set; } // INTEGER
		[Column("TRANSACTION_ID"),            Nullable           ] public int?      TransactionId        { get; set; } // INTEGER
		[Column("TASK_EXECUTION_ID"),      PrimaryKey(2), NotNull] public long      TaskExecutionId      { get; set; } // BIGINT
		[Column("PARTITION_ID"),           PrimaryKey(3), NotNull] public long      PartitionId          { get; set; } // BIGINT
		[Column("PARTITION_NAME"),            Nullable           ] public string?   PartitionName        { get; set; } // NVARCHAR(5000)
		[Column("START_TIME"),                Nullable           ] public DateTime? StartTime            { get; set; } // TIMESTAMP
		[Column("END_TIME"),                  Nullable           ] public DateTime? EndTime              { get; set; } // TIMESTAMP
		[Column(),                            Nullable           ] public string?   STATUS               { get; set; } // VARCHAR(16)
		[Column("PROCESSED_RECORDS"),         Nullable           ] public long?     ProcessedRecords     { get; set; } // BIGINT
		[Column("TOTAL_PROGRESS_PERCENT"),    Nullable           ] public double?   TotalProgressPercent { get; set; } // DOUBLE
	}

	/// <summary>
	/// Contains all of the tables used by the various side-effect producing operations
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="TASK_TABLE_DEFINITIONS", IsView=true)]
	public partial class _SYS_TASK_TaskTableDefinition
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),          NotNull    ] public string  SchemaName         { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),            NotNull    ] public string  TaskName           { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),          Nullable] public string? OperationName      { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Unique ID for the table
		/// </summary>
		[Column("TABLE_ID"),             NotNull    ] public int     TableId            { get; set; } // INTEGER
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("TABLE_NAME"),              Nullable] public string? TableName          { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The schema where the generated side-effect table is located
		/// </summary>
		[Column("SIDE_EFFECT_SCHEMA"),      Nullable] public string? SideEffectSchema   { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the generated side-effect table
		/// </summary>
		[Column("SIDE_EFFECT_NAME"),        Nullable] public string? SideEffectName     { get; set; } // NVARCHAR(128)
		/// <summary>
		/// Whether this table is the primary table in a relationship
		/// </summary>
		[Column("IS_PRIMARY_TABLE"),        Nullable] public byte?   IsPrimaryTable     { get; set; } // TINYINT
		/// <summary>
		/// The type of operation this table is used within
		/// </summary>
		[Column("OPERATION_TABLE_TYPE"),    Nullable] public string? OperationTableType { get; set; } // NVARCHAR(20)
	}

	[Table(Schema="_SYS_TASK", Name="TASK_TABLE_DEFINITIONS_")]
	public partial class _SYS_TASK_TaskTableDefinitions
	{
		[Column("TASK_OID"),             PrimaryKey(1), NotNull] public long    TaskOid            { get; set; } // BIGINT
		[Column("OPERATION_ID"),         PrimaryKey(2), NotNull] public int     OperationId        { get; set; } // INTEGER
		[Column("TABLE_ID"),             PrimaryKey(3), NotNull] public int     TableId            { get; set; } // INTEGER
		[Column("TABLE_NAME"),              Nullable           ] public string? TableName          { get; set; } // NVARCHAR(128)
		[Column("SIDE_EFFECT_SCHEMA"),      Nullable           ] public string? SideEffectSchema   { get; set; } // NVARCHAR(128)
		[Column("SIDE_EFFECT_NAME"),        Nullable           ] public string? SideEffectName     { get; set; } // NVARCHAR(128)
		[Column("IS_PRIMARY_TABLE"),        Nullable           ] public byte?   IsPrimaryTable     { get; set; } // TINYINT
		[Column("OPERATION_TABLE_TYPE"),    Nullable           ] public string? OperationTableType { get; set; } // NVARCHAR(20)
	}

	/// <summary>
	/// Defines the relationships (if any) between tables within an operation
	/// </summary>
	[Table(Schema="_SYS_TASK", Name="TASK_TABLE_RELATIONSHIPS", IsView=true)]
	public partial class _SYS_TASK_TaskTableRelationship
	{
		/// <summary>
		/// The name of the schema where the task is located
		/// </summary>
		[Column("SCHEMA_NAME"),        NotNull    ] public string  SchemaName       { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the task
		/// </summary>
		[Column("TASK_NAME"),          NotNull    ] public string  TaskName         { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// The name of the operation in the task plan
		/// </summary>
		[Column("OPERATION_NAME"),        Nullable] public string? OperationName    { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the table defined in the task plan for an operation
		/// </summary>
		[Column("TABLE_NAME"),            Nullable] public string? TableName        { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the table with which the "TABLE NAME" table is related
		/// </summary>
		[Column("RELATED_TABLE_NAME"),    Nullable] public string? RelatedTableName { get; set; } // NVARCHAR(128)
		/// <summary>
		/// The name of the column in the "TABLE_NAME" table that relates to the "TO_ATTRIBUTE"
		/// </summary>
		[Column("FROM_ATTRIBUTE"),     NotNull    ] public string  FromAttribute    { get; set; } = null!; // NVARCHAR(128)
		/// <summary>
		/// The name of the column in the "RELATED_TABLE_NAME" that relates to the "FROM_ATTRIBUTE"
		/// </summary>
		[Column("TO_ATTRIBUTE"),       NotNull    ] public string  ToAttribute      { get; set; } = null!; // NVARCHAR(128)
	}

	[Table(Schema="_SYS_TASK", Name="TASK_TABLE_RELATIONSHIPS_")]
	public partial class _SYS_TASK_TaskTableRelationships
	{
		[Column("TASK_OID"),         PrimaryKey(1), NotNull] public long   TaskOid        { get; set; } // BIGINT
		[Column("OPERATION_ID"),     PrimaryKey(2), NotNull] public int    OperationId    { get; set; } // INTEGER
		[Column("TABLE_ID"),         PrimaryKey(3), NotNull] public int    TableId        { get; set; } // INTEGER
		[Column("RELATED_TABLE_ID"), PrimaryKey(4), NotNull] public int    RelatedTableId { get; set; } // INTEGER
		[Column("FROM_ATTRIBUTE"),   PrimaryKey(5), NotNull] public string FromAttribute  { get; set; } = null!; // NVARCHAR(128)
		[Column("TO_ATTRIBUTE"),     PrimaryKey(6), NotNull] public string ToAttribute    { get; set; } = null!; // NVARCHAR(128)
	}

	/// <summary>
	/// Last Telemetry Client Information
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="TELEMETRY_CLIENT", IsView=true)]
	public partial class _SYS_TELEMETRY_TelemetryClient
	{
		/// <summary>
		/// Unique ID of the client
		/// </summary>
		[Column("CLIENT_ID"),                        NotNull    ] public long      ClientId                       { get; set; } // BIGINT
		/// <summary>
		/// Activation timestamp of the client id
		/// </summary>
		[Column("FIRST_TRANSMISSION_TIMESTAMP"),     NotNull    ] public DateTime  FirstTransmissionTimestamp     { get; set; } // TIMESTAMP
		/// <summary>
		/// Timestamp of last transmission
		/// </summary>
		[Column("LAST_TRANSMISSION_TIMESTAMP"),      NotNull    ] public DateTime  LastTransmissionTimestamp      { get; set; } // TIMESTAMP
		/// <summary>
		/// Transmission interval in minute
		/// </summary>
		[Column("TRANSMISSION_INTERVAL"),               Nullable] public short?    TransmissionInterval           { get; set; } // SMALLINT
		/// <summary>
		/// Default transmission interval in minute
		/// </summary>
		[Column("DEFAULT_TRANSMISSION_INTERVAL"),       Nullable] public short?    DefaultTransmissionInterval    { get; set; } // SMALLINT
		/// <summary>
		/// Minimum transmission interval in minute
		/// </summary>
		[Column("MIN_TRANSMISSION_INTERVAL"),           Nullable] public short?    MinTransmissionInterval        { get; set; } // SMALLINT
		/// <summary>
		/// Maximum transmission interval in minute
		/// </summary>
		[Column("MAX_TRANSMISSION_INTERVAL"),           Nullable] public short?    MaxTransmissionInterval        { get; set; } // SMALLINT
		/// <summary>
		/// System ID of the client
		/// </summary>
		[Column("CLIENT_SYSTEM_ID"),                 NotNull    ] public string    ClientSystemId                 { get; set; } = null!; // VARCHAR(3)
		/// <summary>
		/// Database Name of the client
		/// </summary>
		[Column("CLIENT_DATABASE_NAME"),             NotNull    ] public string    ClientDatabaseName             { get; set; } = null!; // NVARCHAR(256)
		/// <summary>
		/// Hardware key of the client
		/// </summary>
		[Column("CLIENT_HARDWARE_KEY"),              NotNull    ] public string    ClientHardwareKey              { get; set; } = null!; // VARCHAR(11)
		/// <summary>
		/// Private key of the client
		/// </summary>
		[Column("PRIVATE_KEY"),                         Nullable] public string?   PrivateKey                     { get; set; } // VARCHAR(5000)
		/// <summary>
		/// Personal certificate of the client
		/// </summary>
		[Column("PERSONAL_CERTIFICATE"),                Nullable] public string?   PersonalCertificate            { get; set; } // VARCHAR(5000)
		/// <summary>
		/// Expiration timestamp of the Personal certificate
		/// </summary>
		[Column("CERTIFICATE_EXPIRATION_TIMESTAMP"),    Nullable] public DateTime? CertificateExpirationTimestamp { get; set; } // TIMESTAMP
	}

	/// <summary>
	/// Telemetry inifile section
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="TELEMETRY_INIFILE", IsView=true)]
	public partial class _SYS_TELEMETRY_TelemetryInifile
	{
		/// <summary>
		/// Configuration key name
		/// </summary>
		[Column("INI_KEY"),        NotNull    ] public string  IniKey       { get; set; } = null!; // VARCHAR(128)
		/// <summary>
		/// Configuration layer: DEFAULT, SYSTEM, HOST, DATABASE
		/// </summary>
		[Column("INI_LAYER_NAME"),    Nullable] public string? IniLayerName { get; set; } // VARCHAR(16)
		/// <summary>
		/// Configuration value
		/// </summary>
		[Column("INI_VALUE"),      NotNull    ] public string  IniValue     { get; set; } = null!; // VARCHAR(3)
	}

	/// <summary>
	/// General HANA feature usage information
	/// </summary>
	[Table(Schema="_SYS_TELEMETRY", Name="TEL_HANA_USAGE", IsView=true)]
	public partial class _SYS_TELEMETRY_TelHanaUsage
	{
		/// <summary>
		/// Timestamp ID (UTC)
		/// </summary>
		[Column("SNAPSHOT_ID"),         Nullable] public DateTime? SnapshotId      { get; set; } // TIMESTAMP
		/// <summary>
		/// Processing Timestamp (local time)
		/// </summary>
		[Column("SERVER_TIMESTAMP"),    Nullable] public DateTime? ServerTimestamp { get; set; } // TIMESTAMP
		/// <summary>
		/// HANA feature name
		/// </summary>
		[Column("0SM_FEAT"),            Nullable] public string?   _0smFeat        { get; set; } // NVARCHAR(256)
		/// <summary>
		/// HANA feature type
		/// </summary>
		[Column("0SM_TYPE"),         NotNull    ] public string    _0smType        { get; set; } = null!; // VARCHAR(11)
		/// <summary>
		/// HANA feature subtype
		/// </summary>
		[Column("0SM_SUBT"),         NotNull    ] public string    _0smSubt        { get; set; } = null!; // VARCHAR(18)
		/// <summary>
		/// HANA feature usage
		/// </summary>
		[Column("0SM_TRAF"),            Nullable] public long?     _0smTraf        { get; set; } // BIGINT
		/// <summary>
		/// HANA feature subtype instance number
		/// </summary>
		[Column("0SM_NORM"),         NotNull    ] public long      _0smNorm        { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_EPM", Name="TEMPORARY_CONTAINERS")]
	public partial class _SYS_EPM_TemporaryContainer
	{
		[Column("USER_NAME"),        PrimaryKey(1), NotNull] public string    UserName       { get; set; } = null!; // NVARCHAR(256)
		[Column("SCHEMA_NAME"),      PrimaryKey(2), NotNull] public string    SchemaName     { get; set; } = null!; // NVARCHAR(256)
		[Column("MODEL_NAME"),       PrimaryKey(3), NotNull] public string    ModelName      { get; set; } = null!; // NVARCHAR(256)
		[Column(),                   PrimaryKey(4), NotNull] public int       VERSION        { get; set; } // INTEGER
		[Column(),                   PrimaryKey(5), NotNull] public string    CONTAINER      { get; set; } = null!; // NVARCHAR(256)
		[Column("TABLE_NAME"),          Nullable           ] public string?   TableName      { get; set; } // NVARCHAR(256)
		[Column("LAST_CHANGE_TIME"),    Nullable           ] public DateTime? LastChangeTime { get; set; } // TIMESTAMP
	}

	[Table(Schema="TESTHANAODBC", Name="TestIdentity")]
	public partial class TESTHANAODBC_TestIdentity
	{
		[PrimaryKey, Identity] public int ID { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANA", Name="TestIdentity")]
	public partial class TestIdentity
	{
		[PrimaryKey, Identity] public int ID { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANAODBC", Name="TestMerge1")]
	public partial class TESTHANAODBC_TestMerge1
	{
		[PrimaryKey, NotNull    ] public int       Id              { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field1          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field2          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field3          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field4          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field5          { get; set; } // INTEGER
		[Column,        Nullable] public long?     FieldInt64      { get; set; } // BIGINT
		[Column,        Nullable] public byte?     FieldBoolean    { get; set; } // TINYINT
		[Column,        Nullable] public string?   FieldString     { get; set; } // VARCHAR(20)
		[Column,        Nullable] public string?   FieldNString    { get; set; } // NVARCHAR(20)
		[Column,        Nullable] public char?     FieldChar       { get; set; } // CHAR(1)
		[Column,        Nullable] public char?     FieldNChar      { get; set; } // NCHAR(1)
		[Column,        Nullable] public float?    FieldFloat      { get; set; } // REAL
		[Column,        Nullable] public double?   FieldDouble     { get; set; } // DOUBLE
		[Column,        Nullable] public DateTime? FieldDateTime   { get; set; } // TIMESTAMP
		[Column,        Nullable] public byte[]?   FieldBinary     { get; set; } // VARBINARY(20)
		[Column,        Nullable] public string?   FieldGuid       { get; set; } // CHAR(36)
		[Column,        Nullable] public decimal?  FieldDecimal    { get; set; } // DECIMAL(24, 10)
		[Column,        Nullable] public DateTime? FieldDate       { get; set; } // DATE
		[Column,        Nullable] public TimeSpan? FieldTime       { get; set; } // TIME
		[Column,        Nullable] public string?   FieldEnumString { get; set; } // VARCHAR(20)
		[Column,        Nullable] public int?      FieldEnumNumber { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANA", Name="TestMerge1")]
	public partial class TestMerge1
	{
		[PrimaryKey, NotNull    ] public int       Id              { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field1          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field2          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field3          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field4          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field5          { get; set; } // INTEGER
		[Column,        Nullable] public long?     FieldInt64      { get; set; } // BIGINT
		[Column,        Nullable] public byte?     FieldBoolean    { get; set; } // TINYINT
		[Column,        Nullable] public string?   FieldString     { get; set; } // VARCHAR(20)
		[Column,        Nullable] public string?   FieldNString    { get; set; } // NVARCHAR(20)
		[Column,        Nullable] public char?     FieldChar       { get; set; } // CHAR(1)
		[Column,        Nullable] public char?     FieldNChar      { get; set; } // NCHAR(1)
		[Column,        Nullable] public float?    FieldFloat      { get; set; } // REAL
		[Column,        Nullable] public double?   FieldDouble     { get; set; } // DOUBLE
		[Column,        Nullable] public DateTime? FieldDateTime   { get; set; } // TIMESTAMP
		[Column,        Nullable] public byte[]?   FieldBinary     { get; set; } // VARBINARY(20)
		[Column,        Nullable] public string?   FieldGuid       { get; set; } // CHAR(36)
		[Column,        Nullable] public decimal?  FieldDecimal    { get; set; } // DECIMAL(24, 10)
		[Column,        Nullable] public DateTime? FieldDate       { get; set; } // DATE
		[Column,        Nullable] public TimeSpan? FieldTime       { get; set; } // TIME
		[Column,        Nullable] public string?   FieldEnumString { get; set; } // VARCHAR(20)
		[Column,        Nullable] public int?      FieldEnumNumber { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANAODBC", Name="TestMerge2")]
	public partial class TESTHANAODBC_TestMerge2
	{
		[PrimaryKey, NotNull    ] public int       Id              { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field1          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field2          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field3          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field4          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field5          { get; set; } // INTEGER
		[Column,        Nullable] public long?     FieldInt64      { get; set; } // BIGINT
		[Column,        Nullable] public byte?     FieldBoolean    { get; set; } // TINYINT
		[Column,        Nullable] public string?   FieldString     { get; set; } // VARCHAR(20)
		[Column,        Nullable] public string?   FieldNString    { get; set; } // NVARCHAR(20)
		[Column,        Nullable] public char?     FieldChar       { get; set; } // CHAR(1)
		[Column,        Nullable] public char?     FieldNChar      { get; set; } // NCHAR(1)
		[Column,        Nullable] public float?    FieldFloat      { get; set; } // REAL
		[Column,        Nullable] public double?   FieldDouble     { get; set; } // DOUBLE
		[Column,        Nullable] public DateTime? FieldDateTime   { get; set; } // TIMESTAMP
		[Column,        Nullable] public byte[]?   FieldBinary     { get; set; } // VARBINARY(20)
		[Column,        Nullable] public string?   FieldGuid       { get; set; } // CHAR(36)
		[Column,        Nullable] public decimal?  FieldDecimal    { get; set; } // DECIMAL(24, 10)
		[Column,        Nullable] public DateTime? FieldDate       { get; set; } // DATE
		[Column,        Nullable] public TimeSpan? FieldTime       { get; set; } // TIME
		[Column,        Nullable] public string?   FieldEnumString { get; set; } // VARCHAR(20)
		[Column,        Nullable] public int?      FieldEnumNumber { get; set; } // INTEGER
	}

	[Table(Schema="TESTHANA", Name="TestMerge2")]
	public partial class TestMerge2
	{
		[PrimaryKey, NotNull    ] public int       Id              { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field1          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field2          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field3          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field4          { get; set; } // INTEGER
		[Column,        Nullable] public int?      Field5          { get; set; } // INTEGER
		[Column,        Nullable] public long?     FieldInt64      { get; set; } // BIGINT
		[Column,        Nullable] public byte?     FieldBoolean    { get; set; } // TINYINT
		[Column,        Nullable] public string?   FieldString     { get; set; } // VARCHAR(20)
		[Column,        Nullable] public string?   FieldNString    { get; set; } // NVARCHAR(20)
		[Column,        Nullable] public char?     FieldChar       { get; set; } // CHAR(1)
		[Column,        Nullable] public char?     FieldNChar      { get; set; } // NCHAR(1)
		[Column,        Nullable] public float?    FieldFloat      { get; set; } // REAL
		[Column,        Nullable] public double?   FieldDouble     { get; set; } // DOUBLE
		[Column,        Nullable] public DateTime? FieldDateTime   { get; set; } // TIMESTAMP
		[Column,        Nullable] public byte[]?   FieldBinary     { get; set; } // VARBINARY(20)
		[Column,        Nullable] public string?   FieldGuid       { get; set; } // CHAR(36)
		[Column,        Nullable] public decimal?  FieldDecimal    { get; set; } // DECIMAL(24, 10)
		[Column,        Nullable] public DateTime? FieldDate       { get; set; } // DATE
		[Column,        Nullable] public TimeSpan? FieldTime       { get; set; } // TIME
		[Column,        Nullable] public string?   FieldEnumString { get; set; } // VARCHAR(20)
		[Column,        Nullable] public int?      FieldEnumNumber { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_RT", Name="TI_IMPORT_KEYS")]
	public partial class _SYS_RT_TiImportKey
	{
		[Column("TABLE_SCHEMA"),    PrimaryKey(1),  NotNull] public string TableSchema   { get; set; } = null!; // NVARCHAR(256)
		[Column("TABLE_NAME"),      PrimaryKey(2),  NotNull] public string TableName     { get; set; } = null!; // NVARCHAR(256)
		[Column("TI_PACKAGE"),      PrimaryKey(3),  NotNull] public string TiPackage     { get; set; } = null!; // NVARCHAR(256)
		[Column("TI_NAME"),         PrimaryKey(4),  NotNull] public string TiName        { get; set; } = null!; // NVARCHAR(256)
		[Column("TI_TYPE"),         PrimaryKey(5),  NotNull] public string TiType        { get; set; } = null!; // NVARCHAR(256)
		[Column("CSV_PACKAGE"),     PrimaryKey(6),  NotNull] public string CsvPackage    { get; set; } = null!; // NVARCHAR(256)
		[Column("CSV_NAME"),        PrimaryKey(7),  NotNull] public string CsvName       { get; set; } = null!; // NVARCHAR(256)
		[Column("CSV_FILEEXT"),     PrimaryKey(8),  NotNull] public string CsvFileext    { get; set; } = null!; // NVARCHAR(256)
		[Column("KEY_COLUMN_NAME"), PrimaryKey(9),  NotNull] public string KeyColumnName { get; set; } = null!; // NVARCHAR(256)
		[Column("KEY_VALUE"),       PrimaryKey(10), NotNull] public string KeyValue      { get; set; } = null!; // NVARCHAR(5000)
	}

	[Table(Schema="_SYS_RT", Name="_UIS_APPSITES")]
	public partial class _SYS_RT_UisAppsite
	{
		[Column(),             PrimaryKey(3), NotNull] public string    ID          { get; set; } = null!; // NVARCHAR(2000)
		[Column(),                Nullable           ] public string?   NAME        { get; set; } // NVARCHAR(300)
		[Column(),                Nullable           ] public string?   DESCRIPTION { get; set; } // NVARCHAR(5000)
		[Column(),                Nullable           ] public string?   LAYOUT      { get; set; } // CLOB
		[Column("TENANT_ID"),  PrimaryKey(1), NotNull] public string    TenantId    { get; set; } = null!; // VARCHAR(50)
		[Column(),                Nullable           ] public string?   ALIAS       { get; set; } // NVARCHAR(5000)
		[Column(),             PrimaryKey(2), NotNull] public string    DTYPE       { get; set; } = null!; // VARCHAR(20)
		[Column(),                Nullable           ] public int?      VERSION     { get; set; } // INTEGER
		[Column(),                Nullable           ] public DateTime? CREATED     { get; set; } // TIMESTAMP
		[Column(),                Nullable           ] public DateTime? UPDATED     { get; set; } // TIMESTAMP
		[Column("UPDATED_BY"),    Nullable           ] public string?   UpdatedBy   { get; set; } // NVARCHAR(300)
		[Column("THEME_ID"),      Nullable           ] public string?   ThemeId     { get; set; } // VARCHAR(50)
	}

	[Table(Schema="_SYS_RT", Name="_UIS_APPSITE_PROPERTIES")]
	public partial class _SYS_RT_UisAppsitePROPERTy
	{
		[Column(),             PrimaryKey(4), NotNull] public string    ID        { get; set; } = null!; // VARCHAR(50)
		[Column("TENANT_ID"),  PrimaryKey(1), NotNull] public string    TenantId  { get; set; } = null!; // VARCHAR(50)
		[Column(),             PrimaryKey(2), NotNull] public string    DTYPE     { get; set; } = null!; // VARCHAR(20)
		[Column("SITE_ID"),    PrimaryKey(3), NotNull] public string    SiteId    { get; set; } = null!; // NVARCHAR(2000)
		[Column(),                            NotNull] public string    KEY       { get; set; } = null!; // NVARCHAR(300)
		[Column(),                Nullable           ] public string?   VALUE     { get; set; } // NCLOB
		[Column("VALUE_TYPE"),    Nullable           ] public string?   ValueType { get; set; } // NVARCHAR(20)
		[Column(),                Nullable           ] public int?      VERSION   { get; set; } // INTEGER
		[Column(),                Nullable           ] public DateTime? CREATED   { get; set; } // TIMESTAMP
		[Column(),                Nullable           ] public DateTime? UPDATED   { get; set; } // TIMESTAMP
		[Column("UPDATED_BY"),    Nullable           ] public string?   UpdatedBy { get; set; } // NVARCHAR(300)
	}

	[Table(Schema="_SYS_RT", Name="_UIS_AUDIT_LOG")]
	public partial class _SYS_RT_UisAuditLog
	{
		[Column(),            NotNull] public DateTime TIMESTAMP { get; set; } // TIMESTAMP
		[Column("USER_NAME"), NotNull] public string   UserName  { get; set; } = null!; // NVARCHAR(256)
		[Column(),            NotNull] public string   HOST      { get; set; } = null!; // NVARCHAR(2048)
		[Column(),            NotNull] public string   MESSAGE   { get; set; } = null!; // NCLOB
		[Column(),            NotNull] public string   STATUS    { get; set; } = null!; // VARCHAR(128)
	}

	[Table(Schema="_SYS_RT", Name="_UIS_PAGES")]
	public partial class _SYS_RT_UisPage
	{
		[Column(),                    PrimaryKey(4), NotNull] public string    ID              { get; set; } = null!; // VARCHAR(50)
		[Column("TENANT_ID"),         PrimaryKey(1), NotNull] public string    TenantId        { get; set; } = null!; // VARCHAR(50)
		[Column(),                    PrimaryKey(2), NotNull] public string    DTYPE           { get; set; } = null!; // VARCHAR(20)
		[Column("SITE_ID"),           PrimaryKey(3), NotNull] public string    SiteId          { get; set; } = null!; // NVARCHAR(2000)
		[Column("PARENT_ID"),            Nullable           ] public string?   ParentId        { get; set; } // VARCHAR(50)
		[Column(),                       Nullable           ] public string?   NAME            { get; set; } // NVARCHAR(300)
		[Column(),                       Nullable           ] public string?   DESCRIPTION     { get; set; } // NVARCHAR(5000)
		[Column(),                       Nullable           ] public string?   LAYOUT          { get; set; } // CLOB
		[Column("LAYOUT_ID"),            Nullable           ] public string?   LayoutId        { get; set; } // VARCHAR(50)
		[Column(),                       Nullable           ] public string?   ALIAS           { get; set; } // NVARCHAR(5000)
		[Column(),                       Nullable           ] public int?      VERSION         { get; set; } // INTEGER
		[Column(),                       Nullable           ] public DateTime? CREATED         { get; set; } // TIMESTAMP
		[Column(),                       Nullable           ] public DateTime? UPDATED         { get; set; } // TIMESTAMP
		[Column("UPDATED_BY"),           Nullable           ] public string?   UpdatedBy       { get; set; } // NVARCHAR(300)
		[Column("IS_PERMISSION_HUB"),    Nullable           ] public int?      IsPermissionHub { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_RT", Name="_UIS_PAGE_PROPERTIES")]
	public partial class _SYS_RT_UisPagePROPERTy
	{
		[Column(),             PrimaryKey(5), NotNull] public string    ID        { get; set; } = null!; // VARCHAR(50)
		[Column("SITE_ID"),    PrimaryKey(3), NotNull] public string    SiteId    { get; set; } = null!; // NVARCHAR(2000)
		[Column("PAGE_ID"),    PrimaryKey(4), NotNull] public string    PageId    { get; set; } = null!; // VARCHAR(50)
		[Column(),                            NotNull] public string    KEY       { get; set; } = null!; // NVARCHAR(300)
		[Column("TENANT_ID"),  PrimaryKey(1), NotNull] public string    TenantId  { get; set; } = null!; // VARCHAR(50)
		[Column(),             PrimaryKey(2), NotNull] public string    DTYPE     { get; set; } = null!; // VARCHAR(20)
		[Column(),                Nullable           ] public string?   VALUE     { get; set; } // NVARCHAR(5000)
		[Column("VALUE_TYPE"),    Nullable           ] public string?   ValueType { get; set; } // NVARCHAR(20)
		[Column(),                Nullable           ] public int?      VERSION   { get; set; } // INTEGER
		[Column(),                Nullable           ] public DateTime? CREATED   { get; set; } // TIMESTAMP
		[Column(),                Nullable           ] public DateTime? UPDATED   { get; set; } // TIMESTAMP
		[Column("UPDATED_BY"),    Nullable           ] public string?   UpdatedBy { get; set; } // NVARCHAR(300)
	}

	[Table(Schema="_SYS_RT", Name="_UIS_USER_APPSITES")]
	public partial class _SYS_RT_UisUserAppsite
	{
		[Column(),            PrimaryKey(3), NotNull] public string    ID          { get; set; } = null!; // NVARCHAR(2000)
		[Column("USER_NAME"), PrimaryKey(2), NotNull] public string    UserName    { get; set; } = null!; // NVARCHAR(300)
		[Column("TENANT_ID"), PrimaryKey(1), NotNull] public string    TenantId    { get; set; } = null!; // VARCHAR(50)
		[Column(),               Nullable           ] public string?   NAME        { get; set; } // NVARCHAR(300)
		[Column(),               Nullable           ] public string?   DESCRIPTION { get; set; } // NVARCHAR(5000)
		[Column(),               Nullable           ] public string?   LAYOUT      { get; set; } // CLOB
		[Column(),               Nullable           ] public string?   ALIAS       { get; set; } // NVARCHAR(5000)
		[Column(),               Nullable           ] public int?      VERSION     { get; set; } // INTEGER
		[Column(),               Nullable           ] public DateTime? CREATED     { get; set; } // TIMESTAMP
		[Column(),               Nullable           ] public DateTime? UPDATED     { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_RT", Name="_UIS_USER_APPSITE_PROPERTIES")]
	public partial class _SYS_RT_UisUserAppsitePROPERTy
	{
		[Column(),             PrimaryKey(5), NotNull] public string    ID        { get; set; } = null!; // VARCHAR(50)
		[Column("TENANT_ID"),  PrimaryKey(1), NotNull] public string    TenantId  { get; set; } = null!; // VARCHAR(50)
		[Column("SITE_ID"),    PrimaryKey(3), NotNull] public string    SiteId    { get; set; } = null!; // NVARCHAR(2000)
		[Column("USER_NAME"),  PrimaryKey(2), NotNull] public string    UserName  { get; set; } = null!; // NVARCHAR(300)
		[Column(),             PrimaryKey(4), NotNull] public string    KEY       { get; set; } = null!; // NVARCHAR(300)
		[Column(),                Nullable           ] public string?   VALUE     { get; set; } // NCLOB
		[Column("VALUE_TYPE"),    Nullable           ] public string?   ValueType { get; set; } // NVARCHAR(20)
		[Column(),                Nullable           ] public int?      VERSION   { get; set; } // INTEGER
		[Column(),                Nullable           ] public DateTime? CREATED   { get; set; } // TIMESTAMP
		[Column(),                Nullable           ] public DateTime? UPDATED   { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_RT", Name="_UIS_USER_PAGES")]
	public partial class _SYS_RT_UisUserPage
	{
		[Column(),            PrimaryKey(4), NotNull] public string    ID          { get; set; } = null!; // VARCHAR(50)
		[Column("USER_NAME"), PrimaryKey(2), NotNull] public string    UserName    { get; set; } = null!; // NVARCHAR(300)
		[Column(),               Nullable           ] public string?   NAME        { get; set; } // NVARCHAR(300)
		[Column(),               Nullable           ] public string?   DESCRIPTION { get; set; } // NVARCHAR(5000)
		[Column(),               Nullable           ] public string?   LAYOUT      { get; set; } // CLOB
		[Column("LAYOUT_ID"),    Nullable           ] public string?   LayoutId    { get; set; } // VARCHAR(50)
		[Column("PARENT_ID"),    Nullable           ] public string?   ParentId    { get; set; } // VARCHAR(50)
		[Column("SITE_ID"),   PrimaryKey(3), NotNull] public string    SiteId      { get; set; } = null!; // NVARCHAR(2000)
		[Column("TENANT_ID"), PrimaryKey(1), NotNull] public string    TenantId    { get; set; } = null!; // VARCHAR(50)
		[Column(),               Nullable           ] public int?      VERSION     { get; set; } // INTEGER
		[Column(),               Nullable           ] public string?   ALIAS       { get; set; } // NVARCHAR(5000)
		[Column(),               Nullable           ] public DateTime? CREATED     { get; set; } // TIMESTAMP
		[Column(),               Nullable           ] public DateTime? UPDATED     { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_RT", Name="_UIS_USER_PAGE_PROPERTIES")]
	public partial class _SYS_RT_UisUserPagePROPERTy
	{
		[Column(),             PrimaryKey(5), NotNull] public string    ID        { get; set; } = null!; // VARCHAR(50)
		[Column("TENANT_ID"),  PrimaryKey(1), NotNull] public string    TenantId  { get; set; } = null!; // VARCHAR(50)
		[Column("SITE_ID"),    PrimaryKey(3), NotNull] public string    SiteId    { get; set; } = null!; // NVARCHAR(2000)
		[Column("PAGE_ID"),    PrimaryKey(4), NotNull] public string    PageId    { get; set; } = null!; // VARCHAR(50)
		[Column("USER_NAME"),  PrimaryKey(2), NotNull] public string    UserName  { get; set; } = null!; // NVARCHAR(300)
		[Column(),                            NotNull] public string    KEY       { get; set; } = null!; // NVARCHAR(300)
		[Column(),                Nullable           ] public string?   VALUE     { get; set; } // NVARCHAR(5000)
		[Column("VALUE_TYPE"),    Nullable           ] public string?   ValueType { get; set; } // NVARCHAR(20)
		[Column(),                Nullable           ] public int?      VERSION   { get; set; } // INTEGER
		[Column(),                Nullable           ] public DateTime? CREATED   { get; set; } // TIMESTAMP
		[Column(),                Nullable           ] public DateTime? UPDATED   { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_RT", Name="_UIS_USER_WIDGETS")]
	public partial class _SYS_RT_UisUserWidget
	{
		[Column(),                          PrimaryKey(4), NotNull] public string    ID                   { get; set; } = null!; // VARCHAR(50)
		[Column("USER_NAME"),               PrimaryKey(2), NotNull] public string    UserName             { get; set; } = null!; // NVARCHAR(300)
		[Column(),                             Nullable           ] public string?   NAME                 { get; set; } // NVARCHAR(300)
		[Column(),                             Nullable           ] public string?   DESCRIPTION          { get; set; } // NVARCHAR(5000)
		[Column(),                             Nullable           ] public string?   SRC                  { get; set; } // VARCHAR(5000)
		[Column(),                             Nullable           ] public string?   ICON                 { get; set; } // CLOB
		[Column(),                             Nullable           ] public DateTime? UPDATED              { get; set; } // TIMESTAMP
		[Column("TEMPLATE_ID"),                Nullable           ] public string?   TemplateId           { get; set; } // NVARCHAR(5000)
		[Column("WIDGET_TEMPLATE_LIST_ID"),    Nullable           ] public string?   WidgetTemplateListId { get; set; } // NVARCHAR(2000)
		[Column(),                             Nullable           ] public string?   TYPE                 { get; set; } // NVARCHAR(300)
		[Column("SITE_ID"),                 PrimaryKey(3), NotNull] public string    SiteId               { get; set; } = null!; // NVARCHAR(2000)
		[Column("LAYOUT_ID"),                  Nullable           ] public string?   LayoutId             { get; set; } // VARCHAR(50)
		[Column("TENANT_ID"),               PrimaryKey(1), NotNull] public string    TenantId             { get; set; } = null!; // VARCHAR(50)
		[Column("PARENT_ID"),                  Nullable           ] public string?   ParentId             { get; set; } // VARCHAR(50)
		[Column(),                             Nullable           ] public int?      VERSION              { get; set; } // INTEGER
		[Column(),                             Nullable           ] public DateTime? CREATED              { get; set; } // TIMESTAMP
	}

	[Table(Schema="_SYS_RT", Name="_UIS_USER_WIDGET_PROPERTIES")]
	public partial class _SYS_RT_UisUserWidgetPROPERTy
	{
		[Column(),             PrimaryKey(5), NotNull] public string    ID        { get; set; } = null!; // VARCHAR(50)
		[Column("USER_NAME"),  PrimaryKey(2), NotNull] public string    UserName  { get; set; } = null!; // NVARCHAR(300)
		[Column("WIDGET_ID"),  PrimaryKey(4), NotNull] public string    WidgetId  { get; set; } = null!; // VARCHAR(50)
		[Column(),                            NotNull] public string    KEY       { get; set; } = null!; // NVARCHAR(300)
		[Column(),                Nullable           ] public string?   VALUE     { get; set; } // NVARCHAR(5000)
		[Column("SITE_ID"),    PrimaryKey(3), NotNull] public string    SiteId    { get; set; } = null!; // NVARCHAR(2000)
		[Column("TENANT_ID"),  PrimaryKey(1), NotNull] public string    TenantId  { get; set; } = null!; // VARCHAR(50)
		[Column(),                Nullable           ] public int?      VERSION   { get; set; } // INTEGER
		[Column(),                Nullable           ] public DateTime? CREATED   { get; set; } // TIMESTAMP
		[Column(),                Nullable           ] public DateTime? UPDATED   { get; set; } // TIMESTAMP
		[Column("VALUE_TYPE"),    Nullable           ] public string?   ValueType { get; set; } // NVARCHAR(20)
	}

	[Table(Schema="_SYS_RT", Name="_UIS_WIDGETS")]
	public partial class _SYS_RT_UisWidget
	{
		[Column(),                          PrimaryKey(4), NotNull] public string    ID                   { get; set; } = null!; // VARCHAR(50)
		[Column(),                             Nullable           ] public string?   NAME                 { get; set; } // NVARCHAR(300)
		[Column(),                             Nullable           ] public string?   DESCRIPTION          { get; set; } // NVARCHAR(5000)
		[Column(),                             Nullable           ] public string?   SRC                  { get; set; } // VARCHAR(5000)
		[Column(),                             Nullable           ] public string?   ICON                 { get; set; } // CLOB
		[Column("TEMPLATE_ID"),                Nullable           ] public string?   TemplateId           { get; set; } // NVARCHAR(5000)
		[Column("WIDGET_TEMPLATE_LIST_ID"),    Nullable           ] public string?   WidgetTemplateListId { get; set; } // NVARCHAR(2000)
		[Column(),                             Nullable           ] public string?   TYPE                 { get; set; } // NVARCHAR(300)
		[Column("TENANT_ID"),               PrimaryKey(1), NotNull] public string    TenantId             { get; set; } = null!; // VARCHAR(50)
		[Column(),                          PrimaryKey(2), NotNull] public string    DTYPE                { get; set; } = null!; // VARCHAR(20)
		[Column("SITE_ID"),                 PrimaryKey(3), NotNull] public string    SiteId               { get; set; } = null!; // NVARCHAR(2000)
		[Column("PARENT_ID"),                  Nullable           ] public string?   ParentId             { get; set; } // VARCHAR(50)
		[Column("LAYOUT_ID"),                  Nullable           ] public string?   LayoutId             { get; set; } // VARCHAR(50)
		[Column(),                             Nullable           ] public int?      VERSION              { get; set; } // INTEGER
		[Column(),                             Nullable           ] public DateTime? CREATED              { get; set; } // TIMESTAMP
		[Column(),                             Nullable           ] public DateTime? UPDATED              { get; set; } // TIMESTAMP
		[Column("UPDATED_BY"),                 Nullable           ] public string?   UpdatedBy            { get; set; } // NVARCHAR(300)
	}

	[Table(Schema="_SYS_RT", Name="_UIS_WIDGET_PROPERTIES")]
	public partial class _SYS_RT_UisWidgetPROPERTy
	{
		[Column(),             PrimaryKey(5), NotNull] public string    ID        { get; set; } = null!; // VARCHAR(50)
		[Column("WIDGET_ID"),  PrimaryKey(4), NotNull] public string    WidgetId  { get; set; } = null!; // VARCHAR(50)
		[Column(),                            NotNull] public string    KEY       { get; set; } = null!; // NVARCHAR(300)
		[Column(),                Nullable           ] public string?   VALUE     { get; set; } // NVARCHAR(5000)
		[Column("SITE_ID"),    PrimaryKey(3), NotNull] public string    SiteId    { get; set; } = null!; // NVARCHAR(2000)
		[Column("TENANT_ID"),  PrimaryKey(1), NotNull] public string    TenantId  { get; set; } = null!; // VARCHAR(50)
		[Column(),             PrimaryKey(2), NotNull] public string    DTYPE     { get; set; } = null!; // VARCHAR(20)
		[Column(),                Nullable           ] public int?      VERSION   { get; set; } // INTEGER
		[Column(),                Nullable           ] public DateTime? CREATED   { get; set; } // TIMESTAMP
		[Column(),                Nullable           ] public DateTime? UPDATED   { get; set; } // TIMESTAMP
		[Column("UPDATED_BY"),    Nullable           ] public string?   UpdatedBy { get; set; } // NVARCHAR(300)
		[Column("VALUE_TYPE"),    Nullable           ] public string?   ValueType { get; set; } // NVARCHAR(20)
	}

	[Table(Schema="_SYS_RT", Name="_UIS_WIDGET_TEMPLATES")]
	public partial class _SYS_RT_UisWidgetTemplate
	{
		[Column(),                PrimaryKey(3), NotNull] public string    ID           { get; set; } = null!; // VARCHAR(50)
		[Column("TENANT_ID"),     PrimaryKey(1), NotNull] public string    TenantId     { get; set; } = null!; // VARCHAR(50)
		[Column("REPOSITORY_ID"), PrimaryKey(2), NotNull] public string    RepositoryId { get; set; } = null!; // NVARCHAR(2000)
		[Column(),                   Nullable           ] public string?   NAME         { get; set; } // NVARCHAR(300)
		[Column(),                   Nullable           ] public string?   DESCRIPTION  { get; set; } // NVARCHAR(5000)
		[Column(),                   Nullable           ] public string?   SPECXMLURL   { get; set; } // NVARCHAR(5000)
		[Column(),                   Nullable           ] public string?   THUMBNAIL    { get; set; } // CLOB
		[Column(),                   Nullable           ] public string?   CATEGORIES   { get; set; } // VARCHAR(300)
		[Column(),                   Nullable           ] public string?   TYPE         { get; set; } // NVARCHAR(300)
		[Column(),                   Nullable           ] public int?      VERSION      { get; set; } // INTEGER
		[Column(),                   Nullable           ] public DateTime? CREATED      { get; set; } // TIMESTAMP
		[Column(),                   Nullable           ] public DateTime? UPDATED      { get; set; } // TIMESTAMP
		[Column("UPDATED_BY"),       Nullable           ] public string?   UpdatedBy    { get; set; } // NVARCHAR(300)
	}

	[Table(Schema="_SYS_RT", Name="_UIS_WIDGET_TEMPLATE_LISTS")]
	public partial class _SYS_RT_UisWidgetTemplateList
	{
		[Column("TENANT_ID"),     PrimaryKey(1), NotNull] public string  TenantId     { get; set; } = null!; // VARCHAR(50)
		[Column("REPOSITORY_ID"), PrimaryKey(2), NotNull] public string  RepositoryId { get; set; } = null!; // NVARCHAR(2000)
		[Column(),                   Nullable           ] public string? NAME         { get; set; } // NVARCHAR(300)
		[Column(),                   Nullable           ] public string? TYPE         { get; set; } // VARCHAR(10)
		[Column(),                   Nullable           ] public int?    VERSION      { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_RT", Name="_UIS_WIDGET_TEMPLATE_PROPERTIES")]
	public partial class _SYS_RT_UisWidgetTemplatePROPERTy
	{
		[Column(),                     PrimaryKey(5), NotNull] public string  ID               { get; set; } = null!; // VARCHAR(50)
		[Column("TENANT_ID"),          PrimaryKey(1), NotNull] public string  TenantId         { get; set; } = null!; // VARCHAR(50)
		[Column("REPOSITORY_ID"),      PrimaryKey(2), NotNull] public string  RepositoryId     { get; set; } = null!; // NVARCHAR(2000)
		[Column("WIDGET_TEMPLATE_ID"), PrimaryKey(3), NotNull] public string  WidgetTemplateId { get; set; } = null!; // VARCHAR(50)
		[Column(),                     PrimaryKey(4), NotNull] public string  KEY              { get; set; } = null!; // NVARCHAR(300)
		[Column(),                        Nullable           ] public string? VALUE            { get; set; } // NVARCHAR(5000)
		[Column("VALUE_TYPE"),            Nullable           ] public string? ValueType        { get; set; } // NVARCHAR(20)
		[Column(),                        Nullable           ] public int?    VERSION          { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_XS", Name="USAGE_MEASURING_OBJECTS")]
	public partial class _SYS_XS_UsageMeasuringObject
	{
		[PrimaryKey(1), NotNull] public string APP  { get; set; } = null!; // NVARCHAR(256)
		[PrimaryKey(2), NotNull] public string NAME { get; set; } = null!; // NVARCHAR(1024)
	}

	[Table(Schema="_SYS_XS", Name="USAGE_STATISTICS")]
	public partial class _SYS_XS_UsageStatistic
	{
		[Column("APPLICATION_NAME"), NotNull] public string   ApplicationName { get; set; } = null!; // NVARCHAR(256)
		[Column(),                   NotNull] public DateTime UNTIL           { get; set; } // TIMESTAMP
		[Column(),                   NotNull] public long     COUNTER         { get; set; } // BIGINT
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="VARIABLE_TRACE_")]
	public partial class _SYS_SQL_ANALYZER_VariableTrace
	{
		[Column("USER_NAME"),              Nullable] public string? UserName             { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"), Nullable] public string? StatementExecutionId { get; set; } // VARCHAR(32)
		[Column("VARIABLE_ID"),            Nullable] public string? VariableId           { get; set; } // VARCHAR(256)
		[Column("VARIABLE_NAME"),          Nullable] public string? VariableName         { get; set; } // NVARCHAR(256)
		[Column("VARIABLE_TYPE"),          Nullable] public string? VariableType         { get; set; } // VARCHAR(256)
		[Column("VARIABLE_SSA_NAME"),      Nullable] public string? VariableSsaName      { get; set; } // NVARCHAR(512)
		[Column("VARIABLE_VALUE"),         Nullable] public string? VariableValue        { get; set; } // VARCHAR(256)
		[Column("VARIABLE_ORDER"),         Nullable] public int?    VariableOrder        { get; set; } // INTEGER
		[Column("OPERATOR_ID"),            Nullable] public string? OperatorId           { get; set; } // VARCHAR(256)
	}

	[Table(Schema="_SYS_SQL_ANALYZER", Name="VARIABLE_TRACE", IsView=true)]
	public partial class _SYS_SQL_ANALYZER_VariableTrace0
	{
		[Column("USER_NAME"),              Nullable] public string? UserName             { get; set; } // NVARCHAR(256)
		[Column("STATEMENT_EXECUTION_ID"), Nullable] public string? StatementExecutionId { get; set; } // VARCHAR(32)
		[Column("VARIABLE_ID"),            Nullable] public string? VariableId           { get; set; } // VARCHAR(256)
		[Column("VARIABLE_NAME"),          Nullable] public string? VariableName         { get; set; } // NVARCHAR(256)
		[Column("VARIABLE_TYPE"),          Nullable] public string? VariableType         { get; set; } // VARCHAR(256)
		[Column("VARIABLE_SSA_NAME"),      Nullable] public string? VariableSsaName      { get; set; } // NVARCHAR(512)
		[Column("VARIABLE_VALUE"),         Nullable] public string? VariableValue        { get; set; } // VARCHAR(256)
		[Column("VARIABLE_ORDER"),         Nullable] public int?    VariableOrder        { get; set; } // INTEGER
		[Column("OPERATOR_ID"),            Nullable] public string? OperatorId           { get; set; } // VARCHAR(256)
	}

	[Table(Schema="_SYS_EPM", Name="VERSIONS")]
	public partial class _SYS_EPM_VERSION
	{
		[Column("USER_NAME"),        PrimaryKey(1), NotNull] public string    UserName       { get; set; } = null!; // NVARCHAR(256)
		[Column("SCHEMA_NAME"),      PrimaryKey(2), NotNull] public string    SchemaName     { get; set; } = null!; // NVARCHAR(256)
		[Column("MODEL_NAME"),       PrimaryKey(3), NotNull] public string    ModelName      { get; set; } = null!; // NVARCHAR(256)
		[Column("VERSION"),          PrimaryKey(4), NotNull] public int       VERSIONColumn  { get; set; } // INTEGER
		[Column(),                      Nullable           ] public string?   COMMENTS       { get; set; } // NVARCHAR(1024)
		[Column("VOLUME_ID"),           Nullable           ] public int?      VolumeId       { get; set; } // INTEGER
		[Column(),                      Nullable           ] public int?      STATUS         { get; set; } // INTEGER
		[Column("CREATE_TIME"),         Nullable           ] public DateTime? CreateTime     { get; set; } // TIMESTAMP
		[Column("LAST_CHANGE_TIME"),    Nullable           ] public DateTime? LastChangeTime { get; set; } // TIMESTAMP
		[Column(),                      Nullable           ] public string?   PARAMETERS     { get; set; } // NCLOB
		[Column("PDC_PERSISTENCE"),     Nullable           ] public int?      PdcPersistence { get; set; } // INTEGER
		[Column("CHANGE_COUNT"),        Nullable           ] public int?      ChangeCount    { get; set; } // INTEGER
		[Column("UNDO_STEPS"),          Nullable           ] public int?      UndoSteps      { get; set; } // INTEGER
		[Column("MIGRATION_ID"),        Nullable           ] public int?      MigrationId    { get; set; } // INTEGER
	}

	[Table(Schema="_SYS_EPM", Name="VERSION_PRIVILEGES")]
	public partial class _SYS_EPM_VersionPrivilege
	{
		[Column(),                      PrimaryKey(1), NotNull] public string GRANTOR           { get; set; } = null!; // NVARCHAR(256)
		[Column("MODEL_SCHEMA"),        PrimaryKey(2), NotNull] public string ModelSchema       { get; set; } = null!; // NVARCHAR(256)
		[Column("MODEL_NAME"),          PrimaryKey(3), NotNull] public string ModelName         { get; set; } = null!; // NVARCHAR(256)
		[Column("QUERY_SOURCE_SCHEMA"), PrimaryKey(4), NotNull] public string QuerySourceSchema { get; set; } = null!; // NVARCHAR(256)
		[Column("QUERY_SOURCE_NAME"),   PrimaryKey(5), NotNull] public string QuerySourceName   { get; set; } = null!; // NVARCHAR(256)
		[Column(),                      PrimaryKey(6), NotNull] public int    VERSION           { get; set; } // INTEGER
		[Column(),                      PrimaryKey(7), NotNull] public string GRANTEE           { get; set; } = null!; // NVARCHAR(256)
		[Column(),                      PrimaryKey(8), NotNull] public string PRIVILEGE         { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="_SYS_EPM", Name="VERSION_STATES")]
	public partial class _SYS_EPM_VersionState
	{
		[Column("USER_NAME"),   PrimaryKey(1), NotNull] public string  UserName   { get; set; } = null!; // NVARCHAR(256)
		[Column("SCHEMA_NAME"), PrimaryKey(2), NotNull] public string  SchemaName { get; set; } = null!; // NVARCHAR(256)
		[Column("MODEL_NAME"),  PrimaryKey(3), NotNull] public string  ModelName  { get; set; } = null!; // NVARCHAR(256)
		[Column(),              PrimaryKey(4), NotNull] public int     VERSION    { get; set; } // INTEGER
		[Column("TABLE_NAME"),     Nullable           ] public string? TableName  { get; set; } // NVARCHAR(256)
	}

	[Table(Schema="_SYS_XS", Name="XSJS_USAGE")]
	public partial class _SYS_XS_XsjsUsage
	{
		[Column, NotNull] public string   FEATURE   { get; set; } = null!; // NVARCHAR(1024)
		[Column, NotNull] public double   TRAFFIC   { get; set; } // DOUBLE
		[Column, NotNull] public DateTime TIMESTAMP { get; set; } // TIMESTAMP
		[Column, NotNull] public string   APP       { get; set; } = null!; // NVARCHAR(256)
	}

	[Table(Schema="_SYS_BIC", Name="sap.hana.uis.db/GET_NAVIGATION_TARGET_DATA", IsView=true)]
	public partial class _SYS_BIC_SapHanaUisDbGetNavigationTargetData
	{
		[Column("TENANT_ID"),        Nullable] public string? TenantId         { get; set; } // VARCHAR(50)
		[Column("id"),               Nullable] public string? Id               { get; set; } // VARCHAR(256)
		[Column("applicationType"),  Nullable] public string? ApplicationType  { get; set; } // VARCHAR(50)
		[Column("applicationData"),  Nullable] public string? ApplicationData  { get; set; } // VARCHAR(512)
		[Column("postParameters"),   Nullable] public string? PostParameters   { get; set; } // NVARCHAR(5000)
		[Column("text"),             Nullable] public string? Text             { get; set; } // NVARCHAR(2000)
		[Column("applicationAlias"), Nullable] public string? ApplicationAlias { get; set; } // VARCHAR(100)
		[Column("url"),              Nullable] public string? Url              { get; set; } // NVARCHAR(5000)
	}

	public static partial class HXEDBStoredProcedures
	{
		#region FindNologgingTable

		public static int FindNologgingTable(this HXEDB dataConnection, string? SCHEMANAME, string? TABLENAME, out int? RESULT)
		{
			var ret = dataConnection.ExecuteProc("\"SYS\".\"FIND_NOLOGGING_TABLE\"",
				new DataParameter("SCHEMANAME", SCHEMANAME, DataType.VarChar),
				new DataParameter("TABLENAME", TABLENAME, DataType.VarChar),
				new DataParameter("RESULT", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			RESULT = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["RESULT"]).Value);

			return ret;
		}

		#endregion

		#region DsoRehash

		public static int DsoRehash(this HXEDB dataConnection, string? DSONAME, string? HASHFUNCTION)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"DSO_REHASH\"",
				new DataParameter("DSONAME",      DSONAME,      DataType.VarChar),
				new DataParameter("HASHFUNCTION", HASHFUNCTION, DataType.VarChar));
		}

		#endregion

		#region DsoVersion

		public static int DsoVersion(this HXEDB dataConnection, out string? DSOVERSION)
		{
			var ret = dataConnection.ExecuteProc("\"SYS\".\"DSO_VERSION\"",
				new DataParameter("DSOVERSION", null, DataType.VarChar) { Direction = ParameterDirection.Output, Size = 20 });

			DSOVERSION = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["DSOVERSION"]).Value);

			return ret;
		}

		#endregion

		#region ResetCeDebugJsons

		public static int ResetCeDebugJsons(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"RESET_CE_DEBUG_JSONS\"");
		}

		#endregion

		#region ResetCeDebugNodeMapping

		public static int ResetCeDebugNodeMapping(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"RESET_CE_DEBUG_NODE_MAPPING\"");
		}

		#endregion

		#region ResetCeDebugInfos

		public static int ResetCeDebugInfos(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"RESET_CE_DEBUG_INFOS\"");
		}

		#endregion

		#region TruncateProcedureObjects

		public static int TruncateProcedureObjects(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"TRUNCATE_PROCEDURE_OBJECTS\"");
		}

		#endregion

		#region TruncateSqlscriptTrace

		public static int TruncateSqlscriptTrace(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"TRUNCATE_SQLSCRIPT_TRACE\"");
		}

		#endregion

		#region UnsetSqlscriptTrace

		public static int UnsetSqlscriptTrace(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"UNSET_SQLSCRIPT_TRACE\"");
		}

		#endregion

		#region GetObjectDefinition

		public static IEnumerable<GetObjectDEFINITIONResult> GetObjectDefinition(this HXEDB dataConnection, string? SCHEMA, string? OBJECT)
		{
			return dataConnection.QueryProc<GetObjectDEFINITIONResult>("\"SYS\".\"GET_OBJECT_DEFINITION\"",
				new DataParameter("SCHEMA", SCHEMA, DataType.NVarChar),
				new DataParameter("OBJECT", OBJECT, DataType.NVarChar));
		}

		public partial class GetObjectDEFINITIONResult
		{
			public string? SCHEMA_NAME               { get; set; }
			public string? OBJECT_NAME               { get; set; }
			public string? OBJECT_TYPE               { get; set; }
			public string? OBJECT_OID                { get; set; }
			public string? OBJECT_CREATION_STATEMENT { get; set; }
		}

		#endregion

		#region ReorgGenerate

		public static int ReorgGenerate(this HXEDB dataConnection, int? ALGORITHM, byte[]? PARAMS)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"REORG_GENERATE\"",
				new DataParameter("ALGORITHM", ALGORITHM, DataType.Int32),
				new DataParameter("PARAMS",    PARAMS,    DataType.Blob));
		}

		#endregion

		#region ReorgExecute

		public static int ReorgExecute(this HXEDB dataConnection, out int? REORG_ID)
		{
			var ret = dataConnection.ExecuteProc("\"SYS\".\"REORG_EXECUTE\"",
				new DataParameter("REORG_ID", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			REORG_ID = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["REORG_ID"]).Value);

			return ret;
		}

		#endregion

		#region ReorgClearLogs

		public static int ReorgClearLogs(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"REORG_CLEAR_LOGS\"");
		}

		#endregion

		#region AnalyzeColumnsToMaterialize

		public static IEnumerable<AnalyzeColumnsToMATERIALIZEResult> AnalyzeColumnsToMaterialize(this HXEDB dataConnection, string? SELECT_STMT)
		{
			return dataConnection.QueryProc<AnalyzeColumnsToMATERIALIZEResult>("\"SYS\".\"ANALYZE_COLUMNS_TO_MATERIALIZE\"",
				new DataParameter("SELECT_STMT", SELECT_STMT, DataType.Text));
		}

		public partial class AnalyzeColumnsToMATERIALIZEResult
		{
			public string? SCHEMA_NAME              { get; set; }
			public string? TABLE_NAME               { get; set; }
			public string? EXPRESSION               { get; set; }
			public string? RESULT_TYPE              { get; set; }
			public int?    RESULT_LENGTH            { get; set; }
			public int?    RESULT_SCALE             { get; set; }
			public string? USAGE                    { get; set; }
			public string? ALREADY_EXISTS           { get; set; }
			public string? MATERIALIZED_COLUMN_NAME { get; set; }
		}

		#endregion

		#region GetTypeMap

		public static IEnumerable<GetTypeMAPResult> GetTypeMap(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<GetTypeMAPResult>("\"SYS\".\"GET_TYPE_MAP\"");
		}

		public partial class GetTypeMAPResult
		{
			public string? TYPE_CODE           { get; set; }
			public string? TYPE_NAME           { get; set; }
			public string? EVAL_TYPE_NAME      { get; set; }
			public string? TYPE_SIZE           { get; set; }
			public string? TYPE_ALIGNMENT      { get; set; }
			public string? TYPE_DISPLAY_LENGTH { get; set; }
		}

		#endregion

		#region GetFunctionMap

		public static IEnumerable<GetFunctionMAPResult> GetFunctionMap(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<GetFunctionMAPResult>("\"SYS\".\"GET_FUNCTION_MAP\"");
		}

		public partial class GetFunctionMAPResult
		{
			public string? FUNCTION_NAME { get; set; }
			public string? RETURN_TYPE   { get; set; }
			public string? ARGUMENT_TYPE { get; set; }
		}

		#endregion

		#region GetFunctionDictionaryFromRsToCsEngine

		public static IEnumerable<GetFunctionDictionaryFromRsToCsENGINEResult> GetFunctionDictionaryFromRsToCsEngine(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<GetFunctionDictionaryFromRsToCsENGINEResult>("\"SYS\".\"GET_FUNCTION_DICTIONARY_FROM_RS_TO_CS_ENGINE\"");
		}

		public partial class GetFunctionDictionaryFromRsToCsENGINEResult
		{
			public string? FUNCTION_NAME { get; set; }
			public string? USE_TEMPLATE  { get; set; }
			public string? TEMPLATE      { get; set; }
		}

		#endregion

		#region GetFunctionsForRsCsEngines

		public static IEnumerable<GetFunctionsForRsCsENGINESResult> GetFunctionsForRsCsEngines(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<GetFunctionsForRsCsENGINESResult>("\"SYS\".\"GET_FUNCTIONS_FOR_RS_CS_ENGINES\"");
		}

		public partial class GetFunctionsForRsCsENGINESResult
		{
			public string? FUNCTION_NAME { get; set; }
			public string? RETURN_TYPE   { get; set; }
			public string? ARGUMENT_TYPE { get; set; }
		}

		#endregion

		#region GetFunctionsForRsEngineOnly

		public static IEnumerable<GetFunctionsForRsEngineONLYResult> GetFunctionsForRsEngineOnly(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<GetFunctionsForRsEngineONLYResult>("\"SYS\".\"GET_FUNCTIONS_FOR_RS_ENGINE_ONLY\"");
		}

		public partial class GetFunctionsForRsEngineONLYResult
		{
			public string? FUNCTION_NAME { get; set; }
			public string? RETURN_TYPE   { get; set; }
			public string? ARGUMENT_TYPE { get; set; }
		}

		#endregion

		#region CheckFunctionFromRsToCsEngine

		public static IEnumerable<CheckFunctionFromRsToCsENGINEResult> CheckFunctionFromRsToCsEngine(this HXEDB dataConnection, string? FUNCTION_NAME)
		{
			return dataConnection.QueryProc<CheckFunctionFromRsToCsENGINEResult>("\"SYS\".\"CHECK_FUNCTION_FROM_RS_TO_CS_ENGINE\"",
				new DataParameter("FUNCTION_NAME", FUNCTION_NAME, DataType.VarChar));
		}

		public partial class CheckFunctionFromRsToCsENGINEResult
		{
			public string? FUNCTION_NAME { get; set; }
			public string? USE_TEMPLATE  { get; set; }
			public string? TEMPLATE      { get; set; }
		}

		#endregion

		#region GetDbversionAndGithashForAutomigration

		public static IEnumerable<GetDbversionAndGithashForAUTOMIGRATIONResult> GetDbversionAndGithashForAutomigration(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<GetDbversionAndGithashForAUTOMIGRATIONResult>("\"SYS\".\"GET_DBVERSION_AND_GITHASH_FOR_AUTOMIGRATION\"");
		}

		public partial class GetDbversionAndGithashForAUTOMIGRATIONResult
		{
			public string? DB_VERSION { get; set; }
			public string? GIT_HASH   { get; set; }
		}

		#endregion

		#region TableStatistics

		public static int TableStatistics(this HXEDB dataConnection, string? TABLE_IN, string? TABLE_OUT)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"TABLE_STATISTICS\"",
				new DataParameter("TABLE_IN",  TABLE_IN,  DataType.NVarChar),
				new DataParameter("TABLE_OUT", TABLE_OUT, DataType.NVarChar));
		}

		#endregion

		#region IsValidUserName

		public static int IsValidUserName(this HXEDB dataConnection, string? USER_NAME, out int? ERROR_CODE, out string? ERROR_MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("\"SYS\".\"IS_VALID_USER_NAME\"",
				new DataParameter("USER_NAME",     USER_NAME,     DataType.NVarChar),
				new DataParameter("ERROR_CODE", null,    DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 },
				new DataParameter("ERROR_MESSAGE", null, DataType.NVarChar) { Direction = ParameterDirection.Output, Size = 128 });

			ERROR_CODE    = Converter.ChangeTypeTo<int?>   (((IDbDataParameter)dataConnection.Command.Parameters["ERROR_CODE"]).   Value);
			ERROR_MESSAGE = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["ERROR_MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region IsValidPassword

		public static int IsValidPassword(this HXEDB dataConnection, string? PASSWORD, out int? ERROR_CODE, out string? ERROR_MESSAGE)
		{
			var ret = dataConnection.ExecuteProc("\"SYS\".\"IS_VALID_PASSWORD\"",
				new DataParameter("PASSWORD",      PASSWORD,      DataType.NVarChar),
				new DataParameter("ERROR_CODE", null,    DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 },
				new DataParameter("ERROR_MESSAGE", null, DataType.NVarChar) { Direction = ParameterDirection.Output, Size = 128 });

			ERROR_CODE    = Converter.ChangeTypeTo<int?>   (((IDbDataParameter)dataConnection.Command.Parameters["ERROR_CODE"]).   Value);
			ERROR_MESSAGE = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["ERROR_MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region GetNextNumberFromNumberRange

		public static int GetNextNumberFromNumberRange(this HXEDB dataConnection, string? SCHEMA_NAME, string? TABLE_NAME, string? CLIENT_ID, string? NUMBER_RANGE, string? NUMBER_RANGE_OBJECT, string? NUMBER_RANGE_SUBOBJECT, string? NUMBER_RANGE_TO_YEAR, int? QUANTITY, int? AUTONOMOUS_TRANSACTION, int? NUMBER_RANGE_CYCLE, decimal? WARNING_PERCENTAGE, out decimal? NEW_NUMBER, out int? NEW_QUANTITY, out int? RC)
		{
			var ret = dataConnection.ExecuteProc("\"SYS\".\"GET_NEXT_NUMBER_FROM_NUMBER_RANGE\"",
				new DataParameter("SCHEMA_NAME",  SCHEMA_NAME,  DataType.NVarChar),
				new DataParameter("TABLE_NAME",   TABLE_NAME,   DataType.NVarChar),
				new DataParameter("CLIENT_ID",    CLIENT_ID,    DataType.NVarChar),
				new DataParameter("NUMBER_RANGE", NUMBER_RANGE, DataType.NVarChar),
				new DataParameter("NUMBER_RANGE_OBJECT", NUMBER_RANGE_OBJECT, DataType.NVarChar),
				new DataParameter("NUMBER_RANGE_SUBOBJECT", NUMBER_RANGE_SUBOBJECT, DataType.NVarChar),
				new DataParameter("NUMBER_RANGE_TO_YEAR", NUMBER_RANGE_TO_YEAR, DataType.NVarChar),
				new DataParameter("QUANTITY",     QUANTITY,     DataType.Int32),
				new DataParameter("AUTONOMOUS_TRANSACTION", AUTONOMOUS_TRANSACTION, DataType.Int32),
				new DataParameter("NUMBER_RANGE_CYCLE", NUMBER_RANGE_CYCLE, DataType.Int32),
				new DataParameter("WARNING_PERCENTAGE", WARNING_PERCENTAGE, DataType.Decimal),
				new DataParameter("NEW_NUMBER", null,   DataType.Decimal) { Direction = ParameterDirection.Output, Size = 65535 },
				new DataParameter("NEW_QUANTITY", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 },
				new DataParameter("RC", null,           DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			NEW_NUMBER   = Converter.ChangeTypeTo<decimal?>(((IDbDataParameter)dataConnection.Command.Parameters["NEW_NUMBER"]).  Value);
			NEW_QUANTITY = Converter.ChangeTypeTo<int?>    (((IDbDataParameter)dataConnection.Command.Parameters["NEW_QUANTITY"]).Value);
			RC           = Converter.ChangeTypeTo<int?>    (((IDbDataParameter)dataConnection.Command.Parameters["RC"]).          Value);

			return ret;
		}

		#endregion

		#region WorkloadCapture

		public static IEnumerable<WorkloadCAPTUREResult> WorkloadCapture(this HXEDB dataConnection, string? ACTION, string? PARAMETERS)
		{
			return dataConnection.QueryProc<WorkloadCAPTUREResult>("\"SYS\".\"WORKLOAD_CAPTURE\"",
				new DataParameter("ACTION",     ACTION,     DataType.VarChar),
				new DataParameter("PARAMETERS", PARAMETERS, DataType.NText));
		}

		public partial class WorkloadCAPTUREResult
		{
			public string? STATUS { get; set; }
			public string? DETAIL { get; set; }
		}

		#endregion

		#region WorkloadReplay

		public static IEnumerable<WorkloadREPLAYResult> WorkloadReplay(this HXEDB dataConnection, string? ACTION, string? PARAMETERS)
		{
			return dataConnection.QueryProc<WorkloadREPLAYResult>("\"SYS\".\"WORKLOAD_REPLAY\"",
				new DataParameter("ACTION",     ACTION,     DataType.VarChar),
				new DataParameter("PARAMETERS", PARAMETERS, DataType.NText));
		}

		public partial class WorkloadREPLAYResult
		{
			public string? STATUS { get; set; }
			public string? DETAIL { get; set; }
		}

		#endregion

		#region TextConfigurationDrop

		public static int TextConfigurationDrop(this HXEDB dataConnection, string? SCHEMA_NAME, string? NAME, string? TYPE)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"TEXT_CONFIGURATION_DROP\"",
				new DataParameter("SCHEMA_NAME", SCHEMA_NAME, DataType.NVarChar),
				new DataParameter("NAME",        NAME,        DataType.NVarChar),
				new DataParameter("TYPE",        TYPE,        DataType.VarChar));
		}

		#endregion

		#region GetDynamicResultCacheImplicitMatchCandidatesInStatement

		public static IEnumerable<GetDynamicResultCacheImplicitMatchCandidatesInSTATEMENTResult> GetDynamicResultCacheImplicitMatchCandidatesInStatement(this HXEDB dataConnection, string? SQL_STATEMENT)
		{
			return dataConnection.QueryProc<GetDynamicResultCacheImplicitMatchCandidatesInSTATEMENTResult>("\"SYS\".\"GET_DYNAMIC_RESULT_CACHE_IMPLICIT_MATCH_CANDIDATES_IN_STATEMENT\"",
				new DataParameter("SQL_STATEMENT", SQL_STATEMENT, DataType.NText));
		}

		public partial class GetDynamicResultCacheImplicitMatchCandidatesInSTATEMENTResult
		{
			public string? RESULT { get; set; }
		}

		#endregion

		#region EpmCreatePublishPrivilege

		public static IEnumerable<EpmCreatePublishPRIVILEGEResult> EpmCreatePublishPrivilege(this HXEDB dataConnection, string? PUBLISH_PRIVILEGE_NAME, string? SCHEMA_NAME, string? OBJECT_NAME, string? FILTER)
		{
			return dataConnection.QueryProc<EpmCreatePublishPRIVILEGEResult>("\"_SYS_EPM\".\"EPM_CREATE_PUBLISH_PRIVILEGE\"",
				new DataParameter("PUBLISH_PRIVILEGE_NAME", PUBLISH_PRIVILEGE_NAME, DataType.NVarChar),
				new DataParameter("SCHEMA_NAME",            SCHEMA_NAME,            DataType.NVarChar),
				new DataParameter("OBJECT_NAME",            OBJECT_NAME,            DataType.NVarChar),
				new DataParameter("FILTER",                 FILTER,                 DataType.NText));
		}

		public partial class EpmCreatePublishPRIVILEGEResult
		{
			public int?    RETURN_CODE { get; set; }
			public string? MESSAGE     { get; set; }
		}

		#endregion

		#region EpmCreatePublishGrant

		public static IEnumerable<EpmCreatePublishGRANTResult> EpmCreatePublishGrant(this HXEDB dataConnection, string? USER_OR_ROLE_NAME, string? PUBLISH_PRIVILEGE_NAME)
		{
			return dataConnection.QueryProc<EpmCreatePublishGRANTResult>("\"_SYS_EPM\".\"EPM_CREATE_PUBLISH_GRANT\"",
				new DataParameter("USER_OR_ROLE_NAME",      USER_OR_ROLE_NAME,      DataType.NVarChar),
				new DataParameter("PUBLISH_PRIVILEGE_NAME", PUBLISH_PRIVILEGE_NAME, DataType.NVarChar));
		}

		public partial class EpmCreatePublishGRANTResult
		{
			public int?    RETURN_CODE { get; set; }
			public string? MESSAGE     { get; set; }
		}

		#endregion

		#region EpmDropPublishPrivilege

		public static IEnumerable<EpmDropPublishPRIVILEGEResult> EpmDropPublishPrivilege(this HXEDB dataConnection, string? PUBLISH_PRIVILEGE_NAME)
		{
			return dataConnection.QueryProc<EpmDropPublishPRIVILEGEResult>("\"_SYS_EPM\".\"EPM_DROP_PUBLISH_PRIVILEGE\"",
				new DataParameter("PUBLISH_PRIVILEGE_NAME", PUBLISH_PRIVILEGE_NAME, DataType.NVarChar));
		}

		public partial class EpmDropPublishPRIVILEGEResult
		{
			public int?    RETURN_CODE { get; set; }
			public string? MESSAGE     { get; set; }
		}

		#endregion

		#region EpmDropPublishGrant

		public static IEnumerable<EpmDropPublishGRANTResult> EpmDropPublishGrant(this HXEDB dataConnection, string? USER_OR_ROLE_NAME, string? PUBLISH_PRIVILEGE_NAME)
		{
			return dataConnection.QueryProc<EpmDropPublishGRANTResult>("\"_SYS_EPM\".\"EPM_DROP_PUBLISH_GRANT\"",
				new DataParameter("USER_OR_ROLE_NAME",      USER_OR_ROLE_NAME,      DataType.NVarChar),
				new DataParameter("PUBLISH_PRIVILEGE_NAME", PUBLISH_PRIVILEGE_NAME, DataType.NVarChar));
		}

		public partial class EpmDropPublishGRANTResult
		{
			public int?    RETURN_CODE { get; set; }
			public string? MESSAGE     { get; set; }
		}

		#endregion

		#region EpmUpdatePublishPrivilege

		public static IEnumerable<EpmUpdatePublishPRIVILEGEResult> EpmUpdatePublishPrivilege(this HXEDB dataConnection, string? PUBLISH_PRIVILEGE_NAME, string? FILTER)
		{
			return dataConnection.QueryProc<EpmUpdatePublishPRIVILEGEResult>("\"_SYS_EPM\".\"EPM_UPDATE_PUBLISH_PRIVILEGE\"",
				new DataParameter("PUBLISH_PRIVILEGE_NAME", PUBLISH_PRIVILEGE_NAME, DataType.NVarChar),
				new DataParameter("FILTER",                 FILTER,                 DataType.NText));
		}

		public partial class EpmUpdatePublishPRIVILEGEResult
		{
			public int?    RETURN_CODE { get; set; }
			public string? MESSAGE     { get; set; }
		}

		#endregion

		#region EpmCeInvoker

		public static int EpmCeInvoker(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"_SYS_EPM\".\"EPM_CE_INVOKER\"");
		}

		#endregion

		#region EpmResetStatistics

		public static int EpmResetStatistics(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"_SYS_EPM\".\"EPM_RESET_STATISTICS\"");
		}

		#endregion

		#region EpmListModelAdmins

		public static IEnumerable<EpmListModelADMINSResult> EpmListModelAdmins(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<EpmListModelADMINSResult>("\"_SYS_EPM\".\"EPM_LIST_MODEL_ADMINS\"");
		}

		public partial class EpmListModelADMINSResult
		{
			public string? USER_NAME { get; set; }
		}

		#endregion

		#region CdsCatalogCleanup

		public static int CdsCatalogCleanup(this HXEDB dataConnection, out byte? SUCCESS, out string? MESSAGE, string? SCHEMA_NAME, string? NAMESPACE_FILTER)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_RT\".\"CDS_CATALOG_CLEANUP\"",
				new DataParameter("SUCCESS", null, DataType.Byte) { Direction = ParameterDirection.Output, Size = 3 },
				new DataParameter("MESSAGE", null, DataType.NVarChar) { Direction = ParameterDirection.Output, Size = 3000 },
				new DataParameter("SCHEMA_NAME", SCHEMA_NAME, DataType.NVarChar),
				new DataParameter("NAMESPACE_FILTER", NAMESPACE_FILTER, DataType.NVarChar));

			SUCCESS = Converter.ChangeTypeTo<byte?>  (((IDbDataParameter)dataConnection.Command.Parameters["SUCCESS"]).Value);
			MESSAGE = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region SearchCatalogCleanup

		public static int SearchCatalogCleanup(this HXEDB dataConnection, out byte? SUCCESS, out string? MESSAGE, string? SCHEMA_NAME)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_RT\".\"SEARCH_CATALOG_CLEANUP\"",
				new DataParameter("SUCCESS", null, DataType.Byte) { Direction = ParameterDirection.Output, Size = 3 },
				new DataParameter("MESSAGE", null, DataType.NVarChar) { Direction = ParameterDirection.Output, Size = 3000 },
				new DataParameter("SCHEMA_NAME", SCHEMA_NAME, DataType.NVarChar));

			SUCCESS = Converter.ChangeTypeTo<byte?>  (((IDbDataParameter)dataConnection.Command.Parameters["SUCCESS"]).Value);
			MESSAGE = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["MESSAGE"]).Value);

			return ret;
		}

		#endregion

		#region DeleteSchemaFromBimcTables

		public static int DeleteSchemaFromBimcTables(this HXEDB dataConnection, string? SCHEMA_NAME)
		{
			return dataConnection.ExecuteProc("\"_SYS_BI\".\"DELETE_SCHEMA_FROM_BIMC_TABLES\"",
				new DataParameter("SCHEMA_NAME", SCHEMA_NAME, DataType.NVarChar));
		}

		#endregion

		#region DuplicateColumnNames

		public static IEnumerable<DuplicateColumnNamesResult> DuplicateColumnNames(this HXEDB dataConnection)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new DuplicateColumnNamesResult
				{
					id      = Converter.ChangeTypeTo<int?>   (dataReader.GetValue(0), ms),
					Column2 = Converter.ChangeTypeTo<string?>(dataReader.GetValue(1), ms),
				},
				"\"TESTHANA\".\"DuplicateColumnNames\"");
		}

		public partial class DuplicateColumnNamesResult
		{
			               public int?    id      { get; set; }
			[Column("id")] public string? Column2 { get; set; }
		}

		#endregion

		#region PrdGlobalEccCvMARAproc

		public static IEnumerable<PrdGlobalEccCvMARAprocResult> PrdGlobalEccCvMARAproc(this HXEDB dataConnection)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new PrdGlobalEccCvMARAprocResult
				{
					id      = Converter.ChangeTypeTo<int?>   (dataReader.GetValue(0), ms),
					Column2 = Converter.ChangeTypeTo<string?>(dataReader.GetValue(1), ms),
				},
				"\"TESTHANA\".\"prd.global.ecc/CV_MARAproc\"");
		}

		public partial class PrdGlobalEccCvMARAprocResult
		{
			               public int?    id      { get; set; }
			[Column("id")] public string? Column2 { get; set; }
		}

		#endregion

		#region DROPEXISTINGTABLE

		public static int DROPEXISTINGTABLE(this HXEDB dataConnection, string? TABLENAME, string? SCHEMANAME)
		{
			return dataConnection.ExecuteProc("\"TESTHANAODBC\".\"DROPEXISTINGTABLE\"",
				new DataParameter("TABLENAME",  TABLENAME,  DataType.VarChar),
				new DataParameter("SCHEMANAME", SCHEMANAME, DataType.VarChar));
		}

		#endregion

		#region DROPEXISTINGPROCEDURE

		public static int DROPEXISTINGPROCEDURE(this HXEDB dataConnection, string? PROCEDURENAME, string? SCHEMANAME)
		{
			return dataConnection.ExecuteProc("\"TESTHANAODBC\".\"DROPEXISTINGPROCEDURE\"",
				new DataParameter("PROCEDURENAME", PROCEDURENAME, DataType.VarChar),
				new DataParameter("SCHEMANAME",    SCHEMANAME,    DataType.VarChar));
		}

		#endregion

		#region DROPEXISTINGFUNCTION

		public static int DROPEXISTINGFUNCTION(this HXEDB dataConnection, string? FUNCTIONNAME, string? SCHEMANAME)
		{
			return dataConnection.ExecuteProc("\"TESTHANAODBC\".\"DROPEXISTINGFUNCTION\"",
				new DataParameter("FUNCTIONNAME", FUNCTIONNAME, DataType.VarChar),
				new DataParameter("SCHEMANAME",   SCHEMANAME,   DataType.VarChar));
		}

		#endregion

		#region DROPEXISTINGVIEW

		public static int DROPEXISTINGVIEW(this HXEDB dataConnection, string? VIEWNAME, string? SCHEMANAME)
		{
			return dataConnection.ExecuteProc("\"TESTHANAODBC\".\"DROPEXISTINGVIEW\"",
				new DataParameter("VIEWNAME",   VIEWNAME,   DataType.VarChar),
				new DataParameter("SCHEMANAME", SCHEMANAME, DataType.VarChar));
		}

		#endregion

		#region DROPCONSTRAINTFROMTABLE

		public static int DROPCONSTRAINTFROMTABLE(this HXEDB dataConnection, string? TABLENAME, string? CONSTRAINTNAME, string? SCHEMANAME)
		{
			return dataConnection.ExecuteProc("\"TESTHANAODBC\".\"DROPCONSTRAINTFROMTABLE\"",
				new DataParameter("TABLENAME",      TABLENAME,      DataType.VarChar),
				new DataParameter("CONSTRAINTNAME", CONSTRAINTNAME, DataType.VarChar),
				new DataParameter("SCHEMANAME",     SCHEMANAME,     DataType.VarChar));
		}

		#endregion

		#region DROPEXISTINGTABLE

		public static int DROPEXISTINGTABLE0(this HXEDB dataConnection, string? TABLENAME, string? SCHEMANAME)
		{
			return dataConnection.ExecuteProc("\"TESTHANA\".\"DROPEXISTINGTABLE\"",
				new DataParameter("TABLENAME",  TABLENAME,  DataType.VarChar),
				new DataParameter("SCHEMANAME", SCHEMANAME, DataType.VarChar));
		}

		#endregion

		#region DROPEXISTINGVIEW

		public static int DROPEXISTINGVIEW0(this HXEDB dataConnection, string? VIEWNAME, string? SCHEMANAME)
		{
			return dataConnection.ExecuteProc("\"TESTHANA\".\"DROPEXISTINGVIEW\"",
				new DataParameter("VIEWNAME",   VIEWNAME,   DataType.VarChar),
				new DataParameter("SCHEMANAME", SCHEMANAME, DataType.VarChar));
		}

		#endregion

		#region DROPCONSTRAINTFROMTABLE

		public static int DROPCONSTRAINTFROMTABLE0(this HXEDB dataConnection, string? TABLENAME, string? CONSTRAINTNAME, string? SCHEMANAME)
		{
			return dataConnection.ExecuteProc("\"TESTHANA\".\"DROPCONSTRAINTFROMTABLE\"",
				new DataParameter("TABLENAME",      TABLENAME,      DataType.VarChar),
				new DataParameter("CONSTRAINTNAME", CONSTRAINTNAME, DataType.VarChar),
				new DataParameter("SCHEMANAME",     SCHEMANAME,     DataType.VarChar));
		}

		#endregion

		#region PersonSelectByKey

		public static IEnumerable<PersonSelectByKeyResult> PersonSelectByKey(this HXEDB dataConnection, int? ID)
		{
			return dataConnection.QueryProc<PersonSelectByKeyResult>("\"TESTHANA\".\"Person_SelectByKey\"",
				new DataParameter("ID", ID, DataType.Int32));
		}

		public partial class PersonSelectByKeyResult
		{
			public int     PersonID   { get; set; }
			public string  FirstName  { get; set; } = null!;
			public string  LastName   { get; set; } = null!;
			public string? MiddleName { get; set; }
			public string  Gender     { get; set; } = null!;
		}

		#endregion

		#region PersonSelectByName

		public static IEnumerable<PersonSelectByNameResult> PersonSelectByName(this HXEDB dataConnection, string? FIRSTNAME, string? LASTNAME)
		{
			return dataConnection.QueryProc<PersonSelectByNameResult>("\"TESTHANA\".\"Person_SelectByName\"",
				new DataParameter("FIRSTNAME", FIRSTNAME, DataType.NVarChar),
				new DataParameter("LASTNAME",  LASTNAME,  DataType.NVarChar));
		}

		public partial class PersonSelectByNameResult
		{
			public int     PersonID   { get; set; }
			public string  FirstName  { get; set; } = null!;
			public string  LastName   { get; set; } = null!;
			public string? MiddleName { get; set; }
			public string  Gender     { get; set; } = null!;
		}

		#endregion

		#region PersonSelectListByName

		public static IEnumerable<PersonSelectListByNameResult> PersonSelectListByName(this HXEDB dataConnection, string? FIRSTNAME, string? LASTNAME)
		{
			return dataConnection.QueryProc<PersonSelectListByNameResult>("\"TESTHANA\".\"Person_SelectListByName\"",
				new DataParameter("FIRSTNAME", FIRSTNAME, DataType.NVarChar),
				new DataParameter("LASTNAME",  LASTNAME,  DataType.NVarChar));
		}

		public partial class PersonSelectListByNameResult
		{
			public int     PersonID   { get; set; }
			public string  FirstName  { get; set; } = null!;
			public string  LastName   { get; set; } = null!;
			public string? MiddleName { get; set; }
			public string  Gender     { get; set; } = null!;
		}

		#endregion

		#region PersonInsert

		public static int PersonInsert(this HXEDB dataConnection, string? FIRSTNAME, string? LASTNAME, string? MIDDLENAME, char? GENDER)
		{
			return dataConnection.ExecuteProc("\"TESTHANA\".\"Person_Insert\"",
				new DataParameter("FIRSTNAME",  FIRSTNAME,  DataType.NVarChar),
				new DataParameter("LASTNAME",   LASTNAME,   DataType.NVarChar),
				new DataParameter("MIDDLENAME", MIDDLENAME, DataType.NVarChar),
				new DataParameter("GENDER",     GENDER,     DataType.Char));
		}

		#endregion

		#region PersonInsertOutputParameter

		public static int PersonInsertOutputParameter(this HXEDB dataConnection, string? FIRSTNAME, string? LASTNAME, string? MIDDLENAME, char? GENDER, out int? PERSONID)
		{
			var ret = dataConnection.ExecuteProc("\"TESTHANA\".\"Person_Insert_OutputParameter\"",
				new DataParameter("FIRSTNAME", FIRSTNAME, DataType.NVarChar),
				new DataParameter("LASTNAME", LASTNAME, DataType.NVarChar),
				new DataParameter("MIDDLENAME", MIDDLENAME, DataType.NVarChar),
				new DataParameter("GENDER",   GENDER,   DataType.Char),
				new DataParameter("PERSONID", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			PERSONID = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["PERSONID"]).Value);

			return ret;
		}

		#endregion

		#region PersonUpdate

		public static int PersonUpdate(this HXEDB dataConnection, int? PERSONID, string? FIRSTNAME, string? LASTNAME, string? MIDDLENAME, char? GENDER)
		{
			return dataConnection.ExecuteProc("\"TESTHANA\".\"Person_Update\"",
				new DataParameter("PERSONID",   PERSONID,   DataType.Int32),
				new DataParameter("FIRSTNAME",  FIRSTNAME,  DataType.NVarChar),
				new DataParameter("LASTNAME",   LASTNAME,   DataType.NVarChar),
				new DataParameter("MIDDLENAME", MIDDLENAME, DataType.NVarChar),
				new DataParameter("GENDER",     GENDER,     DataType.Char));
		}

		#endregion

		#region AflWrapperEraser

		public static int AflWrapperEraser(this HXEDB dataConnection, string? PROCORIG)
		{
			return dataConnection.ExecuteProc("\"SYSTEM\".\"AFL_WRAPPER_ERASER\"",
				new DataParameter("PROCORIG", PROCORIG, DataType.VarChar));
		}

		#endregion

		#region SharedKeyColumnNames

		public static int SharedKeyColumnNames(this HXEDB dataConnection, string? TABLE_NAME, out string? COLUMN_NAMES)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_KEY_COLUMN_NAMES\"",
				new DataParameter("TABLE_NAME",   TABLE_NAME,   DataType.VarChar),
				new DataParameter("COLUMN_NAMES", null, DataType.VarChar) { Direction = ParameterDirection.Output, Size = 5000 });

			COLUMN_NAMES = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["COLUMN_NAMES"]).Value);

			return ret;
		}

		#endregion

		#region StatisticsPrepareCallTimer

		public static int StatisticsPrepareCallTimer(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, int? SCHEDULABLE_ID, out int? CAN_CALL)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"STATISTICS_PREPARE_CALL_TIMER\"",
				new DataParameter("SNAPSHOT_ID", SNAPSHOT_ID, DataType.Timestamp),
				new DataParameter("SCHEDULABLE_ID", SCHEDULABLE_ID, DataType.Int32),
				new DataParameter("CAN_CALL", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			CAN_CALL = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["CAN_CALL"]).Value);

			return ret;
		}

		#endregion

		#region StatisticsPrepareCallManual

		public static int StatisticsPrepareCallManual(this HXEDB dataConnection, int? SCHEDULABLE_ID, out int? CAN_CALL, out DateTime? CALLTIME_UTC)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"STATISTICS_PREPARE_CALL_MANUAL\"",
				new DataParameter("SCHEDULABLE_ID", SCHEDULABLE_ID, DataType.Int32),
				new DataParameter("CAN_CALL", null,     DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 },
				new DataParameter("CALLTIME_UTC", null, DataType.Timestamp) { Direction = ParameterDirection.Output });

			CAN_CALL     = Converter.ChangeTypeTo<int?>     (((IDbDataParameter)dataConnection.Command.Parameters["CAN_CALL"]).    Value);
			CALLTIME_UTC = Converter.ChangeTypeTo<DateTime?>(((IDbDataParameter)dataConnection.Command.Parameters["CALLTIME_UTC"]).Value);

			return ret;
		}

		#endregion

		#region SharedCommonColumnNames

		public static int SharedCommonColumnNames(this HXEDB dataConnection, string? TABLE_NAME1, string? TABLE_NAME2, out string? COLUMN_NAMES)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_COMMON_COLUMN_NAMES\"",
				new DataParameter("TABLE_NAME1",  TABLE_NAME1,  DataType.VarChar),
				new DataParameter("TABLE_NAME2",  TABLE_NAME2,  DataType.VarChar),
				new DataParameter("COLUMN_NAMES", null, DataType.VarChar) { Direction = ParameterDirection.Output, Size = 5000 });

			COLUMN_NAMES = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["COLUMN_NAMES"]).Value);

			return ret;
		}

		#endregion

		#region SharedConstraintColumnNames

		public static int SharedConstraintColumnNames(this HXEDB dataConnection, string? TABLE_NAME1, string? TABLE_NAME2, out string? COLUMN_NAMES)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_CONSTRAINT_COLUMN_NAMES\"",
				new DataParameter("TABLE_NAME1",  TABLE_NAME1,  DataType.VarChar),
				new DataParameter("TABLE_NAME2",  TABLE_NAME2,  DataType.VarChar),
				new DataParameter("COLUMN_NAMES", null, DataType.VarChar) { Direction = ParameterDirection.Output, Size = 5000 });

			COLUMN_NAMES = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["COLUMN_NAMES"]).Value);

			return ret;
		}

		#endregion

		#region StartupPreamble

		public static IEnumerable<StartupPREAMBLEResult> StartupPreamble(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<StartupPREAMBLEResult>("\"_SYS_STATISTICS\".\"STARTUP_PREAMBLE\"");
		}

		public partial class StartupPREAMBLEResult
		{
			[Column("1")] public int? _1 { get; set; }
		}

		#endregion

		#region SharedPrepareCollector

		public static int SharedPrepareCollector(this HXEDB dataConnection, string? ID, string? TABLE_NAME, string? VIEW_COLUMNS, string? SELECT_COLUMNS)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_PREPARE_COLLECTOR\"",
				new DataParameter("ID",             ID,             DataType.VarChar),
				new DataParameter("TABLE_NAME",     TABLE_NAME,     DataType.VarChar),
				new DataParameter("VIEW_COLUMNS",   VIEW_COLUMNS,   DataType.VarChar),
				new DataParameter("SELECT_COLUMNS", SELECT_COLUMNS, DataType.VarChar));
		}

		#endregion

		#region SharedMigrateCollector

		public static int SharedMigrateCollector(this HXEDB dataConnection, string? ID, string? TABLE_NAME, string? SELECT_LIST, string? INSERT_LIST)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_MIGRATE_COLLECTOR\"",
				new DataParameter("ID",          ID,          DataType.VarChar),
				new DataParameter("TABLE_NAME",  TABLE_NAME,  DataType.VarChar),
				new DataParameter("SELECT_LIST", SELECT_LIST, DataType.VarChar),
				new DataParameter("INSERT_LIST", INSERT_LIST, DataType.VarChar));
		}

		#endregion

		#region SharedTruncateCollector

		public static int SharedTruncateCollector(this HXEDB dataConnection, int? ID, string? TABLE_NAME)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_TRUNCATE_COLLECTOR\"",
				new DataParameter("ID",         ID,         DataType.Int32),
				new DataParameter("TABLE_NAME", TABLE_NAME, DataType.VarChar));
		}

		#endregion

		#region SharedMailRecipients

		public static int SharedMailRecipients(this HXEDB dataConnection, int? ALERT_ID, string? FREQUENCY, out string? RECIPIENTS)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_MAIL_RECIPIENTS\"",
				new DataParameter("ALERT_ID",   ALERT_ID,   DataType.Int32),
				new DataParameter("FREQUENCY",  FREQUENCY,  DataType.VarChar),
				new DataParameter("RECIPIENTS", null, DataType.VarChar) { Direction = ParameterDirection.Output, Size = 5000 });

			RECIPIENTS = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["RECIPIENTS"]).Value);

			return ret;
		}

		#endregion

		#region SharedMailBody

		public static int SharedMailBody(this HXEDB dataConnection, string? SNAPSHOT, string? ALERT_NAME, string? RATING, string? DETAILS, string? USER_ACTION, out string? BODY)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_MAIL_BODY\"",
				new DataParameter("SNAPSHOT", SNAPSHOT, DataType.VarChar),
				new DataParameter("ALERT_NAME", ALERT_NAME, DataType.VarChar),
				new DataParameter("RATING", RATING, DataType.VarChar),
				new DataParameter("DETAILS", DETAILS, DataType.VarChar),
				new DataParameter("USER_ACTION", USER_ACTION, DataType.VarChar),
				new DataParameter("BODY", null, DataType.VarChar) { Direction = ParameterDirection.Output, Size = 5000 });

			BODY = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["BODY"]).Value);

			return ret;
		}

		#endregion

		#region SharedColumnComments

		public static int SharedColumnComments(this HXEDB dataConnection, string? SYS_SCHEMA, string? SYS_VIEW, string? STAT_SCHEMA, string? STAT_VIEW)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_COLUMN_COMMENTS\"",
				new DataParameter("SYS_SCHEMA",  SYS_SCHEMA,  DataType.VarChar),
				new DataParameter("SYS_VIEW",    SYS_VIEW,    DataType.VarChar),
				new DataParameter("STAT_SCHEMA", STAT_SCHEMA, DataType.VarChar),
				new DataParameter("STAT_VIEW",   STAT_VIEW,   DataType.VarChar));
		}

		#endregion

		#region SharedWriteInternalAlert

		public static int SharedWriteInternalAlert(this HXEDB dataConnection, DateTime? SNAPSHOTID, string? ALERTDETAILS)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_WRITE_INTERNAL_ALERT\"",
				new DataParameter("SNAPSHOTID",   SNAPSHOTID,   DataType.Timestamp),
				new DataParameter("ALERTDETAILS", ALERTDETAILS, DataType.VarChar));
		}

		#endregion

		#region SharedColumnNames

		public static int SharedColumnNames(this HXEDB dataConnection, string? TABLE_NAME, out string? COLUMN_NAMES)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_COLUMN_NAMES\"",
				new DataParameter("TABLE_NAME",   TABLE_NAME,   DataType.VarChar),
				new DataParameter("COLUMN_NAMES", null, DataType.VarChar) { Direction = ParameterDirection.Output, Size = 5000 });

			COLUMN_NAMES = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["COLUMN_NAMES"]).Value);

			return ret;
		}

		#endregion

		#region SharedViewComments

		public static int SharedViewComments(this HXEDB dataConnection, string? SYS_SCHEMA, string? SYS_VIEW, string? STAT_SCHEMA, string? STAT_VIEW)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_VIEW_COMMENTS\"",
				new DataParameter("SYS_SCHEMA",  SYS_SCHEMA,  DataType.VarChar),
				new DataParameter("SYS_VIEW",    SYS_VIEW,    DataType.VarChar),
				new DataParameter("STAT_SCHEMA", STAT_SCHEMA, DataType.VarChar),
				new DataParameter("STAT_VIEW",   STAT_VIEW,   DataType.VarChar));
		}

		#endregion

		#region SharedAssignComments

		public static int SharedAssignComments(this HXEDB dataConnection, string? SYS_SCHEMA, string? SYS_VIEW, string? SYS_COLUMN, string? STAT_SCHEMA, string? STAT_VIEW, string? STAT_COLUMN)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_ASSIGN_COMMENTS\"",
				new DataParameter("SYS_SCHEMA",  SYS_SCHEMA,  DataType.VarChar),
				new DataParameter("SYS_VIEW",    SYS_VIEW,    DataType.VarChar),
				new DataParameter("SYS_COLUMN",  SYS_COLUMN,  DataType.VarChar),
				new DataParameter("STAT_SCHEMA", STAT_SCHEMA, DataType.VarChar),
				new DataParameter("STAT_VIEW",   STAT_VIEW,   DataType.VarChar),
				new DataParameter("STAT_COLUMN", STAT_COLUMN, DataType.VarChar));
		}

		#endregion

		#region SharedFollowUpActions

		public static int SharedFollowUpActions(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, int? ALERT_ID)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_FOLLOW_UP_ACTIONS\"",
				new DataParameter("SNAPSHOT_ID", SNAPSHOT_ID, DataType.Timestamp),
				new DataParameter("ALERT_ID",    ALERT_ID,    DataType.Int32));
		}

		#endregion

		#region SharedCreateUnionView

		public static int SharedCreateUnionView(this HXEDB dataConnection, string? PREFIX, string? VIEW_NAME, string? SYNONYM_NAME)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_CREATE_UNION_VIEW\"",
				new DataParameter("PREFIX",       PREFIX,       DataType.VarChar),
				new DataParameter("VIEW_NAME",    VIEW_NAME,    DataType.VarChar),
				new DataParameter("SYNONYM_NAME", SYNONYM_NAME, DataType.VarChar));
		}

		#endregion

		#region SharedDropUnionView

		public static int SharedDropUnionView(this HXEDB dataConnection, string? VIEW_NAME, string? SYNONYM_NAME)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_DROP_UNION_VIEW\"",
				new DataParameter("VIEW_NAME",    VIEW_NAME,    DataType.VarChar),
				new DataParameter("SYNONYM_NAME", SYNONYM_NAME, DataType.VarChar));
		}

		#endregion

		#region SharedCopyProfiles

		public static int SharedCopyProfiles(this HXEDB dataConnection, string? OLD_PROFILE, string? NEW_PROFILE)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_COPY_PROFILES\"",
				new DataParameter("OLD_PROFILE", OLD_PROFILE, DataType.VarChar),
				new DataParameter("NEW_PROFILE", NEW_PROFILE, DataType.VarChar));
		}

		#endregion

		#region SharedBuildViews

		public static int SharedBuildViews(this HXEDB dataConnection, string? CMD, string? PREFIX, string? EX_TYPE)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_BUILD_VIEWS\"",
				new DataParameter("CMD",     CMD,     DataType.VarChar),
				new DataParameter("PREFIX",  PREFIX,  DataType.VarChar),
				new DataParameter("EX_TYPE", EX_TYPE, DataType.VarChar));
		}

		#endregion

		#region CollectorHostConnectionStatistics

		public static int CollectorHostConnectionStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_CONNECTION_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region SharedBuildSrViews

		public static int SharedBuildSrViews(this HXEDB dataConnection, string? CMD, string? PREFIX)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_BUILD_SR_VIEWS\"",
				new DataParameter("CMD",    CMD,    DataType.VarChar),
				new DataParameter("PREFIX", PREFIX, DataType.VarChar));
		}

		#endregion

		#region SharedBuildAaViews

		public static int SharedBuildAaViews(this HXEDB dataConnection, string? CMD, string? PREFIX)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_BUILD_AA_VIEWS\"",
				new DataParameter("CMD",    CMD,    DataType.VarChar),
				new DataParameter("PREFIX", PREFIX, DataType.VarChar));
		}

		#endregion

		#region SharedStoreUsedValues

		public static int SharedStoreUsedValues(this HXEDB dataConnection, int? STORE)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_STORE_USED_VALUES\"",
				new DataParameter("STORE", STORE, DataType.Int32));
		}

		#endregion

		#region CollectorHostLongSerializableTransaction

		public static int CollectorHostLongSerializableTransaction(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_LONG_SERIALIZABLE_TRANSACTION\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostOneDayFileCount

		public static int CollectorHostOneDayFileCount(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_ONE_DAY_FILE_COUNT\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostServiceThreadSamples

		public static int CollectorHostServiceThreadSamples(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_SERVICE_THREAD_SAMPLES\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostHeapAllocators

		public static int CollectorHostHeapAllocators(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_HEAP_ALLOCATORS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostSqlPlanCacheOverview

		public static int CollectorHostSqlPlanCacheOverview(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_SQL_PLAN_CACHE_OVERVIEW\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorGlobalRowstoreTablesSize

		public static int CollectorGlobalRowstoreTablesSize(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_GLOBAL_ROWSTORE_TABLES_SIZE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostVolumeIoRetryStatistics

		public static int CollectorHostVolumeIoRetryStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_VOLUME_IO_RETRY_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorGlobalTablePersistenceStatistics

		public static int CollectorGlobalTablePersistenceStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_GLOBAL_TABLE_PERSISTENCE_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostLongIdleCursor

		public static int CollectorHostLongIdleCursor(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_LONG_IDLE_CURSOR\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostServiceComponentMemory

		public static int CollectorHostServiceComponentMemory(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_SERVICE_COMPONENT_MEMORY\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostConnections

		public static int CollectorHostConnections(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_CONNECTIONS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostSavepoints

		public static int CollectorHostSavepoints(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_SAVEPOINTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostColumnTablesPartSize

		public static int CollectorHostColumnTablesPartSize(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_COLUMN_TABLES_PART_SIZE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorGlobalPersistenceStatistics

		public static int CollectorGlobalPersistenceStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_GLOBAL_PERSISTENCE_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostServiceMemory

		public static int CollectorHostServiceMemory(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_SERVICE_MEMORY\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostUncommittedWriteTransaction

		public static int CollectorHostUncommittedWriteTransaction(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_UNCOMMITTED_WRITE_TRANSACTION\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostRecordLocks

		public static int CollectorHostRecordLocks(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_RECORD_LOCKS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorGlobalDecExtractorStatus

		public static int CollectorGlobalDecExtractorStatus(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_GLOBAL_DEC_EXTRACTOR_STATUS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostBlockedTransactions

		public static int CollectorHostBlockedTransactions(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_BLOCKED_TRANSACTIONS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostVolumeFiles

		public static int CollectorHostVolumeFiles(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_VOLUME_FILES\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostServiceStatistics

		public static int CollectorHostServiceStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_SERVICE_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostObjectLocks

		public static int CollectorHostObjectLocks(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_OBJECT_LOCKS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostObjectLockStatistics

		public static int CollectorHostObjectLockStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_OBJECT_LOCK_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostVolumeIoTotalStatistics

		public static int CollectorHostVolumeIoTotalStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_VOLUME_IO_TOTAL_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostVolumeIoDetailedStatistics

		public static int CollectorHostVolumeIoDetailedStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_VOLUME_IO_DETAILED_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorGlobalInternalEvents

		public static int CollectorGlobalInternalEvents(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_GLOBAL_INTERNAL_EVENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorGlobalDisks

		public static int CollectorGlobalDisks(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_GLOBAL_DISKS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostDataVolumePageStatistics

		public static int CollectorHostDataVolumePageStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_DATA_VOLUME_PAGE_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostLongRunningStatements

		public static int CollectorHostLongRunningStatements(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_LONG_RUNNING_STATEMENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostResourceUtilizationStatistics

		public static int CollectorHostResourceUtilizationStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_RESOURCE_UTILIZATION_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostCsUnloads

		public static int CollectorHostCsUnloads(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_CS_UNLOADS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorStreamingProjectsStatistics

		public static int CollectorStreamingProjectsStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_STREAMING_PROJECTS_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorLivecacheOmsversions

		public static int CollectorLivecacheOmsversions(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_LIVECACHE_OMSVERSIONS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostServiceThreadCallstacks

		public static int CollectorHostServiceThreadCallstacks(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_SERVICE_THREAD_CALLSTACKS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorTelHostInformation

		public static int CollectorTelHostInformation(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_TEL_HOST_INFORMATION\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostDeltaMergeStatistics

		public static int CollectorHostDeltaMergeStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_DELTA_MERGE_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostLoadHistoryService

		public static int CollectorHostLoadHistoryService(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_LOAD_HISTORY_SERVICE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostRsIndexes

		public static int CollectorHostRsIndexes(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_RS_INDEXES\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorTelDiskUsage

		public static int CollectorTelDiskUsage(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_TEL_DISK_USAGE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorTelFeatureUsage

		public static int CollectorTelFeatureUsage(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_TEL_FEATURE_USAGE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostDataVolumeSuperblockStatistics

		public static int CollectorHostDataVolumeSuperblockStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_DATA_VOLUME_SUPERBLOCK_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostLogPartitions

		public static int CollectorHostLogPartitions(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_LOG_PARTITIONS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorStreamingStreamsStatistics

		public static int CollectorStreamingStreamsStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_STREAMING_STREAMS_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorTelLogBuffers

		public static int CollectorTelLogBuffers(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_TEL_LOG_BUFFERS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostRsMemory

		public static int CollectorHostRsMemory(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_RS_MEMORY\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostServiceThreadSamplesStatements

		public static int CollectorHostServiceThreadSamplesStatements(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_SERVICE_THREAD_SAMPLES_STATEMENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostServiceReplication

		public static int CollectorHostServiceReplication(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_SERVICE_REPLICATION\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorTelLicense

		public static int CollectorTelLicense(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_TEL_LICENSE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorTelLicenses

		public static int CollectorTelLicenses(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_TEL_LICENSES\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorStreamingPublishersStatistics

		public static int CollectorStreamingPublishersStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_STREAMING_PUBLISHERS_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostWorkload

		public static int CollectorHostWorkload(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_WORKLOAD\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostCsLobSpaceReclaims

		public static int CollectorHostCsLobSpaceReclaims(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_CS_LOB_SPACE_RECLAIMS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostCsIndexes

		public static int CollectorHostCsIndexes(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_CS_INDEXES\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorStreamingProjectConnectionsStatistics

		public static int CollectorStreamingProjectConnectionsStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_STREAMING_PROJECT_CONNECTIONS_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostMvccOverview

		public static int CollectorHostMvccOverview(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_MVCC_OVERVIEW\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorGlobalTableConsistency

		public static int CollectorGlobalTableConsistency(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_GLOBAL_TABLE_CONSISTENCY\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorTelLogSegments

		public static int CollectorTelLogSegments(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_TEL_LOG_SEGMENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorGlobalOutOfMemoryEvents

		public static int CollectorGlobalOutOfMemoryEvents(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_GLOBAL_OUT_OF_MEMORY_EVENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorLivecacheProcedureStatistics

		public static int CollectorLivecacheProcedureStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_LIVECACHE_PROCEDURE_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorTelOutOfMemoryEvents

		public static int CollectorTelOutOfMemoryEvents(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_TEL_OUT_OF_MEMORY_EVENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostDiskUsage

		public static int CollectorHostDiskUsage(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_DISK_USAGE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorLivecacheSchemaStatistics

		public static int CollectorLivecacheSchemaStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_LIVECACHE_SCHEMA_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostServiceNetworkIo

		public static int CollectorHostServiceNetworkIo(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_SERVICE_NETWORK_IO\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostJobHistory

		public static int CollectorHostJobHistory(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_JOB_HISTORY\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorTelSystemOverview

		public static int CollectorTelSystemOverview(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_TEL_SYSTEM_OVERVIEW\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorStreamingSubscribersStatistics

		public static int CollectorStreamingSubscribersStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_STREAMING_SUBSCRIBERS_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorLivecacheContainerStatistics

		public static int CollectorLivecacheContainerStatistics(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_LIVECACHE_CONTAINER_STATISTICS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorGlobalCatalogConsistency

		public static int CollectorGlobalCatalogConsistency(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_GLOBAL_CATALOG_CONSISTENCY\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorHostLoadHistoryHost

		public static int CollectorHostLoadHistoryHost(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_HOST_LOAD_HISTORY_HOST\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region CollectorTelInifileContents

		public static int CollectorTelInifileContents(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, byte? DELETE_HISTORY, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"COLLECTOR_TEL_INIFILE_CONTENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("DELETE_HISTORY", DELETE_HISTORY, DataType.Byte),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region SharedSetRecommendedSp

		public static int SharedSetRecommendedSp(this HXEDB dataConnection, int? SP, DateTime? RELEASE_DATE)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SHARED_SET_RECOMMENDED_SP\"",
				new DataParameter("SP",           SP,           DataType.Int32),
				new DataParameter("RELEASE_DATE", RELEASE_DATE, DataType.Date));
		}

		#endregion

		#region SpecialFunctionEmailManagement

		public static int SpecialFunctionEmailManagement(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SPECIAL_FUNCTION_EMAIL_MANAGEMENT\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region SpecialFunctionActivateObjects

		public static int SpecialFunctionActivateObjects(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SPECIAL_FUNCTION_ACTIVATE_OBJECTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region SpecialFunctionDeleteAlerts

		public static int SpecialFunctionDeleteAlerts(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"SPECIAL_FUNCTION_DELETE_ALERTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region RemoveStatisticsStoreUsedValues

		public static int RemoveStatisticsStoreUsedValues(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"REMOVE_STATISTICS_STORE_USED_VALUES\"");
		}

		#endregion

		#region TelemetryHanaUsage

		public static int TelemetryHanaUsage(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_HANA_USAGE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region StartupAppendix

		public static IEnumerable<StartupAPPENDIXResult> StartupAppendix(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<StartupAPPENDIXResult>("\"_SYS_STATISTICS\".\"STARTUP_APPENDIX\"");
		}

		public partial class StartupAPPENDIXResult
		{
			[Column("1")] public int? _1 { get; set; }
		}

		#endregion

		#region TelemetrySystemOverview

		public static int TelemetrySystemOverview(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_SYSTEM_OVERVIEW\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryLogSegments

		public static int TelemetryLogSegments(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_LOG_SEGMENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryHostInformation

		public static int TelemetryHostInformation(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_HOST_INFORMATION\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryLogBuffers

		public static int TelemetryLogBuffers(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_LOG_BUFFERS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryLicenses

		public static int TelemetryLicenses(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_LICENSES\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryInifileContents

		public static int TelemetryInifileContents(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_INIFILE_CONTENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryLicense

		public static int TelemetryLicense(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_LICENSE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryFeatureUsage

		public static int TelemetryFeatureUsage(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_FEATURE_USAGE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryOutOfMemoryEvents

		public static int TelemetryOutOfMemoryEvents(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_OUT_OF_MEMORY_EVENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryDiskUsage

		public static int TelemetryDiskUsage(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_DISK_USAGE\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryServiceMemory

		public static int TelemetryServiceMemory(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_SERVICE_MEMORY\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryHeapMemory

		public static int TelemetryHeapMemory(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_HEAP_MEMORY\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryCsTables

		public static int TelemetryCsTables(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_CS_TABLES\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region TelemetryEvents

		public static int TelemetryEvents(this HXEDB dataConnection, DateTime? SNAPSHOT_ID, out int? WAS_CANCELLED)
		{
			var ret = dataConnection.ExecuteProc("\"_SYS_STATISTICS\".\"TELEMETRY_EVENTS\"",
				new DataParameter("SNAPSHOT_ID",   SNAPSHOT_ID,   DataType.Timestamp),
				new DataParameter("WAS_CANCELLED", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			WAS_CANCELLED = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["WAS_CANCELLED"]).Value);

			return ret;
		}

		#endregion

		#region PatientSelectByName

		public static IEnumerable<PatientSelectByNameResult> PatientSelectByName(this HXEDB dataConnection, string? FIRSTNAME, string? LASTNAME)
		{
			return dataConnection.QueryProc<PatientSelectByNameResult>("\"TESTHANAODBC\".\"Patient_SelectByName\"",
				new DataParameter("FIRSTNAME", FIRSTNAME, DataType.NVarChar),
				new DataParameter("LASTNAME",  LASTNAME,  DataType.NVarChar));
		}

		public partial class PatientSelectByNameResult
		{
			public int?    PersonID   { get; set; }
			public string? FirstName  { get; set; }
			public string? LastName   { get; set; }
			public string? MiddleName { get; set; }
			public string? Gender     { get; set; }
			public string? Diagnosis  { get; set; }
		}

		#endregion

		#region OutRefTest

		public static int OutRefTest(this HXEDB dataConnection, int? ID, out int? OUTPUTID, ref int? INPUTOUTPUTID, string? STR, out string? OUTPUTSTR, ref string? INPUTOUTPUTSTR)
		{
			var ret = dataConnection.ExecuteProc("\"TESTHANAODBC\".\"OutRefTest\"",
				new DataParameter("ID",             ID,             DataType.Int32),
				new DataParameter("OUTPUTID", null,       DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 },
				new DataParameter("INPUTOUTPUTID",  INPUTOUTPUTID,  DataType.Int32) { Direction = ParameterDirection.InputOutput, Size = 10 },
				new DataParameter("STR",            STR,            DataType.VarChar),
				new DataParameter("OUTPUTSTR", null,      DataType.VarChar) { Direction = ParameterDirection.Output, Size = 50 },
				new DataParameter("INPUTOUTPUTSTR", INPUTOUTPUTSTR, DataType.VarChar) { Direction = ParameterDirection.InputOutput, Size = 50 });

			OUTPUTID       = Converter.ChangeTypeTo<int?>   (((IDbDataParameter)dataConnection.Command.Parameters["OUTPUTID"]).      Value);
			INPUTOUTPUTID  = Converter.ChangeTypeTo<int?>   (((IDbDataParameter)dataConnection.Command.Parameters["INPUTOUTPUTID"]). Value);
			OUTPUTSTR      = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["OUTPUTSTR"]).     Value);
			INPUTOUTPUTSTR = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["INPUTOUTPUTSTR"]).Value);

			return ret;
		}

		#endregion

		#region OutRefEnumTest

		public static int OutRefEnumTest(this HXEDB dataConnection, string? STR, out string? OUTPUTSTR, ref string? INPUTOUTPUTSTR)
		{
			var ret = dataConnection.ExecuteProc("\"TESTHANAODBC\".\"OutRefEnumTest\"",
				new DataParameter("STR",            STR,            DataType.VarChar),
				new DataParameter("OUTPUTSTR", null,      DataType.VarChar) { Direction = ParameterDirection.Output, Size = 50 },
				new DataParameter("INPUTOUTPUTSTR", INPUTOUTPUTSTR, DataType.VarChar) { Direction = ParameterDirection.InputOutput, Size = 50 });

			OUTPUTSTR      = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["OUTPUTSTR"]).     Value);
			INPUTOUTPUTSTR = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["INPUTOUTPUTSTR"]).Value);

			return ret;
		}

		#endregion

		#region SelectImplicitColumn

		public static IEnumerable<SelectImplicitColumnResult> SelectImplicitColumn(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<SelectImplicitColumnResult>("\"TESTHANA\".\"SelectImplicitColumn\"");
		}

		public partial class SelectImplicitColumnResult
		{
			[Column("123")] public int? _123 { get; set; }
		}

		#endregion

		#region AddIssue792Record

		public static int AddIssue792Record(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"TESTHANA\".\"AddIssue792Record\"");
		}

		#endregion

		#region PatientSelectAll

		public static IEnumerable<PatientSelectAllResult> PatientSelectAll(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<PatientSelectAllResult>("\"TESTHANAODBC\".\"Patient_SelectAll\"");
		}

		public partial class PatientSelectAllResult
		{
			public int?    PersonID   { get; set; }
			public string? FirstName  { get; set; }
			public string? LastName   { get; set; }
			public string? MiddleName { get; set; }
			public string? Gender     { get; set; }
			public string? Diagnosis  { get; set; }
		}

		#endregion

		#region AflpmEraser

		public static int AflpmEraser(this HXEDB dataConnection, string? PROC)
		{
			return dataConnection.ExecuteProc("\"SYSTEM\".\"AFLPM_ERASER\"",
				new DataParameter("PROC", PROC, DataType.VarChar));
		}

		#endregion

		#region AfllangWrapperProcedureDrop

		public static int AfllangWrapperProcedureDrop(this HXEDB dataConnection, string? SCHEMA_NAME, string? PROCEDURE_NAME)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"AFLLANG_WRAPPER_PROCEDURE_DROP\"",
				new DataParameter("SCHEMA_NAME",    SCHEMA_NAME,    DataType.NVarChar),
				new DataParameter("PROCEDURE_NAME", PROCEDURE_NAME, DataType.NVarChar));
		}

		#endregion

		#region AflpmOnlineRegistrationCleanup

		public static int AflpmOnlineRegistrationCleanup(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"SYS\".\"AFLPM_ONLINE_REGISTRATION_CLEANUP\"");
		}

		#endregion

		#region PersonSelectByKey

		public static IEnumerable<PersonSelectByKeyResult0> PersonSelectByKey0(this HXEDB dataConnection, int? ID)
		{
			return dataConnection.QueryProc<PersonSelectByKeyResult0>("\"TESTHANAODBC\".\"Person_SelectByKey\"",
				new DataParameter("ID", ID, DataType.Int32));
		}

		public partial class PersonSelectByKeyResult0
		{
			public int     PersonID   { get; set; }
			public string  FirstName  { get; set; } = null!;
			public string  LastName   { get; set; } = null!;
			public string? MiddleName { get; set; }
			public string  Gender     { get; set; } = null!;
		}

		#endregion

		#region PersonSelectAll

		public static IEnumerable<PersonSelectAllResult> PersonSelectAll(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<PersonSelectAllResult>("\"TESTHANAODBC\".\"Person_SelectAll\"");
		}

		public partial class PersonSelectAllResult
		{
			public int     PersonID   { get; set; }
			public string  FirstName  { get; set; } = null!;
			public string  LastName   { get; set; } = null!;
			public string? MiddleName { get; set; }
			public string  Gender     { get; set; } = null!;
		}

		#endregion

		#region PersonSelectByName

		public static IEnumerable<PersonSelectByNameResult0> PersonSelectByName0(this HXEDB dataConnection, string? FIRSTNAME, string? LASTNAME)
		{
			return dataConnection.QueryProc<PersonSelectByNameResult0>("\"TESTHANAODBC\".\"Person_SelectByName\"",
				new DataParameter("FIRSTNAME", FIRSTNAME, DataType.NVarChar),
				new DataParameter("LASTNAME",  LASTNAME,  DataType.NVarChar));
		}

		public partial class PersonSelectByNameResult0
		{
			public int     PersonID   { get; set; }
			public string  FirstName  { get; set; } = null!;
			public string  LastName   { get; set; } = null!;
			public string? MiddleName { get; set; }
			public string  Gender     { get; set; } = null!;
		}

		#endregion

		#region PersonSelectListByName

		public static IEnumerable<PersonSelectListByNameResult0> PersonSelectListByName0(this HXEDB dataConnection, string? FIRSTNAME, string? LASTNAME)
		{
			return dataConnection.QueryProc<PersonSelectListByNameResult0>("\"TESTHANAODBC\".\"Person_SelectListByName\"",
				new DataParameter("FIRSTNAME", FIRSTNAME, DataType.NVarChar),
				new DataParameter("LASTNAME",  LASTNAME,  DataType.NVarChar));
		}

		public partial class PersonSelectListByNameResult0
		{
			public int     PersonID   { get; set; }
			public string  FirstName  { get; set; } = null!;
			public string  LastName   { get; set; } = null!;
			public string? MiddleName { get; set; }
			public string  Gender     { get; set; } = null!;
		}

		#endregion

		#region PersonInsert

		public static int PersonInsert0(this HXEDB dataConnection, string? FIRSTNAME, string? LASTNAME, string? MIDDLENAME, char? GENDER)
		{
			return dataConnection.ExecuteProc("\"TESTHANAODBC\".\"Person_Insert\"",
				new DataParameter("FIRSTNAME",  FIRSTNAME,  DataType.NVarChar),
				new DataParameter("LASTNAME",   LASTNAME,   DataType.NVarChar),
				new DataParameter("MIDDLENAME", MIDDLENAME, DataType.NVarChar),
				new DataParameter("GENDER",     GENDER,     DataType.Char));
		}

		#endregion

		#region PersonInsertOutputParameter

		public static int PersonInsertOutputParameter0(this HXEDB dataConnection, string? FIRSTNAME, string? LASTNAME, string? MIDDLENAME, char? GENDER, out int? PERSONID)
		{
			var ret = dataConnection.ExecuteProc("\"TESTHANAODBC\".\"Person_Insert_OutputParameter\"",
				new DataParameter("FIRSTNAME", FIRSTNAME, DataType.NVarChar),
				new DataParameter("LASTNAME", LASTNAME, DataType.NVarChar),
				new DataParameter("MIDDLENAME", MIDDLENAME, DataType.NVarChar),
				new DataParameter("GENDER",   GENDER,   DataType.Char),
				new DataParameter("PERSONID", null, DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 });

			PERSONID = Converter.ChangeTypeTo<int?>(((IDbDataParameter)dataConnection.Command.Parameters["PERSONID"]).Value);

			return ret;
		}

		#endregion

		#region PersonUpdate

		public static int PersonUpdate0(this HXEDB dataConnection, int? PERSONID, string? FIRSTNAME, string? LASTNAME, string? MIDDLENAME, char? GENDER)
		{
			return dataConnection.ExecuteProc("\"TESTHANAODBC\".\"Person_Update\"",
				new DataParameter("PERSONID",   PERSONID,   DataType.Int32),
				new DataParameter("FIRSTNAME",  FIRSTNAME,  DataType.NVarChar),
				new DataParameter("LASTNAME",   LASTNAME,   DataType.NVarChar),
				new DataParameter("MIDDLENAME", MIDDLENAME, DataType.NVarChar),
				new DataParameter("GENDER",     GENDER,     DataType.Char));
		}

		#endregion

		#region PersonDelete

		public static int PersonDelete(this HXEDB dataConnection, int? PERSONID)
		{
			return dataConnection.ExecuteProc("\"TESTHANAODBC\".\"Person_Delete\"",
				new DataParameter("PERSONID", PERSONID, DataType.Int32));
		}

		#endregion

		#region SelectImplicitColumn

		public static IEnumerable<SelectImplicitColumnResult0> SelectImplicitColumn0(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<SelectImplicitColumnResult0>("\"TESTHANAODBC\".\"SelectImplicitColumn\"");
		}

		public partial class SelectImplicitColumnResult0
		{
			[Column("123")] public int? _123 { get; set; }
		}

		#endregion

		#region DuplicateColumnNames

		public static IEnumerable<DuplicateColumnNamesResult0> DuplicateColumnNames0(this HXEDB dataConnection)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new DuplicateColumnNamesResult0
				{
					id      = Converter.ChangeTypeTo<int?>   (dataReader.GetValue(0), ms),
					Column2 = Converter.ChangeTypeTo<string?>(dataReader.GetValue(1), ms),
				},
				"\"TESTHANAODBC\".\"DuplicateColumnNames\"");
		}

		public partial class DuplicateColumnNamesResult0
		{
			               public int?    id      { get; set; }
			[Column("id")] public string? Column2 { get; set; }
		}

		#endregion

		#region AddIssue792Record

		public static int AddIssue792Record0(this HXEDB dataConnection)
		{
			return dataConnection.ExecuteProc("\"TESTHANAODBC\".\"AddIssue792Record\"");
		}

		#endregion

		#region PrdGlobalEccCvMARAproc

		public static IEnumerable<PrdGlobalEccCvMARAprocResult0> PrdGlobalEccCvMARAproc0(this HXEDB dataConnection)
		{
			var ms = dataConnection.MappingSchema;

			return dataConnection.QueryProc(dataReader =>
				new PrdGlobalEccCvMARAprocResult0
				{
					id      = Converter.ChangeTypeTo<int?>   (dataReader.GetValue(0), ms),
					Column2 = Converter.ChangeTypeTo<string?>(dataReader.GetValue(1), ms),
				},
				"\"TESTHANAODBC\".\"prd.global.ecc/CV_MARAproc\"");
		}

		public partial class PrdGlobalEccCvMARAprocResult0
		{
			               public int?    id      { get; set; }
			[Column("id")] public string? Column2 { get; set; }
		}

		#endregion

		#region DROPEXISTINGPROCEDURE

		public static int DROPEXISTINGPROCEDURE0(this HXEDB dataConnection, string? PROCEDURENAME, string? SCHEMANAME)
		{
			return dataConnection.ExecuteProc("\"TESTHANA\".\"DROPEXISTINGPROCEDURE\"",
				new DataParameter("PROCEDURENAME", PROCEDURENAME, DataType.VarChar),
				new DataParameter("SCHEMANAME",    SCHEMANAME,    DataType.VarChar));
		}

		#endregion

		#region DROPEXISTINGFUNCTION

		public static int DROPEXISTINGFUNCTION0(this HXEDB dataConnection, string? FUNCTIONNAME, string? SCHEMANAME)
		{
			return dataConnection.ExecuteProc("\"TESTHANA\".\"DROPEXISTINGFUNCTION\"",
				new DataParameter("FUNCTIONNAME", FUNCTIONNAME, DataType.VarChar),
				new DataParameter("SCHEMANAME",   SCHEMANAME,   DataType.VarChar));
		}

		#endregion

		#region PersonSelectAll

		public static IEnumerable<PersonSelectAllResult0> PersonSelectAll0(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<PersonSelectAllResult0>("\"TESTHANA\".\"Person_SelectAll\"");
		}

		public partial class PersonSelectAllResult0
		{
			public int     PersonID   { get; set; }
			public string  FirstName  { get; set; } = null!;
			public string  LastName   { get; set; } = null!;
			public string? MiddleName { get; set; }
			public string  Gender     { get; set; } = null!;
		}

		#endregion

		#region PersonDelete

		public static int PersonDelete0(this HXEDB dataConnection, int? PERSONID)
		{
			return dataConnection.ExecuteProc("\"TESTHANA\".\"Person_Delete\"",
				new DataParameter("PERSONID", PERSONID, DataType.Int32));
		}

		#endregion

		#region PatientSelectAll

		public static IEnumerable<PatientSelectAllResult0> PatientSelectAll0(this HXEDB dataConnection)
		{
			return dataConnection.QueryProc<PatientSelectAllResult0>("\"TESTHANA\".\"Patient_SelectAll\"");
		}

		public partial class PatientSelectAllResult0
		{
			public int?    PersonID   { get; set; }
			public string? FirstName  { get; set; }
			public string? LastName   { get; set; }
			public string? MiddleName { get; set; }
			public string? Gender     { get; set; }
			public string? Diagnosis  { get; set; }
		}

		#endregion

		#region PatientSelectByName

		public static IEnumerable<PatientSelectByNameResult0> PatientSelectByName0(this HXEDB dataConnection, string? FIRSTNAME, string? LASTNAME)
		{
			return dataConnection.QueryProc<PatientSelectByNameResult0>("\"TESTHANA\".\"Patient_SelectByName\"",
				new DataParameter("FIRSTNAME", FIRSTNAME, DataType.NVarChar),
				new DataParameter("LASTNAME",  LASTNAME,  DataType.NVarChar));
		}

		public partial class PatientSelectByNameResult0
		{
			public int?    PersonID   { get; set; }
			public string? FirstName  { get; set; }
			public string? LastName   { get; set; }
			public string? MiddleName { get; set; }
			public string? Gender     { get; set; }
			public string? Diagnosis  { get; set; }
		}

		#endregion

		#region OutRefTest

		public static int OutRefTest0(this HXEDB dataConnection, int? ID, out int? OUTPUTID, ref int? INPUTOUTPUTID, string? STR, out string? OUTPUTSTR, ref string? INPUTOUTPUTSTR)
		{
			var ret = dataConnection.ExecuteProc("\"TESTHANA\".\"OutRefTest\"",
				new DataParameter("ID",             ID,             DataType.Int32),
				new DataParameter("OUTPUTID", null,       DataType.Int32) { Direction = ParameterDirection.Output, Size = 10 },
				new DataParameter("INPUTOUTPUTID",  INPUTOUTPUTID,  DataType.Int32) { Direction = ParameterDirection.InputOutput, Size = 10 },
				new DataParameter("STR",            STR,            DataType.VarChar),
				new DataParameter("OUTPUTSTR", null,      DataType.VarChar) { Direction = ParameterDirection.Output, Size = 50 },
				new DataParameter("INPUTOUTPUTSTR", INPUTOUTPUTSTR, DataType.VarChar) { Direction = ParameterDirection.InputOutput, Size = 50 });

			OUTPUTID       = Converter.ChangeTypeTo<int?>   (((IDbDataParameter)dataConnection.Command.Parameters["OUTPUTID"]).      Value);
			INPUTOUTPUTID  = Converter.ChangeTypeTo<int?>   (((IDbDataParameter)dataConnection.Command.Parameters["INPUTOUTPUTID"]). Value);
			OUTPUTSTR      = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["OUTPUTSTR"]).     Value);
			INPUTOUTPUTSTR = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["INPUTOUTPUTSTR"]).Value);

			return ret;
		}

		#endregion

		#region OutRefEnumTest

		public static int OutRefEnumTest0(this HXEDB dataConnection, string? STR, out string? OUTPUTSTR, ref string? INPUTOUTPUTSTR)
		{
			var ret = dataConnection.ExecuteProc("\"TESTHANA\".\"OutRefEnumTest\"",
				new DataParameter("STR",            STR,            DataType.VarChar),
				new DataParameter("OUTPUTSTR", null,      DataType.VarChar) { Direction = ParameterDirection.Output, Size = 50 },
				new DataParameter("INPUTOUTPUTSTR", INPUTOUTPUTSTR, DataType.VarChar) { Direction = ParameterDirection.InputOutput, Size = 50 });

			OUTPUTSTR      = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["OUTPUTSTR"]).     Value);
			INPUTOUTPUTSTR = Converter.ChangeTypeTo<string?>(((IDbDataParameter)dataConnection.Command.Parameters["INPUTOUTPUTSTR"]).Value);

			return ret;
		}

		#endregion
	}

	public static partial class SqlFunctions
	{
		#region CdsSchemaLastModifiedTime

		[Sql.Function(Name="SYS.CDS_SCHEMA_LAST_MODIFIED_TIME", ServerSideOnly=true)]
		public static DateTime? CdsSchemaLastModifiedTime(string? SCHEMA_NAME)
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static _SYS_PLAN_STABILITY_AbstractSqlPlanEntries Find(this ITable<_SYS_PLAN_STABILITY_AbstractSqlPlanEntries> table, long EntryId)
		{
			return table.FirstOrDefault(t =>
				t.EntryId == EntryId);
		}

		public static _SYS_PLAN_STABILITY_AbstractSqlPlanQueries Find(this ITable<_SYS_PLAN_STABILITY_AbstractSqlPlanQueries> table, long QueryId)
		{
			return table.FirstOrDefault(t =>
				t.QueryId == QueryId);
		}

		public static TESTHANAODBC_AllType Find(this ITable<TESTHANAODBC_AllType> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static AllType Find(this ITable<AllType> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static TESTHANAODBC_AllTypesGeo Find(this ITable<TESTHANAODBC_AllTypesGeo> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static AllTypesGeo Find(this ITable<AllTypesGeo> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static _SYS_TASK_BestRecordGroupMasterStatistics Find(this ITable<_SYS_TASK_BestRecordGroupMasterStatistics> table, long TaskExecutionId, int OperationId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId);
		}

		public static _SYS_TASK_BestRecordResults Find(this ITable<_SYS_TASK_BestRecordResults> table, long TaskExecutionId, int OperationId, int SrcTableId, long SrcRowId, int SrcColumnId, int StrategyGroupId, int StrategyId, string BestRecordRule, int UpdateNum)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.SrcTableId      == SrcTableId      &&
				t.SrcRowId        == SrcRowId        &&
				t.SrcColumnId     == SrcColumnId     &&
				t.StrategyGroupId == StrategyGroupId &&
				t.StrategyId      == StrategyId      &&
				t.BestRecordRule  == BestRecordRule  &&
				t.UpdateNum       == UpdateNum);
		}

		public static _SYS_TASK_BestRecordStrategies Find(this ITable<_SYS_TASK_BestRecordStrategies> table, long TaskExecutionId, int OperationId, int StrategyGroupId, int StrategyId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.StrategyGroupId == StrategyGroupId &&
				t.StrategyId      == StrategyId);
		}

		public static _SYS_TASK_BestRecordStrategyGroups Find(this ITable<_SYS_TASK_BestRecordStrategyGroups> table, long TaskExecutionId, int OperationId, int StrategyGroupId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.StrategyGroupId == StrategyGroupId);
		}

		public static _SYS_RT_CdsAnnotation Find(this ITable<_SYS_RT_CdsAnnotation> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsAnnotationAssignment Find(this ITable<_SYS_RT_CdsAnnotationAssignment> table, long ImageId, string ArtifactNameSchema, string ArtifactNameName, string ArtifactNameComponentName, string Name, string ExtensionPackage)
		{
			return table.FirstOrDefault(t =>
				t.ImageId                   == ImageId                   &&
				t.ArtifactNameSchema        == ArtifactNameSchema        &&
				t.ArtifactNameName          == ArtifactNameName          &&
				t.ArtifactNameComponentName == ArtifactNameComponentName &&
				t.Name                      == Name                      &&
				t.ExtensionPackage          == ExtensionPackage);
		}

		public static _SYS_RT_CdsAnnotationValue Find(this ITable<_SYS_RT_CdsAnnotationValue> table, long ImageId, string ArtifactNameSchema, string ArtifactNameName, string AnnotationNameSchema, string AnnotationNameName, string ExtensionPackage)
		{
			return table.FirstOrDefault(t =>
				t.ImageId              == ImageId              &&
				t.ArtifactNameSchema   == ArtifactNameSchema   &&
				t.ArtifactNameName     == ArtifactNameName     &&
				t.AnnotationNameSchema == AnnotationNameSchema &&
				t.AnnotationNameName   == AnnotationNameName   &&
				t.ExtensionPackage     == ExtensionPackage);
		}

		public static _SYS_RT_CdsArray Find(this ITable<_SYS_RT_CdsArray> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsArtifact Find(this ITable<_SYS_RT_CdsArtifact> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsAspect Find(this ITable<_SYS_RT_CdsAspect> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsAssociation Find(this ITable<_SYS_RT_CdsAssociation> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsConstant Find(this ITable<_SYS_RT_CdsConstant> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsDependency Find(this ITable<_SYS_RT_CdsDependency> table, long ImageId, string FromSchema, string FromName, string ToSchema, string ToName)
		{
			return table.FirstOrDefault(t =>
				t.ImageId    == ImageId    &&
				t.FromSchema == FromSchema &&
				t.FromName   == FromName   &&
				t.ToSchema   == ToSchema   &&
				t.ToName     == ToName);
		}

		public static _SYS_RT_CdsDerivedType Find(this ITable<_SYS_RT_CdsDerivedType> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsEntity Find(this ITable<_SYS_RT_CdsEntity> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsEnum Find(this ITable<_SYS_RT_CdsEnum> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsExpression Find(this ITable<_SYS_RT_CdsExpression> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsExtPkgDep Find(this ITable<_SYS_RT_CdsExtPkgDep> table, long ImageId, string FromSchema, string FromName, string ToSchema, string ToName)
		{
			return table.FirstOrDefault(t =>
				t.ImageId    == ImageId    &&
				t.FromSchema == FromSchema &&
				t.FromName   == FromName   &&
				t.ToSchema   == ToSchema   &&
				t.ToName     == ToName);
		}

		public static _SYS_RT_CdsParameter Find(this ITable<_SYS_RT_CdsParameter> table, long ImageId, string Schema, string Name, string ParameterName)
		{
			return table.FirstOrDefault(t =>
				t.ImageId       == ImageId &&
				t.Schema        == Schema  &&
				t.Name          == Name    &&
				t.ParameterName == ParameterName);
		}

		public static _SYS_RT_CdsRule Find(this ITable<_SYS_RT_CdsRule> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsScalarType Find(this ITable<_SYS_RT_CdsScalarType> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsSourceCode Find(this ITable<_SYS_RT_CdsSourceCode> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsStatistic Find(this ITable<_SYS_RT_CdsStatistic> table, DateTime ActivationUtc, string Connection, int StatementNo, DateTime CreationUtc, DateTime ExecutionUtc, int ExecutionNo)
		{
			return table.FirstOrDefault(t =>
				t.ActivationUtc == ActivationUtc &&
				t.Connection    == Connection    &&
				t.StatementNo   == StatementNo   &&
				t.CreationUtc   == CreationUtc   &&
				t.ExecutionUtc  == ExecutionUtc  &&
				t.ExecutionNo   == ExecutionNo);
		}

		public static _SYS_RT_CdsStructure Find(this ITable<_SYS_RT_CdsStructure> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_RT_CdsStructureComponent Find(this ITable<_SYS_RT_CdsStructureComponent> table, long ImageId, string Schema, string Name, string ComponentName)
		{
			return table.FirstOrDefault(t =>
				t.ImageId       == ImageId &&
				t.Schema        == Schema  &&
				t.Name          == Name    &&
				t.ComponentName == ComponentName);
		}

		public static _SYS_RT_CdsView Find(this ITable<_SYS_RT_CdsView> table, long ImageId, string Schema, string Name)
		{
			return table.FirstOrDefault(t =>
				t.ImageId == ImageId &&
				t.Schema  == Schema  &&
				t.Name    == Name);
		}

		public static _SYS_TASK_CleanseAddressRecordInfo Find(this ITable<_SYS_TASK_CleanseAddressRecordInfo> table, long TaskExecutionId, int OperationId, int TableId, long RowId, int EntityInstance, int EntityInstanceOccurrence)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId          == TaskExecutionId &&
				t.OperationId              == OperationId     &&
				t.TableId                  == TableId         &&
				t.RowId                    == RowId           &&
				t.EntityInstance           == EntityInstance  &&
				t.EntityInstanceOccurrence == EntityInstanceOccurrence);
		}

		public static _SYS_TASK_CleanseChangeInfo Find(this ITable<_SYS_TASK_CleanseChangeInfo> table, long TaskExecutionId, int OperationId, long RowId, string EntityId, int EntityInstance, int EntityInstanceOccurrence, string ComponentId, string ComponentElementId, string ChangeCategoryId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId          == TaskExecutionId          &&
				t.OperationId              == OperationId              &&
				t.RowId                    == RowId                    &&
				t.EntityId                 == EntityId                 &&
				t.EntityInstance           == EntityInstance           &&
				t.EntityInstanceOccurrence == EntityInstanceOccurrence &&
				t.ComponentId              == ComponentId              &&
				t.ComponentElementId       == ComponentElementId       &&
				t.ChangeCategoryId         == ChangeCategoryId);
		}

		public static _SYS_TELEMETRY_CLIENT Find(this ITable<_SYS_TELEMETRY_CLIENT> table, long ClientId)
		{
			return table.FirstOrDefault(t =>
				t.ClientId == ClientId);
		}

		public static _SYS_TELEMETRY_CONFIGURATION Find(this ITable<_SYS_TELEMETRY_CONFIGURATION> table, short CollectorId)
		{
			return table.FirstOrDefault(t =>
				t.CollectorId == CollectorId);
		}

		public static _SYS_TASK_CurrentVersions Find(this ITable<_SYS_TASK_CurrentVersions> table, string VersionId)
		{
			return table.FirstOrDefault(t =>
				t.VersionId == VersionId);
		}

		public static _SYS_EPM_DeleteContainer Find(this ITable<_SYS_EPM_DeleteContainer> table, string UserName, string SchemaName, string ModelName, int VERSION, string CONTAINER)
		{
			return table.FirstOrDefault(t =>
				t.UserName   == UserName   &&
				t.SchemaName == SchemaName &&
				t.ModelName  == ModelName  &&
				t.VERSION    == VERSION    &&
				t.CONTAINER  == CONTAINER);
		}

		public static Doctor Find(this ITable<Doctor> table, int PersonID)
		{
			return table.FirstOrDefault(t =>
				t.PersonID == PersonID);
		}

		public static TESTHANAODBC_Doctor Find(this ITable<TESTHANAODBC_Doctor> table, int PersonID)
		{
			return table.FirstOrDefault(t =>
				t.PersonID == PersonID);
		}

		public static _SYS_RT_EshModel Find(this ITable<_SYS_RT_EshModel> table, string SchemaName, string ViewName)
		{
			return table.FirstOrDefault(t =>
				t.SchemaName == SchemaName &&
				t.ViewName   == ViewName);
		}

		public static _SYS_RT_EshModelProperty Find(this ITable<_SYS_RT_EshModelProperty> table, string SchemaName, string ViewName, string ColumnName, string PROPERTY)
		{
			return table.FirstOrDefault(t =>
				t.SchemaName == SchemaName &&
				t.ViewName   == ViewName   &&
				t.ColumnName == ColumnName &&
				t.PROPERTY   == PROPERTY);
		}

		public static _SYS_AFL_FunctionExecutionCount Find(this ITable<_SYS_AFL_FunctionExecutionCount> table, string AreaName, string FunctionName, string HOST, int PORT)
		{
			return table.FirstOrDefault(t =>
				t.AreaName     == AreaName     &&
				t.FunctionName == FunctionName &&
				t.HOST         == HOST         &&
				t.PORT         == PORT);
		}

		public static _SYS_AFL_FunctionExecutionCountsControl Find(this ITable<_SYS_AFL_FunctionExecutionCountsControl> table, string KEY)
		{
			return table.FirstOrDefault(t =>
				t.KEY == KEY);
		}

		public static _SYS_TASK_GeocodeInfoCodes Find(this ITable<_SYS_TASK_GeocodeInfoCodes> table, long TaskExecutionId, int OperationId, int TableId, long RowId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.TableId         == TableId         &&
				t.RowId           == RowId);
		}

		public static _SYS_XS_HttpDestination Find(this ITable<_SYS_XS_HttpDestination> table, string PackageId, string ObjectName)
		{
			return table.FirstOrDefault(t =>
				t.PackageId  == PackageId &&
				t.ObjectName == ObjectName);
		}

		public static _SYS_RT_InaActiveObject Find(this ITable<_SYS_RT_InaActiveObject> table, string PackageId, string ObjectName, string ObjectSuffix)
		{
			return table.FirstOrDefault(t =>
				t.PackageId    == PackageId  &&
				t.ObjectName   == ObjectName &&
				t.ObjectSuffix == ObjectSuffix);
		}

		public static _SYS_RT_InaActiveObjectProperty Find(this ITable<_SYS_RT_InaActiveObjectProperty> table, string PackageId, string ObjectName, string ObjectSuffix, string KEY, string VALUE)
		{
			return table.FirstOrDefault(t =>
				t.PackageId    == PackageId    &&
				t.ObjectName   == ObjectName   &&
				t.ObjectSuffix == ObjectSuffix &&
				t.KEY          == KEY          &&
				t.VALUE        == VALUE);
		}

		public static TESTHANAODBC_IndexTable Find(this ITable<TESTHANAODBC_IndexTable> table, int PKField1, int PKField2)
		{
			return table.FirstOrDefault(t =>
				t.PKField1 == PKField1 &&
				t.PKField2 == PKField2);
		}

		public static IndexTable Find(this ITable<IndexTable> table, int PKField1, int PKField2)
		{
			return table.FirstOrDefault(t =>
				t.PKField1 == PKField1 &&
				t.PKField2 == PKField2);
		}

		public static TESTHANAODBC_IndexTable2 Find(this ITable<TESTHANAODBC_IndexTable2> table, int PKField1, int PKField2)
		{
			return table.FirstOrDefault(t =>
				t.PKField1 == PKField1 &&
				t.PKField2 == PKField2);
		}

		public static IndexTable2 Find(this ITable<IndexTable2> table, int PKField1, int PKField2)
		{
			return table.FirstOrDefault(t =>
				t.PKField1 == PKField1 &&
				t.PKField2 == PKField2);
		}

		public static TESTHANAODBC_InheritanceChild Find(this ITable<TESTHANAODBC_InheritanceChild> table, int InheritanceChildId)
		{
			return table.FirstOrDefault(t =>
				t.InheritanceChildId == InheritanceChildId);
		}

		public static InheritanceChild Find(this ITable<InheritanceChild> table, int InheritanceChildId)
		{
			return table.FirstOrDefault(t =>
				t.InheritanceChildId == InheritanceChildId);
		}

		public static TESTHANAODBC_InheritanceParent Find(this ITable<TESTHANAODBC_InheritanceParent> table, int InheritanceParentId)
		{
			return table.FirstOrDefault(t =>
				t.InheritanceParentId == InheritanceParentId);
		}

		public static InheritanceParent Find(this ITable<InheritanceParent> table, int InheritanceParentId)
		{
			return table.FirstOrDefault(t =>
				t.InheritanceParentId == InheritanceParentId);
		}

		public static _SYS_XS_JOB Find(this ITable<_SYS_XS_JOB> table, string NAME)
		{
			return table.FirstOrDefault(t =>
				t.NAME == NAME);
		}

		public static _SYS_XS_JobLog Find(this ITable<_SYS_XS_JobLog> table, string NAME, long ID, DateTime PlannedTime)
		{
			return table.FirstOrDefault(t =>
				t.NAME        == NAME &&
				t.ID          == ID   &&
				t.PlannedTime == PlannedTime);
		}

		public static _SYS_XS_JobSchedule Find(this ITable<_SYS_XS_JobSchedule> table, long ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static _SYS_XS_JsRecompileIssue Find(this ITable<_SYS_XS_JsRecompileIssue> table, string PackageId, string ObjectName, string ObjectSuffix, DateTime STAMP)
		{
			return table.FirstOrDefault(t =>
				t.PackageId    == PackageId    &&
				t.ObjectName   == ObjectName   &&
				t.ObjectSuffix == ObjectSuffix &&
				t.STAMP        == STAMP);
		}

		public static _SYS_EPM_LibraryVersion Find(this ITable<_SYS_EPM_LibraryVersion> table, string LibraryName)
		{
			return table.FirstOrDefault(t =>
				t.LibraryName == LibraryName);
		}

		public static _SYS_TASK_MatchGroupInfo Find(this ITable<_SYS_TASK_MatchGroupInfo> table, long TaskExecutionId, int OperationId, int GroupId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.GroupId         == GroupId);
		}

		public static _SYS_TASK_MatchPolicies Find(this ITable<_SYS_TASK_MatchPolicies> table, long TaskExecutionId, int OperationId, int PolicyId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.PolicyId        == PolicyId);
		}

		public static _SYS_TASK_MatchRecordInfo Find(this ITable<_SYS_TASK_MatchRecordInfo> table, long TaskExecutionId, int OperationId, int TableId, long RowId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.TableId         == TableId         &&
				t.RowId           == RowId);
		}

		public static _SYS_TASK_MatchRules Find(this ITable<_SYS_TASK_MatchRules> table, long TaskExecutionId, int OperationId, string RuleId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.RuleId          == RuleId);
		}

		public static _SYS_TASK_MatchSourceInfo Find(this ITable<_SYS_TASK_MatchSourceInfo> table, long TaskExecutionId, int OperationId, int SourceId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.SourceId        == SourceId);
		}

		public static _SYS_TASK_MatchSourceStatistics Find(this ITable<_SYS_TASK_MatchSourceStatistics> table, long TaskExecutionId, int OperationId, string SourceId, string RelatedSourceId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.SourceId        == SourceId        &&
				t.RelatedSourceId == RelatedSourceId);
		}

		public static _SYS_TASK_MatchStatistics Find(this ITable<_SYS_TASK_MatchStatistics> table, long TaskExecutionId, int OperationId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId);
		}

		public static _SYS_TASK_MatchTracing Find(this ITable<_SYS_TASK_MatchTracing> table, long TaskExecutionId, int OperationId, int TableId, long RowId, int RelatedTableId, long RelatedRowId)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.OperationId     == OperationId     &&
				t.TableId         == TableId         &&
				t.RowId           == RowId           &&
				t.RelatedTableId  == RelatedTableId  &&
				t.RelatedRowId    == RelatedRowId);
		}

		public static _SYS_EPM_MdsMetadata Find(this ITable<_SYS_EPM_MdsMetadata> table, string SchemaName, string ObjectName)
		{
			return table.FirstOrDefault(t =>
				t.SchemaName == SchemaName &&
				t.ObjectName == ObjectName);
		}

		public static _SYS_EPM_ModelAdmin Find(this ITable<_SYS_EPM_ModelAdmin> table, long AdminUserId)
		{
			return table.FirstOrDefault(t =>
				t.AdminUserId == AdminUserId);
		}

		public static _SYS_EPM_ModelMigration Find(this ITable<_SYS_EPM_ModelMigration> table, string SchemaName, string ModelName, int MigrationId)
		{
			return table.FirstOrDefault(t =>
				t.SchemaName  == SchemaName &&
				t.ModelName   == ModelName  &&
				t.MigrationId == MigrationId);
		}

		public static _SYS_XS_OauthAccessToken Find(this ITable<_SYS_XS_OauthAccessToken> table, string ClientPackage, string ClientName, string USER, byte TokenType)
		{
			return table.FirstOrDefault(t =>
				t.ClientPackage == ClientPackage &&
				t.ClientName    == ClientName    &&
				t.USER          == USER          &&
				t.TokenType     == TokenType);
		}

		public static _SYS_XS_OauthAccessTokenScope Find(this ITable<_SYS_XS_OauthAccessTokenScope> table, string ClientPackage, string ClientName, string USER, byte TokenType, string SCOPE)
		{
			return table.FirstOrDefault(t =>
				t.ClientPackage == ClientPackage &&
				t.ClientName    == ClientName    &&
				t.USER          == USER          &&
				t.TokenType     == TokenType     &&
				t.SCOPE         == SCOPE);
		}

		public static _SYS_XS_OauthAppConfig Find(this ITable<_SYS_XS_OauthAppConfig> table, string PackageId, string ObjectName)
		{
			return table.FirstOrDefault(t =>
				t.PackageId  == PackageId &&
				t.ObjectName == ObjectName);
		}

		public static _SYS_XS_OauthAppConfigScope Find(this ITable<_SYS_XS_OauthAppConfigScope> table, string PackageId, string ObjectName, string SCOPE)
		{
			return table.FirstOrDefault(t =>
				t.PackageId  == PackageId  &&
				t.ObjectName == ObjectName &&
				t.SCOPE      == SCOPE);
		}

		public static _SYS_XS_OauthClientConfig Find(this ITable<_SYS_XS_OauthClientConfig> table, string ClientPackage, string ClientName)
		{
			return table.FirstOrDefault(t =>
				t.ClientPackage == ClientPackage &&
				t.ClientName    == ClientName);
		}

		public static _SYS_XS_OauthClientFlavor Find(this ITable<_SYS_XS_OauthClientFlavor> table, string FlavorPackage, string FlavorName, string FlavorStep, string ParamLocation, string ParamName)
		{
			return table.FirstOrDefault(t =>
				t.FlavorPackage == FlavorPackage &&
				t.FlavorName    == FlavorName    &&
				t.FlavorStep    == FlavorStep    &&
				t.ParamLocation == ParamLocation &&
				t.ParamName     == ParamName);
		}

		public static Patient Find(this ITable<Patient> table, int PersonID)
		{
			return table.FirstOrDefault(t =>
				t.PersonID == PersonID);
		}

		public static TESTHANAODBC_Patient Find(this ITable<TESTHANAODBC_Patient> table, int PersonID)
		{
			return table.FirstOrDefault(t =>
				t.PersonID == PersonID);
		}

		public static Person Find(this ITable<Person> table, int PersonID)
		{
			return table.FirstOrDefault(t =>
				t.PersonID == PersonID);
		}

		public static TESTHANAODBC_Person Find(this ITable<TESTHANAODBC_Person> table, int PersonID)
		{
			return table.FirstOrDefault(t =>
				t.PersonID == PersonID);
		}

		public static _SYS_PLAN_STABILITY_PlanStabilityStatistics Find(this ITable<_SYS_PLAN_STABILITY_PlanStabilityStatistics> table, long AbstractSqlPlanId)
		{
			return table.FirstOrDefault(t =>
				t.AbstractSqlPlanId == AbstractSqlPlanId);
		}

		public static _SYS_RT_PpAAlgorithm Find(this ITable<_SYS_RT_PpAAlgorithm> table, string PackageId, string ObjectName)
		{
			return table.FirstOrDefault(t =>
				t.PackageId  == PackageId &&
				t.ObjectName == ObjectName);
		}

		public static _SYS_RT_PpACha Find(this ITable<_SYS_RT_PpACha> table, string PackageId, string ObjectName)
		{
			return table.FirstOrDefault(t =>
				t.PackageId  == PackageId &&
				t.ObjectName == ObjectName);
		}

		public static _SYS_RT_PpADatacontainer Find(this ITable<_SYS_RT_PpADatacontainer> table, string PackageId, string ObjectName)
		{
			return table.FirstOrDefault(t =>
				t.PackageId  == PackageId &&
				t.ObjectName == ObjectName);
		}

		public static _SYS_RT_PpAKyf Find(this ITable<_SYS_RT_PpAKyf> table, string PackageId, string ObjectName)
		{
			return table.FirstOrDefault(t =>
				t.PackageId  == PackageId &&
				t.ObjectName == ObjectName);
		}

		public static _SYS_RT_PpASession Find(this ITable<_SYS_RT_PpASession> table, string PackageId, string ObjectName, int VERSION, string ReadView)
		{
			return table.FirstOrDefault(t =>
				t.PackageId  == PackageId  &&
				t.ObjectName == ObjectName &&
				t.VERSION    == VERSION    &&
				t.ReadView   == ReadView);
		}

		public static TESTHANAODBC_PrdGlobalEccCvMara Find(this ITable<TESTHANAODBC_PrdGlobalEccCvMara> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PrdGlobalEccCvMara Find(this ITable<PrdGlobalEccCvMara> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static _SYS_EPM_PublishGrant Find(this ITable<_SYS_EPM_PublishGrant> table, long ID, string PublishPrivilegeName)
		{
			return table.FirstOrDefault(t =>
				t.ID                   == ID &&
				t.PublishPrivilegeName == PublishPrivilegeName);
		}

		public static _SYS_EPM_PublishPrivilege Find(this ITable<_SYS_EPM_PublishPrivilege> table, string PublishPrivilegeName)
		{
			return table.FirstOrDefault(t =>
				t.PublishPrivilegeName == PublishPrivilegeName);
		}

		public static _SYS_XS_RuntimeConfiguration Find(this ITable<_SYS_XS_RuntimeConfiguration> table, string PackageId)
		{
			return table.FirstOrDefault(t =>
				t.PackageId == PackageId);
		}

		public static _SYS_DATA_ANONYMIZATION_RuntimeData Find(this ITable<_SYS_DATA_ANONYMIZATION_RuntimeData> table, string AnonymizationId, string ParameterKey)
		{
			return table.FirstOrDefault(t =>
				t.AnonymizationId == AnonymizationId &&
				t.ParameterKey    == ParameterKey);
		}

		public static _SYS_XS_RuntimeJsonExtension Find(this ITable<_SYS_XS_RuntimeJsonExtension> table, string PackageId, string ObjectName, string ObjectSuffix)
		{
			return table.FirstOrDefault(t =>
				t.PackageId    == PackageId  &&
				t.ObjectName   == ObjectName &&
				t.ObjectSuffix == ObjectSuffix);
		}

		public static _SYS_XS_RuntimeJsonObject Find(this ITable<_SYS_XS_RuntimeJsonObject> table, string PackageId, string ObjectName, string ObjectSuffix)
		{
			return table.FirstOrDefault(t =>
				t.PackageId    == PackageId  &&
				t.ObjectName   == ObjectName &&
				t.ObjectSuffix == ObjectSuffix);
		}

		public static _SYS_XS_SamlProviderConfig Find(this ITable<_SYS_XS_SamlProviderConfig> table, string SamlProvider, byte ProfileType, byte BindingType)
		{
			return table.FirstOrDefault(t =>
				t.SamlProvider == SamlProvider &&
				t.ProfileType  == ProfileType  &&
				t.BindingType  == BindingType);
		}

		public static UIS_SapHanaUisDbConfiguration Find(this ITable<UIS_SapHanaUisDbConfiguration> table, string KEY)
		{
			return table.FirstOrDefault(t =>
				t.KEY == KEY);
		}

		public static UIS_SapHanaUisDbIntentAliasMappingV2 Find(this ITable<UIS_SapHanaUisDbIntentAliasMappingV2> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static UIS_SapHanaUisDbNavigationTarget Find(this ITable<UIS_SapHanaUisDbNavigationTarget> table, string AREA, string ALIAS)
		{
			return table.FirstOrDefault(t =>
				t.AREA  == AREA &&
				t.ALIAS == ALIAS);
		}

		public static UIS_SapHanaUisDbSemanticObject Find(this ITable<UIS_SapHanaUisDbSemanticObject> table, string SemanticObject)
		{
			return table.FirstOrDefault(t =>
				t.SemanticObject == SemanticObject);
		}

		public static UIS_SapHanaUisDbTheme Find(this ITable<UIS_SapHanaUisDbTheme> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static UIS_SapHanaUisDbUisCatalog Find(this ITable<UIS_SapHanaUisDbUisCatalog> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static UIS_SapHanaUisDbUisPermission Find(this ITable<UIS_SapHanaUisDbUisPermission> table, string ObjectId, string ObjectType, string RoleId, string OPERATION, string DTYPE, string TenantId, string NAMESPACE)
		{
			return table.FirstOrDefault(t =>
				t.ObjectId   == ObjectId   &&
				t.ObjectType == ObjectType &&
				t.RoleId     == RoleId     &&
				t.OPERATION  == OPERATION  &&
				t.DTYPE      == DTYPE      &&
				t.TenantId   == TenantId   &&
				t.NAMESPACE  == NAMESPACE);
		}

		public static SAP_REST_API_SapHanaXsDtBaseServerPersistencyExtensionWhitelist Find(this ITable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyExtensionWhitelist> table, int ExtensionID)
		{
			return table.FirstOrDefault(t =>
				t.ExtensionID == ExtensionID);
		}

		public static SAP_REST_API_SapHanaXsDtBaseServerPersistencyUserpreferencesUserPreferencesIntern Find(this ITable<SAP_REST_API_SapHanaXsDtBaseServerPersistencyUserpreferencesUserPreferencesIntern> table, string UserID, string Node)
		{
			return table.FirstOrDefault(t =>
				t.UserID == UserID &&
				t.Node   == Node);
		}

		public static HANA_XS_BASE_SapHanaXsFormLoginProfileDbUserPreference Find(this ITable<HANA_XS_BASE_SapHanaXsFormLoginProfileDbUserPreference> table, string KEY)
		{
			return table.FirstOrDefault(t =>
				t.KEY == KEY);
		}

		public static SAP_XS_LM_SapHanaXsLmDbConfiguration Find(this ITable<SAP_XS_LM_SapHanaXsLmDbConfiguration> table, string KEY)
		{
			return table.FirstOrDefault(t =>
				t.KEY == KEY);
		}

		public static SAP_XS_LM_SapHanaXsLmDbContainerDetail Find(this ITable<SAP_XS_LM_SapHanaXsLmDbContainerDetail> table, string ContainerId, string NAME, string VENDOR, string TYPE)
		{
			return table.FirstOrDefault(t =>
				t.ContainerId == ContainerId &&
				t.NAME        == NAME        &&
				t.VENDOR      == VENDOR      &&
				t.TYPE        == TYPE);
		}

		public static SAP_XS_LM_SapHanaXsLmDbContainerHeader Find(this ITable<SAP_XS_LM_SapHanaXsLmDbContainerHeader> table, string ContainerId)
		{
			return table.FirstOrDefault(t =>
				t.ContainerId == ContainerId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbContainerInstancesInternal Find(this ITable<SAP_XS_LM_SapHanaXsLmDbContainerInstancesInternal> table, string ContainerId, string InstanceId)
		{
			return table.FirstOrDefault(t =>
				t.ContainerId == ContainerId &&
				t.InstanceId  == InstanceId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbContainerPvInternal Find(this ITable<SAP_XS_LM_SapHanaXsLmDbContainerPvInternal> table, string ContainerId)
		{
			return table.FirstOrDefault(t =>
				t.ContainerId == ContainerId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbContainerScvInternal Find(this ITable<SAP_XS_LM_SapHanaXsLmDbContainerScvInternal> table, string ContainerId, string NAME, string VENDOR)
		{
			return table.FirstOrDefault(t =>
				t.ContainerId == ContainerId &&
				t.NAME        == NAME        &&
				t.VENDOR      == VENDOR);
		}

		public static SAP_XS_LM_SapHanaXsLmDbContent Find(this ITable<SAP_XS_LM_SapHanaXsLmDbContent> table, long ContentId)
		{
			return table.FirstOrDefault(t =>
				t.ContentId == ContentId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbImportedDu Find(this ITable<SAP_XS_LM_SapHanaXsLmDbImportedDu> table, string ProcessId, long ContentId)
		{
			return table.FirstOrDefault(t =>
				t.ProcessId == ProcessId &&
				t.ContentId == ContentId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbInstallationContainerPvVariant Find(this ITable<SAP_XS_LM_SapHanaXsLmDbInstallationContainerPvVariant> table, string VariantId)
		{
			return table.FirstOrDefault(t =>
				t.VariantId == VariantId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbInstallationContainerScvVariant Find(this ITable<SAP_XS_LM_SapHanaXsLmDbInstallationContainerScvVariant> table, string VariantId)
		{
			return table.FirstOrDefault(t =>
				t.VariantId == VariantId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbProcess Find(this ITable<SAP_XS_LM_SapHanaXsLmDbProcess> table, string ProcessId)
		{
			return table.FirstOrDefault(t =>
				t.ProcessId == ProcessId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbProductsExtension Find(this ITable<SAP_XS_LM_SapHanaXsLmDbProductsExtension> table, string NAME, string VENDOR)
		{
			return table.FirstOrDefault(t =>
				t.NAME   == NAME &&
				t.VENDOR == VENDOR);
		}

		public static SAP_XS_LM_SapHanaXsLmDbSlpTasksExt Find(this ITable<SAP_XS_LM_SapHanaXsLmDbSlpTasksExt> table, string TaskId)
		{
			return table.FirstOrDefault(t =>
				t.TaskId == TaskId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbSystem Find(this ITable<SAP_XS_LM_SapHanaXsLmDbSystem> table, long SystemId)
		{
			return table.FirstOrDefault(t =>
				t.SystemId == SystemId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbTransportContent Find(this ITable<SAP_XS_LM_SapHanaXsLmDbTransportContent> table, long TransportContentId)
		{
			return table.FirstOrDefault(t =>
				t.TransportContentId == TransportContentId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbTransportRoute Find(this ITable<SAP_XS_LM_SapHanaXsLmDbTransportRoute> table, long TransportRouteId)
		{
			return table.FirstOrDefault(t =>
				t.TransportRouteId == TransportRouteId);
		}

		public static SAP_XS_LM_SapHanaXsLmDbTransportRouteDu Find(this ITable<SAP_XS_LM_SapHanaXsLmDbTransportRouteDu> table, long TransportRouteId, string VENDOR, string NAME)
		{
			return table.FirstOrDefault(t =>
				t.TransportRouteId == TransportRouteId &&
				t.VENDOR           == VENDOR           &&
				t.NAME             == NAME);
		}

		public static SAP_XS_LM_SapHanaXsLmDbUploadedFile Find(this ITable<SAP_XS_LM_SapHanaXsLmDbUploadedFile> table, string UploadId, long ContentId)
		{
			return table.FirstOrDefault(t =>
				t.UploadId  == UploadId &&
				t.ContentId == ContentId);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeContentDemoDbDemoVariantContainer Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeContentDemoDbDemoVariantContainer> table, string VariantId)
		{
			return table.FirstOrDefault(t =>
				t.VariantId == VariantId);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbActivationObject Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationObject> table, string PackageId, string ObjectName, string ObjectSuffix)
		{
			return table.FirstOrDefault(t =>
				t.PackageId    == PackageId  &&
				t.ObjectName   == ObjectName &&
				t.ObjectSuffix == ObjectSuffix);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbActivationValueBuffer Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationValueBuffer> table, string ActivationKey)
		{
			return table.FirstOrDefault(t =>
				t.ActivationKey == ActivationKey);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVariant Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbActivationVariant> table, string VariantId)
		{
			return table.FirstOrDefault(t =>
				t.VariantId == VariantId);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbApplicationVariant Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbApplicationVariant> table, string ServiceId, string VariantId)
		{
			return table.FirstOrDefault(t =>
				t.ServiceId == ServiceId &&
				t.VariantId == VariantId);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbLog Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbLog> table, string ID, DateTime MsgTs)
		{
			return table.FirstOrDefault(t =>
				t.ID    == ID &&
				t.MsgTs == MsgTs);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbProcess Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcess> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbProcessParameter Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessParameter> table, string ProcessId, string ParameterTable, int TaskPos, string ParameterName, int ROW)
		{
			return table.FirstOrDefault(t =>
				t.ProcessId      == ProcessId      &&
				t.ParameterTable == ParameterTable &&
				t.TaskPos        == TaskPos        &&
				t.ParameterName  == ParameterName  &&
				t.ROW            == ROW);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbProcessSemaphore Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessSemaphore> table, string ProcessId)
		{
			return table.FirstOrDefault(t =>
				t.ProcessId == ProcessId);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbProcessService Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessService> table, int SnapshotId, string ID)
		{
			return table.FirstOrDefault(t =>
				t.SnapshotId == SnapshotId &&
				t.ID         == ID);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbProcessServiceStep Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessServiceStep> table, int SnapshotId, string ServiceId, int POS)
		{
			return table.FirstOrDefault(t =>
				t.SnapshotId == SnapshotId &&
				t.ServiceId  == ServiceId  &&
				t.POS        == POS);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbProcessServiceVariant Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessServiceVariant> table, int SnapshotId, string ServiceId, string VarContSchema, string VarContTable)
		{
			return table.FirstOrDefault(t =>
				t.SnapshotId    == SnapshotId    &&
				t.ServiceId     == ServiceId     &&
				t.VarContSchema == VarContSchema &&
				t.VarContTable  == VarContTable);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbProcessTask Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessTask> table, string ProcessId, int POS)
		{
			return table.FirstOrDefault(t =>
				t.ProcessId == ProcessId &&
				t.POS       == POS);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbProcessVariable Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbProcessVariable> table, string ProcessId, string ParameterTable)
		{
			return table.FirstOrDefault(t =>
				t.ProcessId      == ProcessId &&
				t.ParameterTable == ParameterTable);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbScenario Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbScenario> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioPhase Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbScenarioPhase> table, string ScenarioId, int POS)
		{
			return table.FirstOrDefault(t =>
				t.ScenarioId == ScenarioId &&
				t.POS        == POS);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbService Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbService> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbServiceStep Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceStep> table, string ServiceId, int POS)
		{
			return table.FirstOrDefault(t =>
				t.ServiceId == ServiceId &&
				t.POS       == POS);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbServiceVariant Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbServiceVariant> table, string ServiceId, string VarContSchema, string VarContTable)
		{
			return table.FirstOrDefault(t =>
				t.ServiceId     == ServiceId     &&
				t.VarContSchema == VarContSchema &&
				t.VarContTable  == VarContTable);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbTextRepository Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbTextRepository> table, string ID, string LANG)
		{
			return table.FirstOrDefault(t =>
				t.ID   == ID &&
				t.LANG == LANG);
		}

		public static SAP_XS_LM_PE_SapHanaXsLmPeDbXsscriptParameter Find(this ITable<SAP_XS_LM_PE_SapHanaXsLmPeDbXsscriptParameter> table, string EXECUTABLE, string ParameterName)
		{
			return table.FirstOrDefault(t =>
				t.EXECUTABLE    == EXECUTABLE &&
				t.ParameterName == ParameterName);
		}

		public static SAP_XS_LM_SapHanaXsLmSlpFile Find(this ITable<SAP_XS_LM_SapHanaXsLmSlpFile> table, long ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static SAP_XS_LM_SapHanaXsLmSlpLog Find(this ITable<SAP_XS_LM_SapHanaXsLmSlpLog> table, string ID, string CollectionId)
		{
			return table.FirstOrDefault(t =>
				t.ID           == ID &&
				t.CollectionId == CollectionId);
		}

		public static SAP_XS_LM_SapHanaXsLmSlpProcess Find(this ITable<SAP_XS_LM_SapHanaXsLmSlpProcess> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static SAP_XS_LM_SapHanaXsLmSlpTask Find(this ITable<SAP_XS_LM_SapHanaXsLmSlpTask> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static SAP_XS_USAGE_SapHanaXsLmUsageDbSusage Find(this ITable<SAP_XS_USAGE_SapHanaXsLmUsageDbSusage> table, string PPMSPV, string FEATURE, string TYPE, string SUBTYPE, string CalendarMonth)
		{
			return table.FirstOrDefault(t =>
				t.PPMSPV        == PPMSPV  &&
				t.FEATURE       == FEATURE &&
				t.TYPE          == TYPE    &&
				t.SUBTYPE       == SUBTYPE &&
				t.CalendarMonth == CalendarMonth);
		}

		public static HANA_XS_BASE_SapHanaXsSelfServiceAdminDbAccessList Find(this ITable<HANA_XS_BASE_SapHanaXsSelfServiceAdminDbAccessList> table, string ITEM)
		{
			return table.FirstOrDefault(t =>
				t.ITEM == ITEM);
		}

		public static HANA_XS_BASE_SapHanaXsSelfServiceAdminDbUssEmailTemplate Find(this ITable<HANA_XS_BASE_SapHanaXsSelfServiceAdminDbUssEmailTemplate> table, string TemplateId)
		{
			return table.FirstOrDefault(t =>
				t.TemplateId == TemplateId);
		}

		public static HANA_XS_BASE_SapHanaXsSelfServiceUserDbSecurityQuestion Find(this ITable<HANA_XS_BASE_SapHanaXsSelfServiceUserDbSecurityQuestion> table, string QuestionId)
		{
			return table.FirstOrDefault(t =>
				t.QuestionId == QuestionId);
		}

		public static HANA_XS_BASE_SapHanaXsSelfServiceUserDbUserRequest Find(this ITable<HANA_XS_BASE_SapHanaXsSelfServiceUserDbUserRequest> table, string UserName)
		{
			return table.FirstOrDefault(t =>
				t.UserName == UserName);
		}

		public static _SYS_EPM_SavedContainer Find(this ITable<_SYS_EPM_SavedContainer> table, string UserName, string SchemaName, string ModelName, int VERSION, string CONTAINER)
		{
			return table.FirstOrDefault(t =>
				t.UserName   == UserName   &&
				t.SchemaName == SchemaName &&
				t.ModelName  == ModelName  &&
				t.VERSION    == VERSION    &&
				t.CONTAINER  == CONTAINER);
		}

		public static _SYS_EPM_SCHEMAVERSION Find(this ITable<_SYS_EPM_SCHEMAVERSION> table, string SchemaType)
		{
			return table.FirstOrDefault(t =>
				t.SchemaType == SchemaType);
		}

		public static _SYS_XS_SecureStore Find(this ITable<_SYS_XS_SecureStore> table, string StoreId, long UserId, string DataId)
		{
			return table.FirstOrDefault(t =>
				t.StoreId == StoreId &&
				t.UserId  == UserId  &&
				t.DataId  == DataId);
		}

		public static _SYS_XS_SecureStoreList Find(this ITable<_SYS_XS_SecureStoreList> table, string PackageId, string ObjectName)
		{
			return table.FirstOrDefault(t =>
				t.PackageId  == PackageId &&
				t.ObjectName == ObjectName);
		}

		public static _SYS_XS_SqlConnection Find(this ITable<_SYS_XS_SqlConnection> table, string NAME)
		{
			return table.FirstOrDefault(t =>
				t.NAME == NAME);
		}

		public static _SYS_SECURITY_SysObjectPrivilege Find(this ITable<_SYS_SECURITY_SysObjectPrivilege> table, string ObjectType, string PRIVILEGE)
		{
			return table.FirstOrDefault(t =>
				t.ObjectType == ObjectType &&
				t.PRIVILEGE  == PRIVILEGE);
		}

		public static _SYS_SECURITY_SysPasswordBlacklist Find(this ITable<_SYS_SECURITY_SysPasswordBlacklist> table, string BlacklistTerm, string CheckPartialPassword, string CheckCaseSensitive)
		{
			return table.FirstOrDefault(t =>
				t.BlacklistTerm        == BlacklistTerm        &&
				t.CheckPartialPassword == CheckPartialPassword &&
				t.CheckCaseSensitive   == CheckCaseSensitive);
		}

		public static _SYS_TASK_TaskClientMapping Find(this ITable<_SYS_TASK_TaskClientMapping> table, long TaskOid)
		{
			return table.FirstOrDefault(t =>
				t.TaskOid == TaskOid);
		}

		public static _SYS_TASK_TaskColumnDefinitions Find(this ITable<_SYS_TASK_TaskColumnDefinitions> table, long TaskOid, int OperationId, int TableId, int ColumnId)
		{
			return table.FirstOrDefault(t =>
				t.TaskOid     == TaskOid     &&
				t.OperationId == OperationId &&
				t.TableId     == TableId     &&
				t.ColumnId    == ColumnId);
		}

		public static _SYS_TASK_TaskExecutions Find(this ITable<_SYS_TASK_TaskExecutions> table, long TaskOid, long TaskExecutionId)
		{
			return table.FirstOrDefault(t =>
				t.TaskOid         == TaskOid &&
				t.TaskExecutionId == TaskExecutionId);
		}

		public static _SYS_TASK_TaskLocalization Find(this ITable<_SYS_TASK_TaskLocalization> table, int LocTypeId, string LocId, char LANGUAGE)
		{
			return table.FirstOrDefault(t =>
				t.LocTypeId == LocTypeId &&
				t.LocId     == LocId     &&
				t.LANGUAGE  == LANGUAGE);
		}

		public static _SYS_TASK_TaskOperations Find(this ITable<_SYS_TASK_TaskOperations> table, int TaskOid, int OperationId)
		{
			return table.FirstOrDefault(t =>
				t.TaskOid     == TaskOid &&
				t.OperationId == OperationId);
		}

		public static _SYS_TASK_TaskOperationsExecutions Find(this ITable<_SYS_TASK_TaskOperationsExecutions> table, long TaskExecutionId, int PartitionId, string OperationName)
		{
			return table.FirstOrDefault(t =>
				t.TaskExecutionId == TaskExecutionId &&
				t.PartitionId     == PartitionId     &&
				t.OperationName   == OperationName);
		}

		public static _SYS_TASK_TaskPartitionExecutions Find(this ITable<_SYS_TASK_TaskPartitionExecutions> table, long TaskOid, long TaskExecutionId, long PartitionId)
		{
			return table.FirstOrDefault(t =>
				t.TaskOid         == TaskOid         &&
				t.TaskExecutionId == TaskExecutionId &&
				t.PartitionId     == PartitionId);
		}

		public static _SYS_TASK_TaskTableDefinitions Find(this ITable<_SYS_TASK_TaskTableDefinitions> table, long TaskOid, int OperationId, int TableId)
		{
			return table.FirstOrDefault(t =>
				t.TaskOid     == TaskOid     &&
				t.OperationId == OperationId &&
				t.TableId     == TableId);
		}

		public static _SYS_TASK_TaskTableRelationships Find(this ITable<_SYS_TASK_TaskTableRelationships> table, long TaskOid, int OperationId, int TableId, int RelatedTableId, string FromAttribute, string ToAttribute)
		{
			return table.FirstOrDefault(t =>
				t.TaskOid        == TaskOid        &&
				t.OperationId    == OperationId    &&
				t.TableId        == TableId        &&
				t.RelatedTableId == RelatedTableId &&
				t.FromAttribute  == FromAttribute  &&
				t.ToAttribute    == ToAttribute);
		}

		public static _SYS_EPM_TemporaryContainer Find(this ITable<_SYS_EPM_TemporaryContainer> table, string UserName, string SchemaName, string ModelName, int VERSION, string CONTAINER)
		{
			return table.FirstOrDefault(t =>
				t.UserName   == UserName   &&
				t.SchemaName == SchemaName &&
				t.ModelName  == ModelName  &&
				t.VERSION    == VERSION    &&
				t.CONTAINER  == CONTAINER);
		}

		public static TESTHANAODBC_TestIdentity Find(this ITable<TESTHANAODBC_TestIdentity> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static TestIdentity Find(this ITable<TestIdentity> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static TESTHANAODBC_TestMerge1 Find(this ITable<TESTHANAODBC_TestMerge1> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TestMerge1 Find(this ITable<TestMerge1> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TESTHANAODBC_TestMerge2 Find(this ITable<TESTHANAODBC_TestMerge2> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TestMerge2 Find(this ITable<TestMerge2> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static _SYS_RT_TiImportKey Find(this ITable<_SYS_RT_TiImportKey> table, string TableSchema, string TableName, string TiPackage, string TiName, string TiType, string CsvPackage, string CsvName, string CsvFileext, string KeyColumnName, string KeyValue)
		{
			return table.FirstOrDefault(t =>
				t.TableSchema   == TableSchema   &&
				t.TableName     == TableName     &&
				t.TiPackage     == TiPackage     &&
				t.TiName        == TiName        &&
				t.TiType        == TiType        &&
				t.CsvPackage    == CsvPackage    &&
				t.CsvName       == CsvName       &&
				t.CsvFileext    == CsvFileext    &&
				t.KeyColumnName == KeyColumnName &&
				t.KeyValue      == KeyValue);
		}

		public static _SYS_RT_UisAppsite Find(this ITable<_SYS_RT_UisAppsite> table, string ID, string TenantId, string DTYPE)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.TenantId == TenantId &&
				t.DTYPE    == DTYPE);
		}

		public static _SYS_RT_UisAppsitePROPERTy Find(this ITable<_SYS_RT_UisAppsitePROPERTy> table, string ID, string TenantId, string DTYPE, string SiteId)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.TenantId == TenantId &&
				t.DTYPE    == DTYPE    &&
				t.SiteId   == SiteId);
		}

		public static _SYS_RT_UisPage Find(this ITable<_SYS_RT_UisPage> table, string ID, string TenantId, string DTYPE, string SiteId)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.TenantId == TenantId &&
				t.DTYPE    == DTYPE    &&
				t.SiteId   == SiteId);
		}

		public static _SYS_RT_UisPagePROPERTy Find(this ITable<_SYS_RT_UisPagePROPERTy> table, string ID, string SiteId, string PageId, string TenantId, string DTYPE)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.SiteId   == SiteId   &&
				t.PageId   == PageId   &&
				t.TenantId == TenantId &&
				t.DTYPE    == DTYPE);
		}

		public static _SYS_RT_UisUserAppsite Find(this ITable<_SYS_RT_UisUserAppsite> table, string ID, string UserName, string TenantId)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.UserName == UserName &&
				t.TenantId == TenantId);
		}

		public static _SYS_RT_UisUserAppsitePROPERTy Find(this ITable<_SYS_RT_UisUserAppsitePROPERTy> table, string ID, string TenantId, string SiteId, string UserName, string KEY)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.TenantId == TenantId &&
				t.SiteId   == SiteId   &&
				t.UserName == UserName &&
				t.KEY      == KEY);
		}

		public static _SYS_RT_UisUserPage Find(this ITable<_SYS_RT_UisUserPage> table, string ID, string UserName, string SiteId, string TenantId)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.UserName == UserName &&
				t.SiteId   == SiteId   &&
				t.TenantId == TenantId);
		}

		public static _SYS_RT_UisUserPagePROPERTy Find(this ITable<_SYS_RT_UisUserPagePROPERTy> table, string ID, string TenantId, string SiteId, string PageId, string UserName)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.TenantId == TenantId &&
				t.SiteId   == SiteId   &&
				t.PageId   == PageId   &&
				t.UserName == UserName);
		}

		public static _SYS_RT_UisUserWidget Find(this ITable<_SYS_RT_UisUserWidget> table, string ID, string UserName, string SiteId, string TenantId)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.UserName == UserName &&
				t.SiteId   == SiteId   &&
				t.TenantId == TenantId);
		}

		public static _SYS_RT_UisUserWidgetPROPERTy Find(this ITable<_SYS_RT_UisUserWidgetPROPERTy> table, string ID, string UserName, string WidgetId, string SiteId, string TenantId)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.UserName == UserName &&
				t.WidgetId == WidgetId &&
				t.SiteId   == SiteId   &&
				t.TenantId == TenantId);
		}

		public static _SYS_RT_UisWidget Find(this ITable<_SYS_RT_UisWidget> table, string ID, string TenantId, string DTYPE, string SiteId)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.TenantId == TenantId &&
				t.DTYPE    == DTYPE    &&
				t.SiteId   == SiteId);
		}

		public static _SYS_RT_UisWidgetPROPERTy Find(this ITable<_SYS_RT_UisWidgetPROPERTy> table, string ID, string WidgetId, string SiteId, string TenantId, string DTYPE)
		{
			return table.FirstOrDefault(t =>
				t.ID       == ID       &&
				t.WidgetId == WidgetId &&
				t.SiteId   == SiteId   &&
				t.TenantId == TenantId &&
				t.DTYPE    == DTYPE);
		}

		public static _SYS_RT_UisWidgetTemplate Find(this ITable<_SYS_RT_UisWidgetTemplate> table, string ID, string TenantId, string RepositoryId)
		{
			return table.FirstOrDefault(t =>
				t.ID           == ID       &&
				t.TenantId     == TenantId &&
				t.RepositoryId == RepositoryId);
		}

		public static _SYS_RT_UisWidgetTemplateList Find(this ITable<_SYS_RT_UisWidgetTemplateList> table, string TenantId, string RepositoryId)
		{
			return table.FirstOrDefault(t =>
				t.TenantId     == TenantId &&
				t.RepositoryId == RepositoryId);
		}

		public static _SYS_RT_UisWidgetTemplatePROPERTy Find(this ITable<_SYS_RT_UisWidgetTemplatePROPERTy> table, string ID, string TenantId, string RepositoryId, string WidgetTemplateId, string KEY)
		{
			return table.FirstOrDefault(t =>
				t.ID               == ID               &&
				t.TenantId         == TenantId         &&
				t.RepositoryId     == RepositoryId     &&
				t.WidgetTemplateId == WidgetTemplateId &&
				t.KEY              == KEY);
		}

		public static _SYS_XS_UsageMeasuringObject Find(this ITable<_SYS_XS_UsageMeasuringObject> table, string APP, string NAME)
		{
			return table.FirstOrDefault(t =>
				t.APP  == APP &&
				t.NAME == NAME);
		}

		public static _SYS_EPM_VERSION Find(this ITable<_SYS_EPM_VERSION> table, string UserName, string SchemaName, string ModelName, int VERSIONColumn)
		{
			return table.FirstOrDefault(t =>
				t.UserName      == UserName   &&
				t.SchemaName    == SchemaName &&
				t.ModelName     == ModelName  &&
				t.VERSIONColumn == VERSIONColumn);
		}

		public static _SYS_EPM_VersionPrivilege Find(this ITable<_SYS_EPM_VersionPrivilege> table, string GRANTOR, string ModelSchema, string ModelName, string QuerySourceSchema, string QuerySourceName, int VERSION, string GRANTEE, string PRIVILEGE)
		{
			return table.FirstOrDefault(t =>
				t.GRANTOR           == GRANTOR           &&
				t.ModelSchema       == ModelSchema       &&
				t.ModelName         == ModelName         &&
				t.QuerySourceSchema == QuerySourceSchema &&
				t.QuerySourceName   == QuerySourceName   &&
				t.VERSION           == VERSION           &&
				t.GRANTEE           == GRANTEE           &&
				t.PRIVILEGE         == PRIVILEGE);
		}

		public static _SYS_EPM_VersionState Find(this ITable<_SYS_EPM_VersionState> table, string UserName, string SchemaName, string ModelName, int VERSION)
		{
			return table.FirstOrDefault(t =>
				t.UserName   == UserName   &&
				t.SchemaName == SchemaName &&
				t.ModelName  == ModelName  &&
				t.VERSION    == VERSION);
		}
	}
}

#pragma warning restore 1591
