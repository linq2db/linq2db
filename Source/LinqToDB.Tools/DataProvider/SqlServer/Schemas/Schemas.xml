<?xml version="1.0" encoding="utf-8"?>
<!-- This file is generated. -->
<tables>
  <table name="sys.availability_databases_cluster" category="Availability" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-databases-cluster-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.availability_databases_cluster (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each availability database on the instance of SQL Server that is hosting an availability replica for any Always On availability group in the Windows Server Failover Clustering (WSFC) cluster, regardless of whether the local copy database has been joined to the availability group yet.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
When a database is added to an availability group, the primary database is automatically joined to the group. Secondary databases must be prepared on each secondary replica before they can be joined to the availability group. &lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="group_id" type="uniqueidentifier">Unique identifier of the availability group in which the availability group, if any, in which the database is participating.&lt;br /&gt;&lt;br /&gt; NULL = database is not part of an availability replica of in availability group.</column>
    <column name="group_database_id" type="uniqueidentifier">Unique identifier of the database within the availability group, if any, in which the database is participating. &lt;strong&gt;group_database_id&lt;/strong&gt; is the same for this database on the primary replica and on every secondary replica on which the database has been joined to the availability group.&lt;br /&gt;&lt;br /&gt; NULL = database is not part of an availability replica in any availability group.</column>
    <column name="database_name" type="sysname">Name of the database that was added to the availability group.</column>
  </table>
  <table name="sys.availability_group_listener_ip_addresses" category="Availability" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-group-listener-ip-addresses-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.availability_group_listener_ip_addresses (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for every IP address that is associated with any Always On availability group listener in the Windows Server Failover Clustering (WSFC) cluster.&lt;br/&gt;
 Primary key:  &lt;strong&gt;listener_id&lt;/strong&gt; + &lt;strong&gt;ip_address&lt;/strong&gt; + &lt;strong&gt;ip_sub_mask&lt;/strong&gt;&lt;/para&gt;</description>
    <column name="listener_id" type="nvarchar(36)">Resource GUID from Windows Server Failover Clustering (WSFC) cluster.</column>
    <column name="ip_address" type="nvarchar(48)">Configured virtual IP address of the availability group listener. Returns a single IPv4 or IPv6 address.</column>
    <column name="ip_subnet_mask" type="nvarchar(15)">Configured IP subnet mask for the IPv4 address, if any, that is configured for the availability group listener.&lt;br /&gt;&lt;br /&gt; NULL = IPv6 subnet</column>
    <column name="is_dhcp" type="bit">Whether the IP address is configured by DHCP, one of:&lt;br /&gt;&lt;br /&gt; 0 = IP address is not configured by DHCP.&lt;br /&gt;&lt;br /&gt; 1 = IP address is configured by DHCP</column>
    <column name="network_subnet_ip" type="nvarchar(48)">Network subnet IP address that specifies the subnet to which the IP address belongs.</column>
    <column name="network_subnet_prefix_length" type="int">Network subnet prefix length of the subnet to which the IP address belongs.</column>
    <column name="network_subnet_ipv4_mask" type="nvarchar(45)">Network subnet mask of the subnet to which the IP address belongs. &lt;strong&gt;network_subnet_ipv4_mask&lt;/strong&gt; to specify the DHCP &lt;network_subnet_option&gt; options in a WITH DHCP clause of the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-availability-group-transact-sql'&gt;CREATE AVAILABILITY GROUP&lt;/a&gt; or &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-availability-group-transact-sql'&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement.&lt;br /&gt;&lt;br /&gt; NULL = IPv6 subnet</column>
    <column name="state" type="tinyint">IP resource ONLINE/OFFLINE state from the WSFC cluster, one of:&lt;br /&gt;&lt;br /&gt; 1 = Online. IP resource is online.&lt;br /&gt;&lt;br /&gt; 0 = Offline. IP resource is offline.&lt;br /&gt;&lt;br /&gt; 2 = Online Pending. IP resource is offline but is being brought online.&lt;br /&gt;&lt;br /&gt; 3 = Failed. IP resource was being brought online but failed.</column>
    <column name="state_desc" type="nvarchar(60)">Description of &lt;strong&gt;state&lt;/strong&gt;, one of:&lt;br /&gt;&lt;br /&gt; ONLINE&lt;br /&gt;&lt;br /&gt; OFFLINE&lt;br /&gt;&lt;br /&gt; ONLINE_PENDING&lt;br /&gt;&lt;br /&gt; FAILED</column>
  </table>
  <table name="sys.availability_group_listeners" category="Availability" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-group-listeners-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.availability_group_listeners (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;For each Always On availability group, returns either zero rows indicating that no network name is associated with the availability group, or returns a row for each availability-group listener configuration in the Windows Server Failover Clustering (WSFC) cluster. This view displays the real-time configuration gathered from cluster.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
This catalog view does not describe details of an IP configuration, that was defined in the WSFC cluster.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="group_id" type="uniqueidentifier">Availability group ID (&lt;strong&gt;group_id&lt;/strong&gt;) from &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-groups-transact-sql'&gt;sys.availability_groups&lt;/a&gt;.</column>
    <column name="listener_id" type="nvarchar(36)">GUID from the cluster resource ID.</column>
    <column name="dns_name" type="nvarchar(63)">Configured network name (hostname) of the availability group listener.</column>
    <column name="port" type="int">The TCP port number configured for the availability group listener.&lt;br /&gt;&lt;br /&gt; NULL = Listener was configured outside SQL Server and its port number has not been added to the availability group. To add the port, pleaseuse the MODIFY LISTENER  option of the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-availability-group-transact-sql'&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement.</column>
    <column name="is_conformant" type="bit">Whether this IP configuration is conformant, one of:&lt;br /&gt;&lt;br /&gt; 1 = Listener is conformant. Only "OR" relations exist among its Internet Protocol (IP) addresses. *Conformant* encompasses every an IP configuration that was created by the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-availability-group-transact-sql'&gt;CREATE AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement. In addition, if an IP configuration that was created outside of SQL Server, for example by using the WSFC Failover Cluster Manager, but can be modified by the ALTER AVAILABILITY GROUP tsql statement, the IP configuration qualifies as conformant.&lt;br /&gt;&lt;br /&gt; 0 = Listener is nonconformant. Typically, this indicates  an IP address that could not be configured by using SQL Server commands and, instead, was defined directly in the WSFC cluster.</column>
    <column name="ip_configuration_string_from_cluster" type="nvarchar(max)">Cluster IP configuration strings, if any, for this listener. NULL = Listener has no virtual IP addresses. For example:&lt;br /&gt;&lt;br /&gt; IPv4 address:  &lt;c&gt;65.55.39.10&lt;/c&gt;.&lt;br /&gt;&lt;br /&gt; IPv6 address:  &lt;c&gt;2001::4898:23:1002:20f:1fff:feff:b3a3&lt;/c&gt;</column>
  </table>
  <table name="sys.availability_groups" category="Availability" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-groups-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.availability_groups (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each availability group for which the local instance of SQL Server hosts an availability replica. Each row contains a cached copy of the availability group metadata.&lt;/para&gt;</description>
    <column name="group_id" type="uniqueidentifier">Unique identifier (GUID) of the availability group.</column>
    <column name="name" type="sysname">Name of the availability group. This is a user-specified name that must be unique within the Windows Server Failover Cluster (WSFC).</column>
    <column name="resource_id" type="nvarchar(40)">Resource ID for the WSFC cluster resource.</column>
    <column name="resource_group_id" type="nvarchar(40)">Resource Group ID for the WSFC cluster resource group of the availability group.</column>
    <column name="failure_condition_level" type="int">User-defined failure condition level under which an automatic failover must be triggered, one of the integer values shown in the table immediately below this table.&lt;br /&gt;&lt;br /&gt; The failure-condition levels (1-5) range from the least restrictive, level 1, to the most restrictive, level 5. A given condition level encompasses all of the less restrictive levels. Thus, the strictest condition level, 5, includes the four less restrictive condition levels (1-4), level 4 includes levels 1-3, and so forth.&lt;br /&gt;&lt;br /&gt; To change this value, use the FAILURE_CONDITION_LEVEL option of the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-availability-group-transact-sql'&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement.</column>
    <column name="health_check_timeout" type="int">Wait time (in milliseconds) for the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-server-diagnostics-transact-sql'&gt;sp_server_diagnostics&lt;/a&gt; system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding. The default value is 30000 milliseconds (30 seconds).&lt;br /&gt;&lt;br /&gt; To change this value, use the HEALTH_CHECK_TIMEOUT option of the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-availability-group-transact-sql'&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement.</column>
    <column name="automated_backup_preference" type="tinyint">Preferred location for performing backups on the availability databases in this availability group. The following are the possible values and their descriptions.&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; 0 : Primary. Backups should always occur on the primary replica.&lt;br /&gt;&lt;br /&gt; 1 : Secondary only. Performing backups on a secondary replica is preferable.&lt;br /&gt;&lt;br /&gt; 2 : Prefer Secondary. Performing backups on a secondary replica preferable, but performing backups on the primary replica is acceptable if no secondary replica is available for backup operations. This is the default behavior.&lt;br /&gt;&lt;br /&gt; 3 : Any Replica. No preference about whether backups are performed on the primary replica or on a secondary replica.&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/active-secondaries-backup-on-secondary-replicas-always-on-availability-groups'&gt;Active Secondaries: Backup on Secondary Replicas (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="automated_backup_preference_desc" type="nvarchar(60)">Description of &lt;strong&gt;automated_backup_preference&lt;/strong&gt;, one of:&lt;br /&gt;&lt;br /&gt; PRIMARY&lt;br /&gt;&lt;br /&gt; SECONDARY_ONLY&lt;br /&gt;&lt;br /&gt; SECONDARY&lt;br /&gt;&lt;br /&gt; NONE</column>
    <column name="version" type="smallint">The version of the availability group metadata stored in the Windows Failover Cluster. This version number is incremented when new features are added.</column>
    <column name="basic_features" type="bit">Specifies whether this is a Basic availability group. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/basic-availability-groups-always-on-availability-groups'&gt;Basic Availability Groups (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="dtc_support" type="bit">Specifies whether DTC support has been enabled for this availability group. The &lt;strong&gt;DTC_SUPPORT&lt;/strong&gt; option of &lt;strong&gt;CREATE AVAILABILITY GROUP&lt;/strong&gt; controls this setting.</column>
    <column name="db_failover" type="bit">Specifies whether the availability group supports failover for database health conditions. The &lt;strong&gt;DB_FAILOVER&lt;/strong&gt; option of &lt;strong&gt;CREATE AVAILABILITY GROUP&lt;/strong&gt; controls this setting.</column>
    <column name="is_distributed" type="bit">Specifies whether this is a distributed availability group. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/distributed-availability-groups'&gt;Distributed Availability Groups (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="cluster_type" type="tinyint">0: Windows Server failover cluster &lt;br/&gt;&lt;br/&gt;1: External cluster (for example, Linux Pacemaker)&lt;br/&gt;&lt;br/&gt;2: None</column>
    <column name="cluster_type_desc" type="nvarchar(60)">Text description of cluster type</column>
    <column name="required_synchronized_secondaries_to_commit" type="int">The number of secondary replicas that must be in a synchronized state for a commit  to complete</column>
    <column name="sequence_number" type="bigint">Identifies the availability group configuration sequence. Incrementally increases every time the availability group primary replica updates the configuration of the group.</column>
    <column name="is_contained" type="bit">1: Big data cluster master instance configured for high-availability. &lt;br/&gt;&lt;br/&gt; 0: all other.</column>
  </table>
  <table name="sys.availability_groups_cluster" category="Availability" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-groups-cluster-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.availability_groups_cluster (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each Always On availability group in the Windows Server Failover Clustering (WSFC) . Each row contains the availability group metadata from the WSFC cluster.&lt;/para&gt;</description>
    <column name="group_id" type="uniqueidentifier">Unique identifier (GUID) of the availability group.</column>
    <column name="name" type="sysname">Name of the availability group. This is a user-specified name that must be unique within the Windows Server Failover Cluster (WSFC).</column>
    <column name="resource_id" type="nvarchar(40)">Resource ID for the WSFC cluster resource.</column>
    <column name="resource_group_id" type="nvarchar(40)">Resource Group ID for the WSFC cluster resource group of the availability group.</column>
    <column name="failure_condition_level" type="int">User-defined failure condition level under which an automatic failover must be triggered, one of the following integer values:&lt;br /&gt;&lt;br /&gt; 1: Specifies that an automatic failover should be initiated when any of the following occurs: &lt;br /&gt;- The SQL Server service is down.&lt;br /&gt;- The lease of the availability group for connecting to the WSFC failover cluster expires because no ACK is received from the server instance. For more information, see &lt;a href='https://techcommunity.microsoft.com/t5/sql-server-support/how-it-works-sql-server-alwayson-lease-timeout/ba-p/317268'&gt;How It Works: SQL Server Always On Lease Timeout&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; 2: Specifies that an automatic failover should be initiated when any of the following occurs:  &lt;br /&gt;- The instance of SQL Server does not connect to cluster, and the user-specified &lt;strong&gt;health_check_timeout&lt;/strong&gt; threshold of the availability group is exceeded. &lt;br /&gt;- The availability replica is in failed state. &lt;br /&gt;3: Specifies that an automatic failover should be initiated on critical SQL Server internal errors, such as orphaned spinlocks, serious write-access violations, or too much dumping. This is the default value. &lt;br /&gt;4: Specifies that an automatic failover should be initiated on moderate SQL Server internal errors, such as a persistent out-of-memory condition in the SQL Server internal resource pool.&lt;br /&gt;5: Specifies that an automatic failover should be initiated on any qualified failure conditions, including:&lt;br /&gt;- Exhaustion of SQL Engine worker-threads. &lt;br /&gt;- Detection of an unsolvable deadlock.&lt;br /&gt;&lt;br /&gt; The failure-condition levels (1-5) range from the least restrictive, level 1, to the most restrictive, level 5. A given condition level encompasses all of the less restrictive levels. Thus, the strictest condition level, 5, includes the four less restrictive condition levels (1-4), level 4 includes levels 1-3, and so forth.&lt;br /&gt;&lt;br /&gt; To change this value, use the FAILURE_CONDITION_LEVEL option of the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-availability-group-transact-sql'&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement.</column>
    <column name="health_check_timeout" type="int">Wait time (in milliseconds) for the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-server-diagnostics-transact-sql'&gt;sp_server_diagnostics&lt;/a&gt; system stored procedure to return server-health information, before the server instance is assumed to be slow or not responding. The default value is 30000 milliseconds (30 seconds).&lt;br /&gt;&lt;br /&gt; To change this value, use the HEALTH_CHECK_TIMEOUT option of &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-availability-group-transact-sql'&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement.</column>
    <column name="automated_backup_preference" type="tinyint">Preferred location for performing backups on the availability databases in this availability group. One of the following values:&lt;br /&gt;&lt;br /&gt; 0: Primary. Backups should always occur on the primary replica.&lt;br /&gt;1: Secondary only. Performing backups on a secondary replica is preferable.&lt;br /&gt;2: Prefer Secondary. Performing backups on a secondary replica preferable, but performing backups on the primary replica is acceptable if no secondary replica is available for backup operations. This is the default behavior.&lt;br /&gt;3: Any Replica. No preference about whether backups are performed on the primary replica or on a secondary replica.&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/active-secondaries-backup-on-secondary-replicas-always-on-availability-groups'&gt;Active Secondaries: Backup on Secondary Replicas (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="automated_backup_preference_desc" type="nvarchar(60)">Description of &lt;strong&gt;automated_backup_preference&lt;/strong&gt;, one of:&lt;br /&gt;&lt;br /&gt; PRIMARY&lt;br /&gt;&lt;br /&gt; SECONDARY_ONLY&lt;br /&gt;&lt;br /&gt; SECONDARY&lt;br /&gt;&lt;br /&gt; NONE</column>
  </table>
  <table name="sys.availability_read_only_routing_lists" category="Availability" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-read-only-routing-lists-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.availability_read_only_routing_lists (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for the read only routing list of each availability replica in an Always On availability group in the WSFC failover cluster.&lt;/para&gt;</description>
    <column name="replica_id" type="uniqueidentifier">Unique ID of the availability replica that owns the routing list.</column>
    <column name="routing_priority" type="int">Priority order for routing (1 is first, 2 is second, and so forth).</column>
    <column name="read_only_replica_id" type="uniqueidentifier">Unique ID of the availability replica to which a read-only workload will be routed.</column>
  </table>
  <table name="sys.availability_replicas" category="Availability" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-replicas-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.availability_replicas (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each of the availability replicas that belong to any Always On availability group in the WSFC failover cluster.&lt;br/&gt;
If the local server instance is unable to talk to the WSFC failover cluster, for example because the cluster is down or quorum has been lost, only rows for local availability replicas are returned. These rows will contain only the columns of data that are cached locally in metadata.&lt;/para&gt;</description>
    <column name="replica_id" type="uniqueidentifier">Unique ID of the replica.</column>
    <column name="group_id" type="uniqueidentifier">Unique ID of the availability group to which the replica belongs.</column>
    <column name="replica_metadata_id" type="int">ID for the local metadata object for availability replicas in the Database Engine.</column>
    <column name="replica_server_name" type="nvarchar(256)">Server name of the instance of SQL Server that is hosting this replica and, for a non-default instance, its instance name.</column>
    <column name="owner_sid" type="varbinary(85)">Security identifier (SID) registered to this server instance for the external owner of this availability replica.&lt;br /&gt;&lt;br /&gt; NULL for non-local availability replicas.</column>
    <column name="endpoint_url" type="nvarchar(128)">String representation of the user-specified database mirroring endpoint that is used by connections between primary and secondary replicas for data synchronization. For information about the syntax of endpoint URLs, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/specify-endpoint-url-adding-or-modifying-availability-replica'&gt;Specify the Endpoint URL When Adding or Modifying an Availability Replica (SQL Server)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; NULL = Unable to talk to the WSFC failover cluster.&lt;br /&gt;&lt;br /&gt; To change this endpoint, use the ENDPOINT_URL option of &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-availability-group-transact-sql'&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement.</column>
    <column name="availability_mode" type="tinyint">The availability mode of the replica, one of:&lt;br /&gt;&lt;br /&gt; 0 &amp;#124; Asynchronous commit. The primary replica can commit transactions without waiting for the secondary to write the log to disk.&lt;br /&gt;&lt;br /&gt; 1 &amp;#124; Synchronous commit. The primary replica waits to commit a given transaction until the secondary replica has written the transaction to disk.&lt;br /&gt;&lt;br /&gt;4 &amp;#124; Configuration only. The primary replica sends availability group configuration metadata to the replica synchronously. User data is not transmitted to the replica. Available in SQL Server 2017 CU1 and later.&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/availability-modes-always-on-availability-groups'&gt;Availability Modes (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="availability_mode_desc" type="nvarchar(60)">Description of &lt;strong&gt;availability\_mode&lt;/strong&gt;, one of:&lt;br /&gt;&lt;br /&gt; ASYNCHRONOUS\_COMMIT&lt;br /&gt;&lt;br /&gt; SYNCHRONOUS\_COMMIT&lt;br /&gt;&lt;br /&gt; CONFIGURATION\_ONLY&lt;br /&gt;&lt;br /&gt; To change this the availability mode of an availability replica, use the AVAILABILITY_MODE option of &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-availability-group-transact-sql'&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement.&lt;br/&gt;&lt;br/&gt;You cannot change the availability mode of a replica to CONFIGURATION\_ONLY. You cannot change a CONFIGURATION\_ONLY replica to a secondary or primary replica.</column>
    <column name="failover_mode" type="tinyint">The &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/failover-and-failover-modes-always-on-availability-groups'&gt;failover mode&lt;/a&gt; of the availability replica, one of:&lt;br /&gt;&lt;br /&gt; 0 &amp;#124; Automatic failover. The replica is a potential target for automatic failovers.  Automatic failover is supported only if the availability mode is set to synchronous commit (&lt;strong&gt;availability\_mode&lt;/strong&gt; = 1) and the availability replica is currently synchronized.&lt;br /&gt;&lt;br /&gt; 1 &amp;#124; Manual failover. A failover to a secondary replica set to manual failover must be manually initiated by the database administrator. The type of failover that is performed will depend on whether the secondary replica is synchronized, as follows:&lt;br /&gt;&lt;br /&gt; If the availability replica is not synchronizing or is still synchronizing, only forced failover (with possible data loss) can occur.&lt;br /&gt;&lt;br /&gt; If the availability mode is set to synchronous commit (&lt;strong&gt;availability\_mode&lt;/strong&gt; = 1) and the availability replica is currently synchronized, manual failover without data loss can occur.&lt;br /&gt;&lt;br /&gt; To view a rollup of the database synchronization health of every availability database in an availability replica, use the &lt;strong&gt;synchronization\_health&lt;/strong&gt; and &lt;strong&gt;synchronization\_health\_desc&lt;/strong&gt; columns of  the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-hadr-availability-replica-states-transact-sql'&gt;sys.dm_hadr_availability_replica_states&lt;/a&gt; dynamic management view. The rollup considers the synchronization state of every availability database and the availability mode of its availability replica.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; To view the synchronization health of a given availability database, query the &lt;strong&gt;synchronization\_state&lt;/strong&gt; and &lt;strong&gt;synchronization\_health&lt;/strong&gt; columns of the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-hadr-database-replica-states-transact-sql'&gt;sys.dm_hadr_database_replica_states&lt;/a&gt; dynamic management view.</column>
    <column name="failover_mode_desc" type="nvarchar(60)">Description of &lt;strong&gt;failover\_mode&lt;/strong&gt;, one of:&lt;br /&gt;&lt;br /&gt; MANUAL&lt;br /&gt;&lt;br /&gt; AUTOMATIC&lt;br /&gt;&lt;br /&gt; To change the failover mode, use the FAILOVER\_MODE option of &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-availability-group-transact-sql'&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement.</column>
    <column name="session_timeout" type="int">The time-out period, in seconds. The time-out period is the maximum time that the replica waits to receive a message  from another replica before considering connection between the primary and secondary replica have failed. Session timeout detects whether secondaries are connected the primary replica.&lt;br /&gt;&lt;br /&gt; On detecting a failed connection with a secondary replica, the primary replica  considers the secondary replica to be NOT\_SYNCHRONIZED. On detecting a failed connection with the primary replica, a secondary replica simply attempts to reconnect.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; Session timeouts do not cause automatic failovers.&lt;br /&gt;&lt;br /&gt; To change this value, use the SESSION_TIMEOUT option of &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-availability-group-transact-sql'&gt;ALTER AVAILABILITY GROUP&lt;/a&gt;Transact\-SQL statement.</column>
    <column name="primary_role_allow_connections" type="tinyint">Whether the availability allows all connections or only read-write connections, one of:&lt;br /&gt;&lt;br /&gt; 2 = All (default)&lt;br /&gt;&lt;br /&gt; 3 = Read write</column>
    <column name="primary_role_allow_connections_desc" type="nvarchar(60)">Description of &lt;strong&gt;primary\_role\_allow\_connections&lt;/strong&gt;, one of:&lt;br /&gt;&lt;br /&gt; ALL&lt;br /&gt;&lt;br /&gt; READ\_WRITE</column>
    <column name="secondary_role_allow_connections" type="tinyint">Whether an availability replica that is performing the secondary role (that is, a secondary replica) can accept connections from clients, one of:&lt;br /&gt;&lt;br /&gt; 0 = No. No connections are allowed to the databases in the secondary replica, and the databases are not available for read access. This is the default setting.&lt;br /&gt;&lt;br /&gt; 1 = Read only. Only read-only connections are allowed to the databases in the secondary replica. All database(s) in the replica are available for read access.&lt;br /&gt;&lt;br /&gt; 2 = All. All connections are allowed to the databases in the secondary replica for read-only access.&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/active-secondaries-readable-secondary-replicas-always-on-availability-groups'&gt;Active Secondaries: Readable Secondary Replicas (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="secondary_role_allow_connections_desc" type="nvarchar(60)">Description of &lt;strong&gt;secondary_role_allow_connections&lt;/strong&gt;, one of:&lt;br /&gt;&lt;br /&gt; NO&lt;br /&gt;&lt;br /&gt; READ_ONLY&lt;br /&gt;&lt;br /&gt; ALL</column>
    <column name="create_date" type="datetime">Date that the replica was created.&lt;br /&gt;&lt;br /&gt; NULL = Replica not on this server instance.</column>
    <column name="modify_date" type="datetime">Date that the replica was last modified.&lt;br /&gt;&lt;br /&gt; NULL = Replica not on this server instance.</column>
    <column name="backup_priority" type="int">Represents the user-specified priority for performing backups on this replica relative to the other replicas in the same availability group. The value is an integer in the range of 0..100.&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/active-secondaries-backup-on-secondary-replicas-always-on-availability-groups'&gt;Active Secondaries: Backup on Secondary Replicas (Always On Availability Groups)&lt;/a&gt;.</column>
    <column name="read_only_routing_url" type="nvarchar(256)">Connectivity endpoint (URL) of the read only availability replica. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/configure-read-only-routing-for-an-availability-group-sql-server'&gt;Configure Read-Only Routing for an Availability Group (SQL Server)&lt;/a&gt;.</column>
    <column name="seeding_mode" type="tinyint">One of: &lt;br/&gt;&lt;br/&gt; 0: Automatic &lt;br/&gt;&lt;br/&gt; 1: Manual</column>
    <column name="seeding_mode_desc" type="nvarchar(60)">Describes seeding mode. &lt;br/&gt;&lt;br/&gt; AUTOMATIC &lt;br/&gt;&lt;br/&gt;MANUAL</column>
  </table>
  <table name="sys.bandwidth_usage" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-bandwidth-usage-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.bandwidth_usage (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;&lt;note type='note'&gt;&lt;br/&gt;
This applies only to Azure SQL DatabaseV11.&lt;br/&gt;
&lt;/note&gt;&lt;br/&gt;
 Returns information about the network bandwidth used by each database in a &lt;strong&gt;Azure SQL Database V11 database server&lt;/strong&gt;, . Each row returned for a given database summarizes a single direction and class of usage over a one-hour period.&lt;br/&gt;
 &lt;strong&gt;This has been deprecated in a Azure SQL Database.&lt;/strong&gt;&lt;br/&gt;
 The &lt;strong&gt;sys.bandwidth_usage&lt;/strong&gt; view contains the following columns.&lt;/para&gt;</description>
    <column name="time" type="">The hour when the bandwidth was consumed. The rows in this view are on a per-hour basis. For example, 2009-09-19 02:00:00.000 means that the bandwidth was consumed on September 19, 2009 between 2:00 A.M. and 3:00 A.M.</column>
    <column name="database_name" type="">The name of the database that used bandwidth.</column>
    <column name="direction" type="">The type of bandwidth that was used, one of:&lt;br /&gt;&lt;br /&gt; Ingress: Data that is moving into the Azure SQL Database.&lt;br /&gt;&lt;br /&gt; Egress: Data that is moving out of the Azure SQL Database.</column>
    <column name="class" type="">The class of bandwidth that was used, one of:&lt;br /&gt;Internal: Data that is moving within the Azure platform.&lt;br /&gt;External: Data that is moving out of the Azure platform.&lt;br /&gt;&lt;br /&gt; This class is returned only if the database is engaged in a continuous copy relationship between regions (Active Geo-Replication). If a given database does not participate in any continuous copy relationship, then "Interlink" rows are not returned. For more information, see the "Remarks" section later in this topic.</column>
    <column name="time_period" type="">The time period when the usage occurred is either Peak or OffPeak. The Peak time is based on the region in which the server was created. For example, if a server was created in the "US_Northwest" region, the Peak time is defined as being between 10:00 A.M. and 6:00 P.M. PST.</column>
    <column name="quantity" type="">The amount of bandwidth, in kilobytes (KBs), that was used.</column>
  </table>
  <table name="sys.database_connection_stats" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-connection-stats-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_connection_stats (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains statistics for SQL Database database &lt;strong&gt;connectivity&lt;/strong&gt; events, providing an overview of database connection successes and failures. For more information about connectivity events, see Event Types in &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-log-azure-sql-database'&gt;sys.event_log (Azure SQL Database)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="database_name" type="sysname">Name of the database.</column>
    <column name="start_time" type="datetime2">UTC date and time of the start of the aggregation interval. The time is always a multiple of 5 minutes. For example:&lt;br /&gt;&lt;br /&gt; '2011-09-28 16:00:00'&lt;br /&gt;'2011-09-28 16:05:00'&lt;br /&gt;'2011-09-28 16:10:00'</column>
    <column name="end_time" type="datetime2">UTC date and time of the end of the aggregation interval. &lt;strong&gt;End_time&lt;/strong&gt; is always exactly 5 minutes later than the corresponding &lt;strong&gt;start_time&lt;/strong&gt; in the same row.</column>
    <column name="success_count" type="int">Number of successful connections.</column>
    <column name="total_failure_count" type="int">Total number of failed connections. This is the sum of &lt;strong&gt;connection_failure_count&lt;/strong&gt;, &lt;strong&gt;terminated_connection_count&lt;/strong&gt;, and &lt;strong&gt;throttled_connection_count&lt;/strong&gt;, and does not include deadlock events.</column>
    <column name="connection_failure_count" type="int">Number of login failures.</column>
    <column name="terminated_connection_count" type="int">&lt;strong&gt;_Only applicable for Azure SQL Database v11._&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; Number of terminated connections.</column>
    <column name="throttled_connection_count" type="int">&lt;strong&gt;_Only applicable for Azure SQL Database v11._&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; Number of throttled connections.</column>
  </table>
  <table name="sys.database_firewall_rules" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-firewall-rules-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_firewall_rules (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns information about the database-level firewall settings associated with your Microsoft Azure SQL Database. Database-level firewall settings are particularly useful when using contained database users. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/contained-database-users-making-your-database-portable'&gt;Contained Database Users - Making Your Database Portable&lt;/a&gt;.&lt;br/&gt;
 The &lt;c&gt;sys.database_firewall_rules&lt;/c&gt; view contains the following columns:&lt;/para&gt;</description>
    <column name="id" type="INTEGER">The identifier of the database-level firewall setting.</column>
    <column name="name" type="NVARCHAR(128)">The name you chose to describe and distinguish the database-level firewall setting.</column>
    <column name="start_ip_address" type="VARCHAR(45)">The lowest IP address in the range of the database-level firewall setting. IP addresses equal to or greater than this can attempt to connect to the SQL Database instance. The lowest possible IP address is &lt;c&gt;0.0.0.0&lt;/c&gt;.</column>
    <column name="end_ip_address" type="VARCHAR(45)">The highest IP address in the range of the firewall setting. IP addresses equal to or less than this can attempt to connect to the SQL Database instance. The highest possible IP address is &lt;c&gt;255.255.255.255&lt;/c&gt;.&lt;br /&gt;&lt;br /&gt; Note: Azure connection attempts are allowed when both this field and the &lt;strong&gt;start_ip_address&lt;/strong&gt; field equals &lt;c&gt;0.0.0.0&lt;/c&gt;.</column>
    <column name="create_date" type="DATETIME">UTC date and time when the database-level firewall setting was created.</column>
    <column name="modify_date" type="DATETIME">UTC date and time when the database-level firewall setting was last modified.</column>
  </table>
  <table name="sys.database_service_objectives" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-service-objectives-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_service_objectives (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Returns the edition (service tier), service objective (pricing tier) and elastic pool name, if any, for an Azure SQL database or an Azure Synapse Analytics. If logged on to the master database in an Azure SQL Database server, returns information on all databases. For Azure Synapse Analytics, you must be connected to the master database.&lt;br/&gt;
&lt;br/&gt;
 For information on pricing, see &lt;a href='https://azure.microsoft.com/pricing/details/sql-database/'&gt;SQL Database options and performance: SQL Database Pricing&lt;/a&gt; and &lt;a href='https://azure.microsoft.com/pricing/details/sql-data-warehouse/'&gt;Azure Synapse Analytics Pricing&lt;/a&gt;.&lt;br/&gt;
 To change the service settings, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql'&gt;ALTER DATABASE (Azure SQL Database)&lt;/a&gt; and &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql?view=azure-sqldw-latest&amp;preserve-view=true'&gt;ALTER DATABASE (Azure Synapse Analytics)&lt;/a&gt;.&lt;br/&gt;
 The sys.database_service_objectives view contains the following columns.&lt;/para&gt;</description>
    <column name="database_id" type="int">The ID of the database, unique within an instance of Azure SQL Database server. Joinable with &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-databases-transact-sql'&gt;sys.databases (Transact-SQL)&lt;/a&gt;.</column>
    <column name="edition" type="sysname">The service tier for the database or data warehouse: &lt;strong&gt;Basic&lt;/strong&gt;, &lt;strong&gt;Standard&lt;/strong&gt;, &lt;strong&gt;Premium&lt;/strong&gt; or &lt;strong&gt;Data Warehouse&lt;/strong&gt;.</column>
    <column name="service_objective" type="sysname">The pricing tier of the database. If the database is in an elastic pool, returns &lt;strong&gt;ElasticPool&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; On the &lt;strong&gt;Basic&lt;/strong&gt; tier, returns &lt;strong&gt;Basic&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Single database in a standard service tier&lt;/strong&gt; returns one of the following: S0, S1, S2, S3, S4, S6, S7, S9 or S12.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Single database in a premium tier&lt;/strong&gt; returns of the following: P1, P2, P4, P6, P11 or P15.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Azure Synapse Analytics&lt;/strong&gt; returns DW100 through DW30000c.&lt;br /&gt;&lt;br /&gt; For details, see &lt;a href='https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-single-databases/'&gt;single databases&lt;/a&gt;, &lt;a href='https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools/'&gt;elastic pools&lt;/a&gt;, &lt;a href='https://docs.microsoft.com/en-us/azure/sql-data-warehouse/what-is-a-data-warehouse-unit-dwu-cdwu/'&gt;data warehouses&lt;/a&gt;</column>
    <column name="elastic_pool_name" type="sysname">The name of the &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/elastic-pool-overview'&gt;elastic pool&lt;/a&gt; that the database belongs to. Returns &lt;strong&gt;NULL&lt;/strong&gt; if the database is a single database or a data warehouse.</column>
  </table>
  <table name="sys.database_usage" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-usage-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_usage (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Note: This applies only to Azure SQL Database V11.&lt;/strong&gt;&lt;br/&gt;
 Lists the number, type, and duration of databases on the SQL Database server.&lt;br/&gt;
 The &lt;strong&gt;sys.database_usage&lt;/strong&gt; view contains the following columns.&lt;/para&gt;</description>
    <column name="time" type="">The date when the usage events occurred.</column>
    <column name="sku" type="">The type of service tier for the database: &lt;strong&gt;Web&lt;/strong&gt;, &lt;strong&gt;Business&lt;/strong&gt;, &lt;strong&gt;Basic&lt;/strong&gt;, &lt;strong&gt;Standard&lt;/strong&gt;, &lt;strong&gt;Premium&lt;/strong&gt;</column>
    <column name="quantity" type="">The maximum number of databases of an SKU type that existed during that day.</column>
  </table>
  <table name="sys.elastic_pool_resource_stats" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-elastic-pool-resource-stats-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.elastic_pool_resource_stats (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns resource usage statistics for all the elastic pools in a SQL Database server. For each elastic pool, there is one row for each 15 second reporting window (four rows per minute). This includes CPU, IO, Log, storage consumption and concurrent request/session utilization by all databases in the pool. This data is retained for 14 days. &lt;br/&gt;
||&lt;br/&gt;
|-|&lt;br/&gt;
|&lt;strong&gt;Applies to&lt;/strong&gt;:  SQL Database V12.|&lt;/para&gt;</description>
    <column name="start_time" type="datetime2">UTC time indicating the start of the 15 second reporting interval.</column>
    <column name="end_time" type="datetime2">UTC time indicating the end of the 15 second reporting interval.</column>
    <column name="elastic_pool_name" type="nvarchar(128)">Name of the elastic database pool.</column>
    <column name="avg_cpu_percent" type="decimal(5,2)">Average compute utilization in percentage of the limit of the pool.</column>
    <column name="avg_data_io_percent" type="decimal(5,2)">Average I/O utilization in percentage based on the limit of the pool.</column>
    <column name="avg_log_write_percent" type="decimal(5,2)">Average write resource utilization in percentage of the limit of the pool.</column>
    <column name="avg_storage_percent" type="decimal(5,2)">Average storage utilization in percentage of the storage limit of the pool.</column>
    <column name="max_worker_percent" type="decimal(5,2)">Maximum concurrent workers (requests) in percentage based on the limit of the pool.</column>
    <column name="max_session_percent" type="decimal(5,2)">Maximum concurrent sessions in percentage based on the limit of the pool.</column>
    <column name="elastic_pool_dtu_limit" type="int">Current max elastic pool DTU setting for this elastic pool during this interval.</column>
    <column name="elastic_pool_storage_limit_mb" type="bigint">Current max elastic pool storage limit setting for this elastic pool in megabytes during this interval.</column>
    <column name="avg_allocated_storage_percent" type="decimal(5,2)">The percentage of data space allocated by all databases in the elastic pool.  This is the ratio of data space allocated to data max size for the elastic pool.  For more information see: &lt;a href='https://docs.microsoft.com/en-us/azure/sql-database/sql-database-file-space-management'&gt;File space management in SQL Database&lt;/a&gt;</column>
  </table>
  <table name="sys.event_log" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-log-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.event_log (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns successful Azure SQL Database database connections, connection failures, and deadlocks. You can use this information to track or troubleshoot your database activity with SQL Database.&lt;br/&gt;
&gt; [!CAUTION]&lt;br/&gt;
&gt; For installations having a large number of databases or high numbers of logins, activity in sys.event_log can cause limitations in performance, high CPU usage, and possibly result in login failures. Queries of sys.event_log can contribute to the problem. Microsoft is working to resolve this issue. In the meantime, to reduce the impact of this issue, limit queries of sys.event_log. Users of the NewRelic SQL Server plugin should visit &lt;a href='https://discuss.newrelic.com/t/microsoft-azure-sql-database-plugin-tuning-performance-tweaks/30729'&gt;Microsoft Azure SQL Database plugin tuning &amp; performance tweaks&lt;/a&gt; for additional configuration information.&lt;br/&gt;
 The &lt;c&gt;sys.event_log&lt;/c&gt; view contains the following columns.&lt;/para&gt;</description>
    <column name="database_name" type="sysname">Name of the database. If the connection fails and the user did not specify a database name, then this column is blank.</column>
    <column name="start_time" type="datetime2">UTC date and time of the start of the aggregation interval. For aggregated events, the time is always a multiple of 5 minutes. For example:&lt;br /&gt;&lt;br /&gt; '2011-09-28 16:00:00'&lt;br /&gt;'2011-09-28 16:05:00'&lt;br /&gt;'2011-09-28 16:10:00'</column>
    <column name="end_time" type="datetime2">UTC date and time of the end of the aggregation interval. For aggregated events, &lt;strong&gt;End_time&lt;/strong&gt; is always exactly 5 minutes later than the corresponding &lt;strong&gt;start_time&lt;/strong&gt; in the same row. For events that are not aggregated, &lt;strong&gt;start_time&lt;/strong&gt; and &lt;strong&gt;end_time&lt;/strong&gt; equal the actual UTC date and time of the event.</column>
    <column name="event_category" type="nvarchar(64)">The high-level component that generated this event.&lt;br /&gt;&lt;br /&gt; See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-log-azure-sql-database#EventTypes'&gt;Event Types&lt;/a&gt; for a list of possible values.</column>
    <column name="event_type" type="nvarchar(64)">The type of event.&lt;br /&gt;&lt;br /&gt; See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-log-azure-sql-database#EventTypes'&gt;Event Types&lt;/a&gt; for a list of possible values.</column>
    <column name="event_subtype" type="int">The subtype of the occurring event.&lt;br /&gt;&lt;br /&gt; See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-log-azure-sql-database#EventTypes'&gt;Event Types&lt;/a&gt; for a list of possible values.</column>
    <column name="event_subtype_desc" type="nvarchar(64)">The description of the event subtype.&lt;br /&gt;&lt;br /&gt; See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-log-azure-sql-database#EventTypes'&gt;Event Types&lt;/a&gt; for a list of possible values.</column>
    <column name="severity" type="int">The severity of the error. Possible values are:&lt;br /&gt;&lt;br /&gt; 0 = Information&lt;br /&gt;1 = Warning&lt;br /&gt;2 = Error</column>
    <column name="event_count" type="int">The number of times that this event occurred for the specified database within the time interval specified (&lt;strong&gt;start_time&lt;/strong&gt; and &lt;strong&gt;end_time&lt;/strong&gt;).</column>
    <column name="description" type="nvarchar(max)">A detailed description of the event.&lt;br /&gt;&lt;br /&gt; See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-log-azure-sql-database#EventTypes'&gt;Event Types&lt;/a&gt; for a list of possible values.</column>
    <column name="additional_data" type="XML">*Note: This value is always NULL for Azure SQL Database V12. See [examples](#Deadlock) section for how to retrieve deadlock events for V12.*&lt;br /&gt;&lt;br /&gt; For &lt;strong&gt;Deadlock&lt;/strong&gt; events, this column contains the deadlock graph. This column is NULL for other event types.</column>
  </table>
  <table name="sys.firewall_rules" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-firewall-rules-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.firewall_rules (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns information about the server-level firewall settings associated with your Microsoft Azure SQL Database.&lt;br/&gt;
 The &lt;c&gt;sys.firewall_rules&lt;/c&gt; view contains the following columns:&lt;/para&gt;</description>
    <column name="id" type="INT">The identifier of the server-level firewall setting.</column>
    <column name="name" type="NVARCHAR(128)">The name you chose to describe and distinguish the server-level firewall setting.</column>
    <column name="start_ip_address" type="VARCHAR(45)">The lowest IP address in the range of the server-level firewall setting. IP addresses equal to or greater than this can attempt to connect to the SQL Database server. The lowest possible IP address is &lt;c&gt;0.0.0.0&lt;/c&gt;.</column>
    <column name="end_ip_address" type="VARCHAR(45)">The highest IP address in the range of the server-level firewall setting. IP addresses equal to or less than this can attempt to connect to the SQL Database server. The highest possible IP address is &lt;c&gt;255.255.255.255&lt;/c&gt;.&lt;br /&gt;&lt;br /&gt; Note: Azure connection attempts are allowed when both this field and the &lt;strong&gt;start_ip_address&lt;/strong&gt; field equals &lt;c&gt;0.0.0.0&lt;/c&gt;.</column>
    <column name="create_date" type="DATETIME">UTC date and time when the server-level firewall setting was created.&lt;br /&gt;&lt;br /&gt; Note: UTC is an acronym for Coordinated Universal Time.</column>
    <column name="modify_date" type="DATETIME">UTC date and time when the server-level firewall setting was last modified.</column>
  </table>
  <table name="sys.resource_stats" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-stats-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.resource_stats (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns CPU usage and storage data for an Azure SQL Database. The data is collected and aggregated within five-minute intervals. For each user database, there is one row for every five-minute reporting window in which there is a change in resource consumption. The data returned includes CPU usage, storage size change, and database SKU modification. Idle databases with no changes may not have rows for every five-minute interval. Historical data is retained for approximately 14 days.&lt;br/&gt;
 The &lt;c&gt;sys.resource_stats&lt;/c&gt; view has different definitions depending on the version of the Azure SQL Database Server that the database is associated with. Consider these differences and any modifications your application requires when upgrading to a new server version.&lt;br/&gt;
 &lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
This dynamic management view applies to Azure SQL Database only. For an equivalent view for Azure SQL Managed Instance, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-resource-stats-azure-sql-database'&gt;sys.server_resource_stats&lt;/a&gt;.&lt;br/&gt;
&lt;/note&gt;&lt;br/&gt;
 The following table describes the columns available in a v12 server:&lt;/para&gt;</description>
    <column name="start_time" type="datetime">UTC time indicating the start of the five-minute reporting interval.</column>
    <column name="end_time" type="datetime">UTC time indicating the end of the five-minute reporting interval.</column>
    <column name="database_name" type="nvarchar(128)">Name of the user database.</column>
    <column name="sku" type="nvarchar(128)">Service Tier of the database. The following are the possible values:&lt;br /&gt;&lt;br /&gt; Basic&lt;br /&gt;&lt;br /&gt; Standard&lt;br /&gt;&lt;br /&gt; Premium&lt;br /&gt;&lt;br /&gt;General Purpose&lt;br /&gt;&lt;br /&gt;Business Critical</column>
    <column name="storage_in_megabytes" type="float">Maximum storage size in megabytes for the time period, including database data, indexes, stored procedures, and metadata.</column>
    <column name="avg_cpu_percent" type="decimal(5,2)">Average compute utilization in percentage of the limit of the service tier.</column>
    <column name="avg_data_io_percent" type="decimal(5,2)">Average I/O utilization in percentage based on the limit of the service tier. For Hyperscale databases, see &lt;a href='https://docs.microsoft.com/en-us/azure/sql-database/sql-database-hyperscale-performance-diagnostics#data-io-in-resource-utilization-statistics'&gt;Data IO in resource utilization statistics&lt;/a&gt;.</column>
    <column name="avg_log_write_percent" type="decimal(5,2)">Average write resource utilization in percentage of the limit of the service tier.</column>
    <column name="max_worker_percent" type="decimal(5,2)">Maximum concurrent workers (requests) in percentage based on the limit of the database's service tier.&lt;br /&gt;&lt;br /&gt; Maximum is currently calculated for the five-minute interval based on the 15-second samples of concurrent worker counts.</column>
    <column name="max_session_percent" type="decimal(5,2)">Maximum concurrent sessions in percentage based on the limit of the database's service tier.&lt;br /&gt;&lt;br /&gt; Maximum is currently calculated for the five-minute interval based on the 15-second samples of concurrent session counts.</column>
    <column name="dtu_limit" type="int">Current max database DTU setting for this database during this interval.</column>
    <column name="xtp_storage_percent" type="decimal (5,2)">Storage utilization for In-Memory OLTP in percentage of the limit of the service tier (at the end of the reporting interval). This includes memory used for storage of the following In-Memory OLTP objects: memory-optimized tables, indexes, and table variables. It also includes memory used for processing ALTER TABLE operations.&lt;br /&gt;&lt;br /&gt; Returns 0 if In-Memory OLTP is not used in the database.</column>
    <column name="avg_login_rate_percent" type="decimal (5,2)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="avg_instance_cpu_percent" type="decimal (5,2)">Average database CPU usage as a percentage of the SQL Database process.</column>
    <column name="avg_instance_memory_percent" type="decimal (5,2)">Average database memory usage as a percentage of the SQL Database process.</column>
    <column name="cpu_limit" type="decimal (5,2)">Number of vCores for this database during this interval. For databases using the DTU-based model, this column is NULL.</column>
    <column name="allocated_storage_in_megabytes" type="float">The amount of formatted file space in MB made available for storing database data. Formatted file space is also referred to as data space allocated.  For more information, see: &lt;a href='https://docs.microsoft.com/en-us/azure/sql-database/sql-database-file-space-management'&gt;File space management in SQL Database&lt;/a&gt;</column>
  </table>
  <table name="sys.resource_usage" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-usage-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.resource_usage (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This feature is in a preview state. Do not take a dependency on the specific implementation of this feature because the feature might be changed or removed in a future release.&lt;br/&gt;
While in a preview state, the Azure SQL Database operations team might turn data collection off and on for this DMV:&lt;br/&gt;
-   When turned on, the DMV returns current data as it is aggregated.&lt;br/&gt;
-   When turned off, the DMV returns historical data, which might be stale.&lt;br/&gt;
&lt;/note&gt;&lt;br/&gt;
 Provides hourly summary of resource usage data for user databases in the current server. Historical data is retained for 90 days.&lt;br/&gt;
 For each user database, there is one row for every hour in continuous fashion. Even if the database was idle during that hour, there is one row, and the usage_in_seconds value for that database will be 0. Storage usage and SKU information is rolled up for the hour appropriately.&lt;/para&gt;</description>
    <column name="time" type="datetime">Time (UTC) in hour increments.</column>
    <column name="database_name" type="nvarchar">Name of user database.</column>
    <column name="sku" type="nvarchar">Name of the SKU. The following are the possible values:&lt;br /&gt;&lt;br /&gt; Web&lt;br /&gt;&lt;br /&gt; Business&lt;br /&gt;&lt;br /&gt; Basic&lt;br /&gt;&lt;br /&gt; Standard&lt;br /&gt;&lt;br /&gt; Premium</column>
    <column name="usage_in_seconds" type="int">Sum of CPU time used in the hour.&lt;br /&gt;&lt;br /&gt; Note: This column is deprecated for V11 and does not apply to V12. &lt;strong&gt;Value is always set to 0.&lt;/strong&gt;</column>
    <column name="storage_in_megabytes" type="decimal">Maximum storage size for the hour, including database data, indexes, stored procedures and metadata.</column>
  </table>
  <table name="sys.server_resource_stats" category="AzureSQLDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-resource-stats-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_resource_stats (Azure SQL Managed Instance)&lt;/strong&gt;&lt;/para&gt;
√ Azure SQL Managed Instance&lt;br/&gt;
Returns CPU usage, IO, and storage data for Azure SQL Managed Instance. The data is collected, aggregated and updated within 5 to 10 minutes intervals. There is one row for every 15 seconds reporting. The data returned includes CPU usage, storage size, IO utilization, and SKU. Historical data is retained for approximately 14 days.&lt;br/&gt;
The &lt;c&gt;sys.server_resource_stats&lt;/c&gt; view has different definitions depending on the version of the Azure SQL Managed Instance that the database is associated with. Consider these differences and any modifications your application requires when upgrading to a new server version.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
This dynamic management view applies to Azure SQL Managed Instance only. For an equivalent view for Azure SQL Database, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-stats-azure-sql-database'&gt;sys.resource_stats&lt;/a&gt;.&lt;br/&gt;
&lt;/note&gt;</description>
    <column name="start_time" type="datetime2">UTC time indicating the start of the fifteen-second reporting interval</column>
    <column name="end_time" type="datetime">UTC time indicating the end of the fifteen-second reporting interval</column>
    <column name="resource_type" type="Nvarchar(128)">Type of the resource for which metrics are provided</column>
    <column name="resource_name" type="nvarchar(128)">Name of the resource.</column>
    <column name="sku" type="nvarchar(128)">Managed Instance Service Tier of the Instance. The following are the possible values: &lt;br/&gt;&lt;ul&gt;&lt;li&gt;General Purpose&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Business Critical&lt;/li&gt;&lt;/ul&gt;</column>
    <column name="hardware_generation" type="nvarchar(128)">Hardware generation identifier: such as Gen 4 or Gen 5</column>
    <column name="virtual_core_count" type="int">Represents number of virtual cores per instance</column>
    <column name="avg_cpu_percent" type="decimal(5,2)">Average compute utilization in percentage of the limit of the Managed Instance service tier utilized by the instance. It is calculated as sum of CPU time of all resource pools for all databases in the instance and divided by available CPU time for that tier in the given interval.</column>
    <column name="reserved_storage_mb" type="bigint">Reserved storage per instance (amount of storage space that customer purchased for the managed instance)</column>
    <column name="storage_space_used_mb" type="decimal(18,2)">Storage used by all database files in a managed instance (including both user and system databases)</column>
    <column name="io_request" type="bigint">Total number of i/o physical operations within the interval</column>
    <column name="io_bytes_read" type="bigint">Number of physical bytes read within the interval</column>
    <column name="io_bytes_written" type="bigint">Number of physical bytes written within the interval</column>
  </table>
  <table name="sys.change_tracking_databases" category="ChangeTracking" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/change-tracking-catalog-views-sys-change-tracking-databases">
    <description>&lt;para&gt;&lt;strong&gt;Change Tracking Catalog Views - sys.change_tracking_databases&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each database that has change tracking enabled.&lt;/para&gt;</description>
    <column name="database_id" type="int">ID of the database. This is unique within the instance of SQL Server.</column>
    <column name="is_auto_cleanup_on" type="bit">Indicates whether change tracking data is automatically cleaned up after the configured retention period:&lt;br /&gt;&lt;br /&gt; 0 = Off&lt;br /&gt;&lt;br /&gt; 1 = On</column>
    <column name="retention_period" type="int">If autocleanup is being used, the retention period specifies how long the change tracking data is kept in the database.</column>
    <column name="retention_period_units_desc" type="nvarchar(60)">Specifies the description of the retention period:&lt;br /&gt;&lt;br /&gt; Minutes&lt;br /&gt;&lt;br /&gt; Hours&lt;br /&gt;&lt;br /&gt; Days</column>
    <column name="retention_period_units" type="tinyint">Unit of time for the retention period:&lt;br /&gt;&lt;br /&gt; 1 = Minutes&lt;br /&gt;&lt;br /&gt; 2 = Hours&lt;br /&gt;&lt;br /&gt; 3 = Days</column>
  </table>
  <table name="sys.change_tracking_tables" category="ChangeTracking" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/change-tracking-catalog-views-sys-change-tracking-tables">
    <description>&lt;para&gt;&lt;strong&gt;Change Tracking Catalog Views - sys.change_tracking_tables&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each table in the current database that has change tracking enabled.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of a table that has a change journal. The table can have a change journal even if change tracking is currently off.&lt;br /&gt;&lt;br /&gt; The table ID is unique within the database.</column>
    <column name="is_track_columns_updated_on" type="bit">Current state of change tracking on the table:&lt;br /&gt;&lt;br /&gt; 0 = OFF&lt;br /&gt;&lt;br /&gt; 1 = ON</column>
    <column name="begin_version" type="bigint">Version of the database when change tracking began for the table. This version is usually indicates when change tracking was enabled, but this value is reset if the table is truncated.</column>
    <column name="cleanup_version" type="bigint">Version up to which cleanup might have removed change tracking information.</column>
    <column name="min_valid_version" type="bigint">Minimum valid version of change tracking information that is available for the table.&lt;br /&gt;&lt;br /&gt; When obtaining changes from the table that is associated with this row, the value of last_sync_version must be greater than or equal to the version reported by this column. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-functions/change-tracking-min-valid-version-transact-sql'&gt;CHANGE_TRACKING_MIN_VALID_VERSION (Transact-SQL)&lt;/a&gt;.</column>
  </table>
  <table name="sys.assemblies" category="CLRAssembly" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assemblies-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.assemblies (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns a row for each assembly.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the assembly. Is unique within the database.</column>
    <column name="principal_id" type="int">ID of the principal that owns this assembly.</column>
    <column name="assembly_id" type="int">Assembly identification number. Is unique within a database.</column>
    <column name="clr_name" type="nvarchar(4000)">Canonical string that encodes the simple name, version number, culture, public key, and architecture of the assembly. This value uniquely identifies the assembly on the common language runtime (CLR) side.</column>
    <column name="permission_set" type="tinyint">Permission-set/security-level for assembly.&lt;br /&gt;&lt;br /&gt; 1 = Safe Access&lt;br /&gt;&lt;br /&gt; 2 = External Access&lt;br /&gt;&lt;br /&gt; 3 = Unsafe Access</column>
    <column name="permission_set_desc" type="nvarchar(60)">Description for permission-set/security-level for assembly.&lt;br /&gt;&lt;br /&gt; SAFE_ACCESS&lt;br /&gt;&lt;br /&gt; EXTERNAL_ACCESS&lt;br /&gt;&lt;br /&gt; UNSAFE_ACCESS</column>
    <column name="is_visible" type="bit">1 = Assembly is visible to register Transact\-SQL entry points.&lt;br /&gt;&lt;br /&gt; 0 = Assembly is intended only for managed callers. That is, the assembly provides internal implementation for other assemblies in the database.</column>
    <column name="create_date" type="datetime">Date the assembly was created or registered.</column>
    <column name="modify_date" type="datetime">Date the assembly was modified.</column>
    <column name="is_user_defined" type="bit">Indicates the source of the assembly.&lt;br /&gt;&lt;br /&gt; 0 = System-defined assemblies (such as Microsoft.SqlServer.Types for the &lt;strong&gt;hierarchyid&lt;/strong&gt; data type)&lt;br /&gt;&lt;br /&gt; 1 = User-defined assemblies</column>
  </table>
  <table name="sys.assembly_files" category="CLRAssembly" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assembly-files-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.assembly_files (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each file that makes up an assembly.&lt;/para&gt;</description>
    <column name="assembly_id" type="int">ID of the assembly to which this file belongs.</column>
    <column name="name" type="nvarchar(260)">Name of the assembly file.</column>
    <column name="file_id" type="int">ID of the file. Is unique within an assembly. The file ID numbered 1 represents the assembly DLL.</column>
    <column name="content" type="varbinary(max)">Content of file.</column>
  </table>
  <table name="sys.assembly_references" category="CLRAssembly" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assembly-references-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.assembly_references (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each pair of assemblies where one is directly referencing another.&lt;/para&gt;</description>
    <column name="assembly_id" type="int">ID of the assembly to which this reference belongs.</column>
    <column name="referenced_assembly_id" type="int">ID of the assembly being referenced.</column>
  </table>
  <table name="sys.trusted_assemblies" category="CLRAssembly" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trusted-assemblies-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.trusted_assemblies (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2017 (14.x) and later&lt;/para&gt;
&lt;para&gt;Contains a row for each trusted assembly for the server.&lt;br/&gt;
 &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/language-elements/transact-sql-syntax-conventions-transact-sql'&gt;Transact-SQL Syntax Conventions&lt;/a&gt;&lt;/para&gt;</description>
    <column name="hash" type="varbinary(8000) ">SHA2_512 hash of the assembly content.</column>
    <column name="description" type="nvarchar(4000) ">Optional user-defined description of the assembly. Microsoft recommends using the canonical name that encodes the simple name, version number, culture, public key, and architecture of the assembly to trust. This value uniquely identifies the assembly on the common language runtime (CLR) side and is the same as the clr_name value in sys.assemblies.</column>
    <column name="create_date" type="datetime2 ">Date the assembly was added to the list of trusted assemblies.</column>
    <column name="created_by" type="nvarchar(128) ">Login name of the principal who added the assembly to the list.</column>
  </table>
  <table name="dbo.sysdac_instances" category="DataTierApplications" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/data-tier-application-views-dbo-sysdac-instances" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;Data-tier Application Views - dbo.sysdac_instances&lt;/strong&gt;&lt;/para&gt;
 &lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Displays one row for each data-tier application (DAC) instance deployed to an instance of the Database Engine. sysdac_instances belongs to the dbo schema in the msdb database. The following table describes the columns in the sysdac_instances view.&lt;/para&gt;</description>
    <column name="instance_id" type="uniqueidentifier">Identifier of the DAC instance.</column>
    <column name="instance_name" type="sysname">Name of the DAC instance specified when the DAC was deployed.</column>
    <column name="type_name" type="sysname">Name of the DAC specified when the DAC package was created.</column>
    <column name="type_version" type="nvarchar(64)">Version of the DAC specified when the DAC package was created.</column>
    <column name="description" type="nvarchar(4000)">A description of the DAC written when the DAC package was created.</column>
    <column name="type_stream" type="varbinary(max)">A bit stream that contains an encoded representation of the logical objects, such as tables and views, contained in the DAC.</column>
    <column name="date_created" type="datetime">Date and time the DAC instance was created.</column>
    <column name="created_by" type="sysname">Login that created the DAC instance.</column>
    <column name="database_name" type="sysname">Name of the database created for the DAC isntance.</column>
  </table>
  <table name="dbo.syscollector_collection_items" category="DataCollector" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-collection-items-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syscollector_collection_items (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns information about an item in a collection set.&lt;/para&gt;</description>
    <column name="collection_set_id" type="int">Identifies the collection set. Is not nullable.</column>
    <column name="collection_item_id" type="int">Identifies an item in the collection set. Is not nullable.</column>
    <column name="collector_type_uid" type="uniqueidentifier">The GUID used to identify the collector type. Is not nullable.</column>
    <column name="name" type="nvarchar(4000)">The name of the collection set. Is nullable.</column>
    <column name="frequency" type="int">The frequency that data is collected by a collection item. Is not nullable.</column>
    <column name="parameters" type="xml">Describes the parameterization for the collector type associated with the collection item. The XML schema for this collection item is validated with the XML Schema (XSD) stored in the &lt;strong&gt;parameter_schema&lt;/strong&gt; for a particular collector type. Is nullable. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-collector-types-transact-sql'&gt;syscollector_collector_types (Transact-SQL)&lt;/a&gt;.</column>
  </table>
  <table name="dbo.syscollector_collection_sets" category="DataCollector" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-collection-sets-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syscollector_collection_sets (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Provides information about a collection set, including schedule, collection mode, and its state.&lt;/para&gt;</description>
    <column name="collection_set_id" type="int">The local identifier for the collection set. Is not nullable.</column>
    <column name="collection_set_uid" type="uniqueidentifier">The globally unique identifier for the collection set. Is not nullable.</column>
    <column name="name" type="nvarchar(4000)">The name of the collection set. Is nullable.</column>
    <column name="target" type="nvarchar(max)">Identifies the target for the collection set. Is nullable.</column>
    <column name="is_system" type="bit">Turned on (1) or off (0) to indicate if the collection set was included with the data collector or if it was added later by the dc_admin. This could be a custom collection set developed in-house or by a third party. Is not nullable.</column>
    <column name="is_running" type="bit">Indicates whether or not the collection set is running. Is not nullable.</column>
    <column name="collection_mode" type="smallint">Specifies the collection mode for the collection set. Is not nullable.&lt;br /&gt;&lt;br /&gt; Collection mode is one of the following:&lt;br /&gt;&lt;br /&gt; 0 - Cached mode. Data collection and upload are on separate schedules.&lt;br /&gt;&lt;br /&gt; 1 - Non-cached mode. Data collection and upload are on the same schedule.</column>
    <column name="proxy_id" type="int">Identifies the proxy that is used to run the collection set job step. Is nullable.</column>
    <column name="schedule_uid" type="uniqueidentifier">Provides a pointer to the collection set schedule. Is nullable.</column>
    <column name="collection_job_id" type="uniqueidentifier">Identifies the collection job. Is nullable.</column>
    <column name="upload_job_id" type="uniqueidentifier">Identifies the collection upload job. Is nullable.</column>
    <column name="logging_level" type="smallint">Specifies the logging level (0, 1 or 2). Is not nullable.</column>
    <column name="days_until_expiration" type="smallint">The number of days that the collected data is saved in the management data warehouse. Is not nullable.</column>
    <column name="description" type="nvarchar(4000)">Describes the collection set. Is nullable.</column>
    <column name="dump_on_any_error" type="bit">Turned on (1) or off (0) to indicate whether to create an SSIS dump file on any error. Is not nullable.</column>
    <column name="dump_on_codes" type="nvarchar(max)">Contains the list of SSIS error codes that are used to trigger the dump file. Is nullable.</column>
  </table>
  <table name="dbo.syscollector_collector_types" category="DataCollector" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-collector-types-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syscollector_collector_types (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Provides information about a collector type for a collection item.&lt;/para&gt;</description>
    <column name="collector_type_uid" type="uniqueidentifer">The GUID for a collection type. Is not nullable.</column>
    <column name="name" type="sysname">The name of the collection type. Is not nullable.</column>
    <column name="parameter_schema" type="xml">The XML schema that describes what the configuration for the specified collector type looks like. This XML schema is used to validate the actual XML configuration associated with a particular collection item instance. Is nullable.</column>
    <column name="parameter_formatter" type="xml">Determines the template to use to transform the XML for use in the collection set property page. Is nullable.</column>
    <column name="collection_package_id" type="uniqueidentifer">The GUID for a collection package. Is not nullable.</column>
    <column name="collection_package_path" type="nvarchar(4000)">Provides the path to the collection package. Is nullable.</column>
    <column name="collection_package_name" type="sysname">The name of the collection package. Is not nullable.</column>
    <column name="upload_package_id" type="uniqueidentifer">The GUID for the upload package. Is not nullable.</column>
    <column name="upload_package_path" type="nvarchar(4000)">Provides the path to the upload package. Is nullable.</column>
    <column name="upload_package_name" type="sysname">The name of the upload package. Is not nullable.</column>
    <column name="is_system" type="bit">Turned on (1) or off (0) to indicate if the collector type was shipped with the data collector or if it was added later by the &lt;strong&gt;dc_admin&lt;/strong&gt;. This could be a custom type developed in-house or by a third party. Is not nullable.</column>
  </table>
  <table name="dbo.syscollector_config_store" category="DataCollector" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-config-store-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syscollector_config_store (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns properties that apply to the entire data collector, as opposed to a collection set instance. Each row in this view describes a specific data collector property, such as the name of the management data warehouse, and the instance name where the management data warehouse is located.&lt;/para&gt;</description>
    <column name="parameter_name" type="nvarchar(128)">The name of the property. Is not nullable.</column>
    <column name="parameter_value" type="sql_variant">The actual value of the property. Is nullable.</column>
  </table>
  <table name="dbo.syscollector_execution_log" category="DataCollector" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-execution-log-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syscollector_execution_log (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Provides information from the execution log for a collection set or package.&lt;/para&gt;</description>
    <column name="log_id" type="bigint">Identifies each collection set execution. Used to join this view with other detailed logs. Is not nullable.</column>
    <column name="parent_log_id" type="bigint">Identifies the parent package or collection set. Is not nullable. The IDs are chained in the parent-child relationship, which enables you to determine which package was started by which collection set. This view groups the log entries by their parent-child linkage and indents the names of the packages, so that the call chain is clearly visible.</column>
    <column name="collection_set_id" type="int">Identifies the collection set or package that this log entry represents. Is not nullable.</column>
    <column name="collection_item_id" type="int">Identifies a collection item. Is nullable.</column>
    <column name="start_time" type="datetime">The time that the collection set or package started. Is not nullable.</column>
    <column name="last_iteration_time" type="datetime">For continuously running packages, the last time that the package captured a snapshot. Is nullable.</column>
    <column name="finish_time" type="datetime">The time the run completed for finished packages and collection sets. Is nullable.</column>
    <column name="runtime_execution_mode" type="smallint">Indicates whether the collection set activity was collecting data or uploading data. Is nullable.&lt;br /&gt;&lt;br /&gt; Values are:&lt;br /&gt;&lt;br /&gt; 0 = Collection&lt;br /&gt;&lt;br /&gt; 1 = Upload</column>
    <column name="status" type="smallint">Indicates the current status of the collection set or package. Is not nullable.&lt;br /&gt;&lt;br /&gt; Values are:&lt;br /&gt;&lt;br /&gt; 0 = running&lt;br /&gt;&lt;br /&gt; 1 = finished&lt;br /&gt;&lt;br /&gt; 2 = failed</column>
    <column name="operator" type="nvarchar(128)">Identifies who started the collection set or package. Is not nullable.</column>
    <column name="package_id" type="uniqueidentifier">Identifies the collection set or package that generated this log. Is nullable.</column>
    <column name="package_name" type="nvarchar(4000)">The name of the package that generated this log. Is nullable.</column>
    <column name="package_execution_id" type="uniqueidentifier">Provides a link to the SSIS log table. Is nullable.</column>
    <column name="failure_message" type="nvarchar(2048)">If the collection set or package failed, the most recent error message for that component. Is nullable. To obtain more detailed error information, use the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-functions/fn-syscollector-get-execution-details-transact-sql'&gt;fn_syscollector_get_execution_details (Transact-SQL)&lt;/a&gt; function.</column>
  </table>
  <table name="dbo.syscollector_execution_log_full" category="DataCollector" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-execution-log-full-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syscollector_execution_log_full (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Provides information about a collection set or package when the execution log is full.&lt;/para&gt;</description>
    <column name="log_id" type="bigint">Identifies each collection set execution. Used to join this view with other detailed logs. Is nullable.</column>
    <column name="parent_log_id" type="bigint">Identifies the parent package or collection set. Is not nullable. The IDs are chained in the parent-child relationship, which enables you to determine which package was started by which collection set. This view groups the log entries by their parent-child linkage and indents the names of the packages so that the call chain is clearly visible.</column>
    <column name="name" type="nvarchar(4000)">The name of the collection set or package that this log entry represents. Is nullable.</column>
    <column name="status" type="smallint">Indicates the current status of the collection set or package. Is nullable.&lt;br /&gt;&lt;br /&gt; Values are:&lt;br /&gt;&lt;br /&gt; 0 = running&lt;br /&gt;&lt;br /&gt; 1 = finished&lt;br /&gt;&lt;br /&gt; 2 = failed</column>
    <column name="runtime_execution_mode" type="smallint">Indicates whether the collection set activity was collecting data or uploading data. Is nullable.</column>
    <column name="start_time" type="datetime">The time that the collection set or package started. Is nullable.</column>
    <column name="last_iteration_time" type="datetime">For continuously running packages, the last time that the package captured a snapshot. Is nullable.</column>
    <column name="finish_time" type="datetime">The time the run completed for finished packages and collection sets. Is nullable.</column>
    <column name="duration" type="int">The time, in seconds, that the package or collection set has been running. Is nullable.</column>
    <column name="failure_message" type="nvarchar(2048)">If the collection set or package failed, the most recent error message for that component. Is nullable. To obtain more detailed error information, use the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-functions/fn-syscollector-get-execution-details-transact-sql'&gt;fn_syscollector_get_execution_details (Transact-SQL)&lt;/a&gt; function.</column>
    <column name="operator" type="nvarchar(128)">Identifies who started the collection set or package. Is nullable.</column>
    <column name="package_execution_id" type="uniqueidentifier">Provides a link to the SSIS log table. Is nullable.</column>
    <column name="collection_set_id" type="int">Provides a link to the data collection configuration table in msdb. Is nullable.</column>
  </table>
  <table name="dbo.syscollector_execution_stats" category="DataCollector" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syscollector-execution-stats-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syscollector_execution_stats (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Provides information about task execution for a collection set or package.&lt;/para&gt;</description>
    <column name="log_id" type="bigint">Identifies each collection set execution. Used to join this view with other detailed logs. Is not nullable.</column>
    <column name="task_name" type="nvarchar(128)">The name of the collection set or package task that this information is for. Is not nullable.</column>
    <column name="execution_row_count_in" type="int">Number of rows processed at the beginning of data flow. Is nullable.</column>
    <column name="execution_row_count_out" type="int">Number of rows processed at the end of data flow. Is nullable.</column>
    <column name="execution_row_count_errors" type="int">Number of rows that failed during the data flow. Is nullable.</column>
    <column name="execution_time_ms" type="int">The time, in milliseconds, required for the task to complete. Is nullable.</column>
    <column name="log_time" type="datetime">The time that this information was logged. Is not nullable.</column>
  </table>
  <table name="sys.data_spaces" category="DataSpaces" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-data-spaces-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.data_spaces (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each data space. This can be a filegroup, partition scheme, or FILESTREAM data filegroup.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of data space, unique within the database.</column>
    <column name="data_space_id" type="int">Data space ID number, unique within the database.</column>
    <column name="type" type="char(2)">Data space type:&lt;br /&gt;&lt;br /&gt; FG = Filegroup&lt;br /&gt;&lt;br /&gt; FD = FILESTREAM data filegroup&lt;br /&gt;&lt;br /&gt; FX = Memory-optimized tables filegroup&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; PS = Partition scheme</column>
    <column name="type_desc" type="nvarchar(60)">Description of data space type:&lt;br /&gt;&lt;br /&gt; FILESTREAM_DATA_FILEGROUP&lt;br /&gt;&lt;br /&gt; MEMORY_OPTIMIZED_DATA_FILEGROUP&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; PARTITION_SCHEME&lt;br /&gt;&lt;br /&gt; ROWS_FILEGROUP</column>
    <column name="is_default" type="bit">1 = This is the default data space. The default data space is used when a filegroup or partition scheme is not specified in a CREATE TABLE or CREATE INDEX statement.&lt;br /&gt;&lt;br /&gt; 0 = This is not the default data space.</column>
    <column name="is_system" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; 1 = Data space is used for full-text index fragments.&lt;br /&gt;&lt;br /&gt; 0 = Data space is not used for full-text index fragments.</column>
  </table>
  <table name="sys.destination_data_spaces" category="DataSpaces" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-destination-data-spaces-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.destination_data_spaces (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each data space destination of a partition scheme.&lt;/para&gt;</description>
    <column name="partition_scheme_id" type="int">ID of the partition-scheme that is partitioning to the data space. For partitioned tables, this can be joined to &lt;strong&gt;data_space_id&lt;/strong&gt; in &lt;c&gt;sys.partition_schemes&lt;/c&gt;.</column>
    <column name="destination_id" type="int">ID (1-based ordinal) of the destination-mapping, unique within the partition scheme.</column>
    <column name="data_space_id" type="int">ID of the data space to which data for this scheme's destination is being mapped.</column>
  </table>
  <table name="sys.filegroups" category="DataSpaces" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-filegroups-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.filegroups (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each data space that is a filegroup.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of data space, unique within the database.</column>
    <column name="data_space_id" type="int">Data space ID number, unique within the database.</column>
    <column name="type" type="char(2)">Data space type:&lt;br /&gt;&lt;br /&gt; FG = Filegroup&lt;br /&gt;&lt;br /&gt; FD = FILESTREAM data filegroup&lt;br /&gt;&lt;br /&gt; FX = Memory-optimized tables filegroup&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; PS = Partition scheme</column>
    <column name="type_desc" type="nvarchar(60)">Description of data space type:&lt;br /&gt;&lt;br /&gt; FILESTREAM_DATA_FILEGROUP&lt;br /&gt;&lt;br /&gt; MEMORY_OPTIMIZED_DATA_FILEGROUP&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; PARTITION_SCHEME&lt;br /&gt;&lt;br /&gt; ROWS_FILEGROUP</column>
    <column name="is_default" type="bit">1 = This is the default data space. The default data space is used when a filegroup or partition scheme is not specified in a CREATE TABLE or CREATE INDEX statement.&lt;br /&gt;&lt;br /&gt; 0 = This is not the default data space.</column>
    <column name="is_system" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; 1 = Data space is used for full-text index fragments.&lt;br /&gt;&lt;br /&gt; 0 = Data space is not used for full-text index fragments.</column>
    <column name="filegroup_guid" type="uniqueidentifier">GUID for the filegroup.&lt;br /&gt;&lt;br /&gt; NULL = PRIMARY filegroup</column>
    <column name="log_filegroup_id" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed. In SQL Server, the value is NULL.</column>
    <column name="is_read_only" type="bit">1 = Filegroup is read-only.&lt;br /&gt;&lt;br /&gt; 0 = Filegroup is read/write.</column>
    <column name="is_autogrow_all_files" type="bit">&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later.&lt;br /&gt;&lt;br /&gt; 1 = When a file in the filegroup meets the autogrow threshold, all files in the filegroup grow.&lt;br /&gt;&lt;br /&gt; 0 = When a file in the filegroup meets the autogrow threshold, only that file grows. This is the default.</column>
  </table>
  <table name="sys.partition_schemes" category="DataSpaces" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partition-schemes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.partition_schemes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each Data Space that is a partition scheme, with &lt;strong&gt;type&lt;/strong&gt; = PS.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of data space, unique within the database.</column>
    <column name="data_space_id" type="int">Data space ID number, unique within the database.</column>
    <column name="type" type="char(2)">Data space type:&lt;br /&gt;&lt;br /&gt; FG = Filegroup&lt;br /&gt;&lt;br /&gt; FD = FILESTREAM data filegroup&lt;br /&gt;&lt;br /&gt; FX = Memory-optimized tables filegroup&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; PS = Partition scheme</column>
    <column name="type_desc" type="nvarchar(60)">Description of data space type:&lt;br /&gt;&lt;br /&gt; FILESTREAM_DATA_FILEGROUP&lt;br /&gt;&lt;br /&gt; MEMORY_OPTIMIZED_DATA_FILEGROUP&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; PARTITION_SCHEME&lt;br /&gt;&lt;br /&gt; ROWS_FILEGROUP</column>
    <column name="is_default" type="bit">1 = This is the default data space. The default data space is used when a filegroup or partition scheme is not specified in a CREATE TABLE or CREATE INDEX statement.&lt;br /&gt;&lt;br /&gt; 0 = This is not the default data space.</column>
    <column name="is_system" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; 1 = Data space is used for full-text index fragments.&lt;br /&gt;&lt;br /&gt; 0 = Data space is not used for full-text index fragments.</column>
    <column name="function_id" type="int">ID of partition function used in the scheme.</column>
  </table>
  <table name="dbo.sysmail_allitems" category="DatabaseMail" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-allitems-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;sysmail_allitems (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Contains one row for each message processed by Database Mail. Use this view when you want to see the status of all messages.&lt;br/&gt;
 To see only messages with the failed status, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-faileditems-transact-sql'&gt;sysmail_faileditems (Transact-SQL)&lt;/a&gt;. To see only unsent messages, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-unsentitems-transact-sql'&gt;sysmail_unsentitems (Transact-SQL)&lt;/a&gt;. To see only messages that were sent, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-sentitems-transact-sql'&gt;sysmail_sentitems (Transact-SQL)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="mailitem_id" type="int">Identifier of the mail item in the mail queue.</column>
    <column name="profile_id" type="int">The identifier of the profile used to send the message.</column>
    <column name="recipients" type="varchar(max)">The e-mail addresses of the message recipients.</column>
    <column name="copy_recipients" type="varchar(max)">The e-mail addresses of those who receive copies of the message.</column>
    <column name="blind_copy_recipients" type="varchar(max)">The e-mail addresses of those who receive copies of the message but whose names do not appear in the message header.</column>
    <column name="subject" type="nvarchar(510)">The subject line of the message.</column>
    <column name="body" type="varchar(max)">The body of the message.</column>
    <column name="body_format" type="varchar(20)">The body format of the message. The possible values are TEXT and HTML.</column>
    <column name="importance" type="varchar(6)">The &lt;strong&gt;importance&lt;/strong&gt; parameter of the message.</column>
    <column name="sensitivity" type="varchar(12)">The &lt;strong&gt;sensitivity&lt;/strong&gt; parameter of the message.</column>
    <column name="file_attachments" type="varchar(max)">A semicolon-delimited list of file names attached to the e-mail message.</column>
    <column name="attachment_encoding" type="varchar(20)">The type of mail attachment.</column>
    <column name="query" type="varchar(max)">The query executed by the mail program.</column>
    <column name="execute_query_database" type="sysname">The database context within which the mail program executed the query.</column>
    <column name="attach_query_result_as_file" type="bit">When the value is 0, the query results were included in the body of the e-mail message, after the contents of the body. When the value is 1, the results were returned as an attachment.</column>
    <column name="query_result_header" type="bit">When the value is 1, query results contained column headers. When the value is 0, query results did not include column headers.</column>
    <column name="query_result_width" type="int">The &lt;strong&gt;query_result_width&lt;/strong&gt; parameter of the message.</column>
    <column name="query_result_separator" type="char(1)">The character used to separate columns in the query output.</column>
    <column name="exclude_query_output" type="bit">The &lt;strong&gt;exclude_query_output&lt;/strong&gt; parameter of the message. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-send-dbmail-transact-sql'&gt;sp_send_dbmail (Transact-SQL)&lt;/a&gt;.</column>
    <column name="append_query_error" type="bit">The &lt;strong&gt;append_query_error&lt;/strong&gt; parameter of the message. 0 indicates that Database Mail should not send the e-mail message if there is an error in the query.</column>
    <column name="send_request_date" type="datetime">The date and time the message was placed on the mail queue.</column>
    <column name="send_request_user" type="sysname">The user who submitted the message. This is the user context of the database mail procedure, not the From: field of the message.</column>
    <column name="sent_account_id" type="int">The identifier of the Database Mail account used to send the message.</column>
    <column name="sent_status" type="varchar(8)">The status of the mail. Possible values are:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;sent&lt;/strong&gt; - The mail was sent.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;unsent&lt;/strong&gt; - Database mail is still attempting to send the message.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;retrying&lt;/strong&gt; - Database Mail failed to send the message but is attempting to send it again.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;failed&lt;/strong&gt; - Database mail was unable to send the message.</column>
    <column name="sent_date" type="datetime">The date and time that the message was sent.</column>
    <column name="last_mod_date" type="datetime">The date and time of the last modification of the row.</column>
    <column name="last_mod_user" type="sysname">The user who last modified the row.</column>
  </table>
  <table name="dbo.sysmail_event_log" category="DatabaseMail" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-event-log-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;sysmail_event_log (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each Windows or SQL Server message returned by the Database Mail system. (Message in this context refers to a message such as an error message, not an e-mail message.) Configure the &lt;strong&gt;Logging Level&lt;/strong&gt; parameter by using the &lt;strong&gt;Configure System Parameters&lt;/strong&gt; dialog box of the Database Mail Configuration Wizard, or the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sysmail-configure-sp-transact-sql'&gt;sysmail_configure_sp&lt;/a&gt; stored procedure, to determine which messages are returned.&lt;/para&gt;</description>
    <column name="Log_id" type="int">Identifier of items in the log.</column>
    <column name="event_type" type="varchar(11)">The type of notice inserted in the log. Possible values are errors, warnings, informational messages, success messages, and additional internal messages.</column>
    <column name="log_date" type="datetime">The date and time the log entry is made.</column>
    <column name="description" type="nvarchar(max)">The text of the message being recorded.</column>
    <column name="process_id" type="int">The process id of the Database Mail external program. This typically changes each time the Database Mail external program starts.</column>
    <column name="mailitem_id" type="int">Identifier of the mail item in the mail queue. NULL if the message is not related to a specific e-mail item.</column>
    <column name="account_id" type="int">The &lt;strong&gt;account_id&lt;/strong&gt; of the account related to the event. NULL if the message is not related to a specific account.</column>
    <column name="last_mod_date" type="datetime">The date and time of the last modification of the row.</column>
    <column name="last_mod_user" type="sysname">The user who last modified the row. For e-mails, this is the user who sent the mail. For messages generated by the Database Mail external program, this is the user context of the program.</column>
  </table>
  <table name="dbo.sysmail_faileditems" category="DatabaseMail" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-faileditems-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;sysmail_faileditems (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each Database Mail message with the &lt;strong&gt;failed&lt;/strong&gt; status. Use this view to determine which messages were not successfully sent.&lt;br/&gt;
 To see all messages processed by Database Mail, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-allitems-transact-sql'&gt;sysmail_allitems (Transact-SQL)&lt;/a&gt;. To see only unsent messages, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-unsentitems-transact-sql'&gt;sysmail_unsentitems (Transact-SQL)&lt;/a&gt;. To see only messages that were sent, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-sentitems-transact-sql'&gt;sysmail_sentitems (Transact-SQL)&lt;/a&gt;. To view e-mail attachments, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-mailattachments-transact-sql'&gt;sysmail_mailattachments (Transact-SQL)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="mailitem_id" type="int">Identifier of the mail item in the mail queue.</column>
    <column name="profile_id" type="int">The identifier of the profile used to submit the message.</column>
    <column name="recipients" type="varchar(max)">The e-mail addresses of the message recipients.</column>
    <column name="copy_recipients" type="varchar(max)">The e-mail addresses of those who receive copies of the message.</column>
    <column name="blind_copy_recipients" type="varchar(max)">The e-mail addresses of those who receive copies of the message but whose names do not appear in the message header.</column>
    <column name="subject" type="nvarchar(510)">The subject line of the message.</column>
    <column name="body" type="varchar(max)">The body of the message.</column>
    <column name="body_format" type="varchar(20)">The body format of the message. The possible values are TEXT and HTML.</column>
    <column name="importance" type="varchar(6)">The &lt;strong&gt;importance&lt;/strong&gt; parameter of the message.</column>
    <column name="sensitivity" type="varchar(12)">The &lt;strong&gt;sensitivity&lt;/strong&gt; parameter of the message.</column>
    <column name="file_attachments" type="varchar(max)">A semicolon-delimited list of file names attached to the e-mail message.</column>
    <column name="Attachment_encoding" type="varchar(20)">The type of mail attachment.</column>
    <column name="Query" type="varchar(max)">The query executed by the mail program.</column>
    <column name="execute_query_database" type="sysname">The database context within which the mail program executed the query.</column>
    <column name="attach_query_result_as_file" type="bit">When the value is 0, the query results were included in the body of the e-mail message, after the contents of the body. When the value is 1, the results were returned as an attachment.</column>
    <column name="query_result_header" type="bit">When the value is 1, query results contained column headers. When the value is 0, query results did not include column headers.</column>
    <column name="query_result_width" type="int">The &lt;strong&gt;query_result_width&lt;/strong&gt; parameter of the message.</column>
    <column name="query_result_separator" type="char(1)">The character used to separate columns in the query output.</column>
    <column name="exclude_query_output" type="bit">The &lt;strong&gt;exclude_query_output&lt;/strong&gt; parameter of the message. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-send-dbmail-transact-sql'&gt;sp_send_dbmail (Transact-SQL)&lt;/a&gt;.</column>
    <column name="append_query_error" type="bit">The &lt;strong&gt;append_query_error&lt;/strong&gt; parameter of the message. 0 indicates that Database Mail should not send the e-mail message if there is an error in the query.</column>
    <column name="send_request_date" type="datetime">The date and time the message was placed on the mail queue.</column>
    <column name="send_request_user" type="sysname">The user who submitted the message. This is the user context of the database mail procedure, not the From: field of the message.</column>
    <column name="sent_account_id" type="int">The identifier of the Database Mail account used to send the message. Always NULL for this view.</column>
    <column name="sent_status" type="varchar(8)">The status of the mail. Always &lt;strong&gt;failed&lt;/strong&gt; for this view.</column>
    <column name="sent_date" type="datetime">The date and time that the message was removed from the mail queue.</column>
    <column name="last_mod_date" type="datetime">The date and time of the last modification of the row.</column>
    <column name="last_mod_user" type="sysname">The user who last modified the row.</column>
  </table>
  <table name="dbo.sysmail_mailattachments" category="DatabaseMail" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-mailattachments-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;sysmail_mailattachments (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each attachment submitted to Database Mail. Use this view when you want information about Database Mail attachments. To review all e-mails processed by Database Mail use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-allitems-transact-sql'&gt;sysmail_allitems (Transact-SQL)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="attachment_id" type="int">Identifier of the attachment.</column>
    <column name="mailitem_id" type="int">Identifier of the mail item that contained the attachment.</column>
    <column name="filename" type="nvarchar(520)">The file name of the attachment. When &lt;strong&gt;attach_query_result&lt;/strong&gt; is 1 and &lt;strong&gt;query_attachment_filename&lt;/strong&gt; is NULL, Database Mail creates an arbitrary filename.</column>
    <column name="filesize" type="int">The size of the attachment in bytes.</column>
    <column name="attachment" type="varbinary(max)">The content of the attachment.</column>
    <column name="last_mod_date" type="datetime">The date and time of the last modification of the row.</column>
    <column name="last_mod_user" type="sysname">The user who last modified the row.</column>
  </table>
  <table name="dbo.sysmail_sentitems" category="DatabaseMail" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-sentitems-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;sysmail_sentitems (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Contains one row for each message sent by Database Mail. Use &lt;strong&gt;sysmail_sentitems&lt;/strong&gt; when you want to see which messages were successfully sent.&lt;br/&gt;
 To see all messages processed by Database Mail, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-allitems-transact-sql'&gt;sysmail_allitems (Transact-SQL)&lt;/a&gt;. To see only messages with the failed status, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-faileditems-transact-sql'&gt;sysmail_faileditems (Transact-SQL)&lt;/a&gt;. To see only unsent or retrying messages, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-unsentitems-transact-sql'&gt;sysmail_unsentitems (Transact-SQL)&lt;/a&gt;. To see e-mail attachments, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-mailattachments-transact-sql'&gt;sysmail_mailattachments (Transact-SQL)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="mailitem_id" type="int">Identifier of the mail item in the mail queue.</column>
    <column name="profile_id" type="int">The identifier of the profile used to send the message.</column>
    <column name="recipients" type="varchar(max)">The e-mail addresses of the message recipients.</column>
    <column name="copy_recipients" type="varchar(max)">The e-mail addresses of those who receive copies of the message.</column>
    <column name="blind_copy_recipients" type="varchar(max)">The e-mail addresses of those who receive copies of the message but whose names do not appear in the message header.</column>
    <column name="subject" type="nvarchar(510)">The subject line of the message.</column>
    <column name="body" type="varchar(max)">The body of the message.</column>
    <column name="body_format" type="varchar(20)">The body format of the message. The possible values are &lt;strong&gt;TEXT&lt;/strong&gt; and &lt;strong&gt;HTML&lt;/strong&gt;.</column>
    <column name="importance" type="varchar(6)">The &lt;strong&gt;importance&lt;/strong&gt; parameter of the message.</column>
    <column name="sensitivity" type="varchar(12)">The &lt;strong&gt;sensitivity&lt;/strong&gt; parameter of the message.</column>
    <column name="file_attachments" type="varchar(max)">A semicolon-delimited list of file names attached to the e-mail message.</column>
    <column name="attachment_encoding" type="varchar(20)">The type of mail attachment.</column>
    <column name="query" type="varchar(max)">The query executed by the mail program.</column>
    <column name="execute_query_database" type="sysname">The database context within which the mail program executed the query.</column>
    <column name="attach_query_result_as_file" type="bit">When the value is 0, the query results were included in the body of the e-mail message, after the contents of the body. When the value is 1, the results were returned as an attachment.</column>
    <column name="query_result_header" type="bit">When the value is 1, query results contained column headers. When the value is 0, query results did not include column headers.</column>
    <column name="query_result_width" type="int">The &lt;strong&gt;query_result_width&lt;/strong&gt; parameter of the message.</column>
    <column name="query_result_separator" type="char(1)">The character used to separate columns in the query output.</column>
    <column name="exclude_query_output" type="bit">The &lt;strong&gt;exclude_query_output&lt;/strong&gt; parameter of the message. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-send-dbmail-transact-sql'&gt;sp_send_dbmail (Transact-SQL)&lt;/a&gt;.</column>
    <column name="append_query_error" type="bit">The &lt;strong&gt;append_query_error&lt;/strong&gt; parameter of the message. 0 indicates that Database Mail should not send the e-mail message if there is an error in the query.</column>
    <column name="send_request_date" type="datetime">The date and time the message was placed on the mail queue.</column>
    <column name="send_request_user" type="sysname">The user who sent the message. This is the user context of the database mail procedure, not the From: field of the message.</column>
    <column name="sent_account_id" type="int">The identifier of the Database Mail account used to send the message.</column>
    <column name="sent_status" type="varchar(8)">The status of the mail. Always &lt;strong&gt;sent&lt;/strong&gt; for this view.</column>
    <column name="sent_date" type="datetime">The date and time that the message was sent.</column>
    <column name="last_mod_date" type="datetime">The date and time of the last modification of the row.</column>
    <column name="last_mod_user" type="sysname">The user who last modified the row.</column>
  </table>
  <table name="dbo.sysmail_unsentitems" category="DatabaseMail" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-unsentitems-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;sysmail_unsentitems (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Contains one row for each Database Mail message with the &lt;strong&gt;unsent&lt;/strong&gt; or &lt;strong&gt;retrying&lt;/strong&gt; status. Messages with unsent or retrying status are still in the mail queue and may be sent at any time. Messages can have the &lt;strong&gt;unsent&lt;/strong&gt; status for the following reasons:&lt;br/&gt;
-   The message is new, and though the message has been placed on the mail queue, Database Mail is working on other messages and has not yet reached this message.&lt;br/&gt;
-   The Database Mail external program is not running and no mail is being sent.&lt;br/&gt;
 Messages can have the &lt;strong&gt;retrying&lt;/strong&gt; status for the following reasons:&lt;br/&gt;
-   Database Mail has attempted to send the mail, but the SMTP mail server could not be contacted. Database Mail will continue to attempt to send the message using other Database Mail accounts assigned to the profile that sent the message. If no accounts can send the mail, Database Mail will wait for the length of time configured for the &lt;strong&gt;Account Retry Delay&lt;/strong&gt; parameter and then attempt to send the message again. Database Mail uses the &lt;strong&gt;Account Retry Attempts&lt;/strong&gt; parameter to determine how many times to attempt to send the message. Messages retain &lt;strong&gt;retrying&lt;/strong&gt; status as long as Database Mail is attempting to send the message.&lt;br/&gt;
 Use this view when you want to see how many messages are waiting to be sent and how long they have been in the mail queue. Normally the number of &lt;strong&gt;unsent&lt;/strong&gt; messages will be low. Conduct a benchmark test during normal operations to determine a reasonable number of messages in the message queue for your operations.&lt;br/&gt;
 To see all messages processed by Database Mail, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-allitems-transact-sql'&gt;sysmail_allitems (Transact-SQL)&lt;/a&gt;. To see only messages with the failed status, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-faileditems-transact-sql'&gt;sysmail_faileditems (Transact-SQL)&lt;/a&gt;. To see only messages that were sent, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sysmail-sentitems-transact-sql'&gt;sysmail_sentitems (Transact-SQL)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="mailitem_id" type="int">Identifier of the mail item in the mail queue.</column>
    <column name="profile_id" type="int">The identifier of the profile used to submit the message.</column>
    <column name="recipients" type="varchar(max)">The e-mail addresses of the message recipients.</column>
    <column name="copy_recipients" type="varchar(max)">The e-mail addresses of those who receive copies of the message.</column>
    <column name="blind_copy_recipients" type="varchar(max)">The e-mail addresses of those who receive copies of the message but whose names do not appear in the message header.</column>
    <column name="subject" type="nvarchar(510)">The subject line of the message.</column>
    <column name="body" type="varchar(max)">The body of the message.</column>
    <column name="body_format" type="varchar(20)">The body format of the message. The possible values are &lt;strong&gt;TEXT&lt;/strong&gt; and &lt;strong&gt;HTML&lt;/strong&gt;.</column>
    <column name="importance" type="varchar(6)">The &lt;strong&gt;importance&lt;/strong&gt; parameter of the message.</column>
    <column name="sensitivity" type="varchar(12)">The &lt;strong&gt;sensitivity&lt;/strong&gt; parameter of the message.</column>
    <column name="file_attachments" type="varchar(max)">A semicolon-delimited list of file names attached to the e-mail message.</column>
    <column name="attachment_encoding" type="varchar(20)">The type of mail attachment.</column>
    <column name="query" type="varchar(max)">The query executed by the mail program.</column>
    <column name="execute_query_database" type="sysname">The database context within which the mail program executed the query.</column>
    <column name="attach_query_result_as_file" type="bit">When the value is 0, the query results were included in the body of the e-mail message, after the contents of the body. When the value is 1, the results were returned as an attachment.</column>
    <column name="query_result_header" type="bit">When the value is 1, query results contained column headers. When the value is 0, query results did not include column headers.</column>
    <column name="query_result_width" type="int">The &lt;strong&gt;query_result_width&lt;/strong&gt; parameter of the message.</column>
    <column name="query_result_separator" type="char(1)">The character used to separate columns in the query output.</column>
    <column name="exclude_query_output" type="bit">The &lt;strong&gt;exclude_query_output&lt;/strong&gt; parameter of the message. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-send-dbmail-transact-sql'&gt;sp_send_dbmail (Transact-SQL)&lt;/a&gt;.</column>
    <column name="append_query_error" type="bit">The &lt;strong&gt;append_query_error&lt;/strong&gt; parameter of the message. 0 indicates that Database Mail should not send the e-mail message if there is an error in the query.</column>
    <column name="send_request_date" type="datetime">The date and time the message was placed on the mail queue.</column>
    <column name="send_request_user" type="sysname">The user who submitted the message. This is the user context of the database mail procedure, not the &lt;strong&gt;From&lt;/strong&gt; field of the message.</column>
    <column name="sent_account_id" type="int">The identifier of the Database Mail account used to send the message. Always NULL for this view.</column>
    <column name="sent_status" type="varchar(8)">Will be &lt;strong&gt;unsent&lt;/strong&gt; if Database Mail has not attempted to send the mail. Will be &lt;strong&gt;retrying&lt;/strong&gt; if Database Mail failed to send the message but is trying again.</column>
    <column name="sent_date" type="datetime">The date and time the Database Mail last attempted to send the mail. NULL if Database Mail has not attempted to send the message.</column>
    <column name="last_mod_date" type="datetime">The date and time of the last modification of the row.</column>
    <column name="last_mod_user" type="sysname">The user who last modified the row.</column>
  </table>
  <table name="sys.database_mirroring_witnesses" category="DatabaseMirroring" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/database-mirroring-witness-catalog-views-sys-database-mirroring-witnesses">
    <description>&lt;para&gt;&lt;strong&gt;Database Mirroring Witness Catalog Views - sys.database_mirroring_witnesses&lt;/strong&gt;&lt;/para&gt;
 &lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for every witness role that a server plays in a database mirroring partnership. &lt;br/&gt;
In a database mirroring session, automatic failover requires a witness server. Ideally, the witness resides on a separate computer from both the principal and mirror servers. The witness does not serve the database. Instead, it monitors the status of the principal and mirror servers. If the principal server fails, the witness may initiate automatic failover to the mirror server.&lt;/para&gt;</description>
    <column name="database_name" type="sysname">Name of the two copies of the database in the database mirroring session.</column>
    <column name="principal_server_name" type="sysname">Name of partner server whose copy of the database is currently the principal database.</column>
    <column name="mirror_server_name" type="sysname">Name of the partner server whose copy of the database is currently the mirror database.</column>
    <column name="safety_level" type="tinyint">Transaction safety setting for updates on the mirror database:&lt;br /&gt;&lt;br /&gt; 0 = Unknown state&lt;br /&gt;&lt;br /&gt; 1 = Off (asynchronous)&lt;br /&gt;&lt;br /&gt; 2 = Full (synchronous)&lt;br /&gt;&lt;br /&gt; Using a witness for automatic failover requires full transaction safety, which is the default.</column>
    <column name="safety_level_desc" type="nvarchar(60)">Description of safety guarantee of updates on the mirror database:&lt;br /&gt;&lt;br /&gt; UNKNOWN&lt;br /&gt;&lt;br /&gt; OFF&lt;br /&gt;&lt;br /&gt; FULL</column>
    <column name="safety_sequence_number" type="int">Update sequence number for changes to &lt;strong&gt;safety_level&lt;/strong&gt;.</column>
    <column name="role_sequence_number" type="int">Update sequence number for changes to principal/mirror roles played by the mirroring partners.</column>
    <column name="mirroring_guid" type="uniqueidentifier">Identifier of the mirroring partnership.</column>
    <column name="family_guid" type="uniqueidentifier">Identifier of the backup family for the database. Used for detecting matching restore states.</column>
    <column name="is_suspended" type="bit">Database mirroring is suspended.</column>
    <column name="is_suspended_sequence_number" type="int">Sequence number for setting &lt;strong&gt;is_suspended&lt;/strong&gt;.</column>
    <column name="partner_sync_state" type="tinyint">Synchronization state of the mirroring session:&lt;br /&gt;&lt;br /&gt; 5 = The partners are synchronized. Failover is potentially possible. For information about the requirements for failover see, &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/database-mirroring/role-switching-during-a-database-mirroring-session-sql-server'&gt;Role Switching During a Database Mirroring Session (SQL Server)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; 6 = The partners are not synchronized. Failover is not possible now.</column>
    <column name="partner_sync_state_desc" type="nvarchar(60)">Description of the synchronization state of the mirroring session:&lt;br /&gt;&lt;br /&gt; SYNCHRONIZED&lt;br /&gt;&lt;br /&gt; UNSYNCHRONIZED</column>
  </table>
  <table name="sys.backup_devices" category="DatabasesAndFiles" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-backup-devices-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.backup_devices (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each backup-device registered by using &lt;strong&gt;sp_addumpdevice&lt;/strong&gt; or created in SQL Server Management Studio.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the backup device. Is unique in the set.</column>
    <column name="type" type="tinyint">Type of backup device:&lt;br /&gt;&lt;br /&gt; 2 = Disk&lt;br /&gt;&lt;br /&gt; 3 = Diskette (obsolete)&lt;br /&gt;&lt;br /&gt; 5 = Tape&lt;br /&gt;&lt;br /&gt; 6 = Pipe (obsolete)&lt;br /&gt;&lt;br /&gt; 7 = Virtual device (for optional use by third-party backup vendors)&lt;br /&gt;&lt;br /&gt; 9 = URL&lt;br /&gt;&lt;br /&gt;Typically, only disk (2) and URL (9) are used.</column>
    <column name="type_desc" type="nvarchar(60)">Description of backup device type:&lt;br /&gt;&lt;br /&gt; DISK&lt;br /&gt;&lt;br /&gt; DISKETTE (obsolete)&lt;br /&gt;&lt;br /&gt; TAPE&lt;br /&gt;&lt;br /&gt; PIPE (obsolete)&lt;br /&gt;&lt;br /&gt; VIRTUAL_DEVICE (for optional use by third party backup vendors)&lt;br /&gt;&lt;br /&gt; URL &lt;br /&gt;&lt;br /&gt; Typically, only DISK and URL are used.</column>
    <column name="physical_name" type="nvarchar(260)">Physical file name or path of the backup device.</column>
  </table>
  <table name="sys.databases" category="DatabasesAndFiles" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-databases-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.databases (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains one row per database in the instance of SQL Server.&lt;br/&gt;
If a database is not &lt;c&gt;ONLINE&lt;/c&gt;, or &lt;c&gt;AUTO_CLOSE&lt;/c&gt; is set to &lt;c&gt;ON&lt;/c&gt; and the database is closed, the values of some columns may be &lt;c&gt;NULL&lt;/c&gt;. If a database is &lt;c&gt;OFFLINE&lt;/c&gt;, the corresponding row is not visible to low-privileged users. To see the corresponding row if the database is &lt;c&gt;OFFLINE&lt;/c&gt;, a user must have at least the &lt;c&gt;ALTER ANY DATABASE&lt;/c&gt; server-level permission, or the &lt;c&gt;CREATE DATABASE&lt;/c&gt; permission in the &lt;c&gt;master&lt;/c&gt; database.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of database, unique within an instance of SQL Server or within a Azure SQL Database server.</column>
    <column name="database_id" type="int">ID of the database, unique within an instance of SQL Server or within a Azure SQL Database server.</column>
    <column name="source_database_id" type="int">Non-NULL = ID of the source database of this database snapshot.&lt;br /&gt; NULL = Not a database snapshot.</column>
    <column name="owner_sid" type="varbinary(85)">SID (Security-Identifier) of the external owner of the database, as registered to the server. For information about who can own a database, see the &lt;strong&gt;ALTER AUTHORIZATION for databases&lt;/strong&gt; section of &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-authorization-transact-sql'&gt;ALTER AUTHORIZATION&lt;/a&gt;.</column>
    <column name="create_date" type="datetime">Date the database was created or renamed. For &lt;strong&gt;tempdb&lt;/strong&gt;, this value changes every time the server restarts.</column>
    <column name="compatibility_level" type="tinyint">Integer corresponding to the version of SQL Server for which behavior is compatible:&lt;br /&gt;&lt;br /&gt;&lt;table border="0"&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Value&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;Applies to&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;70&lt;/td&gt;&lt;td&gt;SQL Server 7.0 through SQL Server 2008&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;80&lt;/td&gt;&lt;td&gt;SQL Server 2000 (8.x) through SQL Server 2008 R2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;90&lt;/td&gt;&lt;td&gt;SQL Server 2008 through SQL Server 2012 (11.x)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;SQL Server (Starting with SQL Server 2008) and Azure SQL Database&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;110&lt;/td&gt;&lt;td&gt;SQL Server (Starting with SQL Server 2012 (11.x)) and Azure SQL Database&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;120&lt;/td&gt;&lt;td&gt;SQL Server (Starting with SQL Server 2014 (12.x)) and Azure SQL Database&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;130&lt;/td&gt;&lt;td&gt;SQL Server (Starting with SQL Server 2016 (13.x)) and Azure SQL Database&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;140&lt;/td&gt;&lt;td&gt;SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;150&lt;/td&gt;&lt;td&gt;SQL Server (Starting with SQL Server 2019 (15.x)) and Azure SQL Database&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</column>
    <column name="collation_name" type="sysname">Collation for the database. Acts as the default collation in the database.&lt;br /&gt; NULL = Database is not online or AUTO_CLOSE is set to ON and the database is closed.</column>
    <column name="user_access" type="tinyint">User-access setting:&lt;br /&gt; 0 = MULTI_USER specified&lt;br /&gt; 1 = SINGLE_USER specified&lt;br /&gt; 2 = RESTRICTED_USER specified</column>
    <column name="user_access_desc" type="nvarchar(60)">Description of user-access setting.</column>
    <column name="is_read_only" type="bit">1 = Database is READ_ONLY&lt;br /&gt; 0 = Database is READ_WRITE</column>
    <column name="is_auto_close_on" type="bit">1 = AUTO_CLOSE is ON&lt;br /&gt; 0 = AUTO_CLOSE is OFF</column>
    <column name="is_auto_shrink_on" type="bit">1 = AUTO_SHRINK is ON&lt;br /&gt; 0 = AUTO_SHRINK is OFF</column>
    <column name="state" type="tinyint">&lt;strong&gt;Value&lt;/strong&gt;&lt;br /&gt; 0 = ONLINE &lt;br /&gt; 1 = RESTORING &lt;br /&gt; 2 = RECOVERING &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 3 = RECOVERY_PENDING &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 4 = SUSPECT &lt;br /&gt; 5 = EMERGENCY &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 6 = OFFLINE &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 7 = COPYING &lt;sup&gt;2&lt;/sup&gt; &lt;br /&gt; 10 = OFFLINE_SECONDARY &lt;sup&gt;2&lt;/sup&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; For Always On databases, query the &lt;c&gt;database_state&lt;/c&gt; or &lt;c&gt;database_state_desc&lt;/c&gt; columns of &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-hadr-database-replica-states-transact-sql'&gt;sys.dm_hadr_database_replica_states&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;sup&gt;1&lt;/sup&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2008) and Azure SQL Database&lt;br /&gt;&lt;sup&gt;2&lt;/sup&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database Active Geo-Replication</column>
    <column name="state_desc" type="nvarchar(60)">Description of the database state. See state.</column>
    <column name="is_in_standby" type="bit">Database is read-only for restore log.</column>
    <column name="is_cleanly_shutdown" type="bit">1 = Database shut down cleanly; no recovery required on startup&lt;br /&gt; 0 = Database did not shut down cleanly; recovery is required on startup</column>
    <column name="is_supplemental_logging_enabled" type="bit">1 = SUPPLEMENTAL_LOGGING is ON&lt;br /&gt; 0 = SUPPLEMENTAL_LOGGING is OFF</column>
    <column name="snapshot_isolation_state" type="tinyint">State of snapshot-isolation transactions being allowed, as set by the ALLOW_SNAPSHOT_ISOLATION option:&lt;br /&gt; 0 = Snapshot isolation state is OFF (default). Snapshot isolation is disallowed.&lt;br /&gt; 1 = Snapshot isolation state ON. Snapshot isolation is allowed.&lt;br /&gt; 2 = Snapshot isolation state is in transition to OFF state. All transactions have their modifications versioned. Cannot start new transactions using snapshot isolation. The database remains in the transition to OFF state until all transactions that were active when ALTER DATABASE was run can be completed.&lt;br /&gt; 3 = Snapshot isolation state is in transition to ON state. New transactions have their modifications versioned. Transactions cannot use snapshot isolation until the snapshot isolation state becomes 1 (ON). The database remains in the transition to ON state until all update transactions that were active when ALTER DATABASE was run can be completed.</column>
    <column name="snapshot_isolation_state_desc" type="nvarchar(60)">Description of state of snapshot-isolation transactions being allowed, as set by the ALLOW_SNAPSHOT_ISOLATION option.</column>
    <column name="is_read_committed_snapshot_on" type="bit">1 = READ_COMMITTED_SNAPSHOT option is ON. Read operations under the read-committed isolation level are based on snapshot scans and do not acquire locks.&lt;br /&gt; 0 = READ_COMMITTED_SNAPSHOT option is OFF (default). Read operations under the read-committed isolation level use share locks.</column>
    <column name="recovery_model" type="tinyint">Recovery model selected:&lt;br /&gt; 1 = FULL&lt;br /&gt; 2 = BULK_LOGGED&lt;br /&gt; 3 = SIMPLE</column>
    <column name="recovery_model_desc" type="nvarchar(60)">Description of recovery model selected.</column>
    <column name="page_verify_option" type="tinyint">Setting of PAGE_VERIFY option:&lt;br /&gt; 0 = NONE&lt;br /&gt; 1 = TORN_PAGE_DETECTION&lt;br /&gt; 2 = CHECKSUM</column>
    <column name="page_verify_option_desc" type="nvarchar(60)">Description of PAGE_VERIFY option setting.</column>
    <column name="is_auto_create_stats_on" type="bit">1 = AUTO_CREATE_STATISTICS is ON&lt;br /&gt; 0 = AUTO_CREATE_STATISTICS is OFF</column>
    <column name="is_auto_create_stats_incremental_on" type="bit">Indicates the default setting for the incremental option of auto stats.&lt;br /&gt; 0 = auto create stats are non-incremental&lt;br /&gt; 1 = auto create stats are incremental if possible&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2014 (12.x)).</column>
    <column name="is_auto_update_stats_on" type="bit">1 = AUTO_UPDATE_STATISTICS is ON&lt;br /&gt; 0 = AUTO_UPDATE_STATISTICS is OFF</column>
    <column name="is_auto_update_stats_async_on" type="bit">1 = AUTO_UPDATE_STATISTICS_ASYNC is ON&lt;br /&gt; 0 = AUTO_UPDATE_STATISTICS_ASYNC is OFF</column>
    <column name="is_ansi_null_default_on" type="bit">1 = ANSI_NULL_DEFAULT is ON&lt;br /&gt; 0 = ANSI_NULL_DEFAULT is OFF</column>
    <column name="is_ansi_nulls_on" type="bit">1 = ANSI_NULLS is ON&lt;br /&gt; 0 = ANSI_NULLS is OFF</column>
    <column name="is_ansi_padding_on" type="bit">1 = ANSI_PADDING is ON&lt;br /&gt; 0 = ANSI_PADDING is OFF</column>
    <column name="is_ansi_warnings_on" type="bit">1 = ANSI_WARNINGS is ON&lt;br /&gt; 0 = ANSI_WARNINGS is OFF</column>
    <column name="is_arithabort_on" type="bit">1 = ARITHABORT is ON&lt;br /&gt; 0 = ARITHABORT is OFF</column>
    <column name="is_concat_null_yields_null_on" type="bit">1 = CONCAT_NULL_YIELDS_NULL is ON&lt;br /&gt; 0 = CONCAT_NULL_YIELDS_NULL is OFF</column>
    <column name="is_numeric_roundabort_on" type="bit">1 = NUMERIC_ROUNDABORT is ON&lt;br /&gt; 0 = NUMERIC_ROUNDABORT is OFF</column>
    <column name="is_quoted_identifier_on" type="bit">1 = QUOTED_IDENTIFIER is ON&lt;br /&gt; 0 = QUOTED_IDENTIFIER is OFF</column>
    <column name="is_recursive_triggers_on" type="bit">1 = RECURSIVE_TRIGGERS is ON&lt;br /&gt; 0 = RECURSIVE_TRIGGERS is OFF</column>
    <column name="is_cursor_close_on_commit_on" type="bit">1 = CURSOR_CLOSE_ON_COMMIT is ON&lt;br /&gt; 0 = CURSOR_CLOSE_ON_COMMIT is OFF</column>
    <column name="is_local_cursor_default" type="bit">1 = CURSOR_DEFAULT is local&lt;br /&gt; 0 = CURSOR_DEFAULT is global</column>
    <column name="is_fulltext_enabled" type="bit">1 = Full-text is enabled for the database&lt;br /&gt; 0 = Full-text is disabled for the database</column>
    <column name="is_trustworthy_on" type="bit">1 = Database has been marked trustworthy&lt;br /&gt; 0 = Database has not been marked trustworthy&lt;br /&gt; By default, restored or attached databases have the trustworthy not enabled.</column>
    <column name="is_db_chaining_on" type="bit">1 = Cross-database ownership chaining is ON&lt;br /&gt; 0 = Cross-database ownership chaining is OFF</column>
    <column name="is_parameterization_forced" type="bit">1 = Parameterization is FORCED&lt;br /&gt; 0 = Parameterization is SIMPLE</column>
    <column name="is_master_key_encrypted_by_server" type="bit">1 = Database has an encrypted master key&lt;br /&gt; 0 = Database does not have an encrypted master key</column>
    <column name="is_query_store_on" type="bit">1 = The query store is enable for this database. Check &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-query-store-options-transact-sql'&gt;sys.database_query_store_options&lt;/a&gt; to view the query store status.&lt;br /&gt; 0 = The query store is not enabled&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2016 (13.x)).</column>
    <column name="is_published" type="bit">1 = Database is a publication database in a transactional or snapshot replication topology&lt;br /&gt; 0 = Is not a publication database</column>
    <column name="is_subscribed" type="bit">This column is not used. It will always return 0, regardless of the subscriber status of the database.</column>
    <column name="is_merge_published" type="bit">1 = Database is a publication database in a merge replication topology&lt;br /&gt; 0 = Is not a publication database in a merge replication topology</column>
    <column name="is_distributor" type="bit">1 = Database is the distribution database for a replication topology&lt;br /&gt; 0 = Is not the distribution database for a replication topology</column>
    <column name="is_sync_with_backup" type="bit">1 = Database is marked for replication synchronization with backup&lt;br /&gt; 0 = Is not marked for replication synchronization with backup</column>
    <column name="service_broker_guid" type="uniqueidentifier">Identifier of the service broker for this database. Used as the &lt;strong&gt;broker_instance&lt;/strong&gt; of the target in the routing table.</column>
    <column name="is_broker_enabled" type="bit">1 = The broker in this database is currently sending and receiving messages.&lt;br /&gt; 0 = All sent messages will stay on the transmission queue and received messages will not be put on queues in this database.&lt;br /&gt; By default, restored or attached databases have the broker disabled. The exception to this is database mirroring where the broker is enabled after failover.</column>
    <column name="log_reuse_wait" type="tinyint">Reuse of transaction log space is currently waiting on one of the following as of the last checkpoint. For more detailed explanations of these values, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/logs/the-transaction-log-sql-server'&gt;The Transaction Log&lt;/a&gt;.&lt;br /&gt; &lt;strong&gt;Value&lt;/strong&gt;&lt;br /&gt; 0 = Nothing&lt;br /&gt; 1 = Checkpoint (When a database has a memory-optimized data filegroup, you should expect to see the &lt;c&gt;log_reuse_wait&lt;/c&gt; column indicate &lt;c&gt;checkpoint&lt;/c&gt; or &lt;c&gt;xtp_checkpoint&lt;/c&gt;) &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 2 = Log Backup &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 3 = Active backup or restore &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 4 = Active transaction &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 5 = Database mirroring &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 6 = Replication &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 7 = Database snapshot creation &lt;sup&gt;1&lt;/sup&gt;&lt;br /&gt; 8 = Log scan &lt;br /&gt; 9 = An Always On Availability Groups secondary replica is applying transaction log records of this database to a corresponding secondary database. &lt;sup&gt;2&lt;/sup&gt;&lt;br /&gt; 9 = Other (Transient) &lt;sup&gt;3&lt;/sup&gt;&lt;br /&gt; 10 = For internal use only &lt;sup&gt;2&lt;/sup&gt;&lt;br /&gt; 11 = For internal use only &lt;sup&gt;2&lt;/sup&gt;&lt;br /&gt; 12 = For internal use only &lt;sup&gt;2&lt;/sup&gt;&lt;br /&gt; 13 = Oldest page &lt;sup&gt;2&lt;/sup&gt;&lt;br /&gt; 14 = Other &lt;sup&gt;2&lt;/sup&gt;&lt;br /&gt;  16 = XTP_CHECKPOINT (When a database has a memory-optimized data filegroup, you should expect to see the &lt;c&gt;log_reuse_wait&lt;/c&gt; column indicate &lt;c&gt;checkpoint&lt;/c&gt; or &lt;c&gt;xtp_checkpoint&lt;/c&gt;) &lt;sup&gt;4&lt;/sup&gt;&lt;br /&gt;17 = sLog scanning when &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/accelerated-database-recovery-concepts#adr-recovery-components'&gt;Accelerated Database Recovery&lt;/a&gt; is used &lt;sup&gt;5&lt;/sup&gt;&lt;br /&gt;&lt;br /&gt;&lt;sup&gt;1&lt;/sup&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2008)&lt;br /&gt;&lt;sup&gt;2&lt;/sup&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x))&lt;br /&gt;&lt;sup&gt;3&lt;/sup&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (up to, and including SQL Server 2008 R2)&lt;br /&gt;&lt;sup&gt;4&lt;/sup&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2014 (12.x)) &lt;br /&gt;&lt;sup&gt;5&lt;/sup&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2019 (15.x))</column>
    <column name="log_reuse_wait_desc" type="nvarchar(60)">Description of reuse of transaction log space is currently waiting on as of the last checkpoint. Possible values:&lt;br /&gt; NOTHING&lt;br /&gt; CHECKPOINT&lt;br /&gt; LOG_BACKUP&lt;br /&gt; ACTIVE_BACKUP_OR_RESTORE&lt;br /&gt; ACTIVE_TRANSACTION&lt;br /&gt; DATABASE_MIRRORING&lt;br /&gt; REPLICATION&lt;br /&gt; DATABASE_SNAPSHOT_CREATION&lt;br /&gt; LOG_SCAN&lt;br /&gt; AVAILABILITY_REPLICA&lt;br /&gt; OLDEST_PAGE&lt;br /&gt; XTP_CHECKPOINT&lt;br /&gt; SLOG_SCAN&lt;br /&gt;</column>
    <column name="is_date_correlation_on" type="bit">1 = DATE_CORRELATION_OPTIMIZATION is ON&lt;br /&gt; 0 = DATE_CORRELATION_OPTIMIZATION is OFF</column>
    <column name="is_cdc_enabled" type="bit">1 = Database is enabled for change data capture. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sys-sp-cdc-enable-db-transact-sql'&gt;sys.sp_cdc_enable_db (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_encrypted" type="bit">Indicates whether the database is encrypted (reflects the state last set by using the &lt;c&gt;ALTER DATABASE SET ENCRYPTION&lt;/c&gt; clause). Can be one of the following values:&lt;br /&gt; 1 = Encrypted&lt;br /&gt; 0 = Not Encrypted&lt;br /&gt; For more information about database encryption, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/transparent-data-encryption'&gt;Transparent Data Encryption (TDE)&lt;/a&gt;.&lt;br /&gt; If the database is in the process of being decrypted, &lt;c&gt;is_encrypted&lt;/c&gt; shows a value of 0. You can see the state of the encryption process by using the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-database-encryption-keys-transact-sql'&gt;sys.dm_database_encryption_keys&lt;/a&gt; dynamic management view.</column>
    <column name="is_honor_broker_priority_on" type="bit">Indicates whether the database honors conversation priorities (reflects the state last set by using the &lt;c&gt;ALTER DATABASE SET HONOR_BROKER_PRIORITY&lt;/c&gt; clause). Can be one of the following values:&lt;br /&gt; 1 = HONOR_BROKER_PRIORITY is ON&lt;br /&gt; 0 = HONOR_BROKER_PRIORITY is OFF&lt;br /&gt; By default, restored or attached databases have the broker priority off.</column>
    <column name="replica_id" type="uniqueidentifier">Unique identifier of the local Always On availability groups availability replica of the availability group, if any, in which the database is participating.&lt;br /&gt; NULL = database is not part of an availability replica of in availability group.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (SQL Server 2012 (11.x) and later) and Azure SQL Database</column>
    <column name="group_database_id" type="uniqueidentifier">Unique identifier of the database within an Always On availability group, if any, in which the database is participating. &lt;strong&gt;group_database_id&lt;/strong&gt; is the same for this database on the primary replica and on every secondary replica on which the database has been joined to the availability group.&lt;br /&gt; NULL = database is not part of an availability replica in any availability group.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x)) and Azure SQL Database</column>
    <column name="resource_pool_id" type="int">The id of the resource pool that is mapped to this database. This resource pool controls total memory available to memory-optimized tables in this database.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2014 (12.x))</column>
    <column name="default_language_lcid" type="smallint">Indicates the local id (lcid) of the default language of a contained database.&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; Functions as the &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-default-language-server-configuration-option'&gt;Configure the default language Server Configuration Option&lt;/a&gt; of &lt;c&gt;sp_configure&lt;/c&gt;. This value is &lt;strong&gt;null&lt;/strong&gt; for a non-contained database.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x)) and Azure SQL Database</column>
    <column name="default_language_name" type="nvarchar(128)">Indicates the default language of a contained database.&lt;br /&gt; This value is &lt;strong&gt;null&lt;/strong&gt; for a non-contained database.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (SQL Server 2012 (11.x) and later) and Azure SQL Database</column>
    <column name="default_fulltext_language_lcid" type="int">Indicates the locale id (lcid) of the default fulltext language of the contained database.&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; Functions as the default &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-default-full-text-language-server-configuration-option'&gt;Configure the default full-text language Server Configuration Option&lt;/a&gt; of &lt;c&gt;sp_configure&lt;/c&gt;. This value is &lt;strong&gt;null&lt;/strong&gt; for a non-contained database.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x)) and Azure SQL Database</column>
    <column name="default_fulltext_language_name" type="nvarchar(128)">Indicates the default fulltext language of the contained database.&lt;br /&gt; This value is &lt;strong&gt;null&lt;/strong&gt; for a non-contained database.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x)) and Azure SQL Database</column>
    <column name="is_nested_triggers_on" type="bit">Indicates whether or not nested triggers are allowed in the contained database.&lt;br /&gt; 0 = nested triggers are not allowed&lt;br /&gt; 1 = nested triggers are allowed&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; Functions as the &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-nested-triggers-server-configuration-option'&gt;Configure the nested triggers Server Configuration Option&lt;/a&gt; of &lt;c&gt;sp_configure&lt;/c&gt;. This value is &lt;strong&gt;null&lt;/strong&gt; for a non-contained database. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-configurations-transact-sql'&gt;sys.configurations (Transact-SQL)&lt;/a&gt; for further information.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x)) and Azure SQL Database</column>
    <column name="is_transform_noise_words_on" type="bit">Indicates whether or noise words should be transformed in the contained database.&lt;br /&gt; 0 = noise words should not be transformed.&lt;br /&gt; 1 = noise words should be transformed.&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; Functions as the &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/transform-noise-words-server-configuration-option'&gt;transform noise words Server Configuration Option&lt;/a&gt; of &lt;c&gt;sp_configure&lt;/c&gt;. This value is &lt;strong&gt;null&lt;/strong&gt; for a non-contained database. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-configurations-transact-sql'&gt;sys.configurations (Transact-SQL)&lt;/a&gt; for further information.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x))</column>
    <column name="two_digit_year_cutoff" type="smallint">Indicates a value of a number between 1753 and 9999 to represent the cutoff year for interpreting two-digit years as four-digit years.&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; Functions as the &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-two-digit-year-cutoff-server-configuration-option'&gt;Configure the two digit year cutoff Server Configuration Option&lt;/a&gt; of &lt;c&gt;sp_configure&lt;/c&gt;. This value is &lt;strong&gt;null&lt;/strong&gt; for a non-contained database. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-configurations-transact-sql'&gt;sys.configurations (Transact-SQL)&lt;/a&gt; for further information.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x)) and Azure SQL Database</column>
    <column name="containment" type="tinyint not null">Indicates the containment status of the database.&lt;br /&gt;  0 = database containment is off. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x)) and Azure SQL Database&lt;br /&gt; 1 = database is in partial containment &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x))</column>
    <column name="containment_desc" type="nvarchar(60) not null">Indicates the containment status of the database.&lt;br /&gt; NONE = legacy database (zero containment)&lt;br /&gt; PARTIAL = partially contained database&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (SQL Server 2012 (11.x) and later) and Azure SQL Database</column>
    <column name="target_recovery_time_in_seconds" type="int">The estimated time to recover the database, in seconds. Nullable.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2012 (11.x)) and Azure SQL Database</column>
    <column name="delayed_durability" type="int">The delayed durability setting:&lt;br /&gt; 0 = DISABLED&lt;br /&gt; 1 = ALLOWED&lt;br /&gt; 2 = FORCED&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/logs/control-transaction-durability'&gt;Control Transaction Durability&lt;/a&gt;.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2014 (12.x)) and Azure SQL Database.</column>
    <column name="delayed_durability_desc" type="nvarchar(60)">The delayed durability setting:&lt;br /&gt; DISABLED&lt;br /&gt; ALLOWED&lt;br /&gt; FORCED&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2014 (12.x)) and Azure SQL Database.</column>
    <column name="is_memory_optimized_elevate_to_snapshot_on" type="bit">Memory-optimized tables are accessed using SNAPSHOT isolation when the session setting TRANSACTION ISOLATION LEVEL is set to a lower isolation level, READ COMMITTED or READ UNCOMMITTED.&lt;br /&gt; 1 = Minimum isolation level is SNAPSHOT.&lt;br /&gt; 0 = Isolation level is not elevated.</column>
    <column name="is_federation_member" type="bit">Indicates if the database is a member of a federation.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database</column>
    <column name="is_remote_data_archive_enabled" type="bit">Indicates whether the database is stretched.&lt;br /&gt; 0 = The database is not Stretch-enabled.&lt;br /&gt; 1 = The database is Stretch-enabled.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2016 (13.x))&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/sql-server/stretch-database/stretch-database'&gt;Stretch Database&lt;/a&gt;.</column>
    <column name="is_mixed_page_allocation_on" type="bit">Indicates whether tables and indexes in the database can allocate initial pages from mixed extents.&lt;br /&gt; 0 = Tables and indexes in the database always allocate  initial pages from uniform extents.&lt;br /&gt; 1 =  Tables and indexes in the database can allocate initial pages from mixed extents.&lt;br /&gt; For more information, see the &lt;c&gt;SET MIXED_PAGE_ALLOCATION&lt;/c&gt; option of &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql-set-options'&gt;ALTER DATABASE SET Options (Transact-SQL)&lt;/a&gt;.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2016 (13.x))</column>
    <column name="is_temporal_history_retention_enabled" type="bit">Indicates whether temporal retention policy cleanup task is enabled.&lt;br /&gt;&lt;br /&gt;1 = temporal retention is enabled&lt;br /&gt;0 = temporal retention is disabled&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2017 (14.x)) and Azure SQL Database</column>
    <column name="catalog_collation_type" type="int">The catalog collation setting:&lt;br /&gt;0 = DATABASE_DEFAULT&lt;br /&gt;2 = SQL_Latin_1_General_CP1_CI_AS&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database</column>
    <column name="catalog_collation_type_desc" type="nvarchar(60)">The catalog collation setting:&lt;br /&gt;DATABASE_DEFAULT&lt;br /&gt;SQL_Latin_1_General_CP1_CI_AS&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database</column>
    <column name="physical_database_name" type="nvarchar(128)">For SQL Server, the physical name of the database. For Azure SQL Database, a common id for the databases on a server. &lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2019 (15.x)) and Azure SQL Database</column>
    <column name="is_result_set_caching_on" type="bit">Indicates whether result set caching is enabled.&lt;br /&gt;1 = result set caching is enabled&lt;br /&gt;0 = result set caching is disabled&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: Azure Synapse Analytics Gen2. While this feature is being rolled out to all regions, please check the version deployed to your instance and the latest &lt;a href='https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/release-notes-10-0-10106-0'&gt;Azure Synapse release notes&lt;/a&gt; and &lt;a href='https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/gen2-migration-schedule'&gt;Gen2 upgrade schedule&lt;/a&gt; for feature availability.</column>
    <column name="is_accelerated_database_recovery_on" type="bit">Indicates whether Accelerated Database Recovery (ADR) is enabled.&lt;br /&gt;1 = ADR is enabled&lt;br /&gt;0 = ADR is disabled&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2019 (15.x)) and Azure SQL Database</column>
    <column name="is_tempdb_spill_to_remote_store" type="bit">Indicates whether tempdb spill to remote store is enabled.&lt;br /&gt;1 = enabled&lt;br /&gt;0 = disabled&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: Azure Synapse Analytics Gen2. While this feature is being rolled out to all regions, please check the version deployed to your instance and the latest &lt;a href='https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/release-notes-10-0-10106-0'&gt;Azure Synapse release notes&lt;/a&gt; and &lt;a href='https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/gen2-migration-schedule'&gt;Gen2 upgrade schedule&lt;/a&gt; for feature availability.</column>
    <column name="is_stale_page_detection_on" type="bit">Indicates whether stale page detection is enabled.&lt;br /&gt;1 = stale page detection is enabled&lt;br /&gt;0 = stale page detection is disabled&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: Azure Synapse Analytics Gen2. While this feature is being rolled out to all regions, please check the version deployed to your instance and the latest &lt;a href='https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/release-notes-10-0-10106-0'&gt;Azure Synapse release notes&lt;/a&gt; and &lt;a href='https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/gen2-migration-schedule'&gt;Gen2 upgrade schedule&lt;/a&gt; for feature availability.</column>
    <column name="is_memory_optimized_enabled" type="bit">Indicates whether certain In-Memory features, such as &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/hybrid-buffer-pool'&gt;Hybrid Buffer Pool&lt;/a&gt;, are enabled for the database. Does not reflect the availability or configuration state of &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/overview-and-usage-scenarios'&gt;In-Memory OLTP&lt;/a&gt;. &lt;br /&gt;1 = memory-optimized features are enabled&lt;br /&gt;0 = memory-optimized features are disabled&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (starting with SQL Server 2019 (15.x)) and Azure SQL Database</column>
    <column name="is_ledger_on" type="bit">Indicates a &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview#ledger-database'&gt;ledger database&lt;/a&gt;, which is a database in which all user tables are ledger tables (all customer database is tamper-evident).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database</column>
  </table>
  <table name="sys.database_files" category="DatabasesAndFiles" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-files-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_files (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row per file of a database as stored in the database itself. This is a per-database view.&lt;/para&gt;</description>
    <column name="file_id" type="int">ID of the file within database.</column>
    <column name="file_guid" type="uniqueidentifier">GUID for the file.&lt;br /&gt;&lt;br /&gt; NULL = Database was upgraded from an earlier version of SQL Server (Valid for SQL Server 2005 and earlier).</column>
    <column name="type" type="tinyint">File type:&lt;br/&gt;&lt;br /&gt; 0 = Rows&lt;br /&gt;&lt;br/&gt; 1 = Log&lt;br/&gt;&lt;br /&gt; 2 = FILESTREAM&lt;br /&gt;&lt;br /&gt; 3 = Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.&lt;br /&gt;&lt;br /&gt; 4 = Full-text</column>
    <column name="type_desc" type="nvarchar(60)">Description of the file type:&lt;br /&gt;&lt;br /&gt; ROWS &lt;br /&gt;&lt;br /&gt; LOG&lt;br /&gt;&lt;br /&gt; FILESTREAM&lt;br /&gt;&lt;br /&gt; FULLTEXT</column>
    <column name="data_space_id" type="int">Value can be 0 or greater than 0. A value of 0 represents the database log file, and a value greater than 0 represents the ID of the filegroup where this data file is stored.</column>
    <column name="name" type="sysname">Logical name of the file in the database.</column>
    <column name="physical_name" type="nvarchar(260)">Operating-system file name. If the database is hosted by an AlwaysOn &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/availability-groups/windows/active-secondaries-readable-secondary-replicas-always-on-availability-groups'&gt;readable secondary replica&lt;/a&gt;, &lt;strong&gt;physical_name&lt;/strong&gt; indicates the file location of the primary replica database. For the correct file location of a readable secondary database, query &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysaltfiles-transact-sql'&gt;sys.sysaltfiles&lt;/a&gt;.</column>
    <column name="state" type="tinyint">File state:&lt;br /&gt;&lt;br /&gt; 0 = ONLINE&lt;br /&gt;&lt;br /&gt; 1 = RESTORING&lt;br /&gt;&lt;br /&gt; 2 = RECOVERING&lt;br /&gt;&lt;br /&gt; 3 = RECOVERY_PENDING&lt;br /&gt;&lt;br /&gt; 4 = SUSPECT&lt;br /&gt;&lt;br /&gt; 5 = Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.&lt;br /&gt;&lt;br /&gt; 6 = OFFLINE&lt;br /&gt;&lt;br /&gt; 7 = DEFUNCT</column>
    <column name="state_desc" type="nvarchar(60)">Description of the file state:&lt;br /&gt;&lt;br /&gt; ONLINE&lt;br /&gt;&lt;br /&gt; RESTORING&lt;br /&gt;&lt;br /&gt; RECOVERING&lt;br /&gt;&lt;br /&gt; RECOVERY_PENDING&lt;br /&gt;&lt;br /&gt; SUSPECT&lt;br /&gt;&lt;br /&gt; OFFLINE&lt;br /&gt;&lt;br /&gt; DEFUNCT&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/databases/file-states'&gt;File States&lt;/a&gt;.</column>
    <column name="size" type="int">Current size of the file, in 8-KB pages.&lt;br /&gt;&lt;br /&gt; 0 = Not applicable&lt;br /&gt;&lt;br /&gt; For a database snapshot, size reflects the maximum space that the snapshot can ever use for the file.&lt;br /&gt;&lt;br /&gt; For FILESTREAM filegroup containers, size reflects the current used size of the container.</column>
    <column name="max_size" type="int">Maximum file size, in 8-KB pages:&lt;br /&gt;&lt;br /&gt; 0 = No growth is allowed.&lt;br /&gt;&lt;br /&gt; -1 = File will grow until the disk is full.&lt;br /&gt;&lt;br /&gt; 268435456 = Log file will grow to a maximum size of 2 TB.&lt;br /&gt;&lt;br /&gt; For FILESTREAM filegroup containers, max_size reflects the maximum size of the container.&lt;br /&gt;&lt;br /&gt; Note that databases that are upgraded with an unlimited log file size will report -1 for the maximum size of the log file.</column>
    <column name="growth" type="int">0 = File is fixed size and will not grow.&lt;br /&gt;&lt;br /&gt; &gt;0 = File will grow automatically.&lt;br /&gt;&lt;br /&gt; If is_percent_growth = 0, growth increment is in units of 8-KB pages, rounded to the nearest 64 KB.&lt;br /&gt;&lt;br /&gt; If is_percent_growth = 1, growth increment is expressed as a whole number percentage.</column>
    <column name="is_media_read_only" type="bit">1 = File is on read-only media.&lt;br /&gt;&lt;br /&gt; 0 = File is on read-write media.</column>
    <column name="is_read_only" type="bit">1 = File is marked read-only.&lt;br /&gt;&lt;br /&gt; 0 = File is marked read/write.</column>
    <column name="is_sparse" type="bit">1 = File is a sparse file.&lt;br /&gt;&lt;br /&gt; 0 = File is not a sparse file.&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/databases/view-the-size-of-the-sparse-file-of-a-database-snapshot-transact-sql'&gt;View the Size of the Sparse File of a Database Snapshot (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_percent_growth" type="bit">1 = Growth of the file is a percentage.&lt;br /&gt;&lt;br /&gt; 0 = Absolute growth size in pages.</column>
    <column name="is_name_reserved" type="bit">1 = Dropped file name (name or physical_name) is reusable only after the next log backup. When files are dropped from a database, the logical names stay in a reserved state until the next log backup. This column is relevant only under the full recovery model and the bulk-logged recovery model.</column>
    <column name="create_lsn" type="numeric(25,0)">Log sequence number (LSN) at which the file was created.</column>
    <column name="drop_lsn" type="numeric(25,0)">LSN at which the file was dropped.&lt;br /&gt;&lt;br /&gt; 0 = The file name is unavailable for reuse.</column>
    <column name="read_only_lsn" type="numeric(25,0)">LSN at which the filegroup that contains the file changed from read/write to read-only (most recent change).</column>
    <column name="read_write_lsn" type="numeric(25,0)">LSN at which the filegroup that contains the file changed from read-only to read/write (most recent change).</column>
    <column name="differential_base_lsn" type="numeric(25,0)">Base for differential backups. Data extents changed after this LSN will be included in a differential backup.</column>
    <column name="differential_base_guid" type="uniqueidentifier">Unique identifier of the base backup on which a differential backup will be based.</column>
    <column name="differential_base_time" type="datetime">Time corresponding to differential_base_lsn.</column>
    <column name="redo_start_lsn" type="numeric(25,0)">LSN at which the next roll forward must start.&lt;br /&gt;&lt;br /&gt; Is NULL unless state = RESTORING or state = RECOVERY_PENDING.</column>
    <column name="redo_start_fork_guid" type="uniqueidentifier">Unique identifier of the recovery fork. The first_fork_guid of the next log backup restored must match this value. This represents the current state of the file.</column>
    <column name="redo_target_lsn" type="numeric(25,0)">LSN at which the online roll forward on this file can stop.&lt;br /&gt;&lt;br /&gt; Is NULL unless state = RESTORING or state = RECOVERY_PENDING.</column>
    <column name="redo_target_fork_guid" type="uniqueidentifier">The recovery fork on which the file can be recovered. Paired with redo_target_lsn.</column>
    <column name="backup_lsn" type="numeric(25,0)">The LSN of the most recent data or differential backup of the file.</column>
  </table>
  <table name="sys.database_mirroring" category="DatabasesAndFiles" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-mirroring-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_mirroring (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each database in the instance of SQL Server. If the database is not ONLINE or database mirroring is not enabled, the values of all columns except database_id will be NULL.&lt;br/&gt;
 To see the row for a database other than master or tempdb, you must either be the database owner or have at least ALTER ANY DATABASE or VIEW ANY DATABASE server-level permission or CREATE DATABASE permission in the master database. To see non-NULL values on a mirror database, you must be a member of the &lt;strong&gt;sysadmin&lt;/strong&gt; fixed server role.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
If a database does not participate in mirroring, all columns prefixed with "mirroring_" are NULL.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="database_id" type="int">ID of the database. Is unique within an instance of SQL Server.</column>
    <column name="mirroring_guid" type="uniqueidentifier">ID of the mirroring partnership.&lt;br /&gt;&lt;br /&gt; NULL= Database is inaccessible or is not mirrored.&lt;br /&gt;&lt;br /&gt; Note: If the database does not participate in mirroring, all columns prefixed with "mirroring_" are NULL.</column>
    <column name="mirroring_state" type="tinyint">State of the mirror database and of the database mirroring session.&lt;br /&gt;&lt;br /&gt; 0 = Suspended&lt;br /&gt;&lt;br /&gt; 1 = Disconnected from the other partner&lt;br /&gt;&lt;br /&gt; 2 = Synchronizing&lt;br /&gt;&lt;br /&gt; 3 = Pending Failover&lt;br /&gt;&lt;br /&gt; 4 = Synchronized&lt;br /&gt;&lt;br /&gt; 5 = The partners are not synchronized. Failover is not possible now.&lt;br /&gt;&lt;br /&gt; 6 = The partners are synchronized. Failover is potentially possible. For information about the requirements for failover see, &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/database-mirroring/database-mirroring-operating-modes'&gt;Database Mirroring Operating Modes&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; NULL = Database is inaccessible or is not mirrored.</column>
    <column name="mirroring_state_desc" type="nvarchar(60)">Description of the state of the mirror database and of the database mirroring session, can be one of:&lt;br /&gt;&lt;br /&gt; DISCONNECTED&lt;br /&gt;&lt;br /&gt; SYNCHRONIZED&lt;br /&gt;&lt;br /&gt; SYNCHRONIZING&lt;br /&gt;&lt;br /&gt; PENDING_FAILOVER&lt;br /&gt;&lt;br /&gt; SUSPENDED&lt;br /&gt;&lt;br /&gt; UNSYNCHRONIZED&lt;br /&gt;&lt;br /&gt; SYNCHRONIZED&lt;br /&gt;&lt;br /&gt; NULL&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/database-mirroring/mirroring-states-sql-server'&gt;Mirroring States (SQL Server)&lt;/a&gt;.</column>
    <column name="mirroring_role" type="tinyint">Current role of the local database plays in the database mirroring session.&lt;br /&gt;&lt;br /&gt; 1 = Principal&lt;br /&gt;&lt;br /&gt; 2 = Mirror&lt;br /&gt;&lt;br /&gt; NULL = Database is inaccessible or is not mirrored.</column>
    <column name="mirroring_role_desc" type="nvarchar(60)">Description of the role the local database plays in mirroring, can be one of:&lt;br /&gt;&lt;br /&gt; PRINCIPAL&lt;br /&gt;&lt;br /&gt; MIRROR</column>
    <column name="mirroring_role_sequence" type="int">The number of times that mirroring partners have switched the principal and mirror roles due to a failover or forced service.&lt;br /&gt;&lt;br /&gt; NULL = Database is inaccessible or is not mirrored.</column>
    <column name="mirroring_safety_level" type="tinyint">Safety setting for updates on the mirror database:&lt;br /&gt;&lt;br /&gt; 0 = Unknown state&lt;br /&gt;&lt;br /&gt; 1 = Off [asynchronous]&lt;br /&gt;&lt;br /&gt; 2 = Full [synchronous]&lt;br /&gt;&lt;br /&gt; NULL = Database is inaccessible or is not mirrored.</column>
    <column name="mirroring_safety_level_desc" type="nvarchar(60)">Transaction safety setting for the updates on the mirror database, can be one of:&lt;br /&gt;&lt;br /&gt; UNKNOWN&lt;br /&gt;&lt;br /&gt; OFF&lt;br /&gt;&lt;br /&gt; FULL&lt;br /&gt;&lt;br /&gt; NULL</column>
    <column name="mirroring_safety_sequence" type="int">Update the sequence number for changes to transaction safety level.&lt;br /&gt;&lt;br /&gt; NULL = Database is inaccessible or is not mirrored.</column>
    <column name="mirroring_partner_name" type="nvarchar(128)">Server name of the database mirroring partner.&lt;br /&gt;&lt;br /&gt; NULL = Database is inaccessible or is not mirrored.</column>
    <column name="mirroring_partner_instance" type="nvarchar(128)">The instance name and computer name for the other partner. Clients require this information to connect to the partner if it becomes the principal server.&lt;br /&gt;&lt;br /&gt; NULL = Database is inaccessible or is not mirrored.</column>
    <column name="mirroring_witness_name" type="nvarchar(128)">Server name of the database mirroring witness.&lt;br /&gt;&lt;br /&gt; NULL = No witness exists.</column>
    <column name="mirroring_witness_state" type="tinyint">State of the witness in the database mirroring session of the database, can be one of:&lt;br /&gt;&lt;br /&gt; 0 = Unknown&lt;br /&gt;&lt;br /&gt; 1 = Connected&lt;br /&gt;&lt;br /&gt; 2 = Disconnected&lt;br /&gt;&lt;br /&gt; NULL = No witness exists, the database is not online, or the database is not mirrored.</column>
    <column name="mirroring_witness_state_desc" type="nvarchar(60)">Description of state, can be one of:&lt;br /&gt;&lt;br /&gt; UNKNOWN&lt;br /&gt;&lt;br /&gt; CONNECTED&lt;br /&gt;&lt;br /&gt; DISCONNECTED&lt;br /&gt;&lt;br /&gt; NULL</column>
    <column name="mirroring_failover_lsn" type="numeric(25,0)">Log sequence number (LSN) of the latest transaction log record that is guaranteed to be hardened to disk on both partners. After a failover, the &lt;strong&gt;mirroring_failover_lsn&lt;/strong&gt; is used by the partners as the point of reconciliation at which the new mirror server begins to synchronize the new mirror database with the new principal database.</column>
    <column name="mirroring_connection_timeout" type="int">Mirroring connection time out in seconds. This is the number of seconds to wait for a reply from a partner or witness before considering them unavailable. The default time-out value is 10 seconds.&lt;br /&gt;&lt;br /&gt; NULL = Database is inaccessible or is not mirrored.</column>
    <column name="mirroring_redo_queue" type="int">Maximum amount of log to be redone on the mirror. If mirroring_redo_queue_type is set to UNLIMITED, which is the default setting, this column is NULL. If the database is not online, this column is also NULL.&lt;br /&gt;&lt;br /&gt; Otherwise, this column contains the maximum amount of log in megabytes. When the maximum is reached, the log is temporarily stalled on the principal as the mirror server catches up. This feature limits failover time.&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/database-mirroring/estimate-the-interruption-of-service-during-role-switching-database-mirroring'&gt;Estimate the Interruption of Service During Role Switching (Database Mirroring)&lt;/a&gt;.</column>
    <column name="mirroring_redo_queue_type" type="nvarchar(60)">UNLIMITED indicates that mirroring will not inhibit the redo queue. This is the default setting.&lt;br /&gt;&lt;br /&gt; MB for maximum size of the redo queue in mega bytes. Note that if the queue size was specified as kilobytes or gigabytes, the Database Engine converts the value into megabytes.&lt;br /&gt;&lt;br /&gt; If the database is not online, this column is NULL.</column>
    <column name="mirroring_end_of_log_lsn" type="numeric(25,0)">The local end-of-log that has been flushed to disk. This is comparable to the hardened LSN from the mirror server (see the &lt;strong&gt;mirroring_failover_lsn&lt;/strong&gt; column).</column>
    <column name="mirroring_replication_lsn" type="numeric(25,0)">The maximum LSN that replication can send.</column>
  </table>
  <table name="sys.database_recovery_status" category="DatabasesAndFiles" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-recovery-status-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_recovery_status (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row per database. If the database is not opened, the SQL Server Database Engine tries to start it.&lt;br/&gt;
 To see the row for a database other than &lt;strong&gt;master&lt;/strong&gt; or &lt;strong&gt;tempdb&lt;/strong&gt;, one of the following must apply:&lt;br/&gt;
-   Be the owner of the database.&lt;br/&gt;
-   Have ALTER ANY DATABASE or VIEW ANY DATABASE server-level permissions.&lt;br/&gt;
-   Have CREATE DATABASE permission in the &lt;strong&gt;master&lt;/strong&gt; database.&lt;/para&gt;</description>
    <column name="database_id" type="int">ID of the database, unique within an instance of SQL Server.</column>
    <column name="database_guid" type="uniqueidentifier">Used to relate all the database files of a database together. All files must have this GUID in their header page for the database to start as expected. Only one database should ever have this GUID, but duplicates can be created by copying and attaching databases. RESTORE always generates a new GUID when you restore a database that does not yet exist.&lt;br /&gt;&lt;br /&gt; NULL= Database is offline, or the database will not start.</column>
    <column name="family_guid" type="uniqueidentifier">Identifier of the "backup family" for the database for detecting matching restore states.&lt;br /&gt;&lt;br /&gt; NULL= Database is offline or the database will not start.</column>
    <column name="last_log_backup_lsn" type="numeric(25,0)">The starting log sequence number of the next log backup.&lt;br /&gt;&lt;br /&gt; If NULL, a transaction log back up cannot be performed because either the database is in SIMPLE recovery or there is no current database backup.</column>
    <column name="recovery_fork_guid" type="uniqueidentifier">Identifies the current recovery fork on which the database is currently active.&lt;br /&gt;&lt;br /&gt; NULL= Database is offline, or the database will not start.</column>
    <column name="first_recovery_fork_guid" type="uniqueidentifier">Identifier of the starting recovery fork.&lt;br /&gt;&lt;br /&gt; NULL= Database is offline, or the database will not start.</column>
    <column name="fork_point_lsn" type="numeric(25,0)">If &lt;strong&gt;first_recovery_fork_guid&lt;/strong&gt; is not equal (!=) to &lt;strong&gt;recovery_fork_guid&lt;/strong&gt;, &lt;strong&gt;fork_point_lsn&lt;/strong&gt; is the log sequence number of the current fork point. Otherwise, the value is NULL.</column>
  </table>
  <table name="sys.database_scoped_configurations" category="DatabasesAndFiles" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-scoped-configurations-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_scoped_configurations (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;APPLIES TO:&lt;/strong&gt; (Yes) SQL Server 2016 and later (Yes) Azure SQL Database (Yes) Azure Synapse Analytics (No) Parallel Data Warehouse&lt;/para&gt;
&lt;para&gt;Contains one row per configuration.&lt;/para&gt;</description>
    <column name="configuration_id" type="int">ID of the configuration option.</column>
    <column name="name" type="nvarchar(60)">The name of the configuration option. For information about the possible configurations, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-scoped-configuration-transact-sql'&gt;ALTER DATABASE SCOPED CONFIGURATION (Transact-SQL)&lt;/a&gt;.</column>
    <column name="value" type="sqlvariant">The value set for this configuration option for the primary replica.</column>
    <column name="value_for_secondary" type="sqlvariant">The value set for this configuration option for the secondary replicas.</column>
    <column name="is_value_default" type="bit">Specifies whether the value set is the default value. Added in SQL Server 2017.</column>
  </table>
  <table name="sys.database_automatic_tuning_options" category="DatabasesAndFiles" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-automatic-tuning-options-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database\_automatic\_tuning_options (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2017 (14.x) and later  √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns the Automatic Tuning options for this database.&lt;/para&gt;</description>
    <column name="name" type="nvarchar(128)">The name of the automatic tuning option. Refer to &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql-set-options#auto_tuning'&gt;ALTER DATABASE SET AUTOMATIC_TUNING (Transact-SQL)&lt;/a&gt; for available options.</column>
    <column name="desired_state" type="smallint">Indicates the desired operation mode for Automatic Tuning option, explicitly set by user.&lt;br /&gt;0 = OFF&lt;br /&gt;1 = ON</column>
    <column name="desired_state_desc" type="nvarchar(60)">Textual description of the desired operation mode of Automatic Tuning option.&lt;br /&gt;OFF&lt;br /&gt;ON</column>
    <column name="actual_state" type="smallint">Indicates the operation mode of Automatic Tuning option.&lt;br /&gt;0 = OFF&lt;br /&gt;1 = ON</column>
    <column name="actual_state_desc" type="nvarchar(60)">Textual description of the actual operation mode of Automatic Tuning option.&lt;br /&gt;OFF&lt;br /&gt;ON</column>
    <column name="reason" type="smallint">Indicates why actual and desired states are different.&lt;br /&gt;2 = DISABLED&lt;br /&gt;11 = QUERY_STORE_OFF&lt;br /&gt;12 = QUERY_STORE_READ_ONLY&lt;br /&gt;13 = NOT_SUPPORTED</column>
    <column name="reason_desc" type="nvarchar(60)">Textual description of the reason why actual and desired states are different.&lt;br /&gt;DISABLED = Option is disabled by system&lt;br /&gt;QUERY_STORE_OFF = Query Store is turned off&lt;br /&gt;QUERY_STORE_READ_ONLY = Query Store is in read-only mode&lt;br /&gt;NOT_SUPPORTED = Available only in SQL Server Enterprise edition</column>
  </table>
  <table name="sys.database_automatic_tuning_mode" category="DatabasesAndFiles" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-automatic-tuning-mode-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database\_automatic\_tuning_mode (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2017 (14.x) and later  √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns the Automatic Tuning mode for this database. Refer to &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql-set-options#auto_tuning'&gt;ALTER DATABASE SET AUTOMATIC_TUNING (Transact-SQL)&lt;/a&gt; for available options.&lt;/para&gt;</description>
    <column name="desired_state" type="smallint">Desired state of the Automatic Tuning mode.</column>
    <column name="desired_state_desc" type="nvarchar(60)">Textual description of the desired operation mode of Automatic Tuning.</column>
    <column name="actual_state" type="smallint">Indicates the operation mode of Automatic Tuning mode.</column>
    <column name="actual_state_desc" type="nvarchar(60)">Textual description of the actual operation mode of Automatic Tuning.</column>
  </table>
  <table name="sys.master_files" category="DatabasesAndFiles" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-master-files-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.master_files (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row per file of a database as stored in the master database. This is a single, system-wide view.&lt;/para&gt;</description>
    <column name="database_id" type="int">ID of the database to which this file applies. The masterdatabase_id is always 1.</column>
    <column name="file_id" type="int">ID of the file within database. The primary file_id is always 1.</column>
    <column name="file_guid" type="uniqueidentifier">Unique identifier of the file.&lt;br /&gt;&lt;br /&gt; NULL = Database was upgraded from an earlier version of SQL Server (Valid for SQL Server 2005 and earlier) .</column>
    <column name="type" type="tinyint">File type:&lt;br /&gt;&lt;br /&gt; 0 = Rows.&lt;br /&gt;&lt;br /&gt; 1 = Log&lt;br /&gt;&lt;br /&gt; 2 = FILESTREAM&lt;br /&gt;&lt;br /&gt; 3 = Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.&lt;br /&gt;&lt;br /&gt; 4 = Full-text (Full-text catalogs earlier than SQL Server 2008; full-text catalogs that are upgraded to or created in SQL Server 2008 or higher will report a file type 0.)</column>
    <column name="type_desc" type="nvarchar(60)">Description of the file type:&lt;br /&gt;&lt;br /&gt; ROWS&lt;br /&gt;&lt;br /&gt; LOG&lt;br /&gt;&lt;br /&gt; FILESTREAM&lt;br /&gt;&lt;br /&gt; FULLTEXT (Full-text catalogs earlier than SQL Server 2008.)</column>
    <column name="data_space_id" type="int">ID of the data space to which this file belongs. Data space is a filegroup.&lt;br /&gt;&lt;br /&gt; 0 = Log files</column>
    <column name="name" type="sysname">Logical name of the file in the database.</column>
    <column name="physical_name" type="nvarchar(260)">Operating-system file name.</column>
    <column name="state" type="tinyint">File state:&lt;br /&gt;&lt;br /&gt; 0 = ONLINE&lt;br /&gt;&lt;br /&gt; 1 = RESTORING&lt;br /&gt;&lt;br /&gt; 2 = RECOVERING&lt;br /&gt;&lt;br /&gt; 3 = RECOVERY_PENDING&lt;br /&gt;&lt;br /&gt; 4 = SUSPECT&lt;br /&gt;&lt;br /&gt; 5 = Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.&lt;br /&gt;&lt;br /&gt; 6 = OFFLINE&lt;br /&gt;&lt;br /&gt; 7 = DEFUNCT</column>
    <column name="state_desc" type="nvarchar(60)">Description of the file state:&lt;br /&gt;&lt;br /&gt; ONLINE&lt;br /&gt;&lt;br /&gt; RESTORING&lt;br /&gt;&lt;br /&gt; RECOVERING&lt;br /&gt;&lt;br /&gt; RECOVERY_PENDING&lt;br /&gt;&lt;br /&gt; SUSPECT&lt;br /&gt;&lt;br /&gt; OFFLINE&lt;br /&gt;&lt;br /&gt; DEFUNCT&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/databases/file-states'&gt;File States&lt;/a&gt;.</column>
    <column name="size" type="int">Current file size, in 8-KB pages. For a database snapshot, size reflects the maximum space that the snapshot can ever use for the file.&lt;br /&gt;&lt;br /&gt; Note: This field is populated as zero for FILESTREAM containers. Query the *sys.database_files* catalog view for the actual size of FILESTREAM containers.</column>
    <column name="max_size" type="int">Maximum file size, in 8-KB pages:&lt;br /&gt;&lt;br /&gt; 0 = No growth is allowed.&lt;br /&gt;&lt;br /&gt; -1 = File will grow until the disk is full.&lt;br /&gt;&lt;br /&gt; 268435456 = Log file will grow to a maximum size of 2 TB.&lt;br /&gt;&lt;br /&gt; Note: Databases that are upgraded with an unlimited log file size will report -1 for the maximum size of the log file.</column>
    <column name="growth" type="int">0 = File is fixed size and will not grow.&lt;br /&gt;&lt;br /&gt; &gt;0 = File will grow automatically.&lt;br /&gt;&lt;br /&gt; If is_percent_growth = 0, growth increment is in units of 8-KB pages, rounded to the nearest 64 KB&lt;br /&gt;&lt;br /&gt; If is_percent_growth = 1, growth increment is expressed as a whole number percentage.</column>
    <column name="is_media_read_only" type="bit">1 = File is on read-only media.&lt;br /&gt;&lt;br /&gt; 0 = File is on read/write media.</column>
    <column name="is_read_only" type="bit">1 = File is marked read-only.&lt;br /&gt;&lt;br /&gt; 0 = file is marked read/write.</column>
    <column name="is_sparse" type="bit">1 = File is a sparse file.&lt;br /&gt;&lt;br /&gt; 0 = File is not a sparse file.&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/databases/view-the-size-of-the-sparse-file-of-a-database-snapshot-transact-sql'&gt;View the Size of the Sparse File of a Database Snapshot (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_percent_growth" type="bit">1 = Growth of the file is a percentage.&lt;br /&gt;&lt;br /&gt; 0 = Absolute growth size in pages.</column>
    <column name="is_name_reserved" type="bit">1 = Dropped file name is reusable. A log backup must be taken before the name (name or physical_name) can be reused for a new file name.&lt;br /&gt;&lt;br /&gt; 0 = File name is unavailable for reuse.</column>
    <column name="create_lsn" type="numeric(25,0)">Log sequence number (LSN) at which the file was created.</column>
    <column name="drop_lsn" type="numeric(25,0)">LSN at which the file was dropped.</column>
    <column name="read_only_lsn" type="numeric(25,0)">LSN at which the filegroup that contains the file changed from read/write to read-only (most recent change).</column>
    <column name="read_write_lsn" type="numeric(25,0)">LSN at which the filegroup that contains the file changed from read-only to read/write (most recent change).</column>
    <column name="differential_base_lsn" type="numeric(25,0)">Base for differential backups. Data extents changed after this LSN will be included in a differential backup.</column>
    <column name="differential_base_guid" type="uniqueidentifier">Unique identifier of the base backup on which a differential backup will be based.</column>
    <column name="differential_base_time" type="datetime">Time corresponding to differential_base_lsn.</column>
    <column name="redo_start_lsn" type="numeric(25,0)">LSN at which the next roll forward must start.&lt;br /&gt;&lt;br /&gt; Is NULL unless state = RESTORING or state = RECOVERY_PENDING.</column>
    <column name="redo_start_fork_guid" type="uniqueidentifier">Unique identifier of the recovery fork. The first_fork_guid of the next log backup restored must match this value. This represents the current state of the container.</column>
    <column name="redo_target_lsn" type="numeric(25,0)">LSN at which the online roll forward on this file can stop.&lt;br /&gt;&lt;br /&gt; Is NULL unless state = RESTORING or state = RECOVERY_PENDING.</column>
    <column name="redo_target_fork_guid" type="uniqueidentifier">The recovery fork on which the container can be recovered. Paired with redo_target_lsn.</column>
    <column name="backup_lsn" type="numeric(25,0)">The LSN of the most recent data or differential backup of the file.</column>
    <column name="credential_id" type="int">The &lt;c&gt;credential_id&lt;/c&gt; from &lt;c&gt;sys.credentials&lt;/c&gt; used for storing the file. For example, when SQL Server is running on an Azure Virtual Machine and the database files are stored in Azure blob storage, a credential is configured with the access credentials to the storage location.</column>
  </table>
  <table name="sys.database_mirroring_endpoints" category="Endpoints" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-mirroring-endpoints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_mirroring_endpoints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for the database mirroring endpoint of an instance of SQL Server.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
The database mirroring endpoint supports both sessions between database mirroring partners and with witnesses and sessions between the primary replica of a Always On availability group and its secondary replicas.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the endpoint. Is unique within the server. Is not nullable.</column>
    <column name="endpoint_id" type="int">ID of the endpoint. Is unique within the server. An endpoint with an ID less then 65536 is a system endpoint. Is not nullable.</column>
    <column name="principal_id" type="int">ID of the server principal that created and owns this endpoint. Is nullable.</column>
    <column name="protocol" type="tinyint">Endpoint protocol.&lt;br /&gt;&lt;br /&gt; 1 = HTTP&lt;br /&gt;&lt;br /&gt; 2 = TCP&lt;br /&gt;&lt;br /&gt; 3 = Name pipes&lt;br /&gt;&lt;br /&gt; 4 = Shared memory&lt;br /&gt;&lt;br /&gt; 5 = Virtual Interface Adapter (VIA)&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="protocol_desc" type="nvarchar(60)">Description of the endpoint protocol. NULLABLE. One of the following values:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;HTTP&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;TCP&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;NAMED_PIPES&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SHARED_MEMORY&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;VIA&lt;/strong&gt; Note: The VIA protocol is deprecated. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.</column>
    <column name="type" type="tinyint">Endpoint payload type.&lt;br /&gt;&lt;br /&gt; 1 = SOAP&lt;br /&gt;&lt;br /&gt; 2 = TSQL&lt;br /&gt;&lt;br /&gt; 3 = SERVICE_BROKER&lt;br /&gt;&lt;br /&gt; 4 = DATABASE_MIRRORING&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="type_desc" type="nvarchar(60)">Description of the endpoint payload type. Is nullable. One of the following values:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SOAP&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;TSQL&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SERVICE_BROKER&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;DATABASE_MIRRORING&lt;/strong&gt;</column>
    <column name="state" type="tinyint">The endpoint state.&lt;br /&gt;&lt;br /&gt; 0 = STARTED, listening and processing requests.&lt;br /&gt;&lt;br /&gt; 1 = STOPPED, listening, but not processing requests.&lt;br /&gt;&lt;br /&gt; 2 = DISABLED, not listening.&lt;br /&gt;&lt;br /&gt; The default state is 1. Is nullable.</column>
    <column name="state_desc" type="nvarchar(60)">Description of the endpoint state.&lt;br /&gt;&lt;br /&gt; STARTED = Listening and processing requests.&lt;br /&gt;&lt;br /&gt; STOPPED = Listening, but not processing requests.&lt;br /&gt;&lt;br /&gt; DISABLED = Not listening.&lt;br /&gt;&lt;br /&gt; The default state is STOPPED.&lt;br /&gt;&lt;br /&gt; Is nullable.</column>
    <column name="is_admin_endpoint" type="bit">Indicates whether the endpoint is for administrative use.&lt;br /&gt;&lt;br /&gt; 0 = Nonadministrative endpoint.&lt;br /&gt;&lt;br /&gt; 1 = Endpoint is an administrative endpoint.&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="role" type="tinyint">Mirroring role, one of:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;0&lt;/strong&gt; = None&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;1&lt;/strong&gt; = Partner&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;2&lt;/strong&gt; = Witness&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;3&lt;/strong&gt; = All&lt;br /&gt;&lt;br /&gt; Note: This value is relevant only for database mirroring.</column>
    <column name="role_desc" type="nvarchar(60)">Description of mirroring role, one of:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;NONE&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;PARTNER&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;WITNESS&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;ALL&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; Note: This value is relevant only for database mirroring.</column>
    <column name="is_encryption_enabled" type="bit">&lt;strong&gt;1&lt;/strong&gt; means that encryption is enabled.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;0&lt;/strong&gt; means that encryption is disabled.</column>
    <column name="connection_auth" type="tinyint">The type of connection authentication required for connections to this endpoint, one of:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;1&lt;/strong&gt; - NTLM&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;2&lt;/strong&gt; - KERBEROS&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;3&lt;/strong&gt; - NEGOTIATE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;4&lt;/strong&gt; - CERTIFICATE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;5&lt;/strong&gt; - NTLM, CERTIFICATE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;6&lt;/strong&gt; - KERBEROS, CERTIFICATE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;7&lt;/strong&gt; - NEGOTIATE, CERTIFICATE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;8&lt;/strong&gt; - CERTIFICATE, NTLM&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;9&lt;/strong&gt; - CERTIFICATE, KERBEROS&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;10&lt;/strong&gt; - CERTIFICATE, NEGOTIATE</column>
    <column name="connection_auth_desc" type="Nvarchar (60)">Description of the type of authentication required for connections to this endpoint, one of:&lt;br /&gt;&lt;br /&gt; NTLM&lt;br /&gt;&lt;br /&gt; KERBEROS&lt;br /&gt;&lt;br /&gt; NEGOTIATE&lt;br /&gt;&lt;br /&gt; CERTIFICATE&lt;br /&gt;&lt;br /&gt; NTLM, CERTIFICATE&lt;br /&gt;&lt;br /&gt; KERBEROS, CERTIFICATE&lt;br /&gt;&lt;br /&gt; NEGOTIATE, CERTIFICATE&lt;br /&gt;&lt;br /&gt; CERTIFICATE, NTLM&lt;br /&gt;&lt;br /&gt; CERTIFICATE, KERBEROS&lt;br /&gt;&lt;br /&gt; CERTIFICATE, NEGOTIATE</column>
    <column name="certificate_id" type="int">ID of certificate used for authentication, if any.&lt;br /&gt;&lt;br /&gt; 0 = Windows Authentication is being used.</column>
    <column name="encryption_algorithm" type="tinyint">Encryption algorithm, one of:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;0&lt;/strong&gt; - NONE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;1&lt;/strong&gt; - RC4&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;2&lt;/strong&gt; - AES&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;3&lt;/strong&gt; - NONE, RC4&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;4&lt;/strong&gt; - NONE, AES&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;5&lt;/strong&gt; - RC4, AES&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;6&lt;/strong&gt; - AES, RC4&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;7&lt;/strong&gt; - NONE, RC4, AES&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;8&lt;/strong&gt; - NONE, AES, RC4</column>
    <column name="encryption_algorithm_desc" type="nvarchar(60)">Description of the encryption algorithm, one of:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; RC4&lt;br /&gt;&lt;br /&gt; AES&lt;br /&gt;&lt;br /&gt; NONE, RC4&lt;br /&gt;&lt;br /&gt; NONE, AES&lt;br /&gt;&lt;br /&gt; RC4, AES&lt;br /&gt;&lt;br /&gt; AES, RC4&lt;br /&gt;&lt;br /&gt; NONE, RC4, AES&lt;br /&gt;&lt;br /&gt; NONE, AES, RC4</column>
  </table>
  <table name="sys.endpoints" category="Endpoints" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-endpoints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.endpoints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row per endpoint that is created in the system. There is always exactly one SYSTEM endpoint.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the endpoint. Is unique within the server. Is not nullable.</column>
    <column name="endpoint_id" type="int">ID of the endpoint. Is unique within the server. An endpoint with an ID less then 65536 is a system endpoint. Is not nullable.</column>
    <column name="principal_id" type="int">ID of the server principal that created and owns this endpoint. Is nullable.</column>
    <column name="protocol" type="tinyint">Endpoint protocol.&lt;br /&gt;&lt;br /&gt; 1 = HTTP&lt;br /&gt;&lt;br /&gt; 2 = TCP&lt;br /&gt;&lt;br /&gt; 3 = Name pipes&lt;br /&gt;&lt;br /&gt; 4 = Shared memory&lt;br /&gt;&lt;br /&gt; 5 = Virtual Interface Adapter (VIA)&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="protocol_desc" type="nvarchar(60)">Description of the endpoint protocol. NULLABLE. One of the following values:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;HTTP&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;TCP&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;NAMED_PIPES&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SHARED_MEMORY&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;VIA&lt;/strong&gt; Note: The VIA protocol is deprecated. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.</column>
    <column name="type" type="tinyint">Endpoint payload type.&lt;br /&gt;&lt;br /&gt; 1 = SOAP&lt;br /&gt;&lt;br /&gt; 2 = TSQL&lt;br /&gt;&lt;br /&gt; 3 = SERVICE_BROKER&lt;br /&gt;&lt;br /&gt; 4 = DATABASE_MIRRORING&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="type_desc" type="nvarchar(60)">Description of the endpoint payload type. Is nullable. One of the following values:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SOAP&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;TSQL&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SERVICE_BROKER&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;DATABASE_MIRRORING&lt;/strong&gt;</column>
    <column name="state" type="tinyint">The endpoint state.&lt;br /&gt;&lt;br /&gt; 0 = STARTED, listening and processing requests.&lt;br /&gt;&lt;br /&gt; 1 = STOPPED, listening, but not processing requests.&lt;br /&gt;&lt;br /&gt; 2 = DISABLED, not listening.&lt;br /&gt;&lt;br /&gt; The default state is 1. Is nullable.</column>
    <column name="state_desc" type="nvarchar(60)">Description of the endpoint state.&lt;br /&gt;&lt;br /&gt; STARTED = Listening and processing requests.&lt;br /&gt;&lt;br /&gt; STOPPED = Listening, but not processing requests.&lt;br /&gt;&lt;br /&gt; DISABLED = Not listening.&lt;br /&gt;&lt;br /&gt; The default state is STOPPED.&lt;br /&gt;&lt;br /&gt; Is nullable.</column>
    <column name="is_admin_endpoint" type="bit">Indicates whether the endpoint is for administrative use.&lt;br /&gt;&lt;br /&gt; 0 = Nonadministrative endpoint.&lt;br /&gt;&lt;br /&gt; 1 = Endpoint is an administrative endpoint.&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
  </table>
  <table name="sys.endpoint_webmethods" category="Endpoints" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-endpoint-webmethods-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.endpoint_webmethods (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
 Contains a row FOR EACH SOAP method defined on a SOAP-enabled HTTP endpoint. The combination of the endpoint_id and namespace columns is unique.&lt;/para&gt;</description>
    <column name="endpoint_id" type="int">ID of the endpoint that the webmethod is defined on.</column>
    <column name="namespace" type="nvarchar(384)">Namespace for the webmethod.</column>
    <column name="method_alias" type="nvarchar(64)">Alias for the method.&lt;br /&gt;&lt;br /&gt; Note: Transact\-SQL identifiers allow characters that are not legal in WSDL method names.&lt;br /&gt;&lt;br /&gt; The alias is used to map the name exposed in the WSDL description of the endpoint to the actual underlying Transact\-SQL executable object that is called when the webmethod is invoked.</column>
    <column name="object_name" type="nvarchar(776)">The object name that the webmethod is redirected to, as specified in the NAME = option. Name parts are separated by a period (.), and delimited using brackets, &lt;c&gt;[&lt;/c&gt;&lt;c&gt;]&lt;/c&gt;.&lt;br /&gt;&lt;br /&gt; The object name must be a three-part name, as specified in the WSDL option.</column>
    <column name="result_schema" type="tinyint">Option that determines which, if any, XSD is sent back with a response.&lt;br /&gt;&lt;br /&gt; 0 = None&lt;br /&gt;&lt;br /&gt; 1 = Standard&lt;br /&gt;&lt;br /&gt; 2 = Default</column>
    <column name="result_schema_desc" type="nvarchar(60)">Description of option that determines which, if any, XSD is sent back with a response.&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; STANDARD&lt;br /&gt;&lt;br /&gt; DEFAULT</column>
    <column name="result_format" type="tinyint">Option that determines how results are formatted in the response.&lt;br /&gt;&lt;br /&gt; 1 = ALL_RESULTS&lt;br /&gt;&lt;br /&gt; 2 = ROWSETS_ONLY&lt;br /&gt;&lt;br /&gt; 3 = NONE</column>
    <column name="result_format_desc" type="nvarchar(60)">Description of the option that determines how results are formatted in the response.&lt;br /&gt;&lt;br /&gt; ALL_RESULTS&lt;br /&gt;&lt;br /&gt; ROWSETS_ONLY&lt;br /&gt;&lt;br /&gt; NONE</column>
  </table>
  <table name="sys.http_endpoints" category="Endpoints" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-http-endpoints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.http_endpoints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt; This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
Contains a row for each endpoint created in the server that uses the HTTP protocol.&lt;/para&gt;</description>
    <column name="&lt; inherited columns&gt;" type="">Inherits columns from &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-endpoints-transact-sql'&gt;sys.endpoints (Transact-SQL)&lt;/a&gt;.</column>
    <column name="site" type="nvarchar(128)">Name of the host computer for the site, as specified in the SITE = option.</column>
    <column name="url_path" type="nvarchar(4000)">Path-only portion of the URL for this HTTP endpoint, as specified by the PATH= option.</column>
    <column name="is_clear_port_enabled" type="bit">1 = Clear port is enabled using the PORT = CLEAR option.</column>
    <column name="clear_port" type="int">Port number specified in the CLEAR PORT = option.&lt;br /&gt;&lt;br /&gt; NULL = Not specified.</column>
    <column name="is_ssl_port_enabled" type="bit">1 = SSL port is enabled using the PORT = SSL option.</column>
    <column name="ssl_port" type="int">Port number value specified in the SSL PORT = option.&lt;br /&gt;&lt;br /&gt; NULL = Not specified.</column>
    <column name="is_anonymous_enabled" type="bit">1 = Anonymous access is enabled using the AUTHENTICATION = ANONYMOUS option.</column>
    <column name="is_basic_auth_enabled" type="bit">1 = Basic authentication is enabled using the AUTHENTICATION = BASIC option.</column>
    <column name="is_digest_auth_enabled" type="bit">1 = Digest authentication is enabled using the AUTHENTICATION = DIGEST option.</column>
    <column name="is_kerberos_auth_enabled" type="bit">1 = Integrated authentication enabled using the AUTHENTICATION = KERBEROS option.</column>
    <column name="is_ntlm_auth_enabled" type="bit">1 = Integrated authentication enabled using the AUTHENTICATION = NTLM option.</column>
    <column name="is_integrated_auth_enabled" type="bit">1 = Integrated authentication is enabled using the AUTHENTICATION = INTEGRATED option.</column>
    <column name="authorization_realm" type="nvarchar(128)">Hint that is returned to the client as part of the HTTP DIGEST authentication challenge. The value of the AUTH REALM option.&lt;br /&gt;&lt;br /&gt; Is NULL if not specified or if DIGEST authentication is not enabled.</column>
    <column name="default_logon_domain" type="nvarchar(128)">Default login domain if you enable BASIC authentication. The value of the DEFAULT LOGON DOMAIN option.&lt;br /&gt;&lt;br /&gt; Is NULL if not specified or if BASIC authentication is not enabled.</column>
    <column name="is_compression_enabled" type="bit">1 = COMPRESSION = ENABLED option is set.</column>
  </table>
  <table name="sys.service_broker_endpoints" category="Endpoints" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-broker-endpoints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.service_broker_endpoints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view contains one row for the Service Broker endpoint. For every row in this view, there is a corresponding row with the same &lt;strong&gt;endpoint_id&lt;/strong&gt; in the &lt;strong&gt;sys.tcp_endpoints&lt;/strong&gt; view that contains the TCP configuration metadata. TCP is the only allowed protocol for Service Broker.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the endpoint. Is unique within the server. Is not nullable.</column>
    <column name="endpoint_id" type="int">ID of the endpoint. Is unique within the server. An endpoint with an ID less then 65536 is a system endpoint. Is not nullable.</column>
    <column name="principal_id" type="int">ID of the server principal that created and owns this endpoint. Is nullable.</column>
    <column name="protocol" type="tinyint">Endpoint protocol.&lt;br /&gt;&lt;br /&gt; 1 = HTTP&lt;br /&gt;&lt;br /&gt; 2 = TCP&lt;br /&gt;&lt;br /&gt; 3 = Name pipes&lt;br /&gt;&lt;br /&gt; 4 = Shared memory&lt;br /&gt;&lt;br /&gt; 5 = Virtual Interface Adapter (VIA)&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="protocol_desc" type="nvarchar(60)">Description of the endpoint protocol. NULLABLE. One of the following values:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;HTTP&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;TCP&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;NAMED_PIPES&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SHARED_MEMORY&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;VIA&lt;/strong&gt; Note: The VIA protocol is deprecated. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.</column>
    <column name="type" type="tinyint">Endpoint payload type.&lt;br /&gt;&lt;br /&gt; 1 = SOAP&lt;br /&gt;&lt;br /&gt; 2 = TSQL&lt;br /&gt;&lt;br /&gt; 3 = SERVICE_BROKER&lt;br /&gt;&lt;br /&gt; 4 = DATABASE_MIRRORING&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="type_desc" type="nvarchar(60)">Description of the endpoint payload type. Is nullable. One of the following values:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SOAP&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;TSQL&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SERVICE_BROKER&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;DATABASE_MIRRORING&lt;/strong&gt;</column>
    <column name="state" type="tinyint">The endpoint state.&lt;br /&gt;&lt;br /&gt; 0 = STARTED, listening and processing requests.&lt;br /&gt;&lt;br /&gt; 1 = STOPPED, listening, but not processing requests.&lt;br /&gt;&lt;br /&gt; 2 = DISABLED, not listening.&lt;br /&gt;&lt;br /&gt; The default state is 1. Is nullable.</column>
    <column name="state_desc" type="nvarchar(60)">Description of the endpoint state.&lt;br /&gt;&lt;br /&gt; STARTED = Listening and processing requests.&lt;br /&gt;&lt;br /&gt; STOPPED = Listening, but not processing requests.&lt;br /&gt;&lt;br /&gt; DISABLED = Not listening.&lt;br /&gt;&lt;br /&gt; The default state is STOPPED.&lt;br /&gt;&lt;br /&gt; Is nullable.</column>
    <column name="is_admin_endpoint" type="bit">Indicates whether the endpoint is for administrative use.&lt;br /&gt;&lt;br /&gt; 0 = Nonadministrative endpoint.&lt;br /&gt;&lt;br /&gt; 1 = Endpoint is an administrative endpoint.&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="is_message_forwarding_enabled" type="bit">Does endpoint support message forwarding. This is initially set to &lt;strong&gt;0&lt;/strong&gt; (disabled). Not NULLABLE.</column>
    <column name="message_forwarding_size" type="int">The maximum number of megabytes of &lt;strong&gt;tempdb&lt;/strong&gt; space allowed to be used  for messages being forwarded. This is initially set to &lt;strong&gt;10&lt;/strong&gt;. Not NULLABLE.</column>
    <column name="connection_auth" type="tinyint">The type of connection authentication required for connections to this endpoint, one of:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;1&lt;/strong&gt; - NTLM&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;2&lt;/strong&gt; - KERBEROS&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;3&lt;/strong&gt; - NEGOTIATE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;4&lt;/strong&gt; - CERTIFICATE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;5&lt;/strong&gt; - NTLM, CERTIFICATE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;6&lt;/strong&gt; - KERBEROS, CERTIFICATE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;7&lt;/strong&gt; - NEGOTIATE, CERTIFICATE&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;8&lt;/strong&gt; - CERTIFICATE, NTLM&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;9&lt;/strong&gt; - CERTIFICATE, KERBEROS&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;10&lt;/strong&gt; - CERTIFICATE, NEGOTIATE&lt;br /&gt;&lt;br /&gt; Not NULLABLE.</column>
    <column name="connection_auth_desc" type="nvarchar(60)">Description of the type of connection authentication required for connections to this endpoint, one of:&lt;br /&gt;&lt;br /&gt; NTLM&lt;br /&gt;&lt;br /&gt; KERBEROS&lt;br /&gt;&lt;br /&gt; NEGOTIATE&lt;br /&gt;&lt;br /&gt; CERTIFICATE&lt;br /&gt;&lt;br /&gt; NTLM, CERTIFICATE&lt;br /&gt;&lt;br /&gt; KERBEROS, CERTIFICATE&lt;br /&gt;&lt;br /&gt; NEGOTIATE, CERTIFICATE&lt;br /&gt;&lt;br /&gt; CERTIFICATE, NTLM&lt;br /&gt;&lt;br /&gt; CERTIFICATE, KERBEROS&lt;br /&gt;&lt;br /&gt; CERTIFICATE, NEGOTIATE&lt;br /&gt;&lt;br /&gt; NULLABLE.</column>
    <column name="certificate_id" type="int">ID of certificate used for authentication, if any.&lt;br /&gt;&lt;br /&gt; 0 = Windows Authentication is being used.</column>
    <column name="encryption_algorithm" type="tinyint">Encryption algorithm. The following are the possible values with their descriptions and corresponding DDL options.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;0&lt;/strong&gt; : NONE. Corresponding DDL option: Disabled.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;1&lt;/strong&gt; :  RC4. Corresponding DDL option: {Required   &amp;#124; Required   algorithm RC4}.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;2&lt;/strong&gt; : AES. Corresponding DDL option: Required Algorithm AES.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;3&lt;/strong&gt; : NONE, RC4. Corresponding DDL option: {Supported &amp;#124; Supported Algorithm RC4}.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;4&lt;/strong&gt; : NONE, AES. Corresponding DDL option: Supported Algorithm AES.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;5&lt;/strong&gt; : RC4, AES. Corresponding DDL option: Required Algorithm RC4 AES.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;6&lt;/strong&gt; : AES, RC4. Corresponding DDL option: Required Algorithm AES RC4.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;7&lt;/strong&gt; : NONE, RC4, AES. Corresponding DDL option: Supported Algorithm RC4 AES.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;8&lt;/strong&gt; : NONE, AES, RC4. Corresponding DDL option: Supported Algorithm AES RC4.&lt;br /&gt;&lt;br /&gt; Not NULLABLE.</column>
    <column name="encryption_algorithm_desc" type="nvarchar(60)">Encryption algorithm description. The possible values and their corresponding DDL options are listed below:&lt;br /&gt;&lt;br /&gt; NONE : Disabled&lt;br /&gt;&lt;br /&gt; RC4  : {Required &amp;#124; Required Algorithm RC4}&lt;br /&gt;&lt;br /&gt; AES  : Required Algorithm AES&lt;br /&gt;&lt;br /&gt; NONE, RC4 : {Supported &amp;#124; Supported Algorithm RC4}&lt;br /&gt;&lt;br /&gt; NONE, AES : Supported Algorithm AES&lt;br /&gt;&lt;br /&gt; RC4, AES : Required Algorithm RC4 AES&lt;br /&gt;&lt;br /&gt; AES, RC4 : Required Algorithm AES RC4&lt;br /&gt;&lt;br /&gt; NONE, RC4, AES : Supported Algorithm RC4 AES&lt;br /&gt;&lt;br /&gt; NONE, AES, RC4 : Supported Algorithm AES RC4&lt;br /&gt;&lt;br /&gt; NULLABLE.</column>
  </table>
  <table name="sys.soap_endpoints" category="Endpoints" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-soap-endpoints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.soap_endpoints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
 Contains one row for each endpoint in the server that carries a SOAP-type payload. For every row in this view, there is a corresponding row with the same &lt;strong&gt;endpoint_id&lt;/strong&gt; in the &lt;strong&gt;sys.http_endpoints&lt;/strong&gt; catalog view that carries the HTTP configuration metadata.&lt;/para&gt;</description>
    <column name="&lt; inherited columns&gt;" type="">For a list of columns that this view inherits, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-endpoints-transact-sql'&gt;sys.endpoints (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_sql_language_enabled" type="bit">1 = BATCHES = ENABLED option was specified, meaning that ad-hoc SQL batches are allowed on the endpoint.</column>
    <column name="wsdl_generator_procedure" type="nvarchar(776)">The three-part name of the stored procedure that implements this method.&lt;br /&gt;&lt;br /&gt; Names of methods require strict three-part syntax. one, two, or four-part names are not allowed.</column>
    <column name="default_database" type="sysname">The name of the default database given in the DATABASE = option.&lt;br /&gt;&lt;br /&gt; NULL = DEFAULT was specified.</column>
    <column name="default_namespace" type="nvarchar(384)">The default namespace specified in the NAMESPACE = option, or &lt;c&gt;https://tempuri.org&lt;/c&gt; if DEFAULT was specified instead.</column>
    <column name="default_result_schema" type="tinyint">The default value of the SCHEMA = option.&lt;br /&gt;&lt;br /&gt; 0 = NONE&lt;br /&gt;&lt;br /&gt; 1 = STANDARD</column>
    <column name="default_result_schema_desc" type="nvarchar(60)">Description of the default value of the SCHEMA = option.&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; STANDARD</column>
    <column name="is_xml_charset_enforced" type="bit">0 = CHARACTER_SET = SQL option was specified.&lt;br /&gt;&lt;br /&gt; 1 = CHARACTER_SET = XML option was specified.</column>
    <column name="is_session_enabled" type="bit">0 = SESSION = DISABLE option was specified.&lt;br /&gt;&lt;br /&gt; 1 = SESSION = ENABLED option was specified.</column>
    <column name="session_timeout" type="int">Value specified in SESSION_TIMEOUT = option.</column>
    <column name="login_type" type="nvarchar(60)">Kind of authentication allowed on this endpoint.&lt;br /&gt;&lt;br /&gt; &lt;c&gt;WINDOWS&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;MIXED&lt;/c&gt;</column>
    <column name="header_limit" type="int">Maximum allowable size of the SOAP header.</column>
  </table>
  <table name="sys.tcp_endpoints" category="Endpoints" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-tcp-endpoints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.tcp_endpoints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each TCP endpoint that is in the system. The endpoints that are described by &lt;strong&gt;sys.tcp_endpoints&lt;/strong&gt; provide an object to grant and revoke the connection privilege. The information that is displayed regarding ports and IP addresses is not used to configure the protocols and may not match the actual protocol configuration. To view and configure protocols, use SQL Server Configuration Manager.&lt;/para&gt;</description>
    <column name="&lt; inherited columns&gt;" type="">Inherits columns from &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-endpoints-transact-sql'&gt;sys.endpoints&lt;/a&gt;.</column>
    <column name="port" type="int">The port number that the endpoint is listening on. Is not nullable.</column>
    <column name="is_dynamic_port" type="bit">1 = Port number was dynamically assigned.&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="ip_address" type="nvarchar(45)">Listener IP address as specified by the LISTENER_IP clause. Is nullable.</column>
  </table>
  <table name="sys.database_event_session_targets" category="ExtendedEvents" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-event-session-targets-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_event_session_targets (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns a row for each event target for an event session.&lt;br/&gt;
||&lt;br/&gt;
|-|&lt;br/&gt;
|&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database V12 and any later versions.|&lt;/para&gt;</description>
    <column name="event_session_id" type="int">The ID of the event session. Is not nullable.</column>
    <column name="target_id" type="int">The ID of the target. ID is unique within the event session object. Is not nullable.</column>
    <column name="name" type="sysname">The name of the event target. Is not nullable.</column>
    <column name="package" type="sysname">The name of the event package that contains the event target. Is not nullable.</column>
    <column name="module" type="sysname">The name of the module that contains the event target. Is not nullable.</column>
  </table>
  <table name="sys.database_event_session_fields" category="ExtendedEvents" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-event-session-fields-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_event_session_fields (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns a row for each customizable column that was explicitly set on events and targets.&lt;br/&gt;
||&lt;br/&gt;
|-|&lt;br/&gt;
|&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database V12 and any later versions.|&lt;/para&gt;</description>
    <column name="event_session_id" type="int">The ID of the event session. Is not nullable.</column>
    <column name="object_id" type="int">The ID of the object this field is associated with. Is not nullable.</column>
    <column name="name" type="sysname">The name of the field. Is not nullable.</column>
    <column name="value" type="sql_variant">The value of the field. Is not nullable.</column>
  </table>
  <table name="sys.database_event_session_events" category="ExtendedEvents" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-event-session-events-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_event_session_events (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns a row for each event in an event session.&lt;br/&gt;
||&lt;br/&gt;
|-|&lt;br/&gt;
|&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database V12 and any later versions.|&lt;/para&gt;</description>
    <column name="event_session_id" type="int">The ID of the event session. Is not nullable.</column>
    <column name="event_id" type="int">The ID of the event. This ID is unique within an event session object. Is not nullable.</column>
    <column name="name" type="sysname">The name of the event. Is not nullable.</column>
    <column name="package" type="sysname">The name of the event package that contains the event. Is not nullable.</column>
    <column name="module" type="sysname">The name of the module that contains the event. Is not nullable.</column>
    <column name="predicate" type="nvarchar(3000)">The predicate expression that is applied to the event. Is nullable.</column>
    <column name="predicate_xml" type="nvarchar(3000)">The XML predicate expression that is applied to the event. Is nullable.</column>
  </table>
  <table name="sys.database_event_session_actions" category="ExtendedEvents" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-event-session-actions-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_event_session_actions (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns a row for each action on each event of an event session.&lt;br/&gt;
||&lt;br/&gt;
|-|&lt;br/&gt;
|&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database V12 and any later versions.|&lt;/para&gt;</description>
    <column name="event_session_id" type="int">The ID of the event session. Is not nullable.</column>
    <column name="event_id" type="int">The ID of the event. This ID is unique within the event session object. Is not nullable.</column>
    <column name="name" type="sysname">The name of the action. Is nullable.</column>
    <column name="package" type="sysname">The name of the event package that contains the event. Is nullable.</column>
    <column name="module" type="sysname">The name of the module that contains the event. Is nullable.</column>
  </table>
  <table name="sys.database_event_sessions" category="ExtendedEvents" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-event-sessions-azure-sql-database">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_event_sessions (Azure SQL Database)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Lists all the event session definitions that exist in the current database, in Azure SQL Database.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
The similar catalog view named &lt;c&gt;sys.server_event_sessions&lt;/c&gt; applies only to MicrosoftSQL Server.&lt;br/&gt;
&lt;/note&gt;&lt;br/&gt;
||&lt;br/&gt;
|-|&lt;br/&gt;
|&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database, and to any later versions.|&lt;/para&gt;</description>
    <column name="event_session_id" type="int">The unique ID of the event session. Is not nullable.</column>
    <column name="name" type="sysname">The user-defined name for identifying the event session. name is unique. Is not nullable.</column>
    <column name="event_retention_mode" type="nchar(1)">Determines how event loss is handled. The default is S. Is not nullable. Is one of the following:&lt;br /&gt;&lt;br /&gt; S. Maps to event_retention_mode_desc = ALLOW_SINGLE_EVENT_LOSS&lt;br /&gt;&lt;br /&gt; M. Maps to event_retention_mode_desc = ALLOW_MULTIPLE_EVENT_LOSS&lt;br /&gt;&lt;br /&gt; N. Maps to event_retention_mode_desc = NO_EVENT_LOSS</column>
    <column name="event_retention_mode_desc" type="sysname">Describes how event loss is handled. The default is ALLOW_SINGLE_EVENT_LOSS. Is not nullable. Is one of the following:&lt;br /&gt;&lt;br /&gt; ALLOW_SINGLE_EVENT_LOSS. Events can be lost from the session. Single events are dropped only when all event buffers are full. Losing single events when buffers are full allows for acceptable SQL Server performance characteristics, while minimizing the loss in the processed event stream.&lt;br /&gt;&lt;br /&gt; ALLOW_MULTIPLE_EVENT_LOSS. Full event buffers can be lost from the session. The number of events lost depends on the memory size allocated to the session, the partitioning of the memory, and the size of the events in the buffer. This option minimizes performance impact on the server when event buffers are quickly filled. However, large numbers of events can be lost from the session.&lt;br /&gt;&lt;br /&gt; NO_EVENT_LOSS. No event loss is allowed. This option ensures that all events raised are retained. Using this option forces all the tasks that fire events to wait until space is available in an event buffer. This may lead to detectable performance degradation while the event session is active.</column>
    <column name="max_dispatch_latency" type="int">The amount of time, in milliseconds, that events will be buffered in memory before they are served to session targets. Valid values are from 1 to 2147483648, and -1. A value of -1 indicates that dispatch latency is infinite. Is nullable.</column>
    <column name="max_memory" type="int">The amount of memory allocated to the session for event buffering. The default value is 4 MB. Is nullable.</column>
    <column name="max_event_size" type="int">The amount of memory set aside for events that do not fit in event session buffers. If max_event_size exceeds the calculated buffer size, two additional buffers of max_event_size are allocated to the event session. Is nullable.</column>
    <column name="memory_partition_mode" type="nchar(1)">The location in memory where event buffers are created. The default partition mode is G. Is not nullable. memory_partition_mode is one of:&lt;br /&gt;&lt;br /&gt; G - NONE&lt;br /&gt;&lt;br /&gt; C - PER_CPU&lt;br /&gt;&lt;br /&gt; N - PER_NODE</column>
    <column name="memory_partition_mode_desc" type="sysname">The default is NONE. Is not nullable. Is one of the following:&lt;br /&gt;&lt;br /&gt; NONE. A single set of buffers are created within a SQL Server instance.&lt;br /&gt;&lt;br /&gt; PER_CPU. A set of buffers is created for each CPU.&lt;br /&gt;&lt;br /&gt; PER_NODE. A set of buffers is created for each non-uniform memory access (NUMA) node.</column>
    <column name="track_causality" type="bit">Enable or disable causality tracking. If set to 1 (ON), tracking is enabled and related events on different server connections can be correlated. The default setting is 0 (OFF). Is not nullable.</column>
    <column name="startup_state" type="bit">Value determines whether or not session is started automatically when the server starts. The default is 0. Is not nullable. Is one of:&lt;br /&gt;&lt;br /&gt; 0 (OFF). The session does not start when the server starts.&lt;br /&gt;&lt;br /&gt; 1 (ON). The event session starts when the server starts.</column>
  </table>
  <table name="sys.server_event_sessions" category="ExtendedEvents" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-sessions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_event_sessions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Lists all the event session definitions that exist in SQL Server.&lt;/para&gt;</description>
    <column name="event_session_id" type="int">The unique ID of the event session. Is not nullable.</column>
    <column name="name" type="sysname">The user-defined name for identifying the event session. name is unique. Is not nullable.</column>
    <column name="event_retention_mode" type="nchar(1)">Determines how event loss is handled. The default is S. Is not nullable. Is one of the following:&lt;br /&gt;&lt;br /&gt; S. Maps to event_retention_mode_desc = ALLOW_SINGLE_EVENT_LOSS&lt;br /&gt;&lt;br /&gt; M. Maps to event_retention_mode_desc = ALLOW_MULTIPLE_EVENT_LOSS&lt;br /&gt;&lt;br /&gt; N. Maps to event_retention_mode_desc = NO_EVENT_LOSS</column>
    <column name="event_retention_mode_desc" type="sysname">Describes how event loss is handled. The default is ALLOW_SINGLE_EVENT_LOSS. Is not nullable. Is one of the following:&lt;br /&gt;&lt;br /&gt; ALLOW_SINGLE_EVENT_LOSS. Events can be lost from the session. Single events are dropped only when all event buffers are full. Losing single events when buffers are full allows for acceptable SQL Server performance characteristics, while minimizing the loss in the processed event stream.&lt;br /&gt;&lt;br /&gt; ALLOW_MULTIPLE_EVENT_LOSS. Full event buffers can be lost from the session. The number of events lost depends on the memory size allocated to the session, the partitioning of the memory, and the size of the events in the buffer. This option minimizes performance impact on the server when event buffers are quickly filled. However, large numbers of events can be lost from the session.&lt;br /&gt;&lt;br /&gt; NO_EVENT_LOSS. No event loss is allowed. This option ensures that all events raised are retained. Using this option forces all the tasks that fire events to wait until space is available in an event buffer. This may lead to detectable performance degradation while the event session is active.</column>
    <column name="max_dispatch_latency" type="int">The amount of time, in milliseconds, that events will be buffered in memory before they are served to session targets. Valid values are from 0 to 2147483648, and 0. A value of 0 indicates that dispatch latency is infinite. Is nullable.</column>
    <column name="max_memory" type="int">The amount of memory allocated to the session for event buffering. The default value is 4 MB. Is nullable.</column>
    <column name="max_event_size" type="int">The amount of memory set aside for events that do not fit in event session buffers. If max_event_size exceeds the calculated buffer size, two additional buffers of max_event_size are allocated to the event session. Is nullable.</column>
    <column name="memory_partition_mode" type="nchar(1)">The location in memory where event buffers are created. The default partition mode is G. Is not nullable. memory_partition_mode is one of:&lt;br /&gt;&lt;br /&gt; G - NONE&lt;br /&gt;&lt;br /&gt; C - PER_CPU&lt;br /&gt;&lt;br /&gt; N - PER_NODE</column>
    <column name="memory_partition_mode_desc" type="sysname">The default is NONE. Is not nullable. Is one of the following:&lt;br /&gt;&lt;br /&gt; NONE. A single set of buffers are created within a SQL Server instance.&lt;br /&gt;&lt;br /&gt; PER_CPU. A set of buffers is created for each CPU.&lt;br /&gt;&lt;br /&gt; PER_NODE. A set of buffers is created for each non-uniform memory access (NUMA) node.</column>
    <column name="track_causality" type="bit">Enable or disable causality tracking. If set to 1 (ON), tracking is enabled and related events on different server connections can be correlated. The default setting is 0 (OFF). Is not nullable.</column>
    <column name="startup_state" type="bit">Value determines whether or not session is started automatically when the server starts. The default is 0. Is not nullable. Is one of:&lt;br /&gt;&lt;br /&gt; 0 (OFF). The session does not start when the server starts.&lt;br /&gt;&lt;br /&gt; 1 (ON). The event session starts when the server starts.</column>
  </table>
  <table name="sys.server_event_session_actions" category="ExtendedEvents" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-session-actions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_event_session_actions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each action on each event of an event session.&lt;/para&gt;</description>
    <column name="event_session_id" type="int">The ID of the event session. Is not nullable.</column>
    <column name="event_id" type="int">The ID of the event. This ID is unique within the event session object. Is not nullable.</column>
    <column name="name" type="sysname">The name of the action. Is nullable.</column>
    <column name="package" type="sysname">The name of the event package that contains the event. Is nullable.</column>
    <column name="module" type="sysname">The name of the module that contains the event. Is nullable.</column>
  </table>
  <table name="sys.server_event_session_events" category="ExtendedEvents" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-session-events-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_event_session_events (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each event in an event session.&lt;/para&gt;</description>
    <column name="event_session_id" type="int">The ID of the event session. Is not nullable.</column>
    <column name="event_id" type="int">The ID of the event. This ID is unique within an event session object. Is not nullable.</column>
    <column name="name" type="sysname">The name of the event. Is not nullable.</column>
    <column name="package" type="sysname">The name of the event package that contains the event. Is not nullable.</column>
    <column name="module" type="sysname">The name of the module that contains the event. Is not nullable.</column>
    <column name="predicate" type="nvarchar(3000)">The predicate expression that is applied to the event. Is nullable.</column>
    <column name="predicate_xml" type="nvarchar(3000)">The XML predicate expression that is applied to the event. Is nullable.</column>
  </table>
  <table name="sys.server_event_session_fields" category="ExtendedEvents" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-session-fields-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_event_session_fields (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each customizable column that was explicitly set on events and targets.&lt;/para&gt;</description>
    <column name="event_session_id" type="int">The ID of the event session. Is not nullable.</column>
    <column name="object_id" type="int">The ID of the object this field is associated with. Is not nullable.</column>
    <column name="name" type="sysname">The name of the field. Is not nullable.</column>
    <column name="value" type="sql_variant">The value of the field. Is not nullable.</column>
  </table>
  <table name="sys.server_event_session_targets" category="ExtendedEvents" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-session-targets-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_event_session_targets (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each event target for an event session.&lt;/para&gt;</description>
    <column name="event_session_id" type="int">The ID of the event session. Is not nullable.</column>
    <column name="target_id" type="int">The ID of the target. ID is unique within the event session object. Is not nullable.</column>
    <column name="name" type="sysname">The name of the event target. Is not nullable.</column>
    <column name="package" type="sysname">The name of the event package that contains the event target. Is not nullable.</column>
    <column name="module" type="sysname">The name of the module that contains the event target. Is not nullable.</column>
  </table>
  <table name="sys.external_tables" category="ExternalOperations" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-tables-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.external_tables (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each external table in the current database.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="max_column_id_used" type="int">Maximum column ID ever used for this table.</column>
    <column name="uses_ansi_nulls" type="bit">Table was created with the SET ANSI_NULLS database option ON.</column>
    <column name="data_source_id" type="int">Object ID for the external data source.</column>
    <column name="file_format_id" type="int">For external tables over a HADOOP external data source, this is the Object ID for the external file format.</column>
    <column name="location" type="nvarchar(4000)">For external tables over a HADOOP external data source, this is the path of the external data in HDFS.</column>
    <column name="reject_type" type="tinyint">For external tables over a HADOOP external data source, this is the way rejected rows are counted when querying external data.&lt;br/&gt;
Range: VALUE - the number of rejected rows.&lt;br /&gt;&lt;br /&gt; PERCENTAGE - the percentage of rejected rows.</column>
    <column name="reject_value" type="float">For external tables over a HADOOP external data source:&lt;br /&gt;&lt;br /&gt; For *reject_type =* value, this is the number of row rejections to allow before failing the query.&lt;br /&gt;&lt;br /&gt; For *reject_type* = percentage, this is the percentage of row rejections to allow before failing the query.</column>
    <column name="reject_sample_value" type="int">For *reject_type* = percentage, this is the number of rows to load, either successfully or unsuccessfully, before calculating the percentage of rejected rows.&lt;br/&gt;
Range: NULL if reject_type = VALUE.</column>
    <column name="distribution_type" type="int">For external tables over a SHARD_MAP_MANAGER external data source, this is the data distribution of the rows across the underlying base tables.&lt;br/&gt;
Range: 0 - Sharded&lt;br /&gt;&lt;br /&gt; 1 - Replicated&lt;br /&gt;&lt;br /&gt; 2 - Round robin</column>
    <column name="distribution_desc" type="nvarchar(120)">For external tables over a SHARD_MAP_MANAGER external data source, this is the distribution type displayed as a string.</column>
    <column name="sharding_column_id" type="int">For external tables over a SHARD_MAP_MANAGER external data source and a sharded distribution, this is the column ID of the column that contains the sharding key values.</column>
    <column name="remote_schema_name" type="sysname">For external tables over a SHARD_MAP_MANAGER external data source, this is the schema where the base table is located on the remote databases (if different from the schema where the external table is defined).</column>
    <column name="remote_object_name" type="sysname">For external tables over a SHARD_MAP_MANAGER external data source, this is the name of the base table on the remote databases (if different from the name of the external table).</column>
  </table>
  <table name="sys.external_data_sources" category="ExternalOperations" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-data-sources-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.external_data_sources (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each external data source in the current database for SQL Server, SQL Database, and Azure Synapse Analytics.&lt;br/&gt;
 Contains a row for each external data source on the server for Analytics Platform System (PDW).&lt;/para&gt;</description>
    <column name="data_source_id" type="int">Object ID for the external data source.</column>
    <column name="name" type="sysname">Name of the external data source.</column>
    <column name="location" type="nvarchar(4000)">The connection string, which includes the protocol, IP address, and port for the external data source.</column>
    <column name="type_desc" type="nvarchar(255)">Data source type displayed as a string.&lt;br/&gt;
Range: HADOOP, RDBMS, SHARD_MAP_MANAGER, REMOTE_DATA_ARCHIVE, BLOB_STORAGE, NONE</column>
    <column name="type" type="tinyint">Data source type displayed as a number.&lt;br/&gt;
Range: 0 - HADOOP&lt;br /&gt;&lt;br /&gt; 1 - RDBMS&lt;br /&gt;&lt;br /&gt; 2 - SHARD_MAP_MANAGER&lt;br /&gt;&lt;br /&gt; 3 - REMOTE_DATA_ARCHIVE&lt;br /&gt;&lt;br /&gt; 4 - *internal use only*&lt;br /&gt;&lt;br /&gt; 5 - BLOB_STORAGE&lt;br /&gt;&lt;br /&gt; 6 - NONE</column>
    <column name="resource_manager_location" type="nvarchar(4000)">For type HADOOP, the IP and port location of the Hadoop resource manager. The &lt;c&gt;resource_manager_location&lt;/c&gt; is used for submitting a job on a Hadoop data source.&lt;br /&gt;&lt;br /&gt; &lt;c&gt;NULL&lt;/c&gt; for other types of external data sources.</column>
    <column name="credential_id" type="int">The object ID of the database scoped credential used to connect to the external data source.</column>
    <column name="database_name" type="sysname">For type RDBMS, the name of the remote database. For type, SHARD_MAP_MANAGER, the name of the shard map manager database. NULL for other types of external data sources.</column>
    <column name="shard_map_name" type="sysname">For type SHARD_MAP_MANAGER, the name of the shard map. NULL for other types of external data sources.</column>
  </table>
  <table name="sys.external_file_formats" category="ExternalOperations" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-file-formats-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.external_file_formats (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each external file format in the current database for SQL Server, SQL Database, and Azure Synapse Analytics.&lt;br/&gt;
 Contains a row for each external file format on the server for Analytics Platform System (PDW).&lt;/para&gt;</description>
    <column name="file_format_id" type="int">Object ID for the external file format.</column>
    <column name="name" type="sysname">Name of the file format. in SQL Server and Azure Synapse Analytics, this is unique for the database. In Analytics Platform System (PDW), this is unique for the server.</column>
    <column name="format_type" type="tinyint">The file format type.&lt;br/&gt;
Range: DELIMITEDTEXT, RCFILE, ORC, PARQUET</column>
    <column name="field_terminator" type="nvarchar(10)">For format_type = DELIMITEDTEXT, this is the field terminator.</column>
    <column name="string_delimiter" type="nvarchar(10)">For format_type = DELIMITEDTEXT, this is the string delimiter.</column>
    <column name="date_format" type="nvarchar(50)">For format_type = DELIMITEDTEXT, this is the user-defined date and time format.</column>
    <column name="use_type_default" type="bit">For format_type = DELIMITED TEXT, specifies how to handle missing values when PolyBase is importing data from HDFS text files into Azure Synapse Analytics.&lt;br/&gt;
Range: 0 - store missing values as the string 'NULL'.&lt;br /&gt;&lt;br /&gt; 1 - store missing values as the column default value.</column>
    <column name="serde_method" type="nvarchar(255)">For format_type = RCFILE, this is the serialization/deserialization method.</column>
    <column name="row_terminator" type="nvarchar(10)">For format_type = DELIMITEDTEXT, this is the character string that terminates each row in the external Hadoop file.&lt;br/&gt;
Range: Always '\n'.</column>
    <column name="encoding" type="nvarchar(10)">For format_type = DELIMITEDTEXT, this is the encoding method for the external Hadoop file.&lt;br/&gt;
Range: Always 'UTF8'.</column>
    <column name="data_compression" type="nvarchar(255)">The data compression method for the external data.&lt;br/&gt;
Range: For format_type = DELIMITEDTEXT:&lt;br /&gt;&lt;br /&gt; -   'org.apache.hadoop.io.compress.DefaultCodec'&lt;br /&gt;-   'org.apache.hadoop.io.compress.GzipCodec'&lt;br /&gt;&lt;br /&gt; For format_type = RCFILE:&lt;br /&gt;&lt;br /&gt; -   'org.apache.hadoop.io.compress.DefaultCodec'&lt;br /&gt;&lt;br /&gt; For format_type = ORC:&lt;br /&gt;&lt;br /&gt; -   'org.apache.hadoop.io.compress.DefaultCodec'&lt;br /&gt;-   'org.apache.hadoop.io.compress.SnappyCodec'&lt;br /&gt;&lt;br /&gt; For format_type = PARQUET:&lt;br /&gt;&lt;br /&gt; -   'org.apache.hadoop.io.compress.GzipCodec'&lt;br /&gt;-   'org.apache.hadoop.io.compress.SnappyCodec'</column>
  </table>
  <table name="sys.database_filestream_options" category="FilestreamAndFileTable" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-filestream-options-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_filestream_options (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Displays information about the level of non-transactional access to FILESTREAM data in FileTables that is enabled. Contains one row for each database in the SQL Server instance.&lt;br/&gt;
 For more information about FileTables, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/blob/filetables-sql-server'&gt;FileTables (SQL Server)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="database_id" type="int">The ID of the database. This value is unique within the SQL Server instance.</column>
    <column name="directory_name" type="nvarchar(255)">The database-level directory for all FileTable namespaces.</column>
    <column name="non_transacted_access" type="tinyint">The level of non-transactional access to FILESTREAM data that is enabled. The level of access is set by the NON_TRANSACTED_ACCESS option of the &lt;strong&gt;CREATE DATABASE&lt;/strong&gt; or &lt;strong&gt;ALTER DATABASE&lt;/strong&gt; statement.&lt;br /&gt;&lt;br /&gt; This setting has one of the following values:&lt;br /&gt;&lt;br /&gt; 0 - Not enabled. This is the default value. This level is set by providing the value &lt;strong&gt;OFF&lt;/strong&gt; for the &lt;strong&gt;NON_TRANSACTED_ACCESS&lt;/strong&gt; option.&lt;br /&gt;&lt;br /&gt; 1 - Read-only access. This level is set by providing the value &lt;strong&gt;READ_ONLY&lt;/strong&gt; for the &lt;strong&gt;NON_TRANSACTED_ACCESS&lt;/strong&gt; option.&lt;br /&gt;&lt;br /&gt; 3 - Full access. This level is set by providing the value &lt;strong&gt;FULL&lt;/strong&gt; for the &lt;strong&gt;NON_TRANSACTED_ACCESS&lt;/strong&gt; option.&lt;br /&gt;&lt;br /&gt; 5 - In transition to READONLY&lt;br /&gt;&lt;br /&gt; 6 - In transition to OFF</column>
    <column name="non_transacted_access_desc" type="nvarchar(60)">The description of the level of non-transactional access identified in non_transacted_access.&lt;br /&gt;&lt;br /&gt; This setting has one of the following values:&lt;br /&gt;&lt;br /&gt; NONE - This is the default value.&lt;br /&gt;&lt;br /&gt; READ_ONLY&lt;br /&gt;&lt;br /&gt; FULL&lt;br /&gt;&lt;br /&gt; IN_TRANSITION_TO_READ_ONLY&lt;br /&gt;&lt;br /&gt; IN_TRANSITION_TO_OFF</column>
  </table>
  <table name="sys.filetable_system_defined_objects" category="FilestreamAndFileTable" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-filetable-system-defined-objects-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.filetable_system_defined_objects (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Displays a list of the system-defined objects that are related to FileTables. Contains one row for each system-defined object.&lt;br/&gt;
 When you create a FileTable, related objects such as constraints and indexes are created at the same time. You cannot alter or drop these objects; they disappear only when the FileTable itself is dropped.&lt;br/&gt;
 For more information about FileTables, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/blob/filetables-sql-server'&gt;FileTables (SQL Server)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="int">Object ID of the system-defined object related to a FileTable.&lt;br /&gt;&lt;br /&gt; References the object in &lt;strong&gt;sys.objects&lt;/strong&gt;.</column>
    <column name="parent_object_id" type="int">Object ID of the parent FileTable.&lt;br /&gt;&lt;br /&gt; References the object in &lt;strong&gt;sys.objects&lt;/strong&gt;.</column>
  </table>
  <table name="sys.filetables" category="FilestreamAndFileTable" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-filetables-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.filetables (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each FileTable in SQL Server. For more information about FileTables, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/blob/filetables-sql-server'&gt;FileTables (SQL Server)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="">Object identification number. Is unique within a database.&lt;br /&gt;&lt;br /&gt; For more information, &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql'&gt;sys.objects (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_enabled" type="bit">1 = FileTable is in 'enabled' state.</column>
    <column name="directory_name" type="varchar(255)">Name of the root directory for a FileTable.</column>
    <column name="filename_collation_id" type="">Is the collation identifier defined for the FileTable</column>
    <column name="filename_collation_name" type="">Is the collation name defined for the FileTable.</column>
  </table>
  <table name="sys.fulltext_catalogs" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-catalogs-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_catalogs (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each full-text catalog.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
The following columns will be removed in a future release of SQL Server: &lt;strong&gt;data_space_id&lt;/strong&gt;, &lt;strong&gt;file_id&lt;/strong&gt;, and &lt;strong&gt;path&lt;/strong&gt;. Do not use these columns in new development work, and modify applications that currently use any of these columns as soon as possible.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="fulltext_catalog_id" type="int">ID of the full-text catalog. Is unique across the full-text catalogs in the database.</column>
    <column name="name" type="sysname">Name of the catalog. Is unique within the database.</column>
    <column name="path" type="nvarchar(260)">Name of the catalog directory in the file system.</column>
    <column name="is_default" type="bit">The default full-text catalog.&lt;br /&gt;&lt;br /&gt; True = Is default.&lt;br /&gt;&lt;br /&gt; False = Is not default.</column>
    <column name="is_accent_sensitivity_on" type="bit">Accent-sensitivity setting of the catalog.&lt;br /&gt;&lt;br /&gt; True = Is accent-sensitive.&lt;br /&gt;&lt;br /&gt; False = Is not accent-sensitive.</column>
    <column name="data_space_id" type="int">Filegroup where this catalog was created.</column>
    <column name="file_id" type="int">File ID of the full-text file associated with the catalog.</column>
    <column name="principal_id" type="int">ID of the database principal that owns the full-text catalog.</column>
    <column name="is_importing" type="bit">Indicates whether the full-text catalog is being imported:&lt;br /&gt;&lt;br /&gt; 1 = The catalog is being imported.&lt;br /&gt;&lt;br /&gt; 2 = The catalog is not being imported.</column>
  </table>
  <table name="sys.fulltext_document_types" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-document-types-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_document_types (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns a row for each document type that is available for full-text indexing operations. Each row represents the IFilter interface that is registered in the instance of SQL Server.&lt;/para&gt;</description>
    <column name="document_type" type="sysname">The file extension of the supported document type.&lt;br /&gt;&lt;br /&gt; This value can be used to identify the filter that will be used during full-text indexing of columns of type &lt;strong&gt;varbinary(max)&lt;/strong&gt; or &lt;strong&gt;image&lt;/strong&gt;.</column>
    <column name="class_id" type="uniqueidentifier">GUID of the IFilter class that supports file extension.</column>
    <column name="path" type="nvarchar(260)">The path to the IFilter DLL. The path is only visible to members of the &lt;strong&gt;serveradmin&lt;/strong&gt; fixed server role.</column>
    <column name="version" type="sysname">Version of the IFilter DLL.</column>
    <column name="manufacturer" type="sysname">Name of the IFilter manufacturer.&lt;br /&gt;&lt;br /&gt; Note: Only documents with the manufacturer as Microsoft are supported on SQL Database.</column>
  </table>
  <table name="sys.fulltext_index_catalog_usages" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-index-catalog-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_index_catalog_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns a row for each full-text catalog to full-text index reference.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the full-text indexed table. Is unique within the database.</column>
    <column name="index_id" type="int">ID of full-text index.</column>
    <column name="fulltext_catalog_id" type="int">ID of full-text catalog.</column>
  </table>
  <table name="sys.fulltext_index_columns" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-index-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_index_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row for each column that is part of a full-text index.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object of which this is part.</column>
    <column name="column_id" type="int">ID of the column that is part of the full-text index.</column>
    <column name="type_column_id" type="int">ID of the type column that stores the user-supplied document file extension-".doc", ".xls", and so forth-of the document in a given row. The type column is specified only for columns whose data requires filtering during full-text indexing. NULL if not applicable. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/search/configure-and-manage-filters-for-search'&gt;Configure and Manage Filters for Search&lt;/a&gt;.</column>
    <column name="language_id" type="int">LCID of language whose word breaker is used to index this full-text column.&lt;br /&gt;&lt;br /&gt; 0 = Neutral.&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-languages-transact-sql'&gt;sys.fulltext_languages (Transact-SQL)&lt;/a&gt;.</column>
    <column name="statistical_semantics" type="int">1 = This column has statistical semantics enabled in addition to full-text indexing.</column>
  </table>
  <table name="sys.fulltext_index_fragments" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-index-fragments-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_index_fragments (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;A fulltext index uses internal tables called *full-text index fragments* to store the inverted index data. This view can be used to query the metadata about these fragments. This view contains a row for each full-text index fragment in every table that contains a full-text index.&lt;/para&gt;</description>
    <column name="table_id" type="int">Object ID of the table that contains the full-text index fragment.</column>
    <column name="fragment_object_id" type="int">Object ID of the internal table associated with the fragment.</column>
    <column name="fragment_id" type="int">Logical ID of the full-text index fragment. This is unique across all fragments for this table.</column>
    <column name="timestamp" type="timestamp">Timestamp associated with the fragment creation. The timestamps of more recent fragments are larger than the timestamps of older fragments.</column>
    <column name="data_size" type="int">Logical size of the fragment in bytes.</column>
    <column name="row_count" type="int">Number of individual rows in the fragment.</column>
    <column name="status" type="int">Status of the fragment, one of:&lt;br /&gt;&lt;br /&gt; 0 = Newly created and not yet used&lt;br /&gt;&lt;br /&gt; 1 = Being used for insert during fulltext index population or merge&lt;br /&gt;&lt;br /&gt; 4 = Closed. Ready for query&lt;br /&gt;&lt;br /&gt; 6 = Being used for merge input and ready for query&lt;br /&gt;&lt;br /&gt; 8 = Marked for deletion. Will not be used for query and merge source.&lt;br /&gt;&lt;br /&gt; A status of 4 or 6 means that the fragment is part of the logical full-text index and can be queried; that is, it is a *queryable* fragment.</column>
  </table>
  <table name="sys.fulltext_indexes" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-indexes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_indexes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row per full-text index of a tabular object.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this full-text index belongs.</column>
    <column name="unique_index_id" type="int">ID of the corresponding unique, non-full-text index that is used to relate the full-text index to the rows.</column>
    <column name="fulltext_catalog_id" type="int">ID of the full-text catalog in which the full-text index resides.</column>
    <column name="is_enabled" type="bit">1 = Full-text index is currently enabled.</column>
    <column name="change_tracking_state" type="char(1)">State of change-tracking.&lt;br /&gt;&lt;br /&gt; M = Manual&lt;br /&gt;&lt;br /&gt; A = Auto&lt;br /&gt;&lt;br /&gt; O = Off</column>
    <column name="change_tracking_state_desc" type="nvarchar(60)">Description of the state of change-tracking.&lt;br /&gt;&lt;br /&gt; MANUAL&lt;br /&gt;&lt;br /&gt; AUTO&lt;br /&gt;&lt;br /&gt; OFF</column>
    <column name="has_crawl_completed" type="bit">Last crawl (population) that the full-text index has completed.</column>
    <column name="crawl_type" type="char(1)">Type of the current or last crawl.&lt;br /&gt;&lt;br /&gt; F = Full crawl&lt;br /&gt;&lt;br /&gt; I = Incremental, timestamp-based crawl&lt;br /&gt;&lt;br /&gt; U = Update crawl, based on notifications&lt;br /&gt;&lt;br /&gt; P = Full crawl is paused.</column>
    <column name="crawl_type_desc" type="nvarchar(60)">Description of the current or last crawl type.&lt;br /&gt;&lt;br /&gt; FULL_CRAWL&lt;br /&gt;&lt;br /&gt; INCREMENTAL_CRAWL&lt;br /&gt;&lt;br /&gt; UPDATE_CRAWL&lt;br /&gt;&lt;br /&gt; PAUSED_FULL_CRAWL</column>
    <column name="crawl_start_date" type="datetime">Start of the current or last crawl.&lt;br /&gt;&lt;br /&gt; NULL = None.</column>
    <column name="crawl_end_date" type="datetime">End of the current or last crawl.&lt;br /&gt;&lt;br /&gt; NULL = None.</column>
    <column name="incremental_timestamp" type="binary(8)">Timestamp value to use for the next incremental crawl.&lt;br /&gt;&lt;br /&gt; NULL = None.</column>
    <column name="stoplist_id" type="int">ID of the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/search/configure-and-manage-stopwords-and-stoplists-for-full-text-search'&gt;stoplist&lt;/a&gt; that is associated with this full-text index.</column>
    <column name="data_space_id" type="int">Filegroup where this full-text index resides.</column>
    <column name="property_list_id" type="int">ID of the search property list that is associated with this full-text index. NULL indicates that no search property list is associated with the full-text index. To obtain more information about this search property list, use the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-registered-search-property-lists-transact-sql'&gt;sys.registered_search_property_lists (Transact-SQL)&lt;/a&gt; catalog view.</column>
  </table>
  <table name="sys.fulltext_languages" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-languages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_languages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;This catalog view contains one row per language whose word breakers are registered with SQL Server. Each row displays the LCID and name of the language. When word breakers are registered for a language, its other linguistic resources-stemmers, noise words (stopwords), and thesaurus files-become available to full-text indexing/querying operations. The value of &lt;strong&gt;name&lt;/strong&gt; or &lt;strong&gt;lcid&lt;/strong&gt; can be specified in the full-text queries and full-text index Transact\-SQL statements.&lt;/para&gt;</description>
    <column name="lcid" type="int">Microsoft Windows locale identifier (LCID) for the language.</column>
    <column name="name" type="sysname">Is either the value of the alias in &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syslanguages-transact-sql'&gt;sys.syslanguages&lt;/a&gt; corresponding to the value of &lt;strong&gt;lcid&lt;/strong&gt; or the string representation of the numeric LCID.</column>
  </table>
  <table name="sys.fulltext_semantic_language_statistics_database" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-semantic-language-statistics-database-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_semantic_language_statistics_database (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row about the semantic language statistics database installed on the current instance of SQL Server.&lt;br/&gt;
 You can query this view to find out about the semantic language statistics component required for semantic processing.&lt;/para&gt;</description>
    <column name="database_id" type="int">ID of the database, unique within an instance of SQL Server.</column>
    <column name="register_date" type="datetime">Date the database was registered for semantic processing.</column>
    <column name="registered_by" type="int">ID of the server principal that registered the database for semantic processing.</column>
    <column name="version" type="nvarchar(128)">The latest version information specific to the semantic language statistics database.</column>
  </table>
  <table name="sys.fulltext_semantic_languages" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-semantic-languages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_semantic_languages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each language whose statistics model is registered with the instance of SQL Server. When a language model is registered, that language is enabled for semantic indexing.&lt;br/&gt;
 This catalog view is similar to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-languages-transact-sql'&gt;sys.fulltext_languages (Transact-SQL)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="lcid" type="int">Microsoft Windows locale identifier (LCID) for the language.</column>
    <column name="name" type="sysname">Is either the value of the alias in &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syslanguages-transact-sql'&gt;sys.syslanguages (Transact-SQL)&lt;/a&gt; corresponding to the value of &lt;strong&gt;lcid&lt;/strong&gt;, or the string representation of the numeric LCID.</column>
  </table>
  <table name="sys.fulltext_stoplists" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-stoplists-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_stoplists (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row per full-text stoplist in the database.&lt;/para&gt;</description>
    <column name="stoplist_id" type="int">ID of the stoplist, unique within the database.</column>
    <column name="name" type="sysname">Name of the stoplist.</column>
    <column name="create_date" type="datetime">Date that stoplist was created.</column>
    <column name="modify_date" type="datetime">Date that stoplist was last modified using any ALTER statement.</column>
    <column name="Principal_id" type="int">ID of the database principal that owns the stoplist.</column>
  </table>
  <table name="sys.fulltext_stopwords" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-stopwords-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_stopwords (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row per stopword for all stoplists in the database.&lt;/para&gt;</description>
    <column name="stoplist_id" type="int">ID of the stoplist to which &lt;strong&gt;stopword&lt;/strong&gt; belongs. This ID is  unique within the database.</column>
    <column name="stopword" type="nvarchar(64)">The term to be considered for a stop-word match.</column>
    <column name="language" type="sysname">Is either the value of the alias in &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-languages-transact-sql'&gt;sys.fulltext_languages&lt;/a&gt;corresponding to the value of the locale identifier (&lt;strong&gt;LCID&lt;/strong&gt;), or is the string representation of the numeric LCID.</column>
    <column name="language_id" type="int">LCID used for word breaking.</column>
  </table>
  <table name="sys.fulltext_system_stopwords" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-fulltext-system-stopwords-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.fulltext_system_stopwords (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Provides access to the system stoplist.&lt;/para&gt;</description>
    <column name="stopword" type="nvarchar(64)">The term that is considered for a stop-word match.</column>
    <column name="language_id" type="int">Locale identifier (LCID) of the language. This LCID is used for word breaking.</column>
  </table>
  <table name="sys.registered_search_properties" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-registered-search-properties-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.registered_search_properties (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row for each search property contained by any search property list on the current database.&lt;/para&gt;</description>
    <column name="property_list_id" type="int">ID of the search property list to which this property belongs.</column>
    <column name="property_set_guid" type="uniqueidentifier">Globally unique identifier GUID that identifies the property set to which the search property belongs.</column>
    <column name="property_int_id" type="int">Integer that identifies this search property within the property set. &lt;strong&gt;property_int_id&lt;/strong&gt; is unique within the property set.</column>
    <column name="property_name" type="nvarchar(64)">Name that uniquely identifies this search property in the search property list.&lt;br /&gt;&lt;br /&gt; Note: To search on a property, specify this property name in the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/queries/contains-transact-sql'&gt;CONTAINS&lt;/a&gt; predicate.</column>
    <column name="property_description" type="nvarchar(512)">Description of the property.</column>
    <column name="property_id" type="int">Internal property ID of the search property within the search property list identified by the &lt;strong&gt;property_list_id&lt;/strong&gt; value.&lt;br /&gt;&lt;br /&gt; When a given property is added to a given search property list, the Full-Text Engine registers the property and assigns it an internal property ID that is specific to that property list. The internal property ID, which is an integer, is unique to a given search property list. If a given property is registered for multiple search property lists, a different internal property ID might be assigned for each search property list.&lt;br /&gt;&lt;br /&gt; Note: The internal property ID is distinct from the property integer identifier that is specified when adding the property to the search property list. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/search/search-document-properties-with-search-property-lists'&gt;Search Document Properties with Search Property Lists&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; To view all property-related content in the full-text index: &lt;br /&gt;                  &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-fts-index-keywords-by-property-transact-sql'&gt;sys.dm_fts_index_keywords_by_property (Transact-SQL)&lt;/a&gt;</column>
  </table>
  <table name="sys.registered_search_property_lists" category="FullTextSearch" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-registered-search-property-lists-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.registered_search_property_lists (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each search property list on the current database.&lt;/para&gt;</description>
    <column name="property_list_id" type="int">ID of the property list.</column>
    <column name="name" type="sysname">Name of the property list.</column>
    <column name="create_date" type="datetime">Date the property list was created.</column>
    <column name="modify_date" type="datetime">Date the property list was last modified by any ALTER statement.</column>
    <column name="principal_id" type="int">Owner of the property list.</column>
  </table>
  <table name="sys.linked_logins" category="LinkedServers" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-linked-logins-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.linked_logins (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per linked-server-login mapping, for use by RPC and distributed queries from local server to the corresponding linked server.&lt;/para&gt;</description>
    <column name="server_id" type="int">ID of the server in &lt;strong&gt;sys.servers&lt;/strong&gt;.</column>
    <column name="local_principal_id" type="int">Server-principal to whom mapping applies.&lt;br /&gt;&lt;br /&gt; 0 = wildcard or public.</column>
    <column name="uses_self_credential" type="bit">If 1, mapping indicates session should use its own credentials; otherwise, 0 indicates that session uses the name and password that are supplied.</column>
    <column name="remote_name" type="sysname">Remote user name to use when connecting. Password is also stored, but not exposed in catalog view interfaces.</column>
    <column name="modify_date" type="datetime">Date the linked login was last changed.</column>
  </table>
  <table name="sys.remote_logins" category="LinkedServers" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-remote-logins-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.remote_logins (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per remote-login mapping. This catalog view is used to map incoming local logins that claim to be coming from a corresponding server to an actual local login.&lt;/para&gt;</description>
    <column name="server_id" type="int">ID of the server in &lt;strong&gt;sys.servers&lt;/strong&gt;. This name is supplied by the connection from the "remote" server.</column>
    <column name="remote_name" type="sysname">Login name that the connection will supply to be mapped. If NULL, the login name that is specified in the connection is used.</column>
    <column name="local_principal_id" type="int">ID of the server principal to whom the login is mapped. If 0, the remote login is mapped to the login with the same name.</column>
    <column name="modify_date" type="datetime">Date the linked login was last changed.</column>
  </table>
  <table name="sys.servers" category="LinkedServers" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-servers-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.servers (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Contains a row per linked or remote server registered, and a row for the local server that has &lt;strong&gt;server_id&lt;/strong&gt; = 0.&lt;/para&gt;</description>
    <column name="server_id" type="int">Local ID of linked server.</column>
    <column name="name" type="sysname">When &lt;strong&gt;server_id&lt;/strong&gt; = 0, the returned value is the server name.&lt;br /&gt;&lt;br /&gt; When &lt;strong&gt;server_id&lt;/strong&gt; &gt; 0, the returned value is the local name of linked server.</column>
    <column name="product" type="sysname">Product name of the linked server. A value of "SQL Server" indicates another instance of SQL Server.</column>
    <column name="provider" type="sysname">OLE DB provider name for connecting to linked server.&lt;br /&gt;&lt;br /&gt;Starting with SQL Server 2019 (15.x), the value "SQLNCLI" maps to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/https://docs.microsoft.com/en-us/sql/relational-databases/connect/oledb/oledb-driver-for-sql-server'&gt;Microsoft OLE DB Driver for SQL Server (MSOLEDBSQL)&lt;/a&gt; by default. In earlier versions, the value "SQLNCLI" maps to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/native-client/sql-server-native-client'&gt;SQL Server Native Client OLE DB provider (SQLNCLI11)&lt;/a&gt;.</column>
    <column name="data_source" type="nvarchar(4000)">OLE DB data source connection property.</column>
    <column name="location" type="nvarchar(4000)">OLE DB location connection property. NULL if none.</column>
    <column name="provider_string" type="nvarchar(4000)">OLE DB provider-string connection property.&lt;br /&gt;&lt;br /&gt; Is NULL unless the caller has the &lt;c&gt;ALTER ANY LINKED SERVER&lt;/c&gt; permission.</column>
    <column name="catalog" type="sysname">OLE DB catalog connection property. NULL if none.</column>
    <column name="connect_timeout" type="int">Connect time-out in seconds, 0 if none.</column>
    <column name="query_timeout" type="int">Query time-out in seconds, 0 if none.</column>
    <column name="is_linked" type="bit">0 = Is an old-style server added by using &lt;strong&gt;sp_addserver&lt;/strong&gt;, with different RPC and distributed-transaction behavior.&lt;br /&gt;&lt;br /&gt; 1 = Standard linked server.</column>
    <column name="is_remote_login_enabled" type="bit">RPC option is set enabling incoming remote logins for this server.</column>
    <column name="is_rpc_out_enabled" type="bit">Outgoing (from this server) RPC is enabled.</column>
    <column name="is_data_access_enabled" type="bit">Server is enabled for distributed queries.</column>
    <column name="is_collation_compatible" type="bit">Collation of remote data is assumed to be compatible with local data if no collation information is available.</column>
    <column name="uses_remote_collation" type="bit">If 1, use the collation reported by the remote server; otherwise, use the collation specified by the next column.</column>
    <column name="collation_name" type="sysname">Name of collation to use, or NULL if just use local.</column>
    <column name="lazy_schema_validation" type="bit">If 1, schema validation is not checked at query startup.</column>
    <column name="is_system" type="bit">This server can be accessed only by the internal system.</column>
    <column name="is_publisher" type="bit">Server is a replication Publisher.</column>
    <column name="is_subscriber" type="bit">Server is a replication Subscriber.</column>
    <column name="is_distributor" type="bit">Server is a replication Distributor.</column>
    <column name="is_nonsql_subscriber" type="bit">Server is a non-SQL Server replication Subscriber.</column>
    <column name="is_remote_proc_transaction_promotion_enabled" type="bit">If 1, calling a remote stored procedure starts a distributed transaction and enlists the transaction with MS DTC. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-serveroption-transact-sql'&gt;sp_serveroption (Transact-SQL)&lt;/a&gt;.</column>
    <column name="modify_date" type="datetime">Date that server information was last changed.</column>
    <column name="is_rda_server" type="bit">&lt;strong&gt;Applies to:&lt;/strong&gt; Starting with SQL Server 2016 (13.x).&lt;br /&gt;&lt;br /&gt;Server is remote data archive enable (stretch-enabled). For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/sql-server/stretch-database/enable-stretch-database-for-a-database#EnableTSQLServer'&gt;Enable Stretch Database on the server&lt;/a&gt;.</column>
  </table>
  <table name="sys.all_columns" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.all_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Shows the union of all columns belonging to user-defined objects and system objects.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Is unique within the object.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.&lt;br /&gt;&lt;br /&gt; Column IDs might not be sequential.</column>
    <column name="system_type_id" type="tinyint">ID of the system-type of the column.</column>
    <column name="user_type_id" type="int">ID of the type of the column as defined by the user.&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of the column.&lt;br /&gt;&lt;br /&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For &lt;strong&gt;text&lt;/strong&gt; columns, the max_length value will be 16 or the value set by sp_tableoption 'text in row'.</column>
    <column name="precision" type="tinyint">Precision of the column if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the column if numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the column if character-based; otherwise, NULL.</column>
    <column name="is_nullable" type="bit">1 = Column is nullable.</column>
    <column name="is_ansi_padded" type="bit">1 = Column uses ANSI_PADDING ON behavior if character, binary, or variant.&lt;br /&gt;&lt;br /&gt; 0 = Column is not character, binary, or variant.</column>
    <column name="is_rowguidcol" type="bit">1 = Column is a declared ROWGUIDCOL.</column>
    <column name="is_identity" type="bit">1 = Column has identity values</column>
    <column name="is_computed" type="bit">1 = Column is a computed column.</column>
    <column name="is_filestream" type="bit">1 = Column is declared to use filestream storage.</column>
    <column name="is_replicated" type="bit">1 = Column is replicated.</column>
    <column name="is_non_sql_subscribed" type="bit">1 = Column has a non-SQL Server subscriber.</column>
    <column name="is_merge_published" type="bit">1 = Column is merge-published.</column>
    <column name="is_dts_replicated" type="bit">1 = Column is replicated by using SSIS.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br /&gt;&lt;br /&gt; 0 = Content is a document fragment, or the column data type is not XML.</column>
    <column name="xml_collection_id" type="int">Non-zero if the column's data type is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value will be the ID of the collection containing the column's validating XML schema namespace&lt;br /&gt;&lt;br /&gt; 0 = no XML schema collection.</column>
    <column name="default_object_id" type="int">ID of the default object, regardless of whether it is a stand-alone &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-bindefault-transact-sql'&gt;sys.sp_bindefault&lt;/a&gt;, or an in-line, column-level DEFAULT constraint. The parent_object_id column of an inline column-level default object is a reference back to the table itself.&lt;br /&gt;&lt;br /&gt; 0 = No default.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule bound to the column by using sys.sp_bindrule.&lt;br /&gt;&lt;br /&gt; 0 = No stand-alone rule.&lt;br /&gt;&lt;br /&gt; For column-level CHECK constraints, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-check-constraints-transact-sql'&gt;sys.check_constraints (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_sparse" type="bit">1 = Column is a sparse column. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/use-sparse-columns'&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="is_column_set" type="bit">1 = Column is a column set. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/use-column-sets'&gt;Use Column Sets&lt;/a&gt;.</column>
    <column name="generated_always_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database. 7, 8, 9, 10 only applies to SQL Database.&lt;br /&gt;&lt;br /&gt; Identifies when the column value is generated (will always be 0 for columns in system tables):&lt;br /&gt;&lt;br /&gt; 0 = NOT_APPLICABLE&lt;br /&gt; 1 = AS_ROW_START&lt;br /&gt; 2 = AS_ROW_END&lt;br /&gt;7 = AS_TRANSACTION_ID_START&lt;br /&gt;8 = AS_TRANSACTION_ID_END&lt;br /&gt;9 = AS_SEQUENCE_NUMBER_START&lt;br /&gt;10 = AS_SEQUENCE_NUMBER_END&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/temporal-tables'&gt;Temporal Tables (Relational databases)&lt;/a&gt;.</column>
    <column name="generated_always_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Textual description of &lt;c&gt;generated_always_type&lt;/c&gt;'s value (always NOT_APPLICABLE for columns in system tables) &lt;br /&gt;&lt;br /&gt; NOT_APPLICABLE&lt;br /&gt; AS_ROW_START&lt;br /&gt; AS_ROW_END&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database&lt;br /&gt;&lt;br /&gt;AS_TRANSACTION_ID_START&lt;br /&gt;AS_TRANSACTION_ID_END&lt;br /&gt;AS_SEQUENCE_NUMBER_START&lt;br /&gt;AS_SEQUENCE_NUMBER_END</column>
    <column name="ledger_view_column_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br /&gt;&lt;br /&gt; If not NULL, indicates the type of a column in a ledger view:&lt;br /&gt;&lt;br /&gt; 1 = TRANSACTION_ID&lt;br /&gt; 2 = SEQUENCE_NUMBER&lt;br /&gt; 3 = OPERATION_TYPE&lt;br /&gt; 4 = OPERATION_TYPE_DESC&lt;br/&gt;&lt;br/&gt;For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_view_column_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br /&gt;&lt;br /&gt; If not NULL, contains a textual description of the the type of a column in a ledger view:&lt;br /&gt;&lt;br /&gt; TRANSACTION_ID&lt;br /&gt; SEQUENCE_NUMBER&lt;br /&gt; OPERATION_TYPE&lt;br /&gt; OPERATION_TYPE_DESC</column>
  </table>
  <table name="sys.all_objects" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-objects-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.all_objects (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Shows the UNION of all schema-scoped user-defined objects and system objects.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, another owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternative individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint</column>
    <column name="schema_id" type="int">ID of the schema that contains the object.&lt;br /&gt;&lt;br /&gt; For all schema scoped system objects that are included with SQL Server, this value is always in (schema_id('sys'), schema_id('INFORMATION_SCHEMA')).</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type. AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; VIEW&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or modified.</column>
    <column name="is_ms_shipped" type="bit">Object created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
  </table>
  <table name="sys.all_parameters" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-parameters-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.all_parameters (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Shows the union of all parameters that belong to user-defined or system objects.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this parameter belongs.</column>
    <column name="name" type="sysname">Name of parameter. Is unique within the object. If the object is a scalar function, the parameter name is an empty string in the row representing the return value.</column>
    <column name="parameter_id" type="int">ID of parameter. Is unique within the object. If the object is a scalar function, &lt;strong&gt;parameter_id&lt;/strong&gt; = 0 represents the return value.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the parameter.</column>
    <column name="user_type_id" type="int">ID of the type of the parameter as defined by the user.&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length of the parameter, in bytes.&lt;br /&gt;&lt;br /&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="precision" type="tinyint">Precision of the parameter if it is numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the parameter if it is numeric-based; otherwise, 0.</column>
    <column name="is_output" type="bit">1 = Parameter is output (or return); otherwise, 0.</column>
    <column name="is_cursor_ref" type="bit">1 = Parameter is a cursor reference parameter.</column>
    <column name="has_default_value" type="bit">1 = Parameter has a default value.&lt;br /&gt;&lt;br /&gt; SQL Server only maintains default values for CLR objects in this catalog view; therefore, this column will always have a value of 0 for Transact\-SQL objects. To view the default value of a parameter in a Transact\-SQL object, query the &lt;strong&gt;definition&lt;/strong&gt; column of the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-modules-transact-sql'&gt;sys.sql_modules&lt;/a&gt; catalog view, or use the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/functions/object-definition-transact-sql'&gt;OBJECT_DEFINITION&lt;/a&gt; system function.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br /&gt;&lt;br /&gt; 0 = Content is a document fragment or the data type of the column is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="default_value" type="sql_variant">If &lt;strong&gt;has_default_value&lt;/strong&gt; is 1, the value of this column is the value of the default for the parameter; otherwise &lt;c&gt;NULL&lt;/c&gt;.</column>
    <column name="xml_collection_id" type="int">Is the ID of the XML schema collection used to validate the parameter.&lt;br /&gt;&lt;br /&gt; Nonzero if the data type of the parameter is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed.&lt;br /&gt;&lt;br /&gt; 0 = There is no XML schema collection, or the parameter is not XML.</column>
    <column name="is_readonly" type="bit">1 =  Parameter is READONLY; otherwise, 0.</column>
    <column name="is_nullable" type="bit">1 = Parameter is nullable. (the default).&lt;br /&gt;&lt;br /&gt; 0 = Parameter is not nullable, for more efficient execution of natively-compiled stored procedures.</column>
    <column name="encryption_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type:&lt;br /&gt;&lt;br /&gt; 1 = Deterministic encryption&lt;br /&gt;&lt;br /&gt; 2 = Randomized encryption</column>
    <column name="encryption_type_desc" type="nvarchar(64)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type description:&lt;br /&gt;&lt;br /&gt; RANDOMIZED&lt;br /&gt;&lt;br /&gt; DETERMINISTIC</column>
    <column name="encryption_algorithm_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Name of encryption algorithm.&lt;br /&gt;&lt;br /&gt; Only AEAD_AES_256_CBC_HMAC_SHA_512 is supported.</column>
    <column name="column_encryption_key_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; ID of the CEK.</column>
    <column name="column_encryption_key_database_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; The name of the database where the column encryption key exists if different than the database of the column. Is &lt;c&gt;NULL&lt;/c&gt; if the key exists in the same database as the column.</column>
  </table>
  <table name="sys.all_sql_modules" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-sql-modules-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.all_sql_modules (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns the union of &lt;strong&gt;sys.sql_modules&lt;/strong&gt; and &lt;strong&gt;sys.system_sql_modules&lt;/strong&gt;.&lt;br/&gt;
 The view returns a row for each natively compiled, scalar user-defined function. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/scalar-user-defined-functions-for-in-memory-oltp'&gt;Scalar User-Defined Functions for In-Memory OLTP&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object of the containing object. Is unique within a database.</column>
    <column name="definition" type="nvarchar(max)">SQL text that defines this module.&lt;br /&gt;&lt;br /&gt; NULL = Encrypted</column>
    <column name="uses_ansi_nulls" type="bit">Module was created with SET ANSI_NULLS ON.</column>
    <column name="uses_quoted_identifier" type="bit">Module was created with SET QUOTED_IDENTIFIER ON.</column>
    <column name="is_schema_bound" type="bit">Module was created with the SCHEMABINDING option.</column>
    <column name="uses_database_collation" type="bit">1 = Schema-bound module definition depends on the default-collation of the database for correct evaluation; otherwise, 0. Such a dependency prevents changing the default collation of the database.</column>
    <column name="is_recompiled" type="bit">Procedure was created using the WITH RECOMPILE option.</column>
    <column name="null_on_null_input" type="bit">Module was declared to produce a NULL output on any NULL input.</column>
    <column name="execute_as_principal_id" type="int">ID of the EXECUTE AS database principal.&lt;br /&gt;&lt;br /&gt; NULL by default or if EXECUTE AS CALLER.&lt;br /&gt;&lt;br /&gt; ID of the specified principal if EXECUTE AS SELF or EXECUTE AS \&lt;principal&gt;.&lt;br /&gt;&lt;br /&gt; -2 = EXECUTE AS OWNER.</column>
    <column name="uses_native_compilation" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; 0 = not natively compiled&lt;br /&gt;&lt;br /&gt; 1 = is natively compiled&lt;br /&gt;&lt;br /&gt; The default value is 0.</column>
  </table>
  <table name="sys.all_views" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-all-views-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.all_views (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Shows the UNION of all user-defined and system views.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="is_replicated" type="bit">1 = View is replicated.</column>
    <column name="has_replication_filter" type="bit">1 = View has a replication filter.</column>
    <column name="has_opaque_metadata" type="bit">1 = VIEW_METADATA option specified for view. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-view-transact-sql'&gt;CREATE VIEW (Transact-SQL)&lt;/a&gt;.</column>
    <column name="has_unchecked_assembly_data" type="bit">1 = Table contains persisted data that depends on an assembly whose definition changed during the last ALTER ASSEMBLY. Resets to 0 after the next successful DBCC CHECKDB or DBCC CHECKTABLE.</column>
    <column name="with_check_option" type="bit">1 = WITH CHECK OPTION was specified in the view definition.</column>
    <column name="is_date_correlation_view" type="bit">1 = View was created automatically by the system to store correlation information between datetime columns. Creation of this view was enabled by setting DATE_CORRELATION_OPTIMIZATION to &lt;strong&gt;ON&lt;/strong&gt;.</column>
  </table>
  <table name="sys.allocation_units" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-allocation-units-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.allocation_units (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row for each allocation unit in the database.&lt;/para&gt;</description>
    <column name="allocation_unit_id" type="bigint">ID of the allocation unit. Is unique within a database.</column>
    <column name="type" type="tinyint">Type of allocation unit:&lt;br /&gt;&lt;br /&gt; 0 = Dropped&lt;br /&gt;&lt;br /&gt; 1 = In-row data (all data types, except LOB data types)&lt;br /&gt;&lt;br /&gt; 2 = Large object (LOB) data (&lt;strong&gt;text&lt;/strong&gt;, &lt;strong&gt;ntext&lt;/strong&gt;, &lt;strong&gt;image&lt;/strong&gt;, &lt;strong&gt;xml&lt;/strong&gt;, large value types, and CLR user-defined types)&lt;br /&gt;&lt;br /&gt; 3 = Row-overflow data</column>
    <column name="type_desc" type="nvarchar(60)">Description of the allocation unit type:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;DROPPED&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;IN_ROW_DATA&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;LOB_DATA&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;ROW_OVERFLOW_DATA&lt;/strong&gt;</column>
    <column name="container_id" type="bigint">ID of the storage container associated with the allocation unit.&lt;br /&gt;&lt;br /&gt; If type = 1 or 3 in a rowstore index container_id = sys.partitions.hobt_id.&lt;br /&gt;&lt;br /&gt; If type = 1 or 3 in a columnstore index, container_id = sys.column_store_row_groups.delta_store_hobt_id.&lt;br /&gt;&lt;br /&gt; If type is 2, then container_id = sys.partitions.partition_id.&lt;br /&gt;&lt;br /&gt; 0 = Allocation unit marked for deferred drop</column>
    <column name="data_space_id" type="int">ID of the filegroup in which this allocation unit resides.</column>
    <column name="total_pages" type="bigint">Total number of pages allocated or reserved by this allocation unit.</column>
    <column name="used_pages" type="bigint">Number of total pages actually in use.</column>
    <column name="data_pages" type="bigint">Number of used pages that have:&lt;br /&gt;&lt;br /&gt; In-row data&lt;br /&gt;&lt;br /&gt; LOB data&lt;br /&gt;&lt;br /&gt; Row-overflow data&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; Note that the value returned excludes internal index pages and allocation-management pages.</column>
  </table>
  <table name="sys.assembly_modules" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assembly-modules-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.assembly_modules (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each function, procedure or trigger that is defined by a common language runtime (CLR) assembly. This catalog view maps CLR stored procedures, CLR triggers, or CLR functions to their underlying implementation. Objects of type TA, AF, PC, FS, and FT have an associated assembly module. To find the association between the object and the assembly, you can join this catalog view to other catalog views. For example, when you create a CLR stored procedure, it is represented by one row in &lt;strong&gt;sys.objects&lt;/strong&gt;, one row in &lt;strong&gt;sys.procedures&lt;/strong&gt; (which inherits from &lt;strong&gt;sys.objects&lt;/strong&gt;), and one row in &lt;strong&gt;sys.assembly_modules&lt;/strong&gt;. The stored procedure itself is represented by the metadata in &lt;strong&gt;sys.objects&lt;/strong&gt; and &lt;strong&gt;sys.procedures&lt;/strong&gt;. References to the procedure's underlying CLR implementation are found in &lt;strong&gt;sys.assembly_modules&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="int">Object identification number of the SQL object. Is unique within a database.</column>
    <column name="assembly_id" type="int">ID of the assembly from which this module was created.</column>
    <column name="assembly_class" type="sysname">Name of the class within the assembly that defines this module.</column>
    <column name="assembly_method" type="sysname">Name of the method within the &lt;strong&gt;assembly_class&lt;/strong&gt; that defines this module.&lt;br /&gt;&lt;br /&gt; NULL for aggregate functions (AF).</column>
    <column name="null_on_null_input" type="bit">Module was declared to produce a NULL output for any NULL input.</column>
    <column name="execute_as_principal_id" type="int">ID of the database principal under which the context execution occurs, as specified by the EXECUTE AS clause of the CLR function, stored procedure, or trigger.&lt;br /&gt;&lt;br /&gt; NULL = EXECUTE AS CALLER. This is the default.&lt;br /&gt;&lt;br /&gt; ID of the specified database principal = EXECUTE AS SELF, EXECUTE AS *user_name*, or EXECUTE AS *login_name*.&lt;br /&gt;&lt;br /&gt; -2 = EXECUTE AS OWNER.</column>
  </table>
  <table name="sys.check_constraints" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-check-constraints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.check_constraints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row for each object that is a CHECK constraint, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = 'C'.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="is_disabled" type="bit">CHECK constraint is disabled.</column>
    <column name="is_not_for_replication" type="bit">CHECK constraint was created with the NOT FOR REPLICATION option.</column>
    <column name="is_not_trusted" type="bit">CHECK constraint has not been verified by the system for all rows.</column>
    <column name="parent_column_id" type="int">0 indicates a table-level CHECK constraint.&lt;br /&gt;&lt;br /&gt; Non-zero value indicates that this is a column-level CHECK constraint defined on the column with the specified ID value.</column>
    <column name="definition" type="nvarchar(max)">SQL expression that defines this CHECK constraint.</column>
    <column name="uses_database_collation" type="bit">1 = The constraint definition depends on the default collation of the database for correct evaluation; otherwise, 0. Such a dependency prevents changing the database default collation.</column>
    <column name="is_system_named" type="bit">1 = Name was generated by system.&lt;br /&gt;&lt;br /&gt; 0 = Name was supplied by the user.</column>
  </table>
  <table name="sys.column_store_dictionaries" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-store-dictionaries-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.column_store_dictionaries (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each dictionary used in xVelocity memory optimized columnstore indexes. Dictionaries are used to encode some, but not all data types, therefore not all columns in a columnstore index have dictionaries. A dictionary can exist as a primary dictionary (for all segments) and possibly for other secondary dictionaries used for a subset of the column's segments.&lt;/para&gt;</description>
    <column name="hobt_id" type="bigint">ID of the heap or B-tree index (HoBT) for the table that has this columnstore index.</column>
    <column name="column_id" type="int">ID of the columnstore column starting with 1. The first column has ID = 1, the second column has ID = 2, etc.</column>
    <column name="dictionary_id" type="int">There can be two kinds of dictionaries, global and local, associated with a column segment. A dictionary_id of 0 represents the global dictionary that is shared across all column segments (one for each row group) for that column.</column>
    <column name="version" type="int">Version of the dictionary format.</column>
    <column name="type" type="int">Dictionary type:&lt;br /&gt;&lt;br /&gt; 1 - Hash dictionary containing &lt;strong&gt;int&lt;/strong&gt; values&lt;br /&gt;&lt;br /&gt; 2 - Not used&lt;br /&gt;&lt;br /&gt; 3 - Hash dictionary containing string values&lt;br /&gt;&lt;br /&gt; 4 - Hash dictionary containing &lt;strong&gt;float&lt;/strong&gt; values&lt;br /&gt;&lt;br /&gt; For more information about dictionaries, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/~/relational-databases/indexes/columnstore-indexes-overview'&gt;Columnstore Indexes Guide&lt;/a&gt;.</column>
    <column name="last_id" type="int">The last data ID in the dictionary.</column>
    <column name="entry_count" type="bigint">Number of entries in the dictionary.</column>
    <column name="on_disk_size" type="bigint">Size of dictionary in bytes.</column>
    <column name="partition_id" type="bigint">Indicates the partition ID. Is unique within a database.</column>
  </table>
  <table name="sys.column_store_row_groups" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-store-row-groups-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.column_store_row_groups (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Provides clustered columnstore index information on a per-segment basis to help the administrator make system management decisions. &lt;strong&gt;sys.column_store_row_groups&lt;/strong&gt; has a column for the total number of rows physically stored (including those marked as deleted) and a column for the number of rows marked as deleted. Use &lt;strong&gt;sys.column_store_row_groups&lt;/strong&gt; to determine which row groups have a high percentage of deleted rows and should be rebuilt.&lt;/para&gt;</description>
    <column name="object_id" type="int">The id of the table on which this index is defined.</column>
    <column name="index_id" type="int">ID of the index for the table that has this columnstore index.</column>
    <column name="partition_number" type="int">ID of the table partition that holds row group row_group_id. You can use partition_number to join this DMV to sys.partitions.</column>
    <column name="row_group_id" type="int">The row group number associated with this row group. This is unique within the partition.&lt;br /&gt;&lt;br /&gt; -1 = tail of an in-memory table.</column>
    <column name="delta_store_hobt_id" type="bigint">The hobt_id for OPEN row group in the delta store.&lt;br /&gt;&lt;br /&gt; NULL if the row group is not in the delta store.&lt;br /&gt;&lt;br /&gt; NULL for the tail of an in-memory table.</column>
    <column name="state" type="tinyint">ID number associated with the state_description.&lt;br /&gt;&lt;br /&gt; 0 = INVISIBLE&lt;br /&gt;&lt;br /&gt; 1 = OPEN&lt;br /&gt;&lt;br /&gt; 2 = CLOSED&lt;br /&gt;&lt;br /&gt; 3 = COMPRESSED &lt;br /&gt;&lt;br /&gt; 4 = TOMBSTONE</column>
    <column name="state_description" type="nvarchar(60)">Description of the persistent state of the row group:&lt;br /&gt;&lt;br /&gt; INVISIBLE -A hidden compressed segment in the process of being built from data in a delta store. Read actions will use the delta store until the invisible compressed segment is completed. Then the new segment is made visible, and the source delta store is removed.&lt;br /&gt;&lt;br /&gt; OPEN - A read/write row group that is accepting new records. An open row group is still in rowstore format and has not been compressed to columnstore format.&lt;br /&gt;&lt;br /&gt; CLOSED - A row group that has been filled, but not yet compressed by the tuple mover process.&lt;br /&gt;&lt;br /&gt; COMPRESSED - A row group that has filled and compressed.</column>
    <column name="total_rows" type="bigint">Total rows physically stored in the row group. Some may have been deleted but they are still stored. The maximum number of rows in a row group is 1,048,576 (hexadecimal FFFFF).</column>
    <column name="deleted_rows" type="bigint">Total rows in the row group marked deleted. This is always 0 for DELTA row groups.</column>
    <column name="size_in_bytes" type="bigint">Size in bytes of all the data in this row group (not including metadata or shared dictionaries), for both DELTA and COLUMNSTORE rowgroups.</column>
  </table>
  <table name="sys.column_store_segments" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-store-segments-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.column_store_segments (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns one row for each column segment in a columnstore index. There is one column segment per column per rowgroup. For example, a table with 10 rowgroups and 34 columns returns 340 rows.&lt;/para&gt;</description>
    <column name="partition_id" type="bigint">Indicates the partition ID. Is unique within a database.</column>
    <column name="hobt_id" type="bigint">ID of the heap or B-tree index (HoBT) for the table that has this columnstore index.</column>
    <column name="column_id" type="int">ID of the columnstore column.</column>
    <column name="segment_id" type="int">ID of the rowgroup. For backward compatibility, the column name continues to be called segment_id even though this is the rowgroup ID. You can uniquely identify a segment using \&lt;hobt_id, partition_id, column_id&gt;, &lt;segment_id&gt;.</column>
    <column name="version" type="int">Version of the column segment format.</column>
    <column name="encoding_type" type="int">Type of encoding used for that segment:&lt;br /&gt;&lt;br /&gt; 1 = VALUE_BASED - non-string/binary with no dictionary (similar to 4 with some internal variations)&lt;br /&gt;&lt;br /&gt; 2 = VALUE_HASH_BASED - non-string/binary column with common values in dictionary&lt;br /&gt;&lt;br /&gt; 3 = STRING_HASH_BASED - string/binary column with common values in dictionary&lt;br /&gt;&lt;br /&gt; 4 = STORE_BY_VALUE_BASED - non-string/binary with no dictionary&lt;br /&gt;&lt;br /&gt; 5 = STRING_STORE_BY_VALUE_BASED - string/binary with no dictionary&lt;br /&gt;&lt;br /&gt; For more information, see the [Remarks](#remarks) section.</column>
    <column name="row_count" type="int">Number of rows in the row group.</column>
    <column name="has_nulls" type="int">1 if the column segment has null values.</column>
    <column name="base_id" type="bigint">Base value ID if encoding type 1 is being used. If encoding type 1 is not being used, base_id is set to -1.</column>
    <column name="magnitude" type="float">Magnitude if encoding type 1 is being used. If encoding type 1 is not being used, magnitude is set to -1.</column>
    <column name="primary_dictionary_id" type="int">A value of 0 represents the global dictionary. A value of -1 indicates that there is no global dictionary created for this column.</column>
    <column name="secondary_dictionary_id" type="int">A non-zero value points to the local dictionary for this column in the current segment (i.e. the rowgroup). A value of -1 indicates that there is no local dictionary for this segment.</column>
    <column name="min_data_id" type="bigint">Minimum data ID in the column segment.</column>
    <column name="max_data_id" type="bigint">Maximum data ID in the column segment.</column>
    <column name="null_value" type="bigint">Value used to represent nulls.</column>
    <column name="on_disk_size" type="bigint">Size of segment in bytes.</column>
  </table>
  <table name="sys.columns" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns a row for each column of an object that has columns, such as views or tables. The following is a list of object types that have columns:&lt;br/&gt;
- Table-valued assembly functions (FT)&lt;br/&gt;
- Inline table-valued SQL functions (IF)&lt;br/&gt;
- Internal tables (IT)&lt;br/&gt;
- System tables (S)&lt;br/&gt;
- Table-valued SQL functions (TF)&lt;br/&gt;
- User tables (U)&lt;br/&gt;
- Views (V)&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Is unique within the object.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.&lt;br /&gt;&lt;br /&gt; Column IDs might not be sequential.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the column.</column>
    <column name="user_type_id" type="int">ID of the type of the column as defined by the user.&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of the column.&lt;br /&gt;&lt;br /&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For &lt;strong&gt;text&lt;/strong&gt;, &lt;strong&gt;ntext&lt;/strong&gt;, and &lt;strong&gt;image&lt;/strong&gt; columns, the max_length value will be 16 (representing the 16-byte pointer only) or the value set by sp_tableoption 'text in row'.</column>
    <column name="precision" type="tinyint">Precision of the column if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of column if numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the column if character-based; otherwise &lt;c&gt;NULL&lt;/c&gt;.</column>
    <column name="is_nullable" type="bit">1 = Column is nullable.</column>
    <column name="is_ansi_padded" type="bit">1 = Column uses ANSI_PADDING ON behavior if character, binary, or variant.&lt;br /&gt;&lt;br /&gt; 0 = Column is not character, binary, or variant.</column>
    <column name="is_rowguidcol" type="bit">1 = Column is a declared ROWGUIDCOL.</column>
    <column name="is_identity" type="bit">1 = Column has identity values</column>
    <column name="is_computed" type="bit">1 = Column is a computed column.</column>
    <column name="is_filestream" type="bit">1 = Column is a FILESTREAM column.</column>
    <column name="is_replicated" type="bit">1 = Column is replicated.</column>
    <column name="is_non_sql_subscribed" type="bit">1 = Column has a non-SQL Server subscriber.</column>
    <column name="is_merge_published" type="bit">1 = Column is merge-published.</column>
    <column name="is_dts_replicated" type="bit">1 = Column is replicated by using SSIS.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br /&gt;&lt;br /&gt; 0 = Content is a document fragment or the column data type is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="xml_collection_id" type="int">Nonzero if the data type of the column is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value will be the ID of the collection containing the validating XML schema namespace of the column.&lt;br /&gt;&lt;br /&gt; 0 = No XML schema collection.</column>
    <column name="default_object_id" type="int">ID of the default object, regardless of whether it is a stand-alone object &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-bindefault-transact-sql'&gt;sys.sp_bindefault&lt;/a&gt;, or an inline, column-level DEFAULT constraint. The parent_object_id column of an inline column-level default object is a reference back to the table itself.&lt;br /&gt;&lt;br /&gt; 0 = No default.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule bound to the column by using sys.sp_bindrule.&lt;br /&gt;&lt;br /&gt; 0 = No stand-alone rule. For column-level CHECK constraints, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-check-constraints-transact-sql'&gt;sys.check_constraints (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_sparse" type="bit">1 = Column is a sparse column. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/use-sparse-columns'&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="is_column_set" type="bit">1 = Column is a column set. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/use-sparse-columns'&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="generated_always_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database. 7, 8, 9, 10 only applies to SQL Database.&lt;br /&gt;&lt;br /&gt; Identifies when the column value is generated (will always be 0 for columns in system tables):&lt;br /&gt;&lt;br /&gt; 0 = NOT_APPLICABLE&lt;br /&gt; 1 = AS_ROW_START&lt;br /&gt; 2 = AS_ROW_END&lt;br /&gt;7 = AS_TRANSACTION_ID_START&lt;br /&gt;8 = AS_TRANSACTION_ID_END&lt;br /&gt;9 = AS_SEQUENCE_NUMBER_START&lt;br /&gt;10 = AS_SEQUENCE_NUMBER_END&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/temporal-tables'&gt;Temporal Tables (Relational databases)&lt;/a&gt;.</column>
    <column name="generated_always_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Textual description of &lt;c&gt;generated_always_type&lt;/c&gt;'s value (always NOT_APPLICABLE for columns in system tables) &lt;br /&gt;&lt;br /&gt; NOT_APPLICABLE&lt;br /&gt; AS_ROW_START&lt;br /&gt; AS_ROW_END&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database&lt;br /&gt;&lt;br /&gt;AS_TRANSACTION_ID_START&lt;br /&gt;AS_TRANSACTION_ID_END&lt;br /&gt;AS_SEQUENCE_NUMBER_START&lt;br /&gt;AS_SEQUENCE_NUMBER_END</column>
    <column name="encryption_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type:&lt;br /&gt;&lt;br /&gt; 1 = Deterministic encryption&lt;br /&gt;&lt;br /&gt; 2 = Randomized encryption</column>
    <column name="encryption_type_desc" type="nvarchar(64)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type description:&lt;br /&gt;&lt;br /&gt; RANDOMIZED&lt;br /&gt;&lt;br /&gt; DETERMINISTIC</column>
    <column name="encryption_algorithm_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Name of encryption algorithm.&lt;br /&gt;&lt;br /&gt; Only AEAD_AES_256_CBC_HMAC_SHA_512 is supported.</column>
    <column name="column_encryption_key_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; ID of the CEK.</column>
    <column name="column_encryption_key_database_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; The name of the database where the column encryption key exists if different than the database of the column. &lt;c&gt;NULL&lt;/c&gt; if the key exists in the same database as the column.</column>
    <column name="is_hidden" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Indicates if the column is hidden:&lt;br /&gt;&lt;br /&gt; 0 = regular, not-hidden, visible column&lt;br /&gt;&lt;br /&gt; 1 = hidden column</column>
    <column name="is_masked" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Indicates if the column is masked by a dynamic data masking:&lt;br /&gt;&lt;br /&gt; 0 = regular, not-masked column&lt;br /&gt;&lt;br /&gt; 1 = column is masked</column>
    <column name="graph_type" type="int">Internal column with a set of values. The values are between 1-8 for graph columns and &lt;c&gt;NULL&lt;/c&gt; for others.</column>
    <column name="graph_type_desc" type="nvarchar(60)">internal column with a set of values</column>
    <column name="is_data_deletion_filter_column" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database Edge. Indicates if the column is the data retention filter column for the table.</column>
    <column name="ledger_view_column_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br /&gt;&lt;br /&gt; If not NULL, indicates the type of a column in a ledger view:&lt;br /&gt;&lt;br /&gt; 1 = TRANSACTION_ID&lt;br /&gt; 2 = SEQUENCE_NUMBER&lt;br /&gt; 3 = OPERATION_TYPE&lt;br /&gt; 4 = OPERATION_TYPE_DESC&lt;br/&gt;&lt;br/&gt;For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_view_column_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br /&gt;&lt;br /&gt; If not NULL, contains a textual description of the the type of a column in a ledger view:&lt;br /&gt;&lt;br /&gt; TRANSACTION_ID&lt;br /&gt; SEQUENCE_NUMBER&lt;br /&gt; OPERATION_TYPE&lt;br /&gt; OPERATION_TYPE_DESC</column>
  </table>
  <table name="sys.computed_columns" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-computed-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.computed_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each column found in &lt;strong&gt;sys.columns&lt;/strong&gt; that is a computed-column.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Is unique within the object.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.&lt;br /&gt;&lt;br /&gt; Column IDs might not be sequential.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the column.</column>
    <column name="user_type_id" type="int">ID of the type of the column as defined by the user.&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of the column.&lt;br /&gt;&lt;br /&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For &lt;strong&gt;text&lt;/strong&gt;, &lt;strong&gt;ntext&lt;/strong&gt;, and &lt;strong&gt;image&lt;/strong&gt; columns, the max_length value will be 16 (representing the 16-byte pointer only) or the value set by sp_tableoption 'text in row'.</column>
    <column name="precision" type="tinyint">Precision of the column if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of column if numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the column if character-based; otherwise &lt;c&gt;NULL&lt;/c&gt;.</column>
    <column name="is_nullable" type="bit">1 = Column is nullable.</column>
    <column name="is_ansi_padded" type="bit">1 = Column uses ANSI_PADDING ON behavior if character, binary, or variant.&lt;br /&gt;&lt;br /&gt; 0 = Column is not character, binary, or variant.</column>
    <column name="is_rowguidcol" type="bit">1 = Column is a declared ROWGUIDCOL.</column>
    <column name="is_identity" type="bit">1 = Column has identity values</column>
    <column name="is_computed" type="bit">1 = Column is a computed column.</column>
    <column name="is_filestream" type="bit">1 = Column is a FILESTREAM column.</column>
    <column name="is_replicated" type="bit">1 = Column is replicated.</column>
    <column name="is_non_sql_subscribed" type="bit">1 = Column has a non-SQL Server subscriber.</column>
    <column name="is_merge_published" type="bit">1 = Column is merge-published.</column>
    <column name="is_dts_replicated" type="bit">1 = Column is replicated by using SSIS.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br /&gt;&lt;br /&gt; 0 = Content is a document fragment or the column data type is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="xml_collection_id" type="int">Nonzero if the data type of the column is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value will be the ID of the collection containing the validating XML schema namespace of the column.&lt;br /&gt;&lt;br /&gt; 0 = No XML schema collection.</column>
    <column name="default_object_id" type="int">ID of the default object, regardless of whether it is a stand-alone object &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-bindefault-transact-sql'&gt;sys.sp_bindefault&lt;/a&gt;, or an inline, column-level DEFAULT constraint. The parent_object_id column of an inline column-level default object is a reference back to the table itself.&lt;br /&gt;&lt;br /&gt; 0 = No default.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule bound to the column by using sys.sp_bindrule.&lt;br /&gt;&lt;br /&gt; 0 = No stand-alone rule. For column-level CHECK constraints, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-check-constraints-transact-sql'&gt;sys.check_constraints (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_sparse" type="bit">1 = Column is a sparse column. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/use-sparse-columns'&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="is_column_set" type="bit">1 = Column is a column set. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/use-sparse-columns'&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="generated_always_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database. 7, 8, 9, 10 only applies to SQL Database.&lt;br /&gt;&lt;br /&gt; Identifies when the column value is generated (will always be 0 for columns in system tables):&lt;br /&gt;&lt;br /&gt; 0 = NOT_APPLICABLE&lt;br /&gt; 1 = AS_ROW_START&lt;br /&gt; 2 = AS_ROW_END&lt;br /&gt;7 = AS_TRANSACTION_ID_START&lt;br /&gt;8 = AS_TRANSACTION_ID_END&lt;br /&gt;9 = AS_SEQUENCE_NUMBER_START&lt;br /&gt;10 = AS_SEQUENCE_NUMBER_END&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/temporal-tables'&gt;Temporal Tables (Relational databases)&lt;/a&gt;.</column>
    <column name="generated_always_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Textual description of &lt;c&gt;generated_always_type&lt;/c&gt;'s value (always NOT_APPLICABLE for columns in system tables) &lt;br /&gt;&lt;br /&gt; NOT_APPLICABLE&lt;br /&gt; AS_ROW_START&lt;br /&gt; AS_ROW_END&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database&lt;br /&gt;&lt;br /&gt;AS_TRANSACTION_ID_START&lt;br /&gt;AS_TRANSACTION_ID_END&lt;br /&gt;AS_SEQUENCE_NUMBER_START&lt;br /&gt;AS_SEQUENCE_NUMBER_END</column>
    <column name="encryption_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type:&lt;br /&gt;&lt;br /&gt; 1 = Deterministic encryption&lt;br /&gt;&lt;br /&gt; 2 = Randomized encryption</column>
    <column name="encryption_type_desc" type="nvarchar(64)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type description:&lt;br /&gt;&lt;br /&gt; RANDOMIZED&lt;br /&gt;&lt;br /&gt; DETERMINISTIC</column>
    <column name="encryption_algorithm_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Name of encryption algorithm.&lt;br /&gt;&lt;br /&gt; Only AEAD_AES_256_CBC_HMAC_SHA_512 is supported.</column>
    <column name="column_encryption_key_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; ID of the CEK.</column>
    <column name="column_encryption_key_database_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; The name of the database where the column encryption key exists if different than the database of the column. &lt;c&gt;NULL&lt;/c&gt; if the key exists in the same database as the column.</column>
    <column name="is_hidden" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Indicates if the column is hidden:&lt;br /&gt;&lt;br /&gt; 0 = regular, not-hidden, visible column&lt;br /&gt;&lt;br /&gt; 1 = hidden column</column>
    <column name="is_masked" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Indicates if the column is masked by a dynamic data masking:&lt;br /&gt;&lt;br /&gt; 0 = regular, not-masked column&lt;br /&gt;&lt;br /&gt; 1 = column is masked</column>
    <column name="graph_type" type="int">Internal column with a set of values. The values are between 1-8 for graph columns and &lt;c&gt;NULL&lt;/c&gt; for others.</column>
    <column name="graph_type_desc" type="nvarchar(60)">internal column with a set of values</column>
    <column name="is_data_deletion_filter_column" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database Edge. Indicates if the column is the data retention filter column for the table.</column>
    <column name="ledger_view_column_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br /&gt;&lt;br /&gt; If not NULL, indicates the type of a column in a ledger view:&lt;br /&gt;&lt;br /&gt; 1 = TRANSACTION_ID&lt;br /&gt; 2 = SEQUENCE_NUMBER&lt;br /&gt; 3 = OPERATION_TYPE&lt;br /&gt; 4 = OPERATION_TYPE_DESC&lt;br/&gt;&lt;br/&gt;For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_view_column_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br /&gt;&lt;br /&gt; If not NULL, contains a textual description of the the type of a column in a ledger view:&lt;br /&gt;&lt;br /&gt; TRANSACTION_ID&lt;br /&gt; SEQUENCE_NUMBER&lt;br /&gt; OPERATION_TYPE&lt;br /&gt; OPERATION_TYPE_DESC</column>
    <column name="definition" type="nvarchar(max)">SQL text that defines this computed-column.</column>
    <column name="uses_database_collation" type="bit">1 = The column definition depends on the default collation of the database for correct evaluation; otherwise, 0. Such a dependency prevents changing the database default collation.</column>
    <column name="is_persisted" type="bit">Computed column is persisted.</column>
  </table>
  <table name="sys.default_constraints" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-default-constraints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.default_constraints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each object that is a default definition (created as part of a CREATE TABLE or ALTER TABLE statement instead of a CREATE DEFAULT statement), with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = D.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="parent_column_id" type="int">ID of the column in &lt;strong&gt;parent_object_id&lt;/strong&gt; to which this default belongs.</column>
    <column name="definition" type="nvarchar(max)">SQL expression that defines this default.</column>
    <column name="is_system_named" type="bit">1 = Name was generated by system.&lt;br /&gt;&lt;br /&gt; 0 = Name was supplied by the user.</column>
  </table>
  <table name="sys.events" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-events-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.events (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row for each event for which a trigger or event notification fires. These events represent the event types that are specified when the trigger or event notification is created by using &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-trigger-transact-sql'&gt;CREATE TRIGGER&lt;/a&gt; or &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-event-notification-transact-sql'&gt;CREATE EVENT NOTIFICATION&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the trigger or event notification. This value, together with &lt;strong&gt;type&lt;/strong&gt;, uniquely identifies the row.</column>
    <column name="type" type="int">Event that causes the trigger to fire.</column>
    <column name="type_desc" type="nvarchar(60)">Description of the event that causes the trigger to fire.</column>
    <column name="is_trigger_event" type="bit">1 = Trigger event.&lt;br /&gt;&lt;br /&gt; 0 = Notification event.</column>
    <column name="event_group_type" type="int">Event group on which the trigger or event notification is created, or null if not created on an event group.</column>
    <column name="event_group_type_desc" type="nvarchar(60)">Description of the event group on which the trigger or event notification is created, or null if not created on an event group.</column>
  </table>
  <table name="sys.event_notifications" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-notifications-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.event_notifications (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns a row for each object that is an event notification, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = EN.&lt;/para&gt;</description>
    <column name="name" type="sysname">Event notification name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="parent_class" type="tinyint">Class of parent.&lt;br /&gt;&lt;br /&gt; 0 = Database&lt;br /&gt;&lt;br /&gt; 1 = Object or Column</column>
    <column name="parent_class_desc" type="nvarchar(60)">DATABASE&lt;br /&gt;&lt;br /&gt; OBJECT_OR_COLUMN</column>
    <column name="parent_id" type="int">Non-zero ID of the parent object.&lt;br /&gt;&lt;br /&gt; 0 = The parent class is the database.</column>
    <column name="create_date" type="datetime">Date created.</column>
    <column name="modify_date" type="datetime">Always equals &lt;strong&gt;create_date&lt;/strong&gt;.</column>
    <column name="service_name" type="nvarchar(256)">Name of the target service to which the notification is sent.</column>
    <column name="broker_instance" type="nvarchar(128)">Broker instance to which the notification is sent.</column>
    <column name="principal_id" type="int">ID of the database principal that owns this event notification.</column>
    <column name="creator_sid" type="varbinary(85)">SID of the login who created the event notification.&lt;br /&gt;&lt;br /&gt; Is NULL if the FAN_IN option is not specified.</column>
  </table>
  <table name="sys.event_notification_event_types" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-event-notification-event-types-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.event_notification_event_types (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns a row for each event or event group on which an event notification can fire.&lt;/para&gt;</description>
    <column name="type" type="int">Type of event or event group that causes an event notification to fire.</column>
    <column name="type_name" type="nvarchar(128)">Name of an event or event group. This can be specified in the FOR clause of a &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-event-notification-transact-sql'&gt;CREATE EVENT NOTIFICATION&lt;/a&gt; statement.</column>
    <column name="parent_type" type="int">Type of event group that is the parent of the event or event group.</column>
  </table>
  <table name="sys.extended_procedures" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-extended-procedures-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.extended_procedures (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each object that is an extended stored procedure, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = X. Because extended stored procedures are installed into the &lt;strong&gt;master&lt;/strong&gt; database, they are only visible from that database context. Selecting from the &lt;strong&gt;sys.extended_procedures&lt;/strong&gt; view in any other database context will return an empty result set.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="dll_name" type="nvarchar(260)">Name, including path, of the DLL for this extended stored procedure.</column>
  </table>
  <table name="sys.external_language_files" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-language-files-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.external_language_files (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2019 (15.x)&lt;/para&gt;
&lt;para&gt;This catalog view provides a list of the external language extension files in the database. &lt;strong&gt;R&lt;/strong&gt; and &lt;strong&gt;Python&lt;/strong&gt; are reserved names and no external language can be created with those specific names.&lt;br/&gt;
When an external language is created from a file_spec, the extension itself and its properties are listed in this view. This view will contain one entry per language, per OS.&lt;br/&gt;
## sys.external_language_files&lt;br/&gt;
The catalog view sys.external_language_files lists a row for each external language extension in the database. Parameters&lt;/para&gt;</description>
    <column name="external_language_id" type="int ">ID of the external language</column>
    <column name="content" type="varbinary(max) ">Content of the external language extension file</column>
    <column name="file_name" type="sysname">Name of the language extension file</column>
    <column name="platform" type="tinyint">ID of the host platform on which SQL Server is installed</column>
    <column name="platform_desc" type="nvarchar(60)">Name of the host platform. Valid values are &lt;c&gt;WINDOWS&lt;/c&gt;, &lt;c&gt;LINUX&lt;/c&gt;.</column>
    <column name="parameters" type="sysname">External language parameters</column>
    <column name="environment_variables" type="sysname">External language environment variables</column>
  </table>
  <table name="sys.external_languages" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-languages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.external_languages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2019 (15.x)&lt;/para&gt;
&lt;para&gt;This catalog view provides a list of the external languages in the database. &lt;strong&gt;R&lt;/strong&gt; and &lt;strong&gt;Python&lt;/strong&gt; are reserved names and no external language can be created with those specific names.&lt;br/&gt;
## sys.external_languages&lt;br/&gt;
The catalog view sys.external_languages lists a row for each external language in the database.&lt;/para&gt;</description>
    <column name="external_language_id" type="int ">ID of the external language</column>
    <column name="language" type="sysname ">Name of the external language. Is unique within the database. R and Python are reserved names per instance</column>
    <column name="create_date" type="datetime2 ">Date and time of creation</column>
    <column name="principal_id" type="int ">ID of the principal that owns this external library</column>
  </table>
  <table name="sys.external_libraries" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-libraries-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.external_libraries (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2017 (14.x) and later √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Supports the management of package libraries related to external runtimes such as R, Python, and Java.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
In SQL Server 2017, R language and Windows platform are supported. R, Python, and Java on the Windows and Linux platforms are supported in SQL Server 2019 and later. On Azure SQL Managed Instance, R and Python are supported.&lt;br/&gt;
&lt;/note&gt;&lt;br/&gt;
## sys.external_libraries&lt;br/&gt;
The catalog view sys.external_libraries lists a row for each external library that has been uploaded into the database.&lt;/para&gt;</description>
    <column name="external_library_id" type="int ">ID of the external library object.</column>
    <column name="name" type="sysname ">Name of the external library. Is unique within the database per owner.</column>
    <column name="principal_id" type="int ">ID of the principal that owns this external library.</column>
    <column name="language" type="sysname ">Name of the language or runtime that supports the external library. Valid values are 'R', 'Python', and 'Java'. Additional runtimes might be added in future.</column>
    <column name="scope" type="int ">0 for public scope; 1 for private scope</column>
    <column name="scope_desc" type="varchar(7) ">Indicates whether the package is public or private</column>
  </table>
  <table name="sys.external_library_files" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-external-library-files-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.external_library_files (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2017 (14.x) and later √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Lists a row for each file that makes up an external library.&lt;/para&gt;</description>
    <column name="external_library_id" type="int ">ID of the external library object.</column>
    <column name="content" type="varbinary(max) ">Content of the external library file artifact.</column>
    <column name="platform" type="tinyint ">ID of the host platform on which SQL Server is installed.</column>
    <column name="platform_desc" type="nvarchar(60) ">Name of the host platform. Valid values are &lt;c&gt;WINDOWS&lt;/c&gt;, &lt;c&gt;LINUX&lt;/c&gt;.</column>
  </table>
  <table name="sys.foreign_keys" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-foreign-keys-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.foreign_keys (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row per object that is a FOREIGN KEY constraint, with &lt;strong&gt;sys.object.type&lt;/strong&gt; = F.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="referenced_object_id" type="int">ID of the referenced object.</column>
    <column name="key_index_id" type="int">ID of the key index within the referenced object.</column>
    <column name="is_disabled" type="bit">FOREIGN KEY constraint is disabled.</column>
    <column name="is_not_for_replication" type="bit">FOREIGN KEY constraint was created by using the NOT FOR REPLICATION option.</column>
    <column name="is_not_trusted" type="bit">FOREIGN KEY constraint has not been verified by the system.</column>
    <column name="delete_referential_action" type="tinyint">The referential action that was declared for this FOREIGN KEY when a delete happens.&lt;br /&gt;&lt;br /&gt; 0 = No action&lt;br /&gt;&lt;br /&gt; 1 = Cascade&lt;br /&gt;&lt;br /&gt; 2 = Set null&lt;br /&gt;&lt;br /&gt; 3 = Set default</column>
    <column name="delete_referential_action_desc" type="nvarchar(60)">Description of the referential action that was declared for this FOREIGN KEY when a delete occurs:&lt;br /&gt;&lt;br /&gt; NO_ACTION&lt;br /&gt;&lt;br /&gt; CASCADE&lt;br /&gt;&lt;br /&gt; SET_NULL&lt;br /&gt;&lt;br /&gt; SET_DEFAULT</column>
    <column name="update_referential_action" type="tinyint">The referential action that was declared for this FOREIGN KEY when an update happens.&lt;br /&gt;&lt;br /&gt; 0 = No action&lt;br /&gt;&lt;br /&gt; 1 = Cascade&lt;br /&gt;&lt;br /&gt; 2 = Set null&lt;br /&gt;&lt;br /&gt; 3 = Set default</column>
    <column name="update_referential_action_desc" type="nvarchar(60)">Description of the referential action that was declared for this FOREIGN KEY when an update happens:&lt;br /&gt;&lt;br /&gt; NO_ACTION&lt;br /&gt;&lt;br /&gt; CASCADE&lt;br /&gt;&lt;br /&gt; SET_NULL&lt;br /&gt;&lt;br /&gt; SET_DEFAULT</column>
    <column name="is_system_named" type="bit">1 = Name was generated by the system.&lt;br /&gt;&lt;br /&gt; 0 = Name was supplied by the user.</column>
  </table>
  <table name="sys.foreign_key_columns" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-foreign-key-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.foreign_key_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each column, or set of columns, that comprise a foreign key.&lt;/para&gt;</description>
    <column name="constraint_object_id" type="int">ID of the FOREIGN KEY constraint.</column>
    <column name="constraint_column_id" type="int">ID of the column, or set of columns, that comprise the FOREIGN KEY (*1..n* where n=number of columns).</column>
    <column name="parent_object_id" type="int">ID of the parent of the constraint, which is the referencing object.</column>
    <column name="parent_column_id" type="int">ID of the parent column, which is the referencing column.</column>
    <column name="referenced_object_id" type="int">ID of the referenced object, which has the candidate key.</column>
    <column name="referenced_column_id" type="int">ID of the referenced column (candidate key column).</column>
  </table>
  <table name="sys.function_order_columns" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-function-order-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.function_order_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns one row per column that is a part of an &lt;strong&gt;ORDER&lt;/strong&gt; expression of a common language runtime (CLR) table-valued function.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object (CLR table-valued function) the order is defined on.</column>
    <column name="order_column_id" type="int">ID of the order column. &lt;strong&gt;order_column_id&lt;/strong&gt; is unique only within &lt;strong&gt;object_id&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;order_column_id&lt;/strong&gt; represents the position of this column in the ordering.</column>
    <column name="column_id" type="int">ID of the column in &lt;strong&gt;object_id&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;column_id&lt;/strong&gt; is unique only within &lt;strong&gt;object_id&lt;/strong&gt;.</column>
    <column name="is_descending" type="bit">1 = order column has a descending sort direction.&lt;br /&gt;&lt;br /&gt; 0 = order column has an ascending sort direction.</column>
  </table>
  <table name="sys.hash_indexes" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-hash-indexes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.hash_indexes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Shows the current hash indexes and the hash index properties. Hash indexes are supported only on &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/overview-and-usage-scenarios'&gt;In-Memory OLTP (In-Memory Optimization)&lt;/a&gt;.&lt;br/&gt;
 The sys.hash_indexes view contains the same columns as the sys.indexes view and an additional column named &lt;strong&gt;bucket_count&lt;/strong&gt;. For more information about the other columns in the sys.hash_indexes view, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql'&gt;sys.indexes (Transact-SQL)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this index belongs.</column>
    <column name="name" type="sysname">Name of the index. &lt;strong&gt;name&lt;/strong&gt; is unique only within the object.&lt;br /&gt;&lt;br /&gt; NULL = Heap</column>
    <column name="index_id" type="int">ID of the index. &lt;strong&gt;index_id&lt;/strong&gt; is unique only within the object.&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered index&lt;br /&gt;&lt;br /&gt; &gt; 1 = Nonclustered index</column>
    <column name="type" type="tinyint">Type of index:&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered rowstore (b-tree)&lt;br /&gt;&lt;br /&gt; 2 = Nonclustered rowstore (b-tree)&lt;br /&gt;&lt;br /&gt; 3 = XML&lt;br /&gt;&lt;br /&gt; 4 = Spatial&lt;br /&gt;&lt;br /&gt; 5 = Clustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; 6 = Nonclustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; 7 = Nonclustered hash index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="type_desc" type="nvarchar(60)">Description of index type:&lt;br /&gt;&lt;br /&gt; HEAP&lt;br /&gt;&lt;br /&gt; CLUSTERED&lt;br /&gt;&lt;br /&gt; NONCLUSTERED&lt;br /&gt;&lt;br /&gt; XML&lt;br /&gt;&lt;br /&gt; SPATIAL&lt;br /&gt;&lt;br /&gt; CLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; NONCLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; NONCLUSTERED HASH : NONCLUSTERED HASH indexes are supported only on memory-optimized tables. The sys.hash_indexes view shows the current hash indexes and the hash properties. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-hash-indexes-transact-sql'&gt;sys.hash_indexes (Transact-SQL)&lt;/a&gt;. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="is_unique" type="bit">1 = Index is unique.&lt;br /&gt;&lt;br /&gt; 0 = Index is not unique.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="data_space_id" type="int">ID of the data space for this index. Data space is either a filegroup or partition scheme.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;object_id&lt;/strong&gt; is a table-valued function or in-memory index.</column>
    <column name="ignore_dup_key" type="bit">1 = IGNORE_DUP_KEY is ON.&lt;br /&gt;&lt;br /&gt; 0 = IGNORE_DUP_KEY is OFF.</column>
    <column name="is_primary_key" type="bit">1 = Index is part of a PRIMARY KEY constraint.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_unique_constraint" type="bit">1 = Index is part of a UNIQUE constraint.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="fill_factor" type="tinyint">&gt; 0 = FILLFACTOR percentage used when the index was created or rebuilt.&lt;br /&gt;&lt;br /&gt; 0 = Default value&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_padded" type="bit">1 = PADINDEX is ON.&lt;br /&gt;&lt;br /&gt; 0 = PADINDEX is OFF.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_disabled" type="bit">1 = Index is disabled.&lt;br /&gt;&lt;br /&gt; 0 = Index is not disabled.</column>
    <column name="is_hypothetical" type="bit">1 = Index is hypothetical and cannot be used directly as a data access path. Hypothetical indexes hold column-level statistics.&lt;br /&gt;&lt;br /&gt; 0 = Index is not hypothetical.</column>
    <column name="allow_row_locks" type="bit">1 = Index allows row locks.&lt;br /&gt;&lt;br /&gt; 0 = Index does not allow row locks.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="allow_page_locks" type="bit">1 = Index allows page locks.&lt;br /&gt;&lt;br /&gt; 0 = Index does not allow page locks.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="has_filter" type="bit">1 = Index has a filter and only contains rows that satisfy the filter definition.&lt;br /&gt;&lt;br /&gt; 0 = Index does not have a filter.</column>
    <column name="filter_definition" type="nvarchar(max)">Expression for the subset of rows included in the filtered index.&lt;br /&gt;&lt;br /&gt; NULL for heap, non-filtered index, or insufficient permissions on the table.</column>
    <column name="compression_delay" type="int">&gt; 0 = Columnstore index compression delay specified in minutes.&lt;br /&gt;&lt;br /&gt; NULL = Columnstore index rowgroup compression delay is managed automatically.</column>
    <column name="suppress_dup_key_messages" type="bit">1 = Index is configured to suppress duplicate key messages during an index rebuild operation.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;0&lt;/strong&gt; = Index is not configured to suppress duplicate key messages during an index rebuild operation.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
    <column name="auto_created" type="bit">1 = Index was created by the automatic tuning.&lt;br /&gt;&lt;br /&gt;0 = Index was created by the user.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database</column>
    <column name="optimize_for_sequential_key" type="bit">1 = Index has last-page insert optimization enabled.&lt;br/&gt;&lt;br/&gt;0 = Default value. Index has last-page insert optimization disabled.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2019 (15.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
    <column name="bucket_count" type="int">Count of hash buckets for hash indexes.&lt;br /&gt;&lt;br /&gt; For more information about the bucket_count value, including guidelines for setting the value, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-table-transact-sql'&gt;CREATE TABLE (Transact-SQL)&lt;/a&gt;.</column>
  </table>
  <table name="sys.identity_columns" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-identity-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.identity_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each column that is an identity column.&lt;br/&gt;
 The &lt;strong&gt;sys.identity_columns&lt;/strong&gt; view inherits rows from the &lt;strong&gt;sys.columns&lt;/strong&gt; view. The &lt;strong&gt;sys.identity_columns&lt;/strong&gt; view returns the columns in the &lt;strong&gt;sys.columns&lt;/strong&gt; view, plus the &lt;strong&gt;seed_value&lt;/strong&gt;, &lt;strong&gt;increment_value&lt;/strong&gt;, &lt;strong&gt;last_value&lt;/strong&gt;, and &lt;strong&gt;is_not_for_replication&lt;/strong&gt; columns. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/catalog-views-transact-sql'&gt;Catalog Views (Transact-SQL)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Is unique within the object.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.&lt;br /&gt;&lt;br /&gt; Column IDs might not be sequential.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the column.</column>
    <column name="user_type_id" type="int">ID of the type of the column as defined by the user.&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of the column.&lt;br /&gt;&lt;br /&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For &lt;strong&gt;text&lt;/strong&gt;, &lt;strong&gt;ntext&lt;/strong&gt;, and &lt;strong&gt;image&lt;/strong&gt; columns, the max_length value will be 16 (representing the 16-byte pointer only) or the value set by sp_tableoption 'text in row'.</column>
    <column name="precision" type="tinyint">Precision of the column if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of column if numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the column if character-based; otherwise &lt;c&gt;NULL&lt;/c&gt;.</column>
    <column name="is_nullable" type="bit">1 = Column is nullable.</column>
    <column name="is_ansi_padded" type="bit">1 = Column uses ANSI_PADDING ON behavior if character, binary, or variant.&lt;br /&gt;&lt;br /&gt; 0 = Column is not character, binary, or variant.</column>
    <column name="is_rowguidcol" type="bit">1 = Column is a declared ROWGUIDCOL.</column>
    <column name="is_identity" type="bit">1 = Column has identity values</column>
    <column name="is_computed" type="bit">1 = Column is a computed column.</column>
    <column name="is_filestream" type="bit">1 = Column is a FILESTREAM column.</column>
    <column name="is_replicated" type="bit">1 = Column is replicated.</column>
    <column name="is_non_sql_subscribed" type="bit">1 = Column has a non-SQL Server subscriber.</column>
    <column name="is_merge_published" type="bit">1 = Column is merge-published.</column>
    <column name="is_dts_replicated" type="bit">1 = Column is replicated by using SSIS.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br /&gt;&lt;br /&gt; 0 = Content is a document fragment or the column data type is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="xml_collection_id" type="int">Nonzero if the data type of the column is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value will be the ID of the collection containing the validating XML schema namespace of the column.&lt;br /&gt;&lt;br /&gt; 0 = No XML schema collection.</column>
    <column name="default_object_id" type="int">ID of the default object, regardless of whether it is a stand-alone object &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-bindefault-transact-sql'&gt;sys.sp_bindefault&lt;/a&gt;, or an inline, column-level DEFAULT constraint. The parent_object_id column of an inline column-level default object is a reference back to the table itself.&lt;br /&gt;&lt;br /&gt; 0 = No default.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule bound to the column by using sys.sp_bindrule.&lt;br /&gt;&lt;br /&gt; 0 = No stand-alone rule. For column-level CHECK constraints, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-check-constraints-transact-sql'&gt;sys.check_constraints (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_sparse" type="bit">1 = Column is a sparse column. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/use-sparse-columns'&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="is_column_set" type="bit">1 = Column is a column set. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/use-sparse-columns'&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="generated_always_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database. 7, 8, 9, 10 only applies to SQL Database.&lt;br /&gt;&lt;br /&gt; Identifies when the column value is generated (will always be 0 for columns in system tables):&lt;br /&gt;&lt;br /&gt; 0 = NOT_APPLICABLE&lt;br /&gt; 1 = AS_ROW_START&lt;br /&gt; 2 = AS_ROW_END&lt;br /&gt;7 = AS_TRANSACTION_ID_START&lt;br /&gt;8 = AS_TRANSACTION_ID_END&lt;br /&gt;9 = AS_SEQUENCE_NUMBER_START&lt;br /&gt;10 = AS_SEQUENCE_NUMBER_END&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/temporal-tables'&gt;Temporal Tables (Relational databases)&lt;/a&gt;.</column>
    <column name="generated_always_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Textual description of &lt;c&gt;generated_always_type&lt;/c&gt;'s value (always NOT_APPLICABLE for columns in system tables) &lt;br /&gt;&lt;br /&gt; NOT_APPLICABLE&lt;br /&gt; AS_ROW_START&lt;br /&gt; AS_ROW_END&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database&lt;br /&gt;&lt;br /&gt;AS_TRANSACTION_ID_START&lt;br /&gt;AS_TRANSACTION_ID_END&lt;br /&gt;AS_SEQUENCE_NUMBER_START&lt;br /&gt;AS_SEQUENCE_NUMBER_END</column>
    <column name="encryption_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type:&lt;br /&gt;&lt;br /&gt; 1 = Deterministic encryption&lt;br /&gt;&lt;br /&gt; 2 = Randomized encryption</column>
    <column name="encryption_type_desc" type="nvarchar(64)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type description:&lt;br /&gt;&lt;br /&gt; RANDOMIZED&lt;br /&gt;&lt;br /&gt; DETERMINISTIC</column>
    <column name="encryption_algorithm_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Name of encryption algorithm.&lt;br /&gt;&lt;br /&gt; Only AEAD_AES_256_CBC_HMAC_SHA_512 is supported.</column>
    <column name="column_encryption_key_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; ID of the CEK.</column>
    <column name="column_encryption_key_database_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; The name of the database where the column encryption key exists if different than the database of the column. &lt;c&gt;NULL&lt;/c&gt; if the key exists in the same database as the column.</column>
    <column name="is_hidden" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Indicates if the column is hidden:&lt;br /&gt;&lt;br /&gt; 0 = regular, not-hidden, visible column&lt;br /&gt;&lt;br /&gt; 1 = hidden column</column>
    <column name="is_masked" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Indicates if the column is masked by a dynamic data masking:&lt;br /&gt;&lt;br /&gt; 0 = regular, not-masked column&lt;br /&gt;&lt;br /&gt; 1 = column is masked</column>
    <column name="graph_type" type="int">Internal column with a set of values. The values are between 1-8 for graph columns and &lt;c&gt;NULL&lt;/c&gt; for others.</column>
    <column name="graph_type_desc" type="nvarchar(60)">internal column with a set of values</column>
    <column name="is_data_deletion_filter_column" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database Edge. Indicates if the column is the data retention filter column for the table.</column>
    <column name="ledger_view_column_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br /&gt;&lt;br /&gt; If not NULL, indicates the type of a column in a ledger view:&lt;br /&gt;&lt;br /&gt; 1 = TRANSACTION_ID&lt;br /&gt; 2 = SEQUENCE_NUMBER&lt;br /&gt; 3 = OPERATION_TYPE&lt;br /&gt; 4 = OPERATION_TYPE_DESC&lt;br/&gt;&lt;br/&gt;For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_view_column_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br /&gt;&lt;br /&gt; If not NULL, contains a textual description of the the type of a column in a ledger view:&lt;br /&gt;&lt;br /&gt; TRANSACTION_ID&lt;br /&gt; SEQUENCE_NUMBER&lt;br /&gt; OPERATION_TYPE&lt;br /&gt; OPERATION_TYPE_DESC</column>
    <column name="seed_value" type="sql_variant">Seed value for this identity column. The data type of the seed value is the same as the data type of the column itself.</column>
    <column name="increment_value" type="sql_variant">Increment value for this identity column. The data type of the seed value is the same as the data type of the column itself.</column>
    <column name="last_value" type="sql_variant">Last value generated for this identity column. The data type of the seed value is the same as the data type of the column itself.</column>
    <column name="is_not_for_replication" type="bit">Identity column is declared NOT FOR REPLICATION. &lt;strong&gt;Note:&lt;/strong&gt; This column does not apply to Azure Synapse Analytics.</column>
  </table>
  <table name="sys.indexes" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.indexes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row per index or heap of a tabular object, such as a table, view, or table-valued function.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this index belongs.</column>
    <column name="name" type="sysname">Name of the index. &lt;strong&gt;name&lt;/strong&gt; is unique only within the object.&lt;br /&gt;&lt;br /&gt; NULL = Heap</column>
    <column name="index_id" type="int">ID of the index. &lt;strong&gt;index_id&lt;/strong&gt; is unique only within the object.&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered index&lt;br /&gt;&lt;br /&gt; &gt; 1 = Nonclustered index</column>
    <column name="type" type="tinyint">Type of index:&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered rowstore (b-tree)&lt;br /&gt;&lt;br /&gt; 2 = Nonclustered rowstore (b-tree)&lt;br /&gt;&lt;br /&gt; 3 = XML&lt;br /&gt;&lt;br /&gt; 4 = Spatial&lt;br /&gt;&lt;br /&gt; 5 = Clustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; 6 = Nonclustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; 7 = Nonclustered hash index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="type_desc" type="nvarchar(60)">Description of index type:&lt;br /&gt;&lt;br /&gt; HEAP&lt;br /&gt;&lt;br /&gt; CLUSTERED&lt;br /&gt;&lt;br /&gt; NONCLUSTERED&lt;br /&gt;&lt;br /&gt; XML&lt;br /&gt;&lt;br /&gt; SPATIAL&lt;br /&gt;&lt;br /&gt; CLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; NONCLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; NONCLUSTERED HASH : NONCLUSTERED HASH indexes are supported only on memory-optimized tables. The sys.hash_indexes view shows the current hash indexes and the hash properties. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-hash-indexes-transact-sql'&gt;sys.hash_indexes (Transact-SQL)&lt;/a&gt;. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="is_unique" type="bit">1 = Index is unique.&lt;br /&gt;&lt;br /&gt; 0 = Index is not unique.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="data_space_id" type="int">ID of the data space for this index. Data space is either a filegroup or partition scheme.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;object_id&lt;/strong&gt; is a table-valued function or in-memory index.</column>
    <column name="ignore_dup_key" type="bit">1 = IGNORE_DUP_KEY is ON.&lt;br /&gt;&lt;br /&gt; 0 = IGNORE_DUP_KEY is OFF.</column>
    <column name="is_primary_key" type="bit">1 = Index is part of a PRIMARY KEY constraint.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_unique_constraint" type="bit">1 = Index is part of a UNIQUE constraint.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="fill_factor" type="tinyint">&gt; 0 = FILLFACTOR percentage used when the index was created or rebuilt.&lt;br /&gt;&lt;br /&gt; 0 = Default value&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_padded" type="bit">1 = PADINDEX is ON.&lt;br /&gt;&lt;br /&gt; 0 = PADINDEX is OFF.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_disabled" type="bit">1 = Index is disabled.&lt;br /&gt;&lt;br /&gt; 0 = Index is not disabled.</column>
    <column name="is_hypothetical" type="bit">1 = Index is hypothetical and cannot be used directly as a data access path. Hypothetical indexes hold column-level statistics.&lt;br /&gt;&lt;br /&gt; 0 = Index is not hypothetical.</column>
    <column name="allow_row_locks" type="bit">1 = Index allows row locks.&lt;br /&gt;&lt;br /&gt; 0 = Index does not allow row locks.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="allow_page_locks" type="bit">1 = Index allows page locks.&lt;br /&gt;&lt;br /&gt; 0 = Index does not allow page locks.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="has_filter" type="bit">1 = Index has a filter and only contains rows that satisfy the filter definition.&lt;br /&gt;&lt;br /&gt; 0 = Index does not have a filter.</column>
    <column name="filter_definition" type="nvarchar(max)">Expression for the subset of rows included in the filtered index.&lt;br /&gt;&lt;br /&gt; NULL for heap, non-filtered index, or insufficient permissions on the table.</column>
    <column name="compression_delay" type="int">&gt; 0 = Columnstore index compression delay specified in minutes.&lt;br /&gt;&lt;br /&gt; NULL = Columnstore index rowgroup compression delay is managed automatically.</column>
    <column name="suppress_dup_key_messages" type="bit">1 = Index is configured to suppress duplicate key messages during an index rebuild operation.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;0&lt;/strong&gt; = Index is not configured to suppress duplicate key messages during an index rebuild operation.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
    <column name="auto_created" type="bit">1 = Index was created by the automatic tuning.&lt;br /&gt;&lt;br /&gt;0 = Index was created by the user.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database</column>
    <column name="optimize_for_sequential_key" type="bit">1 = Index has last-page insert optimization enabled.&lt;br/&gt;&lt;br/&gt;0 = Default value. Index has last-page insert optimization disabled.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2019 (15.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
  </table>
  <table name="sys.index_columns" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-index-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.index_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains one row per column that is part of a &lt;strong&gt;sys.indexes&lt;/strong&gt; index or unordered table (heap).&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object the index is defined on.</column>
    <column name="index_id" type="int">ID of the index in which the column is defined.</column>
    <column name="index_column_id" type="int">ID of the index column. &lt;strong&gt;index_column_id&lt;/strong&gt; is unique only within &lt;strong&gt;index_id&lt;/strong&gt;.</column>
    <column name="column_id" type="int">ID of the column in &lt;strong&gt;object_id&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = Row Identifier (RID) in a nonclustered index.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;column_id&lt;/strong&gt; is unique only within &lt;strong&gt;object_id&lt;/strong&gt;.</column>
    <column name="key_ordinal" type="tinyint">Ordinal (1-based) within set of key-columns.&lt;br /&gt;&lt;br /&gt; 0 = Not a key column, or is an XML index, a columnstore index, or a spatial index.&lt;br /&gt;&lt;br /&gt; Note: An XML or spatial index cannot be a key because the underlying columns are not comparable, meaning that their values cannot be ordered.</column>
    <column name="partition_ordinal" type="tinyint">Ordinal (1-based) within set of partitioning columns. A clustered columnstore index can have at most 1 partitioning column.&lt;br /&gt;&lt;br /&gt; 0 = Not a partitioning column.</column>
    <column name="is_descending_key" type="bit">1 = Index key column has a descending sort direction.&lt;br /&gt;&lt;br /&gt; 0 = Index key column has an ascending sort direction, or the column is part of a columnstore or hash index.</column>
    <column name="is_included_column" type="bit">1 = Column is a nonkey column added to the index by using the CREATE INDEX INCLUDE clause, or the column is part of a columnstore index.&lt;br /&gt;&lt;br /&gt; 0 = Column is not an included column.&lt;br /&gt;&lt;br /&gt; Columns implicitly added because they are part of the clustering key are not listed in &lt;strong&gt;sys.index_columns&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; Columns implicitly added because they are a partitioning column are returned as 0.</column>
    <column name="column_store_order_ordinal" type="tinyint">Ordinal (1-based) within set of order columns in an ordered clustered columnstore index.</column>
  </table>
  <table name="sys.index_resumable_operations" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-index-resumable-operations">
    <description>&lt;para&gt;&lt;strong&gt;sys.index_resumable_operations (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2017 (14.x) and later  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;sys.index_resumable_operations&lt;/strong&gt; is a system view that monitors and checks the current execution status for resumable Index rebuild or creation.&lt;br/&gt;
&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (2017 and newer), and Azure SQL Database&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this index belongs (not nullable).</column>
    <column name="index_id" type="int">ID of the index (not nullable). &lt;strong&gt;index_id&lt;/strong&gt; is unique only within the object.</column>
    <column name="name" type="sysname">Name of the index. &lt;strong&gt;name&lt;/strong&gt; is unique only within the object.</column>
    <column name="sql_text" type="nvarchar(max)">DDL T-SQL statement text</column>
    <column name="last_max_dop" type="smallint">Last MAX_DOP used (default = 0)</column>
    <column name="partition_number" type="int">Partition number within the owning index or heap. For non-partitioned tables and indexes or in case all partitions are being rebuild the value of this column is NULL.</column>
    <column name="state" type="tinyint">Operational state for resumable index:&lt;br /&gt;&lt;br /&gt;0=Running&lt;br /&gt;&lt;br /&gt;1=Pause</column>
    <column name="state_desc" type="nvarchar(60)">Description of the operational state for resumable index (running or Paused)</column>
    <column name="start_time" type="datetime">Index operation start time (not nullable)</column>
    <column name="last_pause_time" type="datatime">Index operation last pause time (nullable). NULL if operation is running and never paused.</column>
    <column name="total_execution_time" type="int">Total execution time from start time in minutes (not nullable)</column>
    <column name="percent_complete" type="real">Index operation progress completion in % ( not nullable).</column>
    <column name="page_count" type="bigint">Total number of index pages allocated by the index build operation for the new and mapping indexes ( not nullable ).</column>
  </table>
  <table name="sys.internal_partitions" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-internal-partitions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.internal_partitions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns one row for each rowset that tracks internal data for columnstore indexes on disk-based tables. These rowsets are internal to columnstore indexes and track deleted rows, rowgroup mappings, and delta store rowgroups. They track data for each for each table partition; every table has at least one partition. SQL Server re-creates the rowsets each time it rebuilds the columnstore index.&lt;/para&gt;</description>
    <column name="partition_id" type="bigint">Partition ID for this partition. This is unique within a database.</column>
    <column name="object_id" type="int">Object ID for the table that contains the partition.</column>
    <column name="index_id" type="int">Index ID for the columnstore index defined on the table.&lt;br /&gt;&lt;br /&gt; 1 = clustered columnstore index&lt;br /&gt;&lt;br /&gt; 2 = nonclustered columnstore index</column>
    <column name="partition_number" type="int">The partition number.&lt;br /&gt;&lt;br /&gt; 1 = first partition of a partitioned table, or the single partition of a nonpartitioned table.&lt;br /&gt;&lt;br /&gt; 2 = second partition, and so on.</column>
    <column name="internal_object_type" type="tinyint">Rowset objects that track internal data for the columnstore index.&lt;br /&gt;&lt;br /&gt; 2 = COLUMN_STORE_DELETE_BITMAP&lt;br /&gt;&lt;br /&gt; 3 = COLUMN_STORE_DELTA_STORE&lt;br /&gt;&lt;br /&gt; 4 = COLUMN_STORE_DELETE_BUFFER&lt;br /&gt;&lt;br /&gt; 5 = COLUMN_STORE_MAPPING_INDEX</column>
    <column name="internal_object_type_desc" type="nvarchar(60)">COLUMN_STORE_DELETE_BITMAP - This bitmap index tracks rows that are marked as deleted from the columnstore. The bitmap is for every rowgroup since partitions can have rows in multiple rowgroups. The rows are that are still physically present and taking up space in the columnstore.&lt;br /&gt;&lt;br /&gt; COLUMN_STORE_DELTA_STORE - Stores groups of rows, called rowgroups, that have not been compressed into columnar storage. Each table partition can have zero or more deltastore rowgroups.&lt;br /&gt;&lt;br /&gt; COLUMN_STORE_DELETE_BUFFER - For maintaining deletes to updateable nonclustered columnstore indexes. When a query deletes a row from the underlying rowstore table, the delete buffer tracks the deletion from the columnstore. When the number of deleted rows exceed 1048576, they are merged back into the delete bitmap by background Tuple Mover thread or by an explicit Reorganize command.  At any given point in time, the union of the delete bitmap and the delete buffer represents all deleted rows.&lt;br /&gt;&lt;br /&gt; COLUMN_STORE_MAPPING_INDEX - Used only when the clustered columnstore index has a secondary nonclustered index. This maps nonclustered index keys to the correct rowgroup and row ID in the columnstore. It only stores keys for rows that move to a different rowgroup; this occurs when a delta rowgroup is compressed into the columnstore, and when a merge operation merges rows from two different rowgroups.</column>
    <column name="Row_group_id" type="int">ID for the deltastore rowgroup. Each table partition can have zero or more deltastore rowgroups.</column>
    <column name="hobt_id" type="bigint">ID of the internal rowset object (HoBT). This is a good key for joining with other DMVs to get more information about the physical characteristics of the internal rowset.</column>
    <column name="rows" type="bigint">Approximate number of rows in this partition.</column>
    <column name="data_compression" type="tinyint">The state of compression for the rowset:&lt;br /&gt;&lt;br /&gt; 0 = NONE&lt;br /&gt;&lt;br /&gt; 1 = ROW&lt;br /&gt;&lt;br /&gt; 2 = PAGE</column>
    <column name="data_compression_desc" type="nvarchar(60)">The state of compression for each partition. Possible values for rowstore tables are NONE, ROW, and PAGE. Possible values for columnstore tables are COLUMNSTORE and COLUMNSTORE_ARCHIVE.</column>
    <column name="optimize_for_sequential_key" type="bit">1 = Partition has last-page insert optimization enabled.&lt;br/&gt;&lt;br/&gt;0 = Default value. Partition has last-page insert optimization disabled.</column>
  </table>
  <table name="sys.internal_tables" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-internal-tables-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.internal_tables (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns one row for each object that is an internal table. Internal tables are automatically generated by SQL Server to support various features. For example, when you create a primary XML index, SQL Server automatically creates an internal table to persist the shredded XML document data. Internal tables appear in the &lt;strong&gt;sys&lt;/strong&gt; schema of every database and have unique, system-generated names that indicate their function, for example, &lt;strong&gt;xml_index_nodes_2021582240_32001&lt;/strong&gt; or &lt;strong&gt;queue_messages_1977058079&lt;/strong&gt;&lt;br/&gt;
 Internal tables do not contain user-accessible data, and their schema are fixed and unalterable. You cannot reference internal table names in Transact\-SQL statements. For example, you cannot execute a statement such as SELECT \* FROM *\&lt;sys.internal_table_name&gt;*. However, you can query catalog views to see the metadata of internal tables.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="internal_type" type="tinyint">Type of the internal table:&lt;br /&gt;&lt;br /&gt; 3 = &lt;strong&gt;query_disk_store_query_hints&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 4 = &lt;strong&gt;query_disk_store_query_template_parameterization&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 6 = &lt;strong&gt;query_disk_store_wait_stats&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 201 = &lt;strong&gt;queue_messages&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 202 = &lt;strong&gt;xml_index_nodes&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 203 = &lt;strong&gt;fulltext_catalog_freelist&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 205 = &lt;strong&gt;query_notification&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 206 = &lt;strong&gt;service_broker_map&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 207 = &lt;strong&gt;extended_indexes&lt;/strong&gt; (such as a spatial index)&lt;br /&gt;&lt;br /&gt; 208 = &lt;strong&gt;filestream_tombstone&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 209 = &lt;strong&gt;change_tracking&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 210 = &lt;strong&gt;tracked_committed_transactions&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 220 = &lt;strong&gt;contained_features&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 225 = &lt;strong&gt;filetable_updates&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 236 = &lt;strong&gt;selective_xml_index_node_table&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 240 = &lt;strong&gt;query_disk_store_query_text&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 241 = &lt;strong&gt;query_disk_store_query&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 242 = &lt;strong&gt;query_disk_store_plan&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 243 = &lt;strong&gt;query_disk_store_runtime_stats&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 244 = &lt;strong&gt;query_disk_store_runtime_stats_interval&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 245 = &lt;strong&gt;query_context_settings&lt;/strong&gt;</column>
    <column name="internal_type_desc" type="nvarchar(60)">Description of the type of internal table:&lt;br /&gt;&lt;br /&gt; QUERY_DISK_STORE_QUERY_HINTS&lt;br /&gt;&lt;br /&gt; QUERY_DISK_STORE_QUERY_TEMPLATE_PARAMETERIZATION&lt;br /&gt;&lt;br /&gt; QUERY_DISK_STORE_WAIT_STATS&lt;br /&gt;&lt;br /&gt; QUEUE_MESSAGES&lt;br /&gt;&lt;br /&gt; XML_INDEX_NODES&lt;br /&gt;&lt;br /&gt; FULLTEXT_CATALOG_FREELIST&lt;br /&gt;&lt;br /&gt; FULLTEXT_CATALOG_MAP&lt;br /&gt;&lt;br /&gt; QUERY_NOTIFICATION&lt;br /&gt;&lt;br /&gt; SERVICE_BROKER_MAP&lt;br /&gt;&lt;br /&gt; EXTENDED_INDEXES&lt;br /&gt;&lt;br /&gt; FILESTREAM_TOMBSTONE&lt;br /&gt;&lt;br /&gt; CHANGE_TRACKING&lt;br /&gt;&lt;br /&gt; TRACKED_COMMITTED_TRANSACTIONS&lt;br /&gt;&lt;br /&gt; CONTAINED_FEATURES&lt;br /&gt;&lt;br /&gt; FILETABLE_UPDATES&lt;br /&gt;&lt;br /&gt; SELECTIVE_XML_INDEX_NODE_TABLE&lt;br /&gt;&lt;br /&gt; QUERY_DISK_STORE_QUERY_TEXT&lt;br /&gt;&lt;br /&gt; QUERY_DISK_STORE_QUERY&lt;br /&gt;&lt;br /&gt; QUERY_DISK_STORE_PLAN&lt;br /&gt;&lt;br /&gt; QUERY_DISK_STORE_RUNTIME_STATS&lt;br /&gt;&lt;br /&gt; QUERY_DISK_STORE_RUNTIME_STATS_INTERVAL&lt;br /&gt;&lt;br /&gt; QUERY_CONTEXT_SETTINGS</column>
    <column name="parent_id" type="int">ID of the parent, regardless of whether it is schema-scoped or not. Otherwise, 0 if there is no parent.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;queue_messages&lt;/strong&gt; = &lt;strong&gt;object_id&lt;/strong&gt; of queue&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;xml_index_nodes&lt;/strong&gt; = &lt;strong&gt;object_id&lt;/strong&gt; of the xml index&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;fulltext_catalog_freelist&lt;/strong&gt; = &lt;strong&gt;fulltext_catalog_id&lt;/strong&gt; of the full-text catalog&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;fulltext_index_map&lt;/strong&gt; = &lt;strong&gt;object_id&lt;/strong&gt; of the full-text index&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;query_notification&lt;/strong&gt;, or &lt;strong&gt;service_broker_map&lt;/strong&gt; = 0&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;extended_indexes&lt;/strong&gt; = &lt;strong&gt;object_id&lt;/strong&gt; of an extended index, such as a spatial index&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;object_id&lt;/strong&gt; of the table for which table tracking is enabled = &lt;strong&gt;change_tracking&lt;/strong&gt;</column>
    <column name="parent_minor_id" type="int">Minor ID of the parent.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;xml_index_nodes&lt;/strong&gt; = &lt;strong&gt;index_id&lt;/strong&gt; of the XML index&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;extended_indexes&lt;/strong&gt; = &lt;strong&gt;index_id&lt;/strong&gt; of an extended index, such as a spatial index&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;queue_messages&lt;/strong&gt;, &lt;strong&gt;fulltext_catalog_freelist&lt;/strong&gt;, &lt;strong&gt;fulltext_index_map&lt;/strong&gt;, &lt;strong&gt;query_notification&lt;/strong&gt;, &lt;strong&gt;service_broker_map&lt;/strong&gt;, or &lt;strong&gt;change_tracking&lt;/strong&gt;</column>
    <column name="lob_data_space_id" type="int">Non-zero value is the ID of data space (filegroup or partition-scheme) that holds the large object (LOB) data for this table.</column>
    <column name="filestream_data_space_id" type="int">Reserved for future use.</column>
  </table>
  <table name="sys.key_constraints" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-key-constraints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.key_constraints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each object that is a primary key or unique constraint. Includes &lt;strong&gt;sys.objects.type&lt;/strong&gt; PK and UQ.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="unique_index_id" type="int">ID of the corresponding unique index in the parent object that was created to enforce this constraint.</column>
    <column name="is_system_named" type="bit">1 = Name was generated by system.&lt;br /&gt;&lt;br /&gt; 0 = Name was supplied by the user.</column>
  </table>
  <table name="sys.masked_columns" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-masked-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.masked_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Use the &lt;strong&gt;sys.masked_columns&lt;/strong&gt; view to query for table-columns that have a dynamic data masking function applied to them. This view inherits from the &lt;strong&gt;sys.columns&lt;/strong&gt; view. It returns all columns in the &lt;strong&gt;sys.columns&lt;/strong&gt; view, plus the &lt;strong&gt;is_masked&lt;/strong&gt; and &lt;strong&gt;masking_function&lt;/strong&gt; columns, indicating if the column is masked, and if so, what masking function is defined. This view only shows the columns on which there is a masking function applied.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Is unique within the object.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.&lt;br /&gt;&lt;br /&gt; Column IDs might not be sequential.</column>
    <column name="sys.masked_columns" type="various">See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-columns-transact-sql'&gt;sys.columns (Transact-SQL)&lt;/a&gt; for more column definitions.</column>
    <column name="is_masked" type="bit">Indicates if the column is masked. 1 indicates masked.</column>
    <column name="masking_function" type="nvarchar(4000)">The masking function for the column.</column>
    <column name="generated_always_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database. 7, 8, 9, 10 only applies to SQL Database.&lt;br /&gt;&lt;br /&gt; Identifies when the column value is generated (will always be 0 for columns in system tables):&lt;br /&gt;&lt;br /&gt; 0 = NOT_APPLICABLE&lt;br /&gt; 1 = AS_ROW_START&lt;br /&gt; 2 = AS_ROW_END&lt;br /&gt;7 = AS_TRANSACTION_ID_START&lt;br /&gt;8 = AS_TRANSACTION_ID_END&lt;br /&gt;9 = AS_SEQUENCE_NUMBER_START&lt;br /&gt;10 = AS_SEQUENCE_NUMBER_END&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/temporal-tables'&gt;Temporal Tables (Relational databases)&lt;/a&gt;.</column>
  </table>
  <table name="sys.memory_optimized_tables_internal_attributes" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-memory-optimized-tables-internal-attributes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.memory_optimized_tables_internal_attributes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Contains a row for each internal memory-optimized table used for storing user memory-optimized tables. Each user table corresponds to one or more internal tables. A single table is used for the core data storage. Additional internal tables are used to support features such as temporal, columnstore index and off-row (LOB) storage for memory-optimized tables.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the user table. Internal memory-optimized tables that exist to support a user table (such as off-row storage or deleted rows in case of Hk/Columnstore combinations) have the same object_id as their parent.</column>
    <column name="xtp_object_id" type="bigint">In-Memory OLTP object ID corresponding to the internal memory-optimized table that is used to support the user table. It is unique within the database and it can change over the lifetime of the object.</column>
    <column name="type" type="int">Type of internal table.&lt;br/&gt;&lt;br/&gt; 0 =&gt; DELETED_ROWS_TABLE &lt;br/&gt; 1 =&gt; USER_TABLE &lt;br/&gt; 2 =&gt; DICTIONARIES_TABLE&lt;br/&gt;3 =&gt; SEGMENTS_TABLE&lt;br/&gt;4 =&gt; ROW_GROUPS_INFO_TABLE&lt;br/&gt;5 =&gt; INTERNAL OFF-ROW DATA TABLE&lt;br/&gt;252 =&gt; INTERNAL_TEMPORAL_HISTORY_TABLE</column>
    <column name="type_desc" type="nvarchar(60)">Description of the type&lt;br/&gt;&lt;br/&gt;DELETED_ROWS_TABLE -&gt; Internal table tracking deleted rows for a columnstore index&lt;br/&gt;USER_TABLE -&gt; Table containing the in-row user data&lt;br/&gt;DICTIONARIES_TABLE -&gt; Dictionaries for a columnstore index&lt;br/&gt;SEGMENTS_TABLE -&gt; Compressed segments for a columnstore index&lt;br/&gt;ROW_GROUPS_INFO_TABLE -&gt; Metadata about compressed row groups of a columnstore index&lt;br/&gt;INTERNAL OFF-ROW DATA TABLE -&gt; Internal table used for storage of an off-row column. In this case, minor_id reflects the column_id.&lt;br/&gt;INTERNAL_TEMPORAL_HISTORY_TABLE -&gt; Hot tail of the disk-based history table. Rows inserted into the history are inserted into this internal memory-optimized table first. There is a background task that asynchronously moves rows from this internal table to the disk-based history table.</column>
    <column name="minor_id" type="int">0 indicates a user or internal table&lt;br/&gt;&lt;br/&gt;Non-0 indicates the ID of a column stored off-row. Joins with column_id in sys.columns.&lt;br/&gt;&lt;br/&gt;Each column stored off-row has a corresponding row in this system view.</column>
  </table>
  <table name="sys.module_assembly_usages" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-module-assembly-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.module_assembly_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each module-to-assembly reference.&lt;/para&gt;</description>
    <column name="object_id" type="int">Object identification number of the SQL object. Is unique within a database.</column>
    <column name="assembly_id" type="int">ID of the assembly from which this module was created.</column>
  </table>
  <table name="sys.numbered_procedures" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-numbered-procedures-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.numbered_procedures (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each SQL Server stored procedure that was created as a numbered procedure. This does not show a row for the base (number = 1) stored procedure. Entries for the base stored procedures can be found in views such as &lt;strong&gt;sys.objects&lt;/strong&gt; and &lt;strong&gt;sys.procedures&lt;/strong&gt;.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
Numbered procedures are deprecated. Use of numbered procedures is discouraged. A DEPRECATION_ANNOUNCEMENT event is fired when a query that uses this catalog view is compiled.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object of the stored procedure.</column>
    <column name="procedure_number" type="smallint">Number of this procedure within the object, 2 or greater.</column>
    <column name="definition" type="nvarchar(max)">The SQL Server text that defines this procedure.&lt;br /&gt;&lt;br /&gt; NULL = encrypted.</column>
  </table>
  <table name="sys.numbered_procedure_parameters" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-numbered-procedure-parameters-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.numbered_procedure_parameters (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each parameter of a numbered procedure. When you create a numbered stored procedure, the base procedure is number 1. All subsequent procedures have numbers 2, 3, and so forth. &lt;strong&gt;sys.numbered_procedure_parameters&lt;/strong&gt; contains the parameter definitions for all subsequent procedures, numbered 2 and greater. This view does not show parameters for the base stored procedure (number = 1). The base stored procedure is similar to a nonnumbered stored procedure. Therefore, its parameters are represented in &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-parameters-transact-sql'&gt;sys.parameters (Transact-SQL)&lt;/a&gt;.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
Numbered procedures are deprecated. Use of numbered procedures is discouraged. A DEPRECATION_ANNOUNCEMENT event is fired when a query that uses this catalog view is compiled.&lt;br/&gt;
&lt;/note&gt;&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
XML and CLR parameters are not supported for numbered procedures.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this parameter belongs.</column>
    <column name="procedure_number" type="smallint">Number of this procedure within the object, 2 or greater.</column>
    <column name="name" type="sysname">Name of the parameter. Is unique within &lt;strong&gt;procedure_number&lt;/strong&gt;.</column>
    <column name="parameter_id" type="int">ID of the parameter. Is unique within the &lt;strong&gt;procedure_number&lt;/strong&gt;.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the parameter</column>
    <column name="user_type_id" type="int">ID of the type, as defined by user, of the parameter.</column>
    <column name="max_length" type="smallint">Maximum length of the parameter in bytes.&lt;br /&gt;&lt;br /&gt; -1 = Column data type is varchar(max), nvarchar(max), or varbinary(max).</column>
    <column name="precision" type="tinyint">Precision of the parameter if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the parameter if numeric-based; otherwise, 0.</column>
    <column name="is_output" type="bit">1 = Parameter is output or return; otherwise, 0</column>
    <column name="is_cursor_ref" type="bit">1 = Parameter is a cursor-reference parameter.</column>
  </table>
  <table name="sys.objects" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.objects (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each user-defined, schema-scoped object that is created within a database, including natively compiled scalar user-defined function.&lt;br/&gt;
 For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/scalar-user-defined-functions-for-in-memory-oltp'&gt;Scalar User-Defined Functions for In-Memory OLTP&lt;/a&gt;.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
sys.objects does not show DDL triggers, because they are not schema-scoped. All triggers, both DML and DDL, are found in &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-triggers-transact-sql'&gt;sys.triggers&lt;/a&gt;. sys.triggers supports a mixture of name-scoping rules for the various kinds of triggers.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
  </table>
  <table name="sys.parameters" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-parameters-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.parameters (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each parameter of an object that accepts parameters. If the object is a scalar function, there is also a single row describing the return value. That row will have a &lt;strong&gt;parameter_id&lt;/strong&gt; value of 0.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this parameter belongs.</column>
    <column name="name" type="sysname">Name of the parameter. Is unique within the object.&lt;br /&gt;&lt;br /&gt; If the object is a scalar function, the parameter name is an empty string in the row representing the return value.</column>
    <column name="parameter_id" type="int">ID of the parameter. Is unique within the object.&lt;br /&gt;&lt;br /&gt; If the object is a scalar function, &lt;strong&gt;parameter_id&lt;/strong&gt; = 0 represents the return value.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the parameter.</column>
    <column name="user_type_id" type="int">ID of the type of the parameter as defined by the user.&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length of the parameter, in bytes.&lt;br /&gt;&lt;br /&gt; Value = -1 when the column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="precision" type="tinyint">Precision of the parameter if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the parameter if numeric-based; otherwise, 0.</column>
    <column name="is_output" type="bit">1 = Parameter is OUTPUT or RETURN; otherwise, 0.</column>
    <column name="is_cursor_ref" type="bit">1 = Parameter is a cursor-reference parameter.</column>
    <column name="has_default_value" type="bit">1 = Parameter has default value.&lt;br /&gt;&lt;br /&gt; SQL Server only maintains default values for CLR objects in this catalog view; therefore, this column has a value of 0 for Transact\-SQL objects. To view the default value of a parameter in a Transact\-SQL object, query the &lt;strong&gt;definition&lt;/strong&gt; column of the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-modules-transact-sql'&gt;sys.sql_modules&lt;/a&gt; catalog view, or use the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/functions/object-definition-transact-sql'&gt;OBJECT_DEFINITION&lt;/a&gt; system function.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br /&gt;&lt;br /&gt; 0 = Content is a document fragment, or the data type of the column is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="default_value" type="sql_variant">If &lt;strong&gt;has_default_value&lt;/strong&gt; is 1, the value of this column is the value of the default for the parameter; otherwise &lt;c&gt;NULL&lt;/c&gt;.</column>
    <column name="xml_collection_id" type="int">Non-zero if the data type of the parameter is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value is the ID of the collection containing the validating XML schema namespace of the parameter.&lt;br /&gt;&lt;br /&gt; 0 = No XML schema collection.</column>
    <column name="is_readonly" type="bit">1 = Parameter is  READONLY; otherwise, 0.</column>
    <column name="is_nullable" type="bit">1 = Parameter is nullable. (the default).&lt;br /&gt;&lt;br /&gt; 0 = Parameter is not nullable, for more efficient execution of natively-compiled stored procedures.</column>
    <column name="encryption_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type:&lt;br /&gt;&lt;br /&gt; 1 = Deterministic encryption&lt;br /&gt;&lt;br /&gt; 2 = Randomized encryption</column>
    <column name="encryption_type_desc" type="nvarchar(64)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type description:&lt;br /&gt;&lt;br /&gt; RANDOMIZED&lt;br /&gt;&lt;br /&gt; DETERMINISTIC</column>
    <column name="encryption_algorithm_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Name of encryption algorithm.&lt;br /&gt;&lt;br /&gt; Only AEAD_AES_256_CBC_HMAC_SHA_512 is supported.</column>
    <column name="column_encryption_key_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; ID of the CEK.</column>
    <column name="column_encryption_key_database_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; The name of the database where the column encryption key exists if different than the database of the column. Is &lt;c&gt;NULL&lt;/c&gt; if the key exists in the same database as the column.</column>
  </table>
  <table name="sys.partitions" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partitions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.partitions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each partition of all the tables and most types of indexes in the database. Special index types such as Full-Text, Spatial, and XML are not included in this view. All tables and indexes in SQL Server contain at least one partition, whether or not they are explicitly partitioned.&lt;/para&gt;</description>
    <column name="partition_id" type="bigint">Indicates the partition ID. Is unique within a database.</column>
    <column name="object_id" type="int">Indicates the ID of the object to which this partition belongs. Every table or view is composed of at least one partition.</column>
    <column name="index_id" type="int">Indicates the ID of the index within the object to which this partition belongs.&lt;br /&gt;&lt;br /&gt; 0 = heap&lt;br /&gt;1 = clustered index&lt;br /&gt;2 or greater = nonclustered index</column>
    <column name="partition_number" type="int">Is a 1-based partition number within the owning index or heap. For non-partitioned tables and indexes, the value of this column is 1.</column>
    <column name="hobt_id" type="bigint">Indicates the ID of the data heap or B-tree (HoBT) that contains the rows for this partition.</column>
    <column name="rows" type="bigint">Indicates the approximate number of rows in this partition.</column>
    <column name="filestream_filegroup_id" type="smallint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; Indicates the ID of the FILESTREAM filegroup stored on this partition.</column>
    <column name="data_compression" type="tinyint">Indicates the state of compression for each partition:&lt;br /&gt;&lt;br /&gt; 0 = NONE &lt;br /&gt;1 = ROW &lt;br /&gt;2 = PAGE &lt;br /&gt;3 = COLUMNSTORE : &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later&lt;br /&gt;4 = COLUMNSTORE_ARCHIVE : &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; Full text indexes will be compressed in any edition of SQL Server.</column>
    <column name="data_compression_desc" type="nvarchar(60)">Indicates the state of compression for each partition. Possible values for rowstore tables are NONE, ROW, and PAGE. Possible values for columnstore tables are COLUMNSTORE and COLUMNSTORE_ARCHIVE.</column>
  </table>
  <table name="sys.periods" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-periods-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.periods (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later&lt;/para&gt;
&lt;para&gt;Returns a row for each table for which periods have been defined.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the period</column>
    <column name="period_type" type="tinyint">The numeric value representing the type of period:&lt;br /&gt;&lt;br /&gt; 1 = system-time period</column>
    <column name="period_type_desc" type="nvarchar(60)">The text description of the type of column:&lt;br /&gt;&lt;br /&gt; SYSTEM_TIME_PERIOD</column>
    <column name="object_id" type="int">The id of the table containing the period_type column</column>
    <column name="start_column_id" type="int">The id of the column that defines the lower period boundary</column>
    <column name="end_column_id" type="int">The id of the column that defines the upper period boundary</column>
  </table>
  <table name="sys.plan_guides" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-plan-guides-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.plan_guides (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row for each plan guide in the database.&lt;/para&gt;</description>
    <column name="plan_guide_id" type="int">Unique identifier of the plan guide in the database.</column>
    <column name="name" type="sysname">Name of the plan guide.</column>
    <column name="create_date" type="datetime">Date and time the plan guide was created.</column>
    <column name="modify_date" type="Datetime">Date the plan guide was last modified.</column>
    <column name="is_disabled" type="bit">1 = Plan guide is disabled.&lt;br /&gt;&lt;br /&gt; 0 = Plan guide is enabled.</column>
    <column name="query_text" type="nvarchar(max)">Text of the query on which the plan guide is created.</column>
    <column name="scope_type" type="tinyint">Identifies the scope of the plan guide.&lt;br /&gt;&lt;br /&gt; 1 = OBJECT&lt;br /&gt;&lt;br /&gt; 2 = SQL&lt;br /&gt;&lt;br /&gt; 3 = TEMPLATE</column>
    <column name="scope_type_desc" type="nvarchar(60)">Description of scope of the plan guide.&lt;br /&gt;&lt;br /&gt; OBJECT&lt;br /&gt;&lt;br /&gt; SQL&lt;br /&gt;&lt;br /&gt; TEMPLATE</column>
    <column name="scope_object_id" type="Int">object_id of the object defining the scope of the plan guide, if the scope is OBJECT.&lt;br /&gt;&lt;br /&gt; NULL if the plan guide is not scoped to OBJECT.</column>
    <column name="scope_batch" type="nvarchar(max)">Batch text, if &lt;strong&gt;scope_type&lt;/strong&gt; is SQL.&lt;br /&gt;&lt;br /&gt; NULL if batch type is not SQL.&lt;br /&gt;&lt;br /&gt; If NULL and &lt;strong&gt;scope_type&lt;/strong&gt; is SQL, the value of &lt;strong&gt;query_text&lt;/strong&gt; applies.</column>
    <column name="parameters" type="nvarchar(max)">The string defining the list of parameters associated with the plan guide.&lt;br /&gt;&lt;br /&gt; NULL = No parameter list is associated with the plan guide.</column>
    <column name="hints" type="nvarchar(max)">The OPTION clause hints associated with the plan guide.</column>
  </table>
  <table name="sys.procedures" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-procedures-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.procedures (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each object that is a procedure of some kind, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = P, X, RF, and PC.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="is_auto_executed" type="bit">1 = Procedure is auto-executed at the server startup; otherwise, 0. Can only be set for procedures in the master database.</column>
    <column name="is_execution_replicated" type="bit">Execution of this procedure is replicated.</column>
    <column name="is_repl_serializable_only" type="bit">Replication of the procedure execution is done only when the transaction can be serialized.</column>
    <column name="skips_repl_constraints" type="bit">During execution, the procedure skips constraints marked NOT FOR REPLICATION.</column>
  </table>
  <table name="sys.sequences" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sequences-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sequences (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row for each sequence object in a database.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="start_value" type="sql_variant NOT NULL">The starting value for the sequence object. If the sequence object is restarted by using ALTER SEQUENCE it will restart at this value. When the sequence object cycles it proceeds to the &lt;strong&gt;minimum_value&lt;/strong&gt; or &lt;strong&gt;maximum_value&lt;/strong&gt;, not the &lt;strong&gt;start_value&lt;/strong&gt;.</column>
    <column name="increment" type="sql_variant NOT NULL">The value that is used to increment the sequence object after each generated value.</column>
    <column name="minimum_value" type="sql_variant NULL">The minimum value that can be generated by the sequence object. After this value is reached, the sequence object will either return an error when trying to generate more values or restart if the CYCLE option is specified. If no MINVALUE has been specified, this column returns the minimum value supported by the sequence generator's data type.</column>
    <column name="maximum_value" type="sql_variant NULL">The maximum value that can be generated by the sequence object. After this value is reached the sequence object will either start returning an error when trying to generate more values or restart if the CYCLE option is specified. If no MAXVALUE has been specified this column returns the maximum value supported by the sequence object's data type.</column>
    <column name="is_cycling" type="bit NOT NULL">Returns 0 if NO CYCLE has been specified for the sequence object and 1 if CYCLE has been specified.</column>
    <column name="is_cached" type="bit NOT NULL">Returns 0 if NO CACHE has been specified for the sequence object and 1 if CACHE has been specified.</column>
    <column name="cache_size" type="int NULL">Returns the specified cache size for the sequence object. This column contains NULL if the sequence was created with the NO CACHE option or if CACHE was specified without specifying a cache size. If the value specified by the cache size is larger than the maximum number of values that can be returned by the sequence object, that unobtainable cache size is still displayed.</column>
    <column name="system_type_id" type="tinyint NOT NULL">ID of the system type for sequence object's data type.</column>
    <column name="user_type_id" type="int NOT NULL">ID of the data type for the sequence object as defined by the user.</column>
    <column name="precision" type="tinyint NOT NULL">Max precision of the data type.</column>
    <column name="scale" type="tinyint NOT NULL">Max scale of the type. Scale is returned together with precision to give users complete metadata. Scale is always 0 for sequence objects because only integer types are allowed.</column>
    <column name="current_value" type="sql_variant NOT NULL">The last value obligated. That is, the value returned from the most recent execution of the NEXT VALUE FOR function or the last value from executing the &lt;strong&gt;sp_sequence_get_range&lt;/strong&gt; procedure. Returns the START WITH value if the sequence has never been used.</column>
    <column name="is_exhausted" type="bit NOT NULL">0 indicates that more values can be generated from the sequence. 1 indicates that the sequence object has reached the MAXVALUE parameter and the sequence is not set to CYCLE. The NEXT VALUE FOR function returns an error until the sequence is restarted by using ALTER SEQUENCE.</column>
    <column name="last_used_value" type="sql_variant NULL">Returns the last value generated by the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/functions/next-value-for-transact-sql'&gt;Next Value For&lt;/a&gt; function. Applies to SQL Server 2017 and later.</column>
  </table>
  <table name="sys.server_assembly_modules" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-assembly-modules-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_assembly_modules (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each assembly module for the server-level triggers of type TA. This view maps assembly triggers to the underlying CLR implementation. You can join this relation to &lt;strong&gt;sys.server_triggers&lt;/strong&gt;. The assembly must be loaded into the &lt;strong&gt;master&lt;/strong&gt; database. The tuple (object_id) is the key for the relation.&lt;/para&gt;</description>
    <column name="object_id" type="int">This is a FOREIGN KEY reference back to the object upon which this assembly module is defined.</column>
    <column name="assembly_id" type="int">ID of the assembly from which this module was created. The assembly must be loaded into the master database.</column>
    <column name="assembly_class" type="sysname">Name of the class within assembly that defines this module.</column>
    <column name="assembly_method" type="sysname">Name of the method within the class that defines this module. Is NULL for aggregate functions (AF).</column>
    <column name="execute_as_principal_id" type="int">ID of the EXECUTE AS server principal.&lt;br /&gt;&lt;br /&gt; NULL by default or if EXECUTE AS CALLER.&lt;br /&gt;&lt;br /&gt; ID of the specified principal if EXECUTE AS SELF EXECUTE AS \&lt;principal&gt;.&lt;br /&gt;&lt;br /&gt; -2 = EXECUTE AS OWNER.</column>
  </table>
  <table name="sys.server_events" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-events-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_events (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each event for which a server-level event-notification or server-level DDL trigger fires. The columns &lt;strong&gt;object_id&lt;/strong&gt; and &lt;strong&gt;type&lt;/strong&gt; uniquely identify the server event.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the server-level event notification or server-level DDL trigger to fire.</column>
    <column name="type" type="int">Type of the event that causes the event notification or DDL trigger to fire.</column>
    <column name="type_desc" type="nvarchar(60)">Description of the event that causes the DDL trigger or event notification to fire.</column>
    <column name="event_group_type" type="int">Event group on which the trigger or event notification is created, or null if not created on an event group.</column>
    <column name="event_group_type_desc" type="nvarchar(60)">Description of the event group on which the trigger or event notification is created, or null if not created on an event group</column>
  </table>
  <table name="sys.server_event_notifications" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-event-notifications-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_event_notifications (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each server-level event notification object.&lt;/para&gt;</description>
    <column name="name" type="sysname">Server event notification name. Is unique across all server-level event notifications.</column>
    <column name="object_id" type="int">Object identification number. Is unique within the &lt;strong&gt;master&lt;/strong&gt; database.</column>
    <column name="parent_class" type="tinyint">Class of parent. Is always 100 = Server.</column>
    <column name="parent_class_desc" type="nvarchar(60)">Description of class of parent. Is always SERVER.</column>
    <column name="parent_id" type="int">Is always 0.</column>
    <column name="create_date" type="datetime">Date created.</column>
    <column name="modify_date" type="datetime">Date object was last modified by using an ALTER statement.</column>
    <column name="service_name" type="nvarchar(256)">Name of the target service to which the notification is sent.</column>
    <column name="broker_instance" type="nvarchar(128)">The service broker where the named target service is defined.</column>
    <column name="creator_sid" type="varbinary(85)">SID of the login executing the statement that creates the event notification. NULL if WITH FAN_IN is not specified in the event notification definition.</column>
    <column name="principal_id" type="int">ID of the server principal that owns this.</column>
  </table>
  <table name="sys.server_sql_modules" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-sql-modules-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_sql_modules (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains the set of SQL modules for server-level triggers of type TR. You can join this relation to sys.server_triggers. The tuple (object_id) is the key of the relation.&lt;/para&gt;</description>
    <column name="object_id" type="int">This is a FOREIGN KEY reference back to the server-level trigger where this module is defined.</column>
    <column name="definition" type="nvarchar(max)">SQL text that defines this module.&lt;br /&gt;&lt;br /&gt; NULL = Encrypted.</column>
    <column name="uses_ansi_nulls" type="bit">Module was created with ANSI NULLS set option set to ON.</column>
    <column name="uses_quoted_identifier" type="bit">Module was created with QUOTED IDENTIFIER set option set to ON.</column>
    <column name="execute_as_principal_id" type="int">ID of the EXECUTE AS server principal.&lt;br /&gt;&lt;br /&gt; NULL by default or if EXECUTE AS CALLER&lt;br /&gt;&lt;br /&gt; ID of the specified principal if EXECUTE AS SELF EXECUTE AS principal-2 = EXECUTE AS OWNER.</column>
  </table>
  <table name="sys.server_triggers" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-triggers-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_triggers (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains the set of all server-level DDL triggers with object_type of TR or TA. In the case of CLR triggers, the assembly must be loaded into the &lt;strong&gt;master&lt;/strong&gt; database. All server-level DDL trigger names exist in a single, global scope.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the trigger.</column>
    <column name="object_id" type="int">ID of the object.</column>
    <column name="parent_class" type="tinyint">Class of parent. Is always:&lt;br /&gt;&lt;br /&gt; 100 = Server</column>
    <column name="parent_class_desc" type="nvarchar(60)">Description of class of parent. Is always:&lt;br /&gt;&lt;br /&gt; SERVER.</column>
    <column name="parent_id" type="int">Always 0 for triggers on the SERVER.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger</column>
    <column name="type_desc" type="nvarchar(60)">Description of the class of the object type.&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER</column>
    <column name="create_date" type="datetime">Date the trigger was created.</column>
    <column name="modify_date" type="datetime">Date the trigger was last modified by using an ALTER statement.</column>
    <column name="is_ms_shipped" type="bit">Trigger created on behalf of the user by an internal SQL Server component.</column>
    <column name="is_disabled" type="bit">1 = Trigger is disabled.</column>
  </table>
  <table name="sys.server_trigger_events" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-trigger-events-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_trigger_events (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each event for which a server-level (synchronous) trigger fires.&lt;/para&gt;</description>
    <column name="inherited columns" type="">Inherits all columns from &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-events-transact-sql'&gt;sys.server_events&lt;/a&gt;.</column>
    <column name="is_first" type="bit">Trigger is marked to be the first to fire for this event.</column>
    <column name="is_last" type="bit">Trigger is marked to be the last to fire for this event.</column>
  </table>
  <table name="sys.sql_dependencies" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-dependencies-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sql_dependencies (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each dependency on a referenced entity as referenced in the Transact\-SQL expression or statements that define some other referencing object.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-expression-dependencies-transact-sql'&gt;sys.sql_expression_dependencies&lt;/a&gt; instead.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="class" type="tinyint">Identifies the class of the referenced entity:&lt;br /&gt;&lt;br /&gt; 0 = Object or column (non-schema-bound references only)&lt;br /&gt;&lt;br /&gt; 1 = Object or column (schema-bound references)&lt;br /&gt;&lt;br /&gt; 2 = Types (schema-bound references)&lt;br /&gt;&lt;br /&gt; 3 = XML Schema collections (schema-bound references)&lt;br /&gt;&lt;br /&gt; 4 = Partition function (schema-bound references)</column>
    <column name="class_desc" type="nvarchar(60)">Description of class of referenced entity:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;OBJECT_OR_COLUMN_REFERENCE_NON_SCHEMA_BOUND&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;OBJECT_OR_COLUMN_REFERENCE_SCHEMA_BOUND&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;TYPE_REFERENCE&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;XML_SCHEMA_COLLECTION_REFERENCE&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;PARTITION_FUNCTION_REFERENCE&lt;/strong&gt;</column>
    <column name="object_id" type="int">ID of the referencing object.</column>
    <column name="column_id" type="int">If the referencing ID is a column, ID of referencing column; otherwise, 0.</column>
    <column name="referenced_major_id" type="int">ID of the referenced entity, interpreted by value of class, according to:&lt;br /&gt;&lt;br /&gt; 0, 1 = Object ID of object or column.&lt;br /&gt;&lt;br /&gt; 2 = Type ID.&lt;br /&gt;&lt;br /&gt; 3 = XML Schema collection ID.</column>
    <column name="referenced_minor_id" type="int">Minor-ID of the referenced entity, interpreted by value of class, as shown in the following.&lt;br /&gt;&lt;br /&gt; When class =:&lt;br /&gt;&lt;br /&gt; 0, &lt;strong&gt;referenced_minor_id&lt;/strong&gt; is a column ID; or if not a column, it is 0.&lt;br /&gt;&lt;br /&gt; 1, &lt;strong&gt;referenced_minor_id&lt;/strong&gt; is a column ID; or if not a column, it is 0.&lt;br /&gt;&lt;br /&gt; Otherwise, &lt;strong&gt;referenced_minor_id&lt;/strong&gt; = 0.</column>
    <column name="is_selected" type="bit">Object or column is selected.</column>
    <column name="is_updated" type="bit">Object or column is updated.</column>
    <column name="is_select_all" type="bit">Object is used in SELECT * clause (object-level only).</column>
  </table>
  <table name="sys.sql_expression_dependencies" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-expression-dependencies-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sql_expression_dependencies (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains one row for each by-name dependency on a user-defined entity in the current database. This includes dependences between natively compiled, scalar user-defined functions and other SQL Server modules. A dependency between two entities is created when one entity, called the *referenced entity*, appears by name in a persisted SQL expression of another entity, called the *referencing entity*. For example, when a table is referenced in the definition of a view, the view, as the referencing entity, depends on the table, the referenced entity. If the table is dropped, the view is unusable.&lt;br/&gt;
 For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/scalar-user-defined-functions-for-in-memory-oltp'&gt;Scalar User-Defined Functions for In-Memory OLTP&lt;/a&gt;.&lt;br/&gt;
 You can use this catalog view to report dependency information for the following entities:&lt;br/&gt;
-   Schema-bound entities.&lt;br/&gt;
-   Non-schema-bound entities.&lt;br/&gt;
-   Cross-database and cross-server entities. Entity names are reported; however, entity IDs are not resolved.&lt;br/&gt;
-   Column-level dependencies on schema-bound entities. Column-level dependencies for non-schema-bound objects can be returned by using &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-sql-referenced-entities-transact-sql'&gt;sys.dm_sql_referenced_entities&lt;/a&gt;.&lt;br/&gt;
-   Server-level DDL triggers when in the context of the master database.&lt;/para&gt;</description>
    <column name="referencing_id" type="int">ID of the referencing entity. Is not nullable.</column>
    <column name="referencing_minor_id" type="int">Column ID when the referencing entity is a column; otherwise 0. Is not nullable.</column>
    <column name="referencing_class" type="tinyint">Class of the referencing entity.&lt;br /&gt;&lt;br /&gt; 1 = Object or column&lt;br /&gt;&lt;br /&gt; 12 = Database DDL trigger&lt;br /&gt;&lt;br /&gt; 13 = Server DDL trigger&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="referencing_class_desc" type="nvarchar(60)">Description of the class of referencing entity.&lt;br /&gt;&lt;br /&gt; OBJECT_OR_COLUMN&lt;br /&gt;&lt;br /&gt; DATABASE_DDL_TRIGGER&lt;br /&gt;&lt;br /&gt; SERVER_DDL_TRIGGER&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="is_schema_bound_reference" type="bit">1 = Referenced entity is schema-bound.&lt;br /&gt;&lt;br /&gt; 0 = Referenced entity is non-schema-bound.&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="referenced_class" type="tinyint">Class of the referenced entity.&lt;br /&gt;&lt;br /&gt; 1 = Object or column&lt;br /&gt;&lt;br /&gt; 6 = Type&lt;br /&gt;&lt;br /&gt; 10 = XML schema collection&lt;br /&gt;&lt;br /&gt; 21 = Partition function&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="referenced_class_desc" type="nvarchar(60)">Description of class of referenced entity.&lt;br /&gt;&lt;br /&gt; OBJECT_OR_COLUMN&lt;br /&gt;&lt;br /&gt; TYPE&lt;br /&gt;&lt;br /&gt; XML_SCHEMA_COLLECTION&lt;br /&gt;&lt;br /&gt; PARTITION_FUNCTION&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="referenced_server_name" type="sysname">Name of the server of the referenced entity.&lt;br /&gt;&lt;br /&gt; This column is populated for cross-server dependencies that are made by specifying a valid four-part name. For information about multipart names, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/language-elements/transact-sql-syntax-conventions-transact-sql'&gt;Transact-SQL Syntax Conventions (Transact-SQL)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; NULL for non-schema-bound entities for which the entity was referenced without specifying a four-part name.&lt;br /&gt;&lt;br /&gt; NULL for schema-bound entities because they must be in the same database and therefore can only be defined using a two-part (*schema.object*) name.</column>
    <column name="referenced_database_name" type="sysname">Name of the database of the referenced entity.&lt;br /&gt;&lt;br /&gt; This column is populated for cross-database or cross-server references that are made by specifying a valid three-part or four-part name.&lt;br /&gt;&lt;br /&gt; NULL for non-schema-bound references when specified using a one-part or two-part name.&lt;br /&gt;&lt;br /&gt; NULL for schema-bound entities because they must be in the same database and therefore can only be defined using a two-part (*schema.object*) name.</column>
    <column name="referenced_schema_name" type="sysname">Schema in which the referenced entity belongs.&lt;br /&gt;&lt;br /&gt; NULL for non-schema-bound references in which the entity was referenced without specifying the schema name.&lt;br /&gt;&lt;br /&gt; Never NULL for schema-bound references because schema-bound entities must be defined and referenced by using a two-part name.</column>
    <column name="referenced_entity_name" type="sysname">Name of the referenced entity. Is not nullable.</column>
    <column name="referenced_id" type="int">ID of the referenced entity. The value of this column is never NULL for schema-bound references. The value of this column is always NULL for cross-server and cross-database references.&lt;br /&gt;&lt;br /&gt; NULL for references within the database if the ID cannot be determined. For non-schema-bound references, the ID cannot be resolved in the following cases:&lt;br /&gt;&lt;br /&gt; The referenced entity does not exist in the database.&lt;br /&gt;&lt;br /&gt; The schema of the referenced entity depends on the schema of the caller and is resolved at run time. In this case, is_caller_dependent is set to 1.</column>
    <column name="referenced_minor_id" type="int">ID of the referenced column when the referencing entity is a column; otherwise 0. Is not nullable.&lt;br /&gt;&lt;br /&gt; A referenced entity is a column when a column is identified by name in the referencing entity, or when the parent entity is used in a SELECT * statement.</column>
    <column name="is_caller_dependent" type="bit">Indicates that schema binding for the referenced entity occurs at runtime; therefore, resolution of the entity ID depends on the schema of the caller. This occurs when the referenced entity is a stored procedure, extended stored procedure, or a non-schema-bound user-defined function called in an EXECUTE statement.&lt;br /&gt;&lt;br /&gt; 1 = The referenced entity is caller dependent and is resolved at runtime. In this case, referenced_id is NULL.&lt;br /&gt;&lt;br /&gt; 0 = The referenced entity ID is not caller dependent.&lt;br /&gt;&lt;br /&gt; Always 0 for schema-bound references and for cross-database and cross-server references that explicitly specify a schema name. For example, a reference to an entity in the format &lt;c&gt;EXEC MyDatabase.MySchema.MyProc&lt;/c&gt; is not caller dependent. However, a reference in the format &lt;c&gt;EXEC MyDatabase..MyProc&lt;/c&gt; is caller dependent.</column>
    <column name="is_ambiguous" type="bit">Indicates the reference is ambiguous and can resolve at run time to a user-defined function, a user-defined type (UDT), or an xquery reference to a column of type &lt;strong&gt;xml&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For example, assume that the statement &lt;c&gt;SELECT Sales.GetOrder() FROM Sales.MySales&lt;/c&gt; is defined in a stored procedure. Until the stored procedure is executed, it is not known whether &lt;c&gt;Sales.GetOrder()&lt;/c&gt; is a user-defined function in the &lt;c&gt;Sales&lt;/c&gt; schema or column named &lt;c&gt;Sales&lt;/c&gt; of type UDT with a method named &lt;c&gt;GetOrder()&lt;/c&gt;.&lt;br /&gt;&lt;br /&gt; 1 = Reference is ambiguous.&lt;br /&gt;&lt;br /&gt; 0 = Reference is unambiguous or the entity can be successfully bound when the view is called.&lt;br /&gt;&lt;br /&gt; Always 0 for schema bound references.</column>
  </table>
  <table name="sys.sql_modules" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-modules-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sql_modules (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns a row for each object that is an SQL language-defined module in SQL Server, including natively compiled scalar user-defined function. Objects of type P, RF, V, TR, FN, IF, TF, and R have an associated SQL module. Stand-alone defaults, objects of type D, also have an SQL module definition in this view. For a description of these types, see the &lt;c&gt;type&lt;/c&gt; column in the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql'&gt;sys.objects&lt;/a&gt; catalog view.&lt;br/&gt;
 For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/in-memory-oltp/scalar-user-defined-functions-for-in-memory-oltp'&gt;Scalar User-Defined Functions for In-Memory OLTP&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object of the containing object. Is unique within a database.</column>
    <column name="definition" type="nvarchar(max)">SQL text that defines this module. This value can also be obtained using the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/functions/object-definition-transact-sql'&gt;OBJECT_DEFINITION&lt;/a&gt; built-in function.&lt;br /&gt;&lt;br /&gt; NULL = Encrypted.</column>
    <column name="uses_ansi_nulls" type="bit">Module was created with SET ANSI_NULLS ON.&lt;br /&gt;&lt;br /&gt; Will always be = 0 for rules and defaults.</column>
    <column name="uses_quoted_identifier" type="bit">Module was created with SET QUOTED_IDENTIFIER ON.</column>
    <column name="is_schema_bound" type="bit">Module was created with SCHEMABINDING option.&lt;br /&gt;&lt;br /&gt; Always contains a value of 1 for natively compiled stored procedures.</column>
    <column name="uses_database_collation" type="bit">1 = Schema-bound module definition depends on the default-collation of the database for correct evaluation; otherwise, 0. Such a dependency prevents changing the database's default collation.</column>
    <column name="is_recompiled" type="bit">Procedure was created WITH RECOMPILE option.</column>
    <column name="null_on_null_input" type="bit">Module was declared to produce a &lt;c&gt;NULL&lt;/c&gt; output on any &lt;c&gt;NULL&lt;/c&gt; input.</column>
    <column name="execute_as_principal_id" type="Int">ID of the EXECUTE AS database principal.&lt;br /&gt;&lt;br /&gt; &lt;c&gt;NULL&lt;/c&gt; by default or if EXECUTE AS CALLER.&lt;br /&gt;&lt;br /&gt; ID of the specified principal if EXECUTE AS SELF or EXECUTE AS \&lt;principal&gt;.&lt;br /&gt;&lt;br /&gt; -2 = EXECUTE AS OWNER.</column>
    <column name="uses_native_compilation" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) through SQL Server 2014 (12.x).&lt;br /&gt;&lt;br /&gt; 0 = not natively compiled&lt;br /&gt;&lt;br /&gt; 1 = is natively compiled&lt;br /&gt;&lt;br /&gt; The default value is 0.</column>
    <column name="is_inlineable" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later.&lt;br/&gt;&lt;br /&gt;Indicates whether the module is inlineable or not. Inlineability is based on the conditions specified &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/user-defined-functions/scalar-udf-inlining#inlineable-scalar-udfs-requirements'&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; 0 = not inlineable&lt;br /&gt;&lt;br /&gt; 1 = is inlineable. &lt;br /&gt;&lt;br /&gt; For scalar user-defined functions (UDFs), the value will be 1 if the UDF is inlineable, and 0 otherwise. It always contains a value of 1 for inline table-valued functions (TVFs), and 0 for all other module types.&lt;br /&gt;</column>
    <column name="inline_type" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later.&lt;br /&gt;&lt;br /&gt;Indicates whether inlining is turned on for the module currently. &lt;br /&gt;&lt;br /&gt;0 = inlining is turned off&lt;br /&gt;&lt;br /&gt; 1 = inlining is turned on.&lt;br /&gt;&lt;br /&gt; For scalar user-defined functions (UDFs), the value will be 1 if inlining is turned on (explicitly or implicitly). The value will always be 1 for inline table-valued functions (TVFs), and 0 for other module types.&lt;br /&gt;</column>
  </table>
  <table name="sys.stats" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-stats-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.stats (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each statistics object that exists for the tables, indexes, and indexed views in the database in SQL Server. Every index will have a corresponding statistics row with the same name and ID (&lt;strong&gt;index_id&lt;/strong&gt; = &lt;strong&gt;stats_id&lt;/strong&gt;), but not every statistics row has a corresponding index.&lt;br/&gt;
 The catalog view &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-stats-columns-transact-sql'&gt;sys.stats_columns&lt;/a&gt; provides statistics information for each column in the database. For more information about statistics, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/statistics/statistics'&gt;Statistics&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which these statistics belong.</column>
    <column name="name" type="sysname">Name of the statistics. Is unique within the object.</column>
    <column name="stats_id" type="int">ID of the statistics. Is unique within the object.&lt;br /&gt;&lt;br /&gt;If statistics correspond to an index, the *stats_id* value is the same as the *index_id* value in the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql'&gt;sys.indexes&lt;/a&gt; catalog view.</column>
    <column name="auto_created" type="bit">Indicates whether the statistics were automatically created by SQL Server.&lt;br /&gt;&lt;br /&gt; 0 = Statistics were not automatically created by SQL Server.&lt;br /&gt;&lt;br /&gt; 1 = Statistics were automatically created by SQL Server.</column>
    <column name="user_created" type="bit">Indicates whether the statistics were created by a user.&lt;br /&gt;&lt;br /&gt; 0 = Statistics were not created by a user.&lt;br /&gt;&lt;br /&gt; 1 = Statistics were created by a user.</column>
    <column name="no_recompute" type="bit">Indicates whether the statistics were created with the &lt;strong&gt;NORECOMPUTE&lt;/strong&gt; option.&lt;br /&gt;&lt;br /&gt; 0 = Statistics were not created with the &lt;strong&gt;NORECOMPUTE&lt;/strong&gt; option.&lt;br /&gt;&lt;br /&gt; 1 = Statistics were created with the &lt;strong&gt;NORECOMPUTE&lt;/strong&gt; option.</column>
    <column name="has_filter" type="bit">0 = Statistics do not have a filter and are computed on all rows.&lt;br /&gt;&lt;br /&gt; 1 = Statistics have a filter and are computed only on rows that satisfy the filter definition.</column>
    <column name="filter_definition" type="nvarchar(max)">Expression for the subset of rows included in filtered statistics.&lt;br /&gt;&lt;br /&gt; NULL = Non-filtered statistics.</column>
    <column name="is_temporary" type="bit">Indicates whether the statistics is temporary. Temporary statistics support Always On availability groups secondary databases that are enabled for read-only access.&lt;br /&gt;&lt;br /&gt; 0 = The statistics is not temporary.&lt;br /&gt;&lt;br /&gt; 1 = The statistics is temporary.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (Starting with SQL Server 2012 (11.x))</column>
    <column name="is_incremental" type="bit">Indicate whether the statistics are created as incremental statistics.&lt;br /&gt;&lt;br /&gt; 0 = The statistics are not incremental.&lt;br /&gt;&lt;br /&gt; 1 = The statistics are incremental.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (Starting with SQL Server 2014 (12.x))</column>
    <column name="has_persisted_sample" type="bit">Indicates whether the statistics were created or updated with the PERSIST_SAMPLE_PERCENT option.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;0&lt;/strong&gt; = Statistics are not persisting the sample percentage.&lt;br /&gt;&lt;br /&gt; 1 = Statistics were created or updated with the PERSIST_SAMPLE_PERCENT option.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (Starting with SQL Server 2019 (15.x))</column>
    <column name="stats_generation_method" type="int">Indicates the method by which statistics are created.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;0&lt;/strong&gt; = Sort based statistics&lt;br /&gt;&lt;br /&gt;1 = Internal use only&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (Starting with SQL Server 2019 (15.x))</column>
    <column name="stats_generation_method_desc" type="varchar(255)">The text description of the method by which statistics are created.&lt;br /&gt;&lt;br /&gt;Sort based statistics&lt;br /&gt;&lt;br /&gt;Internal use only&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (Starting with SQL Server 2019 (15.x))</column>
  </table>
  <table name="sys.stats_columns" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-stats-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.stats_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each column that is part of &lt;strong&gt;sys.stats&lt;/strong&gt; statistics.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object of which this column is part.</column>
    <column name="stats_id" type="int">ID of the statistics of which this column is part.&lt;br /&gt;&lt;br /&gt;If statistics correspond to an index, the *stats_id* value is the same as the *index_id* value in the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql'&gt;sys.indexes&lt;/a&gt; catalog view.</column>
    <column name="stats_column_id" type="int">1-based ordinal within set of stats columns.</column>
    <column name="column_id" type="int">ID of the column from &lt;strong&gt;sys.columns&lt;/strong&gt;.</column>
  </table>
  <table name="sys.synonyms" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-synonyms-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.synonyms (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each synonym object that is &lt;strong&gt;sys.objects.type&lt;/strong&gt; = SN.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="base_object_name" type="nvarchar(1035)">Fully quoted name of the object to which the user of this synonym is redirected.</column>
  </table>
  <table name="sys.system_columns" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.system_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each column of system objects that have columns.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Is unique within the object.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.&lt;br /&gt;&lt;br /&gt; Column IDs might not be sequential.</column>
    <column name="system_type_id" type="tinyint">ID of the system-type of the column</column>
    <column name="user_type_id" type="int">ID of the type of the column as defined by the user.&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of column.&lt;br /&gt;&lt;br /&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For &lt;strong&gt;text&lt;/strong&gt; columns, the &lt;strong&gt;max_length&lt;/strong&gt; value will be 16 or the value set by &lt;strong&gt;sp_tableoption&lt;/strong&gt; 'text in row'.</column>
    <column name="precision" type="tinyint">Precision of the column if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the column if numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the column if character-based; otherwise, NULL.</column>
    <column name="is_nullable" type="bit">1 = Column is nullable.</column>
    <column name="is_ansi_padded" type="bit">1 = Column uses ANSI_PADDING ON behavior if character, binary, or variant.&lt;br /&gt;&lt;br /&gt; 0 = Column is not character, binary, or variant.</column>
    <column name="is_rowguidcol" type="bit">1 = Column is a declared ROWGUIDCOL.</column>
    <column name="is_identity" type="bit">1 = Column has identity values.</column>
    <column name="is_computed" type="bit">1 = Column is a computed column.</column>
    <column name="is_filestream" type="bit">1 = Column is declared to use filestream storage.</column>
    <column name="is_replicated" type="bit">1 = Column is replicated.</column>
    <column name="is_non_sql_subscribed" type="bit">1 = Column has a non-SQL Server subscriber.</column>
    <column name="is_merge_published" type="bit">1 = Column is merge-published.</column>
    <column name="is_dts_replicated" type="bit">1 = Column is replicated by using SSIS.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br /&gt;&lt;br /&gt; 0 = Content is a document fragment, or the column data type is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="xml_collection_id" type="int">Non-zero if the column data type is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value will be the ID of the collection containing the validating XML schema namespace of the column.&lt;br /&gt;&lt;br /&gt; 0 = No XML schema collection.</column>
    <column name="default_object_id" type="int">ID of the default object, regardless of whether it is a stand-alone &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-bindefault-transact-sql'&gt;sys.sp_bindefault&lt;/a&gt;, or an inline, column-level DEFAULT constraint. The &lt;strong&gt;parent_object_id&lt;/strong&gt; column of an inline column-level default object is a reference back to the table itself. Or, 0 if there is no default.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule bound to the column by using &lt;strong&gt;sys.sp_bindrule&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = No stand-alone rule.&lt;br /&gt;&lt;br /&gt; For column-level CHECK constraints, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-check-constraints-transact-sql'&gt;sys.check_constraints (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_sparse" type="bit">1 = Column is a sparse column. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/use-sparse-columns'&gt;Use Sparse Columns&lt;/a&gt;.</column>
    <column name="is_column_set" type="bit">1 = Column is a column set. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/use-column-sets'&gt;Use Column Sets&lt;/a&gt;.</column>
    <column name="generated_always_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database. 7, 8, 9, 10 only applies to SQL Database.&lt;br /&gt;&lt;br /&gt; Identifies when the column value is generated (will always be 0 for columns in system tables):&lt;br /&gt;&lt;br /&gt; 0 = NOT_APPLICABLE&lt;br /&gt; 1 = AS_ROW_START&lt;br /&gt; 2 = AS_ROW_END&lt;br /&gt;7 = AS_TRANSACTION_ID_START&lt;br /&gt;8 = AS_TRANSACTION_ID_END&lt;br /&gt;9 = AS_SEQUENCE_NUMBER_START&lt;br /&gt;10 = AS_SEQUENCE_NUMBER_END&lt;br /&gt;&lt;br /&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/tables/temporal-tables'&gt;Temporal Tables (Relational databases)&lt;/a&gt;.</column>
    <column name="generated_always_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Textual description of &lt;c&gt;generated_always_type&lt;/c&gt;'s value (always NOT_APPLICABLE for columns in system tables) &lt;br /&gt;&lt;br /&gt; NOT_APPLICABLE&lt;br /&gt; AS_ROW_START&lt;br /&gt; AS_ROW_END&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database&lt;br /&gt;&lt;br /&gt;AS_TRANSACTION_ID_START&lt;br /&gt;AS_TRANSACTION_ID_END&lt;br /&gt;AS_SEQUENCE_NUMBER_START&lt;br /&gt;AS_SEQUENCE_NUMBER_END</column>
    <column name="ledger_view_column_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br /&gt;&lt;br /&gt; If not NULL, indicates the type of a column in a ledger view:&lt;br /&gt;&lt;br /&gt; 1 = TRANSACTION_ID&lt;br /&gt; 2 = SEQUENCE_NUMBER&lt;br /&gt; 3 = OPERATION_TYPE&lt;br /&gt; 4 = OPERATION_TYPE_DESC&lt;br/&gt;&lt;br/&gt;For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_view_column_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Database.&lt;br /&gt;&lt;br /&gt; If not NULL, contains a textual description of the the type of a column in a ledger view:&lt;br /&gt;&lt;br /&gt; TRANSACTION_ID&lt;br /&gt; SEQUENCE_NUMBER&lt;br /&gt; OPERATION_TYPE&lt;br /&gt; OPERATION_TYPE_DESC</column>
  </table>
  <table name="sys.system_objects" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-objects-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.system_objects (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains one row for all schema-scoped system objects that are included with Microsoft SQL Server. All system objects are contained in the schemas named sys or INFORMATION_SCHEMA.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, another owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no other individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; For all schema-scoped system objects that included with SQL Server, this value will always be in (schema_id('sys'), schema_id('INFORMATION_SCHEMA'))</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type. AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; VIEW&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when a clustered index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal Microsoft SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
  </table>
  <table name="sys.system_parameters" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-parameters-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.system_parameters (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains one row for each system object that has parameters.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this parameter belongs.</column>
    <column name="name" type="sysname">Name of the parameter. Is unique within the object.&lt;br /&gt;&lt;br /&gt; If the object is a scalar function, the parameter name is an empty string in the row representing the return value.</column>
    <column name="parameter_id" type="int">ID of the parameter. Is unique within the object. If the object is a scalar function, &lt;strong&gt;parameter_id&lt;/strong&gt; = 0 represents the return value.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the parameter.</column>
    <column name="user_type_id" type="int">ID of the type of the parameter as defined by the user.&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="max_length" type="smallint">Maximum length of the parameter, in bytes. Value will be -1 for when column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="precision" type="tinyint">Precision of the parameter if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the parameter if numeric-based; otherwise, 0.</column>
    <column name="is_output" type="bit">1 = Parameter is output (or return); otherwise, 0.</column>
    <column name="is_cursor_ref" type="bit">1 = Parameter is a cursor-reference parameter.</column>
    <column name="has_default_value" type="bit">1 = Parameter has default value.&lt;br /&gt;&lt;br /&gt; SQL Server only maintains default values for CLR objects in this catalog view; therefore, this column will always have a value of 0 for Transact\-SQL objects. To view the default value of a parameter in a Transact\-SQL object, query the &lt;strong&gt;definition&lt;/strong&gt; column of the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-modules-transact-sql'&gt;sys.sql_modules&lt;/a&gt; catalog view, or use the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/functions/object-definition-transact-sql'&gt;OBJECT_DEFINITION&lt;/a&gt; system function.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br /&gt;&lt;br /&gt; 0 = Content is a document fragment or the data type of the column is not &lt;strong&gt;xml&lt;/strong&gt;.</column>
    <column name="default_value" type="sql_variant">If &lt;strong&gt;has_default_value&lt;/strong&gt; is 1, the value of this column is the value of the default for the parameter; otherwise &lt;c&gt;NULL&lt;/c&gt;.</column>
    <column name="xml_collection_id" type="int">Non-zero if the data type of the parameter is &lt;strong&gt;xml&lt;/strong&gt; and the XML is typed. The value is the ID of the collection that contains the validating XML schema namespace for the parameter.&lt;br /&gt;&lt;br /&gt; 0 = There is no XML schema collection.</column>
    <column name="is_readonly" type="bit">1 =  Parameter is READONLY; otherwise, 0.</column>
    <column name="is_nullable" type="bit">1 = Parameter is nullable. (the default).&lt;br /&gt;&lt;br /&gt; 0 = Parameter is not nullable, for more efficient execution of natively-compiled stored procedures.</column>
    <column name="encryption_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type:&lt;br /&gt;&lt;br /&gt; 1 = Deterministic encryption&lt;br /&gt;&lt;br /&gt; 2 = Randomized encryption</column>
    <column name="encryption_type_desc" type="nvarchar(64)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Encryption type description:&lt;br /&gt;&lt;br /&gt; RANDOMIZED&lt;br /&gt;&lt;br /&gt; DETERMINISTIC</column>
    <column name="encryption_algorithm_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Name of encryption algorithm.&lt;br /&gt;&lt;br /&gt; Only AEAD_AES_256_CBC_HMAC_SHA_512 is supported.</column>
    <column name="column_encryption_key_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; ID of the CEK.</column>
    <column name="column_encryption_key_database_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; The name of the database where the column encryption key exists if different than the database of the column. &lt;c&gt;NULL&lt;/c&gt; if the key exists in the same database as the column.</column>
  </table>
  <table name="sys.system_sql_modules" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-sql-modules-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.system_sql_modules (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row per system object that contains an SQL language-defined module. System objects of type FN, IF, P, PC, TF, V have an associated SQL module. To identify the containing object, you can join this view to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-objects-transact-sql'&gt;sys.system_objects&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="int">Object identification number of the containing object, unique within a database.</column>
    <column name="definition" type="nvarchar(max)">SQL text that defines this module.</column>
    <column name="uses_ansi_nulls" type="bit">1 = Module was created with the SET ANSI_NULLS database option ON.&lt;br /&gt;&lt;br /&gt; Always returns 1.</column>
    <column name="uses_quoted_identifier" type="bit">1 = Module was created with SET QUOTED_IDENTIFIER ON.&lt;br /&gt;&lt;br /&gt; Always returns 1.</column>
    <column name="is_schema_bound" type="bit">0 = Module was not created with the SCHEMABINDING option.&lt;br /&gt;&lt;br /&gt; Always returns 0.</column>
    <column name="uses_database_collation" type="bit">0 = Module does not depend on the default collation of the database.&lt;br /&gt;&lt;br /&gt; Always returns 0.</column>
    <column name="is_recompiled" type="bit">0 = Procedure was not created by using the WITH RECOMPILE option.&lt;br /&gt;&lt;br /&gt; Always returns 0.</column>
    <column name="null_on_null_input" type="bit">0 = Module was not created to produce a NULL output on any NULL input.&lt;br /&gt;&lt;br /&gt; Always returns 0.</column>
    <column name="execute_as_principal_id" type="int">Always returns NULL</column>
  </table>
  <table name="sys.system_views" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-views-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.system_views (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each system view that is shipped with SQL Server. All system views are contained in the schemas named &lt;strong&gt;sys&lt;/strong&gt; or &lt;strong&gt;INFORMATION_SCHEMA&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="is_replicated" type="bit">1 = View is replicated.</column>
    <column name="has_replication_filter" type="bit">1 = View has a replication filter.</column>
    <column name="has_opaque_metadata" type="bit">1 = VIEW_METADATA option specified for view. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-view-transact-sql'&gt;CREATE VIEW (Transact-SQL)&lt;/a&gt;.</column>
    <column name="has_unchecked_assembly_data" type="bit">1 = Table contains persisted data that depends on an assembly whose definition changed during the last ALTER ASSEMBLY. Will be reset to 0 after the next successful DBCC CHECKDB or DBCC CHECKTABLE.</column>
    <column name="with_check_option" type="bit">1 = WITH CHECK OPTION was specified in the view definition.</column>
    <column name="is_date_correlation_view" type="bit">1 = View was created automatically by the system to store correlation information between &lt;strong&gt;datetime&lt;/strong&gt; columns. Creation of this view was enabled by setting DATE_CORRELATION_OPTIMIZATION to ON.</column>
  </table>
  <table name="sys.table_types" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-table-types-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.table_types (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Displays properties of user-defined table types in SQL Server. A table type is a type from which table variables or table-valued parameters could be declared. Each table type has a &lt;strong&gt;type_table_object_id&lt;/strong&gt; that is a foreign key into the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql'&gt;sys.objects&lt;/a&gt; catalog view. You can use this ID column to query various catalog views, in a way that is similar to an &lt;strong&gt;object_id&lt;/strong&gt; column of a regular table, to discover the structure of the table type such as its columns and constraints.&lt;/para&gt;</description>
    <column name="*\&lt;inherited columns&gt;*" type="">For a list of columns that this view inherits, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types (Transact-SQL)&lt;/a&gt;.</column>
    <column name="type_table_object_id" type="int">Object identification number. This number is unique within a database.</column>
    <column name="is_memory_optimized" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; The following are the possible values:&lt;br /&gt;&lt;br /&gt; 0 = is not memory optimized&lt;br /&gt;&lt;br /&gt; 1 = is memory optimized&lt;br /&gt;&lt;br /&gt; A value of 0 is the default value.&lt;br /&gt;&lt;br /&gt; Table types are always created with DURABILITY = SCHEMA_ONLY. Only the schema is persisted on disk.</column>
  </table>
  <table name="sys.tables" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-tables-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.tables (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns a row for each user table in SQL Server.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="lob_data_space_id" type="int">A nonzero value is the ID of the data space (filegroup or partition scheme) that holds the large object binary (LOB) data for this table. Examples of LOB data types include &lt;strong&gt;varbinary(max)&lt;/strong&gt;, &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;geography&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = The table does not LOB data.</column>
    <column name="filestream_data_space_id" type="int">Is the data space ID for a FILESTREAM filegroup or a partition scheme that consists of FILESTREAM filegroups.&lt;br /&gt;&lt;br /&gt; To report the name of a FILESTREAM filegroup, execute the query &lt;c&gt;SELECT FILEGROUP_NAME (filestream_data_space_id) FROM sys.tables&lt;/c&gt;.&lt;br /&gt;&lt;br /&gt; sys.tables can be joined to the following views on filestream_data_space_id = data_space_id.&lt;br /&gt;&lt;br /&gt; - sys.filegroups&lt;br /&gt;&lt;br /&gt; - sys.partition_schemes&lt;br /&gt;&lt;br /&gt; - sys.indexes&lt;br /&gt;&lt;br /&gt; - sys.allocation_units&lt;br /&gt;&lt;br /&gt; - sys.fulltext_catalogs&lt;br /&gt;&lt;br /&gt; - sys.data_spaces&lt;br /&gt;&lt;br /&gt; - sys.destination_data_spaces&lt;br /&gt;&lt;br /&gt; - sys.master_files&lt;br /&gt;&lt;br /&gt; - sys.database_files&lt;br /&gt;&lt;br /&gt; - backupfilegroup (join on filegroup_id)</column>
    <column name="max_column_id_used" type="int">Maximum column ID ever used by this table.</column>
    <column name="lock_on_bulk_load" type="bit">Table is locked on bulk load. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-tableoption-transact-sql'&gt;sp_tableoption (Transact-SQL)&lt;/a&gt;.</column>
    <column name="uses_ansi_nulls" type="bit">Table was created with the SET ANSI_NULLS database option ON.</column>
    <column name="is_replicated" type="bit">1 = Table is published using snapshot replication or transactional replication.</column>
    <column name="has_replication_filter" type="bit">1 = Table has a replication filter.</column>
    <column name="is_merge_published" type="bit">1 = Table is published using merge replication.</column>
    <column name="is_sync_tran_subscribed" type="bit">1 = Table is subscribed using an immediate updating subscription.</column>
    <column name="has_unchecked_assembly_data" type="bit">1 = Table contains persisted data that depends on an assembly whose definition changed during the last ALTER ASSEMBLY. Will be reset to 0 after the next successful DBCC CHECKDB or DBCC CHECKTABLE.</column>
    <column name="text_in_row_limit" type="int">The maximum bytes allowed for text in row.&lt;br /&gt;&lt;br /&gt; 0 = Text in row option is not set. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-tableoption-transact-sql'&gt;sp_tableoption (Transact-SQL)&lt;/a&gt;.</column>
    <column name="large_value_types_out_of_row" type="bit">1 = Large value types are stored out-of-row. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-tableoption-transact-sql'&gt;sp_tableoption (Transact-SQL)&lt;/a&gt;.</column>
    <column name="is_tracked_by_cdc" type="bit">1 = Table is enabled for change data capture. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sys-sp-cdc-enable-table-transact-sql'&gt;sys.sp_cdc_enable_table (Transact-SQL)&lt;/a&gt;.</column>
    <column name="lock_escalation" type="tinyint">The value of the LOCK_ESCALATION option for the table:&lt;br /&gt;&lt;br /&gt; 0 = TABLE&lt;br /&gt;&lt;br /&gt; 1 = DISABLE&lt;br /&gt;&lt;br /&gt; 2 = AUTO</column>
    <column name="lock_escalation_desc" type="nvarchar(60)">A text description of the lock_escalation option for the table. Possible values are: TABLE, AUTO, and DISABLE.</column>
    <column name="is_filetable" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later and Azure SQL Database.&lt;br /&gt;&lt;br /&gt; 1 = Table is a FileTable.&lt;br /&gt;&lt;br /&gt; For more information about FileTables, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/blob/filetables-sql-server'&gt;FileTables (SQL Server)&lt;/a&gt;.</column>
    <column name="durability" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later and Azure SQL Database.&lt;br /&gt;&lt;br /&gt; The following are possible values:&lt;br /&gt;&lt;br /&gt; 0 = SCHEMA_AND_DATA&lt;br /&gt;&lt;br /&gt; 1 = SCHEMA_ONLY&lt;br /&gt;&lt;br /&gt; The value of 0 is the default value.</column>
    <column name="durability_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later and Azure SQL Database.&lt;br /&gt;&lt;br /&gt; The following are the possible values:&lt;br /&gt;&lt;br /&gt; SCHEMA_ONLY&lt;br /&gt;&lt;br /&gt; SCHEMA_AND_DATA&lt;br /&gt;&lt;br /&gt; The value of SCHEMA_AND_DATA indicates that the table is a durable, in-memory table. SCHEMA_AND_DATA is the default value for memory optimized tables. The value of SCHEMA_ONLY indicates that the table data will not be persisted upon restart of the database with memory optimized objects.</column>
    <column name="is_memory_optimized" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later and Azure SQL Database.&lt;br /&gt;&lt;br /&gt; The following are the possible values:&lt;br /&gt;&lt;br /&gt; 0 = not memory optimized.&lt;br /&gt;&lt;br /&gt; 1 = is memory optimized.&lt;br /&gt;&lt;br /&gt; A value of 0 is the default value.&lt;br /&gt;&lt;br /&gt; Memory optimized tables are in-memory user tables, the schema of which is persisted on disk similar to other user tables. Memory optimized tables can be accessed from natively compiled stored procedures.</column>
    <column name="temporal_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later and Azure SQL Database.&lt;br /&gt;&lt;br /&gt; The numeric value representing the type of table:&lt;br /&gt;&lt;br /&gt; 0 = NON_TEMPORAL_TABLE&lt;br /&gt;&lt;br /&gt; 1 = HISTORY_TABLE (associated with a temporal table)&lt;br /&gt;&lt;br /&gt; 2 = SYSTEM_VERSIONED_TEMPORAL_TABLE</column>
    <column name="temporal_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later and Azure SQL Database.&lt;br /&gt;&lt;br /&gt; The text description of the type of table:&lt;br /&gt;&lt;br /&gt; NON_TEMPORAL_TABLE&lt;br /&gt;&lt;br /&gt; HISTORY_TABLE&lt;br /&gt;&lt;br /&gt; SYSTEM_VERSIONED_TEMPORAL_TABLE</column>
    <column name="history_table_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later and Azure SQL Database.&lt;br /&gt;&lt;br /&gt; When temporal_type = 2 or ledger_type = 2 returns object_id of the table that maintains historical data for a temporal table, otherwise returns NULL.</column>
    <column name="is_remote_data_archive_enabled" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later and Azure SQL Database&lt;br /&gt;&lt;br /&gt; Indicates whether the table is Stretch-enabled.&lt;br /&gt;&lt;br /&gt; 0 = The table is not Stretch-enabled.&lt;br /&gt;&lt;br /&gt; 1 = The table is Stretch-enabled.&lt;br /&gt;&lt;br /&gt; For more info, see &lt;a href='https://docs.microsoft.com/en-us/sql/sql-server/stretch-database/stretch-database'&gt;Stretch Database&lt;/a&gt;.</column>
    <column name="is_external" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, and Azure Synapse Analytics.&lt;br /&gt;&lt;br /&gt; Indicates table is an external table.&lt;br /&gt;&lt;br /&gt; 0 = The table is not an external table.&lt;br /&gt;&lt;br /&gt; 1 = The table is an external table.</column>
    <column name="history_retention_period" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;The numeric value representing duration of the temporal history retention period in units specified with history_retention_period_unit.</column>
    <column name="history_retention_period_unit" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;The numeric value representing type of temporal history retention period unit. &lt;br /&gt;&lt;br /&gt;-1: INFINITE &lt;br /&gt;&lt;br /&gt;3: DAY &lt;br /&gt;&lt;br /&gt;4: WEEK &lt;br /&gt;&lt;br /&gt;5: MONTH &lt;br /&gt;&lt;br /&gt;6: YEAR</column>
    <column name="history_retention_period_unit_desc" type="nvarchar(10)">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;The text description of type of temporal history retention period unit. &lt;br /&gt;&lt;br /&gt;INFINITE &lt;br /&gt;&lt;br /&gt;DAY &lt;br /&gt;&lt;br /&gt;WEEK &lt;br /&gt;&lt;br /&gt;MONTH &lt;br /&gt;&lt;br /&gt;YEAR</column>
    <column name="is_node" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2017 (14.x) and Azure SQL Database. &lt;br/&gt;&lt;br/&gt;1 = This is a graph Node table. &lt;br /&gt;&lt;br /&gt;0 = This is not a graph Node table.</column>
    <column name="is_edge" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;1 = This is a graph Edge table. &lt;br /&gt;&lt;br /&gt;0 = This is not a graph Edge table.</column>
    <column name="ledger_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;The numeric value indicates if the table is a ledger table.&lt;br/&gt;&lt;br/&gt;0 = NON_LEDGER_TABLE&lt;br/&gt;1 = HISTORY_TABLE (associated with an updatable ledger table)&lt;br/&gt;2 = UPDATABLE_LEDGER_TABLE&lt;br/&gt;3 = APPEND_ONLY_LEDGER_TABLE&lt;br /&gt;&lt;br /&gt;For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;The text description of a value in the ledger_type column:&lt;br/&gt;&lt;br/&gt;NON_LEDGER_TABLE&lt;br/&gt;HISTORY_TABLE&lt;br/&gt;UPDATABLE_LEDGER_TABLE&lt;br/&gt;APPEND_ONLY_LEDGER_TABLE</column>
    <column name="ledger_view_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;When ledger_type IN (2,3) returns object_id of the ledger view, otherwise returns NULL.</column>
    <column name="is_dropped_ledger_table" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;Indicates a ledger table that has been dropped.</column>
  </table>
  <table name="sys.trigger_event_types" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trigger-event-types-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.trigger_event_types (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each event or event group on which a trigger can fire.&lt;/para&gt;</description>
    <column name="type" type="int">Type of event or event group that causes a trigger to fire.</column>
    <column name="type_name" type="nvarchar(64)">Name of an event or event group. This can be specified in the FOR clause of a &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-trigger-transact-sql'&gt;CREATE TRIGGER&lt;/a&gt; statement.</column>
    <column name="parent_type" type="int">Type of event group that is the parent of the event or event group.</column>
  </table>
  <table name="sys.trigger_events" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trigger-events-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.trigger_events (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row per event for which a trigger fires.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
&lt;strong&gt;sys.trigger_events&lt;/strong&gt; does not apply to event notifications.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the trigger or event notification. This value, together with &lt;strong&gt;type&lt;/strong&gt;, uniquely identifies the row.</column>
    <column name="type" type="int">Event that causes the trigger to fire.</column>
    <column name="type_desc" type="nvarchar(60)">Description of the event that causes the trigger to fire.</column>
    <column name="is_trigger_event" type="bit">1 = Trigger event.&lt;br /&gt;&lt;br /&gt; 0 = Notification event.</column>
    <column name="event_group_type" type="int">Event group on which the trigger or event notification is created, or null if not created on an event group.</column>
    <column name="event_group_type_desc" type="nvarchar(60)">Description of the event group on which the trigger or event notification is created, or null if not created on an event group.</column>
    <column name="is_first" type="bit">Trigger is marked to be the first to fire for this event.</column>
    <column name="is_last" type="bit">Trigger is marked to be the last to fire for this event.</column>
    <column name="event_group_type" type="int">Event group on which the trigger is created, or null if not created on an event group.</column>
    <column name="event_group_type_desc" type="nvarchar(60)">Description of the event group on which the trigger is created, or null if not created on an event group.</column>
  </table>
  <table name="sys.triggers" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-triggers-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.triggers (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains a row for each object that is a trigger, with a type of TR or TA. DML trigger names are schema-scoped and, therefore, are visible in &lt;strong&gt;sys.objects&lt;/strong&gt;. DDL trigger names are scoped by the parent entity and are only visible in this view.&lt;br/&gt;
 The &lt;strong&gt;parent_class&lt;/strong&gt; and &lt;strong&gt;name&lt;/strong&gt; columns uniquely identify the trigger in the database.&lt;/para&gt;</description>
    <column name="name" type="sysname">Trigger name. DML trigger names are schema-scoped. DDL trigger names are scoped with respect to the parent entity.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="parent_class" type="tinyint">Class of the parent of the trigger.&lt;br /&gt;&lt;br /&gt; 0 = Database, for the DDL triggers.&lt;br /&gt;&lt;br /&gt; 1 = Object or column for the DML triggers.</column>
    <column name="parent_class_desc" type="nvarchar(60)">Description of the parent class of the trigger.&lt;br /&gt;&lt;br /&gt; DATABASE&lt;br /&gt;&lt;br /&gt; OBJECT_OR_COLUMN</column>
    <column name="parent_id" type="int">ID of the parent of the trigger, as follows:&lt;br /&gt;&lt;br /&gt; 0 = Triggers that are database-parented triggers.&lt;br /&gt;&lt;br /&gt; For DML triggers, this is the &lt;strong&gt;object_id&lt;/strong&gt; of the table or view on which the DML trigger is defined.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger</column>
    <column name="type_desc" type="nvarchar(60)">Description of object type.&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER</column>
    <column name="create_date" type="datetime">Date the trigger was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement.</column>
    <column name="is_ms_shipped" type="bit">Trigger created on behalf of the user by an internal SQL Server component.</column>
    <column name="is_disabled" type="bit">Trigger is disabled.</column>
    <column name="is_not_for_replication" type="bit">Trigger was created as NOT FOR REPLICATION.</column>
    <column name="is_instead_of_trigger" type="bit">1 = INSTEAD OF triggers&lt;br /&gt;&lt;br /&gt; 0 = AFTER triggers.</column>
  </table>
  <table name="sys.views" category="Object" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-views-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.views (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each view object, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = V.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="is_replicated" type="bit">1 = View is replicated.</column>
    <column name="has_replication_filter" type="bit">1 = View has a replication filter.</column>
    <column name="has_opaque_metadata" type="bit">1 = VIEW_METADATA option specified for view. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-view-transact-sql'&gt;CREATE VIEW (Transact-SQL)&lt;/a&gt;.</column>
    <column name="has_unchecked_assembly_data" type="bit">1 = View contains persisted data that depends on an assembly whose definition changed during the last ALTER ASSEMBLY. Resets to 0 after the next successful DBCC CHECKDB or DBCC CHECKTABLE.</column>
    <column name="with_check_option" type="bit">1 = WITH CHECK OPTION was specified in the view definition.</column>
    <column name="is_date_correlation_view" type="bit">1 = View was created automatically by the system to store correlation information between datetime columns. Creation of this view was enabled by setting DATE_CORRELATION_OPTIMIZATION to ON.</column>
    <column name="ledger_view_type" type="tinyint">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;The numeric value indicating if a view is a ledger view for an updatable ledger table.&lt;br/&gt;&lt;br/&gt;0 = NON_LEDGER_VIEW&lt;br/&gt;1 = LEDGER_VIEW&lt;br /&gt;&lt;br /&gt;For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;.</column>
    <column name="ledger_view_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;The text description of a value in the ledger_view_type column:&lt;br/&gt;&lt;br/&gt;NON_LEDGER_VIEW&lt;br/&gt;LEDGER_VIEW</column>
    <column name="is_dropped_ledger_view" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: Azure SQL Database. &lt;br/&gt;&lt;br/&gt;Indicates a ledger view that has been dropped.</column>
  </table>
  <table name="sys.partition_functions" category="PartitionFunction" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partition-functions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.partition_functions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each partition function in SQL Server.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the partition function. Is unique within the database.</column>
    <column name="function_id" type="int">Partition function ID. Is unique within the database.</column>
    <column name="type" type="char(2)">Function type.&lt;br /&gt;&lt;br /&gt; R = Range</column>
    <column name="type_desc" type="nvarchar(60)">Function type.&lt;br /&gt;&lt;br /&gt; RANGE</column>
    <column name="fanout" type="int">Number of partitions created by the function.</column>
    <column name="boundary_value_on_right" type="bit">For range partitioning.&lt;br /&gt;&lt;br /&gt; 1 = Boundary value is included in the RIGHT range of the boundary.&lt;br /&gt;&lt;br /&gt; 0 = LEFT.</column>
    <column name="is_system" type="">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; 1 = Object is used for full-text index fragments.&lt;br /&gt;&lt;br /&gt; 0 = Object is not used for full-text index fragments.</column>
    <column name="create_date" type="datetime">Date the function was created.</column>
    <column name="modify_date" type="datetime">Date the function was last modified using an ALTER statement.</column>
  </table>
  <table name="sys.partition_parameters" category="PartitionFunction" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partition-parameters-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.partition_parameters (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each parameter of a partition function.&lt;/para&gt;</description>
    <column name="function_id" type="int">ID of the partition function to which this parameter belongs.</column>
    <column name="parameter_id" type="int">ID of the parameter. Is unique within the partition function, beginning with 1.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the parameter. Corresponds to the &lt;strong&gt;system_type_id&lt;/strong&gt; column of the &lt;strong&gt;sys.types&lt;/strong&gt; catalog view.</column>
    <column name="max_length" type="smallint">Maximum length of the parameter in bytes.</column>
    <column name="precision" type="tinyint">Precision of the parameter if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of the parameter if numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the parameter if character-based; otherwise, NULL.</column>
    <column name="user_type_id" type="int">ID of the type. Is unique within the database. For system data types, &lt;strong&gt;user_type_id&lt;/strong&gt; = &lt;strong&gt;system_type_id&lt;/strong&gt;.</column>
  </table>
  <table name="sys.partition_range_values" category="PartitionFunction" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-partition-range-values-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.partition_range_values (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each range boundary value of a partition function of type R.&lt;/para&gt;</description>
    <column name="function_id" type="int">ID of the partition function for this range boundary value.</column>
    <column name="boundary_id" type="int">ID (1-based ordinal) of the boundary value tuple, with left-most boundary starting at an ID of 1.</column>
    <column name="parameter_id" type="int">ID of the parameter of the function to which this value corresponds. The values in this column correspond with those in the &lt;strong&gt;parameter_id&lt;/strong&gt; column of the &lt;strong&gt;sys.partition_parameters&lt;/strong&gt; catalog view for any particular &lt;strong&gt;function_id&lt;/strong&gt;.</column>
    <column name="value" type="sql_variant">The actual boundary value.</column>
  </table>
  <table name="dbo.syspolicy_conditions" category="PolicyBasedManagement" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-conditions-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syspolicy_conditions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Displays one row for each Policy-Based Management condition in the instance of SQL Server. syspolicy_conditions belongs to the dbo schema in the msdb database. The following table describes the columns in the syspolicy_conditions view.&lt;/para&gt;</description>
    <column name="condition_id" type="int">Identifier of this condition. Each condition represents a collection of one or more condition expressions.</column>
    <column name="name" type="sysname">Name of the condition.</column>
    <column name="date_created" type="datetime">Date and time the condition was created.</column>
    <column name="description" type="nvarchar(max)">Description of the condition. The description column is optional and can be NULL.</column>
    <column name="created_by" type="sysname">Login that created the condition.</column>
    <column name="modified_by" type="sysname">Login that most recently modified the condition. Is NULL if never modified.</column>
    <column name="date_modified" type="datetime">Date and time the condition was created. Is NULL if never modified.</column>
    <column name="is_name_condition" type="smallint">Specifies whether the condition is a naming condition.&lt;br /&gt;&lt;br /&gt; 0 = The condition expression does not contain the @Name variable.&lt;br /&gt;&lt;br /&gt; 1 = The condition expression contains the @Name variable.</column>
    <column name="facet" type="nvarchar(max)">Name of the facet that the condition is based on.</column>
    <column name="Expression" type="nvarchar(max)">Expression of the facet states.</column>
    <column name="obj_name" type="sysname">The object name assigned to @Name if the condition expression contains this variable.</column>
  </table>
  <table name="dbo.syspolicy_policies" category="PolicyBasedManagement" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policies-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syspolicy_policies (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Displays one row for each Policy-Based Management policy in the instance of SQL Server. syspolicy_policies belongs to the dbo schema in the msdb database. The following table describes the columns in the syspolicy_policies view.&lt;/para&gt;</description>
    <column name="policy_id" type="int">Identifier of the policy.</column>
    <column name="name" type="sysname">Name of the policy.</column>
    <column name="condition_id" type="int">ID of the condition enforced or tested by this policy.</column>
    <column name="root_condition_id" type="int">For internal use only.</column>
    <column name="date_created" type="datetime">Date and time the policy was created.</column>
    <column name="execution_mode" type="int">Evaluation mode for the policy. Possible values are as follows:&lt;br /&gt;&lt;br /&gt; 0 = On demand&lt;br /&gt;&lt;br /&gt; This mode evaluates the policy when directly specified by the user.&lt;br /&gt;&lt;br /&gt; 1 = On change: prevent&lt;br /&gt;&lt;br /&gt; This automated mode uses DDL triggers to prevent policy violations.&lt;br /&gt;&lt;br /&gt; 2 = On change: log only&lt;br /&gt;&lt;br /&gt; This automated mode uses event notification to evaluate a policy when a relevant change occurs and logs policy violations.&lt;br /&gt;&lt;br /&gt; 4 = On schedule&lt;br /&gt;&lt;br /&gt; This automated mode uses a SQL Server Agent job to periodically evaluate a policy. The mode logs policy violations.&lt;br /&gt;&lt;br /&gt; Note: The value 3 is not a possible value.</column>
    <column name="policy_category" type="int">ID of the Policy-Based Management policy category that this policy belongs to. Is NULL if it is the default policy group.</column>
    <column name="schedule_uid" type="uniqueidentifier">When the execution_mode is On schedule, contains the ID of the schedule; otherwise, is NULL.</column>
    <column name="description" type="nvarchar(max)">Description of the policy. The description column is optional and can be NULL.</column>
    <column name="help_text" type="nvarchar(4000)">The hyperlink text that belongs to help_link.</column>
    <column name="help_link" type="nvarchar(2083)">The additional help hyperlink that is assigned to the policy by the policy creator.</column>
    <column name="object_set_id" type="int">ID of the object set that the policy evaluates.</column>
    <column name="is_enabled" type="bit">Indicates whether the policy is currently enabled (1) or disabled (0).</column>
    <column name="job_id" type="uniqueidentifier">When the execution_mode is On schedule, contains the ID of the SQL Server Agent job that runs the policy.</column>
    <column name="created_by" type="sysname">Login that created the policy.</column>
    <column name="modified_by" type="sysname">Login that most recently modified the policy. Is NULL if never modified.</column>
    <column name="date_modified" type="datetime">Date and time the policy was created. Is NULL if never modified.</column>
  </table>
  <table name="dbo.syspolicy_policy_execution_history" category="PolicyBasedManagement" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policy-execution-history-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syspolicy_policy_execution_history (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Displays the time when policies were executed, the result of each execution, and details about errors if any occurred. The following table describes the columns in the syspolicy_policy_execution_history view.&lt;/para&gt;</description>
    <column name="history_id" type="bigint">Identifier of this record. Each record indicates a policy and one time that it was initiated.</column>
    <column name="policy_id" type="int">Identifier of the policy.</column>
    <column name="start_date" type="datetime">Date and time this policy tried to run.</column>
    <column name="end_date" type="datetime">Time this policy finished running.</column>
    <column name="result" type="bit">Success or failure of the policy. 0 = Failure, 1 = Success.</column>
    <column name="exception_message" type="nvarchar(max)">Message generated by the exception if one occurred.</column>
    <column name="exception" type="nvarchar(max)">Description of the exception if one occurred.</column>
  </table>
  <table name="dbo.syspolicy_policy_execution_history_details" category="PolicyBasedManagement" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policy-execution-history-details-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syspolicy_policy_execution_history_details (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Displays the condition expressions that were executed, the targets of the expressions, the result of each execution, and details about errors if any occurred. The following table describes the columns in the syspolicy_execution_history_details view.&lt;/para&gt;</description>
    <column name="detail_id" type="bigint">Identifier of this record. Each record represents the attempt to evaluate or enforce one condition expression in a policy. If applied to multiple targets, each condition will have a detail record for each target.</column>
    <column name="history_id" type="bigint">Identifier of the history event. Each history event represents one try to execute a policy. Because a condition can have several condition expressions and several targets, a history_id can create several detail records. Use the history_id column to join this view to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policy-execution-history-transact-sql'&gt;syspolicy_policy_execution_history&lt;/a&gt; view.</column>
    <column name="target_query_expression" type="nvarchar(max)">Target of the policy and syspolicy_policy_execution_history view.</column>
    <column name="execution_date" type="datetime">Date and time that this detail record was created.</column>
    <column name="result" type="bit">Success or failure of this target and condition expression evaluation:&lt;br /&gt;&lt;br /&gt; 0 (success) or 1 (failure).</column>
    <column name="result_detail" type="nvarchar(max)">Result message. Only available if provided by the facet.</column>
    <column name="exception_message" type="nvarchar(max)">Message generated by the exception if one occurred.</column>
    <column name="exception" type="nvarchar(max)">Description of the exception if one occurred.</column>
  </table>
  <table name="dbo.syspolicy_policy_categories" category="PolicyBasedManagement" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policy-categories-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syspolicy_policy_categories (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Displays one row for each Policy-Based Management policy category in the instance of SQL Server. Policy categories help you organize policies when you have many policies. The following table describes the columns in the syspolicy_policy_groups view.&lt;/para&gt;</description>
    <column name="policy_category_id" type="int">Identifier of the policy category.</column>
    <column name="name" type="sysname">Name of the policy category.</column>
    <column name="mandate_database_subscriptions" type="bit">Indicates whether the policy category applies to all databases in an instance without an explicit subscription (1) or the policy category must be applied to a database by using an explicit subscription (0).</column>
  </table>
  <table name="dbo.syspolicy_policy_category_subscriptions" category="PolicyBasedManagement" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-policy-category-subscriptions-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syspolicy_policy_category_subscriptions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Displays one row for each Policy-Based Management subscription in the instance of SQL Server. Each row describes a target and policy category pair. The following table describes the columns in the syspolicy_policy_group_subscriptions view.&lt;/para&gt;</description>
    <column name="policy_category_subscription_id" type="int">Identifier of this record.</column>
    <column name="target_type" type="sysname">Type of database object that is the target of this subscription.</column>
    <column name="target_object" type="sysname">Name of the target object.</column>
    <column name="policy_category_id" type="int">ID of the policy category that is applied to the target.</column>
  </table>
  <table name="dbo.syspolicy_system_health_state" category="PolicyBasedManagement" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/syspolicy-system-health-state-transact-sql" database="msdb">
    <description>&lt;para&gt;&lt;strong&gt;syspolicy_system_health_state (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Displays one row for each Policy-Based Management policy and target query expression combination. Use the syspolicy_system_health_state view to programmatically check the policy health of the server. The following table describes the columns in the syspolicy_system_health_state view.&lt;/para&gt;</description>
    <column name="health_state_id" type="bigint">Identifier of the policy health state record.</column>
    <column name="policy_id" type="int">Identifier of the policy.</column>
    <column name="last_run_date" type="datetime">Date and time the policy was last run.</column>
    <column name="target_query_expression_with_id" type="nvarchar(400)">The target expression, with values assigned to identity variables, that defines the target against which the policy is evaluated.</column>
    <column name="target_query_expression" type="nvarchar(max)">The epxression that defines the target against which the policy is evaluated.</column>
    <column name="result" type="bit">Health state of this target with regard to the policy:&lt;br /&gt;&lt;br /&gt; 0 = Failure&lt;br /&gt;&lt;br /&gt; 1 = Success</column>
  </table>
  <table name="sys.resource_governor_configuration" category="ResourceGovernor" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-governor-configuration-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.resource_governor_configuration (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns the stored Resource Governor state.&lt;/para&gt;</description>
    <column name="classifier_function_id" type="int">The ID of the classifier function as it is stored in the metadata. Is not nullable.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Note&lt;/strong&gt; This function is used to classify new sessions and uses rules to route the workload to the appropriate workload group. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/resource-governor/resource-governor'&gt;Resource Governor&lt;/a&gt;.</column>
    <column name="is_enabled" type="bit">Indicates the current state of the Resource Governor:&lt;br /&gt;&lt;br /&gt; 0 = Resource Governor is not enabled.&lt;br /&gt;&lt;br /&gt; 1 = Resource Governor is enabled.&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="max_outstanding_io_per_volume" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; The maximum number of outstanding I/O per volume.</column>
  </table>
  <table name="sys.resource_governor_external_resource_pools" category="ResourceGovernor" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-governor-external-resource-pools-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.resource_governor_external_resource_pools (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server 2016 (13.x) R Services (In-Database) and SQL Server 2017 (14.x) Machine Learning Services&lt;br/&gt;
Returns the stored external resource pool configuration in SQL Server. Each row of the view determines the configuration of a pool.&lt;/para&gt;</description>
    <column name="external_pool_id" type="int">Unique ID of the resource pool. Is not nullable.</column>
    <column name="name" type="sysname">Name of the resource pool. Is not nullable.</column>
    <column name="max_cpu_percent" type="int">Maximum average CPU bandwidth allowed for all requests in the resource pool when there is CPU contention. Is not nullable.</column>
    <column name="max_memory_percent" type="int">Percentage of total server memory that can be used by requests in this resource pool. Is not nullable. The effective maximum depends on the pool minimums. For example, max_memory_percent can be set to 100, but the effective maximum is lower.</column>
    <column name="max_processes" type="int">Maximum number of concurrent external processes. The default value, 0, specifies no limit. Is not nullable.</column>
    <column name="version" type="bigint">Internal version number.</column>
  </table>
  <table name="sys.resource_governor_resource_pools" category="ResourceGovernor" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-governor-resource-pools-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.resource_governor_resource_pools (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns the stored resource pool configuration in SQL Server. Each row of the view determines the configuration of a pool.&lt;/para&gt;</description>
    <column name="pool_id" type="int">Unique ID of the resource pool. Is not nullable.</column>
    <column name="name" type="sysname">Name of the resource pool. Is not nullable.</column>
    <column name="min_cpu_percent" type="int">Guaranteed average CPU bandwidth for all requests in the resource pool when there is CPU contention. Is not nullable.</column>
    <column name="max_cpu_percent" type="int">Maximum average CPU bandwidth allowed for all requests in the resource pool when there is CPU contention. Is not nullable.</column>
    <column name="min_memory_percent" type="int">Guaranteed amount of memory for all requests in the resource pool. This is not shared with other resource pools. Is not nullable.</column>
    <column name="max_memory_percent" type="int">Percentage of total server memory that can be used by requests in this resource pool. Is not nullable. The effective maximum depends on the pool minimums. For example, max_memory_percent can be set to 100, but the effective maximum is lower.</column>
    <column name="cap_cpu_percent" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; Hard cap on the CPU bandwidth that all requests in the resource pool will receive. Limits the maximum CPU bandwidth to the specified level. The allowed range for value is from 1 through 100.</column>
    <column name="min_iops_per_volume" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; The minimum I/O operations per second (IOPS) per volume setting for this pool. 0 = no reservation. Cannot be null.</column>
    <column name="max_iops_per_volume" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; The maximum I/O operations per second (IOPS) per volume setting for this pool. 0 = unlimited. Cannot be null.</column>
  </table>
  <table name="sys.resource_governor_workload_groups" category="ResourceGovernor" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-resource-governor-workload-groups-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.resource_governor_workload_groups (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns the stored workload group configuration in SQL Server. Each workload group can subscribe to one and only one resource pool.&lt;/para&gt;</description>
    <column name="group_id" type="int">Unique ID of the workload group. Is not nullable.</column>
    <column name="name" type="sysname">Name of the workload group. Is not nullable.</column>
    <column name="importance" type="sysname">&lt;strong&gt;Note:&lt;/strong&gt; Importance only applies to workload groups in the same resource pool.&lt;br /&gt;&lt;br /&gt; Is the relative importance of a request in this workload group. Importance is one of the following, with MEDIUM being the default: LOW, MEDIUM, HIGH.&lt;br /&gt;&lt;br /&gt; Is not nullable.</column>
    <column name="request_max_memory_grant_percent" type="int">Maximum memory grant, as a percentage, for a single request. The default value is 25. Is not nullable.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; If this setting is higher than 50 percent, large queries will run one at a time. Therefore, there is greater risk of getting an out-of-memory error while the query is running.</column>
    <column name="request_max_cpu_time_sec" type="int">Maximum CPU use limit, in seconds, for a single request. The default value, 0, specifies no limit. Is not nullable.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Note:&lt;/strong&gt; For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/cpu-threshold-exceeded-event-class'&gt;CPU Threshold Exceeded Event Class&lt;/a&gt;.</column>
    <column name="request_memory_grant_timeout_sec" type="int">Memory grant time-out, in seconds, for a single request. The default value, 0, uses an internal calculation based on query cost. Is not nullable.</column>
    <column name="max_dop" type="int">Maximum degree of parallelism for the workload group. The default value, 0, uses global settings. Is not nullable.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Node:&lt;/strong&gt; This setting will override the query option &lt;strong&gt;maxdop&lt;/strong&gt;.</column>
    <column name="group_max_requests" type="int">Maximum number of concurrent requests. The default value, 0, specifies no limit. Is not nullable.</column>
    <column name="pool_id" type="int">ID of the resource pool that this workload group uses.</column>
    <column name="external_pool_id" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later.&lt;br /&gt;&lt;br /&gt; ID of the external resource pool that this workload group uses.</column>
  </table>
  <table name="sys.database_query_store_options" category="QueryStore" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-query-store-options-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_query_store_options (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Returns the Query Store options for this database.&lt;br/&gt;
&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server (SQL Server 2016 (13.x) and later), SQL Database.&lt;/para&gt;</description>
    <column name="desired_state" type="smallint">Indicates the desired operation mode of Query Store, explicitly set by user.&lt;br /&gt; 0 = OFF &lt;br /&gt; 1 = READ_ONLY&lt;br /&gt; 2 = READ_WRITE</column>
    <column name="desired_state_desc" type="nvarchar(60)">Textual description of the desired operation mode of Query Store:&lt;br /&gt;OFF&lt;br /&gt;READ_ONLY&lt;br /&gt;READ_WRITE</column>
    <column name="actual_state" type="smallint">Indicates the operation mode of Query Store. In addition to list of desired states required by the user, actual state can be an error state.&lt;br /&gt; 0 = OFF &lt;br /&gt; 1 = READ_ONLY&lt;br /&gt; 2 = READ_WRITE&lt;br /&gt; 3 = ERROR</column>
    <column name="actual_state_desc" type="nvarchar(60)">Textual description of the actual operation mode of Query Store.&lt;br /&gt;OFF&lt;br /&gt;READ_ONLY&lt;br /&gt;READ_WRITE&lt;br /&gt;ERROR&lt;br /&gt;&lt;br /&gt; There are situations when actual state is different from the desired state:&lt;br /&gt;-  If the database is set to read-only mode or if Query Store size exceeds its configured quota, Query Store may operate in read-only mode even if read-write was specified by the user.&lt;br /&gt;-  In extreme scenarios Query Store can enter an ERROR state because of internal errors. Starting with SQL Server 2017 (14.x), if this happens, Query Store can be recovered by executing the &lt;c&gt;sp_query_store_consistency_check&lt;/c&gt; stored procedure in the affected database. If running &lt;c&gt;sp_query_store_consistency_check&lt;/c&gt; doesn't work, or if you are using SQL Server 2016 (13.x), you will need to clear the data by running &lt;c&gt;ALTER DATABASE [YourDatabaseName] SET QUERY_STORE CLEAR ALL;&lt;/c&gt;</column>
    <column name="readonly_reason" type="int">When the &lt;strong&gt;desired_state_desc&lt;/strong&gt; is READ_WRITE and the &lt;strong&gt;actual_state_desc&lt;/strong&gt; is READ_ONLY, &lt;strong&gt;readonly_reason&lt;/strong&gt; returns a bit map to indicate why the Query Store is in readonly mode.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;1&lt;/strong&gt; - database is in read-only mode&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;2&lt;/strong&gt; - database is in single-user mode&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;4&lt;/strong&gt; - database is in emergency mode&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;8&lt;/strong&gt; - database is secondary replica (applies to Always On and Azure SQL Database geo-replication). This value can be effectively observed only on &lt;strong&gt;readable&lt;/strong&gt; secondary replicas&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;65536&lt;/strong&gt; - the Query Store has reached the size limit set by the &lt;c&gt;MAX_STORAGE_SIZE_MB&lt;/c&gt; option. For more information about this option, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql-set-options'&gt;ALTER DATABASE SET options (Transact-SQL)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;131072&lt;/strong&gt; - The number of different statements in Query Store has reached the internal memory limit. Consider removing queries that you do not need or upgrading to a higher service tier to enable transferring Query Store to read-write mode.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;262144&lt;/strong&gt; - Size of in-memory items waiting to be persisted on disk has reached the internal memory limit. Query Store will be  in read-only mode temporarily until the in-memory items are persisted on disk. &lt;br /&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;524288&lt;/strong&gt; - Database has reached disk size limit. Query Store is part of user database, so if there is no more available space for a database, that means that Query Store cannot grow further anymore.&lt;br /&gt;&lt;br /&gt; &lt;br /&gt; To switch the Query Store operations mode back to read-write, see &lt;strong&gt;Verify Query Store is Collecting Query Data Continuously&lt;/strong&gt; section of &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/performance/best-practice-with-the-query-store#Verify'&gt;Best Practice with the Query Store&lt;/a&gt;.</column>
    <column name="current_storage_size_mb" type="bigint">Size of Query Store on disk in megabytes.</column>
    <column name="flush_interval_seconds" type="bigint">The period for regular flushing of Query Store data to disk in seconds. Default value is &lt;strong&gt;900&lt;/strong&gt; (15 min).&lt;br /&gt;&lt;br /&gt; Change by using the &lt;c&gt;ALTER DATABASE &lt;database&gt; SET QUERY_STORE (DATA_FLUSH_INTERVAL_SECONDS  = &lt;interval&gt;)&lt;/c&gt; statement.</column>
    <column name="interval_length_minutes" type="bigint">The statistics aggregation interval in minutes. Arbitrary values are not allowed. Use one of the following: 1, 5, 10, 15, 30, 60, and 1440 minutes. The default value is &lt;strong&gt;60&lt;/strong&gt; minutes.</column>
    <column name="max_storage_size_mb" type="bigint">Maximum disk size for the Query Store in megabytes (MB). Default value is &lt;strong&gt;100&lt;/strong&gt; MB up to SQL Server 2017 (14.x), and &lt;strong&gt;1 GB&lt;/strong&gt; starting with SQL Server 2019 (15.x) .&lt;br /&gt;For SQL Database Premium edition, default is 1 GB and for SQL Database Basic edition, default is 10 MB.&lt;br /&gt;&lt;br /&gt; Change by using the &lt;c&gt;ALTER DATABASE &lt;database&gt; SET QUERY_STORE (MAX_STORAGE_SIZE_MB = &lt;size&gt;)&lt;/c&gt; statement.</column>
    <column name="stale_query_threshold_days" type="bigint">Number of days that the information for a query is kept in the Query Store. Default value is &lt;strong&gt;30&lt;/strong&gt;. Set to 0 to disable the retention policy.&lt;br /&gt;For SQL Database Basic edition, default is 7 days.&lt;br /&gt;&lt;br /&gt; Change by using the &lt;c&gt;ALTER DATABASE &lt;database&gt; SET QUERY_STORE ( CLEANUP_POLICY = ( STALE_QUERY_THRESHOLD_DAYS = &lt;value&gt; ) )&lt;/c&gt; statement.</column>
    <column name="max_plans_per_query" type="bigint">Limits the maximum number of stored plans. Default value is &lt;strong&gt;200&lt;/strong&gt;. If the maximum value is reached, Query Store stops capturing new plans for that query. Setting to 0 removes the limitation with regards to the number of captured plans.&lt;br /&gt;&lt;br /&gt; Change by using the &lt;c&gt;ALTER DATABASE&lt;database&gt; SET QUERY_STORE (MAX_PLANS_PER_QUERY = &lt;n&gt;)&lt;/c&gt; statement.</column>
    <column name="query_capture_mode" type="smallint">The currently active query capture mode:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;1&lt;/strong&gt; = ALL - all queries are captured. This is the default configuration value for SQL Server (SQL Server 2016 (13.x) and later).&lt;br /&gt;&lt;br /&gt; 2 = AUTO - capture relevant queries based on execution count and resource consumption. This is the default configuration value for SQL Database.&lt;br /&gt;&lt;br /&gt; 3 = NONE - stop capturing new queries. Query Store will continue to collect compile and runtime statistics for queries that were captured already. Use this configuration cautiously since you may miss capturing important queries. &lt;br /&gt;&lt;br /&gt; 4 = CUSTOM - Allows additional control over the query capture policy using the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql-set-options#SettingOptions'&gt;QUERY_CAPTURE_POLICY options&lt;/a&gt;.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later.</column>
    <column name="query_capture_mode_desc" type="nvarchar(60)">Textual description of the actual capture mode of Query Store:&lt;br /&gt;&lt;br /&gt; ALL (default for SQL Server 2016 (13.x))&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;AUTO&lt;/strong&gt; (default for SQL Database)&lt;br /&gt;&lt;br /&gt; NONE &lt;br /&gt;&lt;br /&gt; CUSTOM</column>
    <column name="capture_policy_execution_count" type="int">Query Capture Mode CUSTOM policy option. Defines the number of times a query is executed over the evaluation period. The default is 30.&lt;br /&gt;&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later.</column>
    <column name="capture_policy_total_compile_cpu_time_ms" type="bigint">Query Capture Mode CUSTOM policy option. Defines total elapsed compile CPU time used by a query over the evaluation period. The default is 1000.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later.</column>
    <column name="capture_policy_total_execution_cpu_time_ms" type="bigint">Query Capture Mode CUSTOM policy option. Defines total elapsed execution CPU time used by a query over the evaluation period. The default is 100.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later.</column>
    <column name="capture_policy_stale_threshold_hours" type="int">Query Capture Mode CUSTOM policy option. Defines the evaluation interval period to determine if a query should be captured. The default is 24 hours.&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) and later.</column>
    <column name="size_based_cleanup_mode" type="smallint">Controls whether cleanup will be automatically activated when total amount of data gets close to maximum size:&lt;br /&gt;&lt;br /&gt; 0 = OFF - size-based cleanup won't be automatically activated.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;1&lt;/strong&gt; = AUTO - size-based cleanup will be automatically activated when size on disk reaches &lt;strong&gt;90 percent&lt;/strong&gt; of *max_storage_size_mb*. This is the default configuration value.&lt;br /&gt;&lt;br /&gt;Size-based cleanup removes the least expensive and oldest queries first. It stops when approximately &lt;strong&gt;80 percent&lt;/strong&gt; of *max_storage_size_mb* is reached.</column>
    <column name="size_based_cleanup_mode_desc" type="nvarchar(60)">Textual description of the actual size-based cleanup mode of Query Store:&lt;br /&gt;&lt;br /&gt; OFF &lt;br /&gt; &lt;strong&gt;AUTO&lt;/strong&gt; (default)</column>
    <column name="wait_stats_capture_mode" type="smallint">Controls whether Query Store performs capture of wait statistics: &lt;br /&gt;&lt;br /&gt; 0 = OFF &lt;br /&gt; &lt;strong&gt;1&lt;/strong&gt; = ON&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2017 (14.x) and later.</column>
    <column name="wait_stats_capture_mode_desc" type="nvarchar(60)">Textual description of the actual wait statistics capture mode: &lt;br /&gt;&lt;br /&gt; OFF &lt;br /&gt; &lt;strong&gt;ON&lt;/strong&gt; (default)&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2017 (14.x) and later.</column>
    <column name="actual_state_additional_info" type="nvarchar(8000)">Currently unused. May be implemented in the future.</column>
  </table>
  <table name="sys.query_context_settings" category="QueryStore" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-context-settings-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.query_context_settings (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Contains  information about the semantics affecting context settings associated with a query. There are a number of context settings available in SQL Server that influence the query semantics (defining the correct result of the query). The same query text compiled under different settings may produce different results (depending on the underlying data).&lt;/para&gt;</description>
    <column name="context_settings_id" type="bigint">Primary key. This value is exposed in Showplan XML for queries.</column>
    <column name="set_options" type="varbinary(8)">Bit mask reflecting state of several SET options. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-exec-plan-attributes-transact-sql'&gt;sys.dm_exec_plan_attributes (Transact-SQL)&lt;/a&gt;.</column>
    <column name="language_id" type="smallint">The id of the language. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syslanguages-transact-sql'&gt;sys.syslanguages (Transact-SQL)&lt;/a&gt;.</column>
    <column name="date_format" type="smallint">The date format. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/set-dateformat-transact-sql'&gt;SET DATEFORMAT (Transact-SQL)&lt;/a&gt;.</column>
    <column name="date_first" type="tinyint">The date first value. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/set-datefirst-transact-sql'&gt;SET DATEFIRST (Transact-SQL)&lt;/a&gt;.</column>
    <column name="status" type="varbinary(2)">Bitmask field that indicates type of query or context in which query was executed. &lt;br /&gt;Column value can be combination of multiple flags (expressed in hexadecimal):&lt;br /&gt;&lt;br /&gt; 0x0 - regular query (no specific flags)&lt;br /&gt;&lt;br /&gt; 0x1 - query that was executed through one of the cursor APIs stored procedures&lt;br /&gt;&lt;br /&gt; 0x2 - query for notification&lt;br /&gt;&lt;br /&gt; 0x4 - internal query&lt;br /&gt;&lt;br /&gt; 0x8 - auto parameterized query without universal parameterization&lt;br /&gt;&lt;br /&gt; 0x10 - cursor fetch refresh query&lt;br /&gt;&lt;br /&gt; 0x20 - query that is being used in cursor update requests&lt;br /&gt;&lt;br /&gt; 0x40 - initial result set is returned when a cursor is opened (Cursor Auto Fetch)&lt;br /&gt;&lt;br /&gt; 0x80 - encrypted query&lt;br /&gt;&lt;br /&gt; 0x100 - query in context of row-level security predicate</column>
    <column name="required_cursor_options" type="int">Cursor options specified by the user such as the cursor type.</column>
    <column name="acceptable_cursor_options" type="int">Cursor options that SQL Server may implicitly convert to in order to support the execution of the statement.</column>
    <column name="merge_action_type" type="smallint">The type of trigger execution plan used as the result of a &lt;strong&gt;MERGE&lt;/strong&gt; statement.&lt;br /&gt;&lt;br /&gt; 0 indicates a non-trigger plan, a trigger plan that does not execute as the result of a &lt;strong&gt;MERGE&lt;/strong&gt; statement, or a trigger plan that executes as the result of a &lt;strong&gt;MERGE&lt;/strong&gt; statement that only specifies a &lt;strong&gt;DELETE&lt;/strong&gt; action.&lt;br /&gt;&lt;br /&gt; 1 indicates an &lt;strong&gt;INSERT&lt;/strong&gt; trigger plan that runs as the result of a &lt;strong&gt;MERGE&lt;/strong&gt; statement.&lt;br /&gt;&lt;br /&gt; 2 indicates an &lt;strong&gt;UPDATE&lt;/strong&gt; trigger plan that runs as the result of a &lt;strong&gt;MERGE&lt;/strong&gt; statement.&lt;br /&gt;&lt;br /&gt; 3 indicates a &lt;strong&gt;DELETE&lt;/strong&gt; trigger plan that runs as the result of a &lt;strong&gt;MERGE&lt;/strong&gt; statement containing a corresponding &lt;strong&gt;INSERT&lt;/strong&gt; or &lt;strong&gt;UPDATE&lt;/strong&gt; action.&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; For nested triggers run by cascading actions, this value is the action of the &lt;strong&gt;MERGE&lt;/strong&gt; statement that caused the cascade.</column>
    <column name="default_schema_id" type="int">ID of the default schema, which is used to resolve names that are not fully qualified.</column>
    <column name="is_replication_specific" type="bit">Used for replication.</column>
    <column name="is_contained" type="varbinary(1)">1 indicates a contained database.</column>
  </table>
  <table name="sys.query_store_plan" category="QueryStore" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-plan-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.query_store_plan (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Contains information about each execution plan associated with a query.&lt;/para&gt;</description>
    <column name="plan_id" type="bigint">Primary key.</column>
    <column name="query_id" type="bigint">Foreign key. Joins to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-query-transact-sql'&gt;sys.query_store_query (Transact-SQL)&lt;/a&gt;.</column>
    <column name="plan_group_id" type="bigint">ID of the plan group. Cursor queries typically require multiple (populate and fetch) plans. Populate and fetch plans that are compiled together are in the same group.&lt;br /&gt;&lt;br /&gt; 0 means plan is not in a group.</column>
    <column name="engine_version" type="nvarchar(32)">Version of the engine used to compile the plan in &lt;strong&gt;'major.minor.build.revision'&lt;/strong&gt; format.</column>
    <column name="compatibility_level" type="smallint">Database compatibility level of the database referenced in the query.</column>
    <column name="query_plan_hash" type="binary(8)">MD5 hash of the individual plan.</column>
    <column name="query_plan" type="nvarchar(max)">Showplan XML for the query plan.</column>
    <column name="is_online_index_plan" type="bit">Plan was used during an online index build. &lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="is_trivial_plan" type="bit">Plan is a trivial plan (output in stage 0 of query optimizer). &lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="is_parallel_plan" type="bit">Plan is parallel. &lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return one (1).</column>
    <column name="is_forced_plan" type="bit">Plan is marked as forced when user executes stored procedure &lt;strong&gt;sys.sp_query_store_force_plan&lt;/strong&gt;. Forcing mechanism *does not guarantee* that exactly this plan will be used for the query referenced by &lt;strong&gt;query_id&lt;/strong&gt;. Plan forcing causes query to be compiled again and typically produces exactly the same or similar plan to the plan referenced by &lt;strong&gt;plan_id&lt;/strong&gt;. If plan forcing does not succeed, &lt;strong&gt;force_failure_count&lt;/strong&gt; is incremented and &lt;strong&gt;last_force_failure_reason&lt;/strong&gt; is populated with the failure reason. &lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="is_natively_compiled" type="bit">Plan includes natively compiled memory optimized procedures. (0 = FALSE, 1 = TRUE). &lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="force_failure_count" type="bigint">Number of times that forcing this plan has failed. It can be incremented only when the query is recompiled (*not on every execution*). It is reset to 0 every time &lt;strong&gt;is_plan_forced&lt;/strong&gt; is changed from &lt;strong&gt;FALSE&lt;/strong&gt; to &lt;strong&gt;TRUE&lt;/strong&gt;. &lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_force_failure_reason" type="int">Reason why plan forcing failed.&lt;br /&gt;&lt;br /&gt; 0: no failure, otherwise error number of the error that caused the forcing to fail&lt;br /&gt;&lt;br /&gt; 8637: ONLINE_INDEX_BUILD&lt;br /&gt;&lt;br /&gt; 8683: INVALID_STARJOIN&lt;br /&gt;&lt;br /&gt; 8684: TIME_OUT&lt;br /&gt;&lt;br /&gt; 8689: NO_DB&lt;br /&gt;&lt;br /&gt; 8690: HINT_CONFLICT&lt;br /&gt;&lt;br /&gt; 8691: SETOPT_CONFLICT&lt;br /&gt;&lt;br /&gt; 8694: DQ_NO_FORCING_SUPPORTED&lt;br /&gt;&lt;br /&gt; 8698: NO_PLAN&lt;br /&gt;&lt;br /&gt; 8712: NO_INDEX&lt;br /&gt;&lt;br /&gt; 8713: VIEW_COMPILE_FAILED&lt;br /&gt;&lt;br /&gt; \&lt;other value&gt;: GENERAL_FAILURE &lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_force_failure_reason_desc" type="nvarchar(128)">Textual description of last_force_failure_reason_desc.&lt;br /&gt;&lt;br /&gt; ONLINE_INDEX_BUILD: query tries to modify data while target table has an index that is being built online&lt;br /&gt;&lt;br /&gt; INVALID_STARJOIN: plan contains invalid StarJoin specification&lt;br /&gt;&lt;br /&gt; TIME_OUT: Optimizer exceeded number of allowed operations while searching for plan specified by forced plan&lt;br /&gt;&lt;br /&gt; NO_DB: A database specified in the plan does not exist&lt;br /&gt;&lt;br /&gt; HINT_CONFLICT: Query cannot be compiled because plan conflicts with a query hint&lt;br /&gt;&lt;br /&gt; DQ_NO_FORCING_SUPPORTED: Cannot execute query because plan conflicts with use of distributed query or full-text operations.&lt;br /&gt;&lt;br /&gt; NO_PLAN: Query processor could not produce query plan because forced plan could not be verified to be valid for the query&lt;br /&gt;&lt;br /&gt; NO_INDEX: Index specified in plan no longer exists&lt;br /&gt;&lt;br /&gt; VIEW_COMPILE_FAILED: Could not force query plan because of a problem in an indexed view referenced in the plan&lt;br /&gt;&lt;br /&gt; GENERAL_FAILURE: general forcing error (not covered with reasons above) &lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return *NONE*.</column>
    <column name="count_compiles" type="bigint">Plan compilation statistics.</column>
    <column name="initial_compile_start_time" type="datetimeoffset">Plan compilation statistics.</column>
    <column name="last_compile_start_time" type="datetimeoffset">Plan compilation statistics.</column>
    <column name="last_execution_time" type="datetimeoffset">Last execution time refers to the last end time of the query/plan.</column>
    <column name="avg_compile_duration" type="float">Plan compilation statistics.</column>
    <column name="last_compile_duration" type="bigint">Plan compilation statistics.</column>
    <column name="plan_forcing_type" type="int">Plan forcing type.&lt;br /&gt;&lt;br /&gt;0: NONE&lt;br /&gt;&lt;br /&gt;1: MANUAL&lt;br /&gt;&lt;br /&gt;2: AUTO</column>
    <column name="plan_forcing_type_desc" type="nvarchar(60)">Text description of plan_forcing_type.&lt;br /&gt;&lt;br /&gt;NONE: No plan forcing&lt;br /&gt;&lt;br /&gt;MANUAL: Plan forced by user&lt;br /&gt;&lt;br /&gt;AUTO: Plan forced by automatic tuning</column>
  </table>
  <table name="sys.query_store_query" category="QueryStore" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-query-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.query_store_query (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Contains  information about the query and its associated overall aggregated runtime execution statistics.&lt;/para&gt;</description>
    <column name="query_id" type="bigint">Primary key.</column>
    <column name="query_text_id" type="bigint">Foreign key. Joins to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-query-text-transact-sql'&gt;sys.query_store_query_text (Transact-SQL)&lt;/a&gt;</column>
    <column name="context_settings_id" type="bigint">Foreign key. Joins to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-context-settings-transact-sql'&gt;sys.query_context_settings (Transact-SQL)&lt;/a&gt;.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return one (1).</column>
    <column name="object_id" type="bigint">ID of the database object that the query is part of (stored procedure, trigger, CLR UDF/UDAgg, etc.). 0 if the query is not executed as part of a database object (ad-hoc query).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="batch_sql_handle" type="varbinary(64)">ID of the statement batch the query is part of. Populated only if query references temporary tables or table variables.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return *NULL*.</column>
    <column name="query_hash" type="binary(8)">MD5 hash of the individual query, based on the logical query tree. Includes optimizer hints.</column>
    <column name="is_internal_query" type="bit">The query was generated internally.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="query_parameterization_type" type="tinyint">Kind of parameterization:&lt;br /&gt;&lt;br /&gt; 0 - None&lt;br /&gt;&lt;br /&gt; 1 - User&lt;br /&gt;&lt;br /&gt; 2 - Simple&lt;br /&gt;&lt;br /&gt; 3 - Forced&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="query_parameterization_type_desc" type="nvarchar(60)">Textual description for the parameterization type.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return *None*.</column>
    <column name="initial_compile_start_time" type="datetimeoffset">Compile start time.</column>
    <column name="last_compile_start_time" type="datetimeoffset">Compile start time.</column>
    <column name="last_execution_time" type="datetimeoffset">Last execution time refers to the last end time of the query/plan.</column>
    <column name="last_compile_batch_sql_handle" type="varbinary(64)">Handle of the last SQL batch in which query was used last time. It can be provided as input to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-exec-sql-text-transact-sql'&gt;sys.dm_exec_sql_text (Transact-SQL)&lt;/a&gt; to get the full text of the batch.</column>
    <column name="last_compile_batch_offset_start" type="bigint">Information that can be provided to sys.dm_exec_sql_text along with last_compile_batch_sql_handle.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_compile_batch_offset_end" type="bigint">Information that can be provided to sys.dm_exec_sql_text along with last_compile_batch_sql_handle.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="count_compiles" type="bigint">Compilation statistics.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return one (1).</column>
    <column name="avg_compile_duration" type="float">Compilation statistics in microseconds.</column>
    <column name="last_compile_duration" type="bigint">Compilation statistics in microseconds.</column>
    <column name="avg_bind_duration" type="float">Binding statistics in microseconds.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_bind_duration" type="bigint">Binding statistics.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_bind_cpu_time" type="float">Binding statistics.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_bind_cpu_time" type="bigint">Binding statistics.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_optimize_duration" type="float">Optimization statistics in microseconds.</column>
    <column name="last_optimize_duration" type="bigint">Optimization statistics.</column>
    <column name="avg_optimize_cpu_time" type="float">Optimization statistics in microseconds.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_optimize_cpu_time" type="bigint">Optimization statistics.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_compile_memory_kb" type="float">Compile memory statistics.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_compile_memory_kb" type="bigint">Compile memory statistics.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_compile_memory_kb" type="bigint">Compile memory statistics.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="is_clouddb_internal_query" type="bit">Always 0 in SQL Server on-premises.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
  </table>
  <table name="sys.query_store_query_text" category="QueryStore" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-query-text-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.query_store_query_text (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Contains  the Transact\-SQL text and the SQL handle of the query.&lt;/para&gt;</description>
    <column name="query_text_id" type="bigint">Primary key.</column>
    <column name="query_sql_text" type="nvarchar(max)">SQL text of the query, as provided by the user. Includes whitespaces, hints and comments. Comments and spaces before and after the query text are ignored. Comments and spaces inside text are not ignored.</column>
    <column name="statement_sql_handle" type="vabinary(64)">SQL handle of the individual query.</column>
    <column name="is_part_of_encrypted_module" type="bit">Query text is a part of an encrypted module.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="has_restricted_text" type="bit">Query text contains a password or other unmentionable words.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
  </table>
  <table name="sys.query_store_runtime_stats" category="QueryStore" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-runtime-stats-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.query_store_runtime_stats (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Contains  information about the runtime execution statistics information for the query.&lt;/para&gt;</description>
    <column name="runtime_stats_id" type="bigint">Identifier of the row that represents runtime execution statistics for the &lt;strong&gt;plan_id&lt;/strong&gt;, &lt;strong&gt;execution_type&lt;/strong&gt; and &lt;strong&gt;runtime_stats_interval_id&lt;/strong&gt;. It is unique only for the past runtime statistics intervals. For currently active interval, there may be multiple rows representing runtime statistics for the plan referenced by &lt;strong&gt;plan_id&lt;/strong&gt;, with the execution type represented by &lt;strong&gt;execution_type&lt;/strong&gt;. Typically, one row represents runtime statistics that are flushed to disk, while other(s) represent in-memory state. Hence, to get actual state for every interval you need to aggregate metrics, grouping by &lt;strong&gt;plan_id&lt;/strong&gt;, &lt;strong&gt;execution_type&lt;/strong&gt; and &lt;strong&gt;runtime_stats_interval_id&lt;/strong&gt;.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="plan_id" type="bigint">Foreign key. Joins to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-plan-transact-sql'&gt;sys.query_store_plan (Transact-SQL)&lt;/a&gt;.</column>
    <column name="runtime_stats_interval_id" type="bigint">Foreign key. Joins to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-runtime-stats-interval-transact-sql'&gt;sys.query_store_runtime_stats_interval (Transact-SQL)&lt;/a&gt;.</column>
    <column name="execution_type" type="tinyint">Determines type of query execution:&lt;br /&gt;&lt;br /&gt; 0 - Regular execution (successfully finished)&lt;br /&gt;&lt;br /&gt; 3 - Client initiated aborted execution&lt;br /&gt;&lt;br /&gt; 4 -  Exception aborted execution</column>
    <column name="execution_type_desc" type="nvarchar(128)">Textual description of the execution type field:&lt;br /&gt;&lt;br /&gt; 0 -  Regular&lt;br /&gt;&lt;br /&gt; 3 -  Aborted&lt;br /&gt;&lt;br /&gt; 4 -  Exception</column>
    <column name="first_execution_time" type="datetimeoffset">First execution time for the query plan within the aggregation interval. This is the end time of the query execution.</column>
    <column name="last_execution_time" type="datetimeoffset">Last execution time for the query plan within the aggregation interval. This is the end time of the query execution.</column>
    <column name="count_executions" type="bigint">Total count of executions for the query plan within the aggregation interval.</column>
    <column name="avg_duration" type="float">Average duration for the query plan within the aggregation interval (reported in microseconds).</column>
    <column name="last_duration" type="bigint">Last duration for the query plan within the aggregation interval (reported in microseconds).</column>
    <column name="min_duration" type="bigint">Minimum duration for the query plan within the aggregation interval (reported in microseconds).</column>
    <column name="max_duration" type="bigint">Maximum duration for the query plan within the aggregation interval (reported in microseconds).</column>
    <column name="stdev_duration" type="float">Duration standard deviation for the query plan within the aggregation interval (reported in microseconds).</column>
    <column name="avg_cpu_time" type="float">Average CPU time for the query plan within the aggregation interval (reported in microseconds).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_cpu_time" type="bigint">Last CPU time for the query plan within the aggregation interval (reported in microseconds).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="min_cpu_time" type="bigint">Minimum CPU time for the query plan within the aggregation interval (reported in microseconds).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_cpu_time" type="bigint">Maximum CPU time for the query plan within the aggregation interval (reported in microseconds).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="stdev_cpu_time" type="float">CPU time standard deviation for the query plan within the aggregation interval (reported in microseconds).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_logical_io_reads" type="float">Average number of logical I/O reads for the query plan within the aggregation interval. (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_logical_io_reads" type="bigint">Last number of logical I/O reads for the query plan within the aggregation interval. (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="min_logical_io_reads" type="bigint">Minimum number of logical I/O reads for the query plan within the aggregation interval. (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_logical_io_reads" type="bigint">Maximum number of logical I/O reads for the query plan within the aggregation interval.(expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="stdev_logical_io_reads" type="float">Number of logical I/O reads standard deviation for the query plan within the aggregation interval. (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_logical_io_writes" type="float">Average number of logical I/O writes for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_logical_io_writes" type="bigint">Last number of logical I/O writes for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="min_logical_io_writes" type="bigint">Minimum number of logical I/O writes for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_logical_io_writes" type="bigint">Maximum number of logical I/O writes for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="stdev_logical_io_writes" type="float">Number of logical I/O writes standard deviation for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_physical_io_reads" type="float">Average number of physical I/O reads for the query plan within the aggregation interval (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_physical_io_reads" type="bigint">Last number of physical I/O reads for the query plan within the aggregation interval (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="min_physical_io_reads" type="bigint">Minimum number of physical I/O reads for the query plan within the aggregation interval (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_physical_io_reads" type="bigint">Maximum number of physical I/O reads for the query plan within the aggregation interval (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="stdev_physical_io_reads" type="float">Number of physical I/O reads standard deviation for the query plan within the aggregation interval (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_clr_time" type="float">Average CLR time for the query plan within the aggregation interval (reported in microseconds).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_clr_time" type="bigint">Last CLR time for the query plan within the aggregation interval (reported in microseconds).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="min_clr_time" type="bigint">Minimum CLR time for the query plan within the aggregation interval (reported in microseconds).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_clr_time" type="bigint">Maximum CLR time for the query plan within the aggregation interval (reported in microseconds).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="stdev_clr_time" type="float">CLR time standard deviation for the query plan within the aggregation interval (reported in microseconds).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_dop" type="float">Average DOP (degree of parallelism) for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_dop" type="bigint">Last DOP (degree of parallelism) for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="min_dop" type="bigint">Minimum DOP (degree of parallelism) for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_dop" type="bigint">Maximum DOP (degree of parallelism) for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="stdev_dop" type="float">DOP (degree of parallelism) standard deviation for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_query_max_used_memory" type="float">Average memory grant (reported as the number of 8 KB pages) for the query plan within the aggregation interval. Always 0 for queries using natively compiled memory optimized procedures.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_query_max_used_memory" type="bigint">Last memory grant (reported as the number of 8 KB pages) for the query plan within the aggregation interval. Always 0 for queries using natively compiled memory optimized procedures.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="min_query_max_used_memory" type="bigint">Minimum memory grant (reported as the number of 8 KB pages) for the query plan within the aggregation interval. Always 0 for queries using natively compiled memory optimized procedures.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_query_max_used_memory" type="bigint">Maximum memory grant (reported as the number of 8 KB pages) for the query plan within the aggregation interval. Always 0 for queries using natively compiled memory optimized procedures.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="stdev_query_max_used_memory" type="float">Memory grant standard deviation (reported as the number of 8 KB pages) for the query plan within the aggregation interval. Always 0 for queries using natively compiled memory optimized procedures.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_rowcount" type="float">Average number of returned rows for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_rowcount" type="bigint">Number of returned rows by the last execution of the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="min_rowcount" type="bigint">Minimum number of returned rows for the query plan within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_rowcount" type="bigint">Maximum number of returned rows for the query plan within the aggregation interval.</column>
    <column name="stdev_rowcount" type="float">Standard deviation of the number of returned rows for the query plan within the aggregation interval.</column>
    <column name="avg_num_physical_io_reads" type="float">Average number of physical I/O reads for the query plan within the aggregation interval (expressed as a number of read I/O operations).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_num_physical_io_reads" type="bigint">Last number of physical I/O reads for the query plan within the aggregation interval (expressed as a number of read I/O operations).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="min_num_physical_io_reads" type="bigint">Minimum number of physical I/O reads for the query plan within the aggregation interval (expressed as a number of read I/O operations).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_num_physical_io_reads" type="bigint">Maximum number of physical I/O reads for the query plan within the aggregation interval (expressed as a number of read I/O operations).&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_log_bytes_used" type="float">Average number of bytes in the database log used by the query plan, within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="last_log_bytes_used" type="bigint">Number of bytes in the database log used by the last execution of the query plan, within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="min_log_bytes_used" type="bigint">Minimum number of bytes in the database log used by the query plan, within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="max_log_bytes_used" type="bigint">Maximum number of bytes in the database log used by the query plan, within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="stdev_log_bytes_used" type="float">Standard deviation of the number of bytes in the database log used by a query plan, within the aggregation interval.&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database.&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics will always return zero (0).</column>
    <column name="avg_tempdb_space_used" type="float">Average number of pages used in tempdb for the query plan within the aggregation interval (expressed as a number of 8 KB pages).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database.</column>
    <column name="last_tempdb_space_used" type="bigint">Last number of pages used in tempdb for the query plan within the aggregation interval (expressed as a number of 8 KB pages).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database.</column>
    <column name="min_tempdb_space_used" type="bigint">Minimum number of pages used in tempdb for the query plan within the aggregation interval (expressed as a number of 8 KB pages).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database.</column>
    <column name="max_tempdb_space_used" type="bigint">Maximum number of pages used in tempdb for the query plan within the aggregation interval (expressed as a number of 8 KB pages).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database.</column>
    <column name="stdev_tempdb_space_used" type="float">Number of pages used in tempdb standard deviation for the query plan within the aggregation interval (expressed as a number of 8 KB pages).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)) and Azure SQL Database.</column>
    <column name="avg_page_server_io_reads" type="float">Average number of page server I/O reads for the query plan within the aggregation interval (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database Hyperscale&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics, Azure SQL Database, Azure SQL Managed Instance (non-hyperscale) will always return zero (0).</column>
    <column name="last_page_server_io_reads" type="bigint">Last number of page server I/O reads for the query plan within the aggregation interval (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database Hyperscale&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics, Azure SQL Database, Azure SQL Managed Instance (non-hyperscale) will always return zero (0).</column>
    <column name="min_page_server_io_reads" type="bigint">Minimum number of page server I/O reads for the query plan within the aggregation interval (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database Hyperscale&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics, Azure SQL Database, Azure SQL Managed Instance (non-hyperscale) will always return zero (0).</column>
    <column name="max_page_server_io_reads" type="bigint">Maximum number of page server I/O reads for the query plan within the aggregation interval (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database Hyperscale&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics, Azure SQL Database, Azure SQL Managed Instance (non-hyperscale) will always return zero (0).</column>
    <column name="stdev_page_server_io_reads" type="float">Standard deviation of the number of page server I/O reads for the query plan within the aggregation interval (expressed as a number of 8 KB pages read).&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database Hyperscale&lt;br/&gt;&lt;strong&gt;Note:&lt;/strong&gt; Azure Synapse Analytics, Azure SQL Database, Azure SQL Managed Instance (non-hyperscale) will always return zero (0).</column>
  </table>
  <table name="sys.query_store_wait_stats" category="QueryStore" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-wait-stats-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.query_store_wait_stats (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2017 (14.x) and later  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Contains  information about the wait information for the query.&lt;/para&gt;</description>
    <column name="wait_stats_id" type="bigint">Identifier of the row representing wait statistics for the plan_id, runtime_stats_interval_id, execution_type and wait_category. It is unique only for the past runtime statistics intervals. For the currently active interval, there may be multiple rows representing wait statistics for the plan referenced by plan_id, with the execution type represented by execution_type and the wait category represented by wait_category. Typically, one row represents wait statistics that are flushed to disk, while other(s) represent in-memory state. Hence, to get actual state for every interval you need to aggregate metrics, grouping by plan_id, runtime_stats_interval_id, execution_type and wait_category.</column>
    <column name="plan_id" type="bigint">Foreign key. Joins to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-plan-transact-sql'&gt;sys.query_store_plan (Transact-SQL)&lt;/a&gt;.</column>
    <column name="runtime_stats_interval_id" type="bigint">Foreign key. Joins to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-runtime-stats-interval-transact-sql'&gt;sys.query_store_runtime_stats_interval (Transact-SQL)&lt;/a&gt;.</column>
    <column name="wait_category" type="tinyint">Wait types are categorized using the table below, and then wait time is aggregated across these wait categories. Different wait categories require a different follow-up analysis to resolve the issue, but wait types from the same category lead to similar troubleshooting experiences, and providing the affected query in addition to the waits is the missing piece to complete the majority of such investigations successfully.</column>
    <column name="wait_category_desc" type="nvarchar(128)">For textual description of the wait category field, review the table below.</column>
    <column name="execution_type" type="tinyint">Determines type of query execution:&lt;br /&gt;&lt;br /&gt; 0 - Regular execution (successfully finished)&lt;br /&gt;&lt;br /&gt; 3 - Client initiated aborted execution&lt;br /&gt;&lt;br /&gt; 4 -  Exception aborted execution</column>
    <column name="execution_type_desc" type="nvarchar(128)">Textual description of the execution type field:&lt;br /&gt;&lt;br /&gt; 0 -  Regular&lt;br /&gt;&lt;br /&gt; 3 -  Aborted&lt;br /&gt;&lt;br /&gt; 4 -  Exception</column>
    <column name="total_query_wait_time_ms" type="bigint">Total &lt;c&gt;CPU wait&lt;/c&gt; time for the query plan within the aggregation interval and wait category (reported in milliseconds).</column>
    <column name="avg_query_wait_time_ms" type="float">Average wait duration for the query plan per execution within the aggregation interval and wait category (reported in milliseconds).</column>
    <column name="last_query_wait_time_ms" type="bigint">Last wait duration for the query plan within the aggregation interval and wait category (reported in milliseconds).</column>
    <column name="min_query_wait_time_ms" type="bigint">Minimum &lt;c&gt;CPU wait&lt;/c&gt; time for the query plan within the aggregation interval and wait category (reported in milliseconds).</column>
    <column name="max_query_wait_time_ms" type="bigint">Maximum &lt;c&gt;CPU wait&lt;/c&gt; time for the query plan within the aggregation interval and wait category (reported in milliseconds).</column>
    <column name="stdev_query_wait_time_ms" type="float">&lt;c&gt;Query wait&lt;/c&gt; duration standard deviation for the query plan within the aggregation interval and wait category (reported in milliseconds).</column>
  </table>
  <table name="sys.query_store_runtime_stats_interval" category="QueryStore" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-runtime-stats-interval-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.query_store_runtime_stats_interval (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Contains  information about the start and end time of each interval over which runtime execution statistics information for a query has been collected.&lt;/para&gt;</description>
    <column name="runtime_stats_interval_id" type="bigint">Primary key.</column>
    <column name="start_time" type="datetimeoffset">Start time of the interval.</column>
    <column name="end_time" type="datetimeoffset">End time of the interval.</column>
    <column name="comment" type="nvarchar(32)">Always NULL.</column>
  </table>
  <table name="sys.query_store_query_hints" category="QueryStore" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-query-hints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.query_store_query_hints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt; Contains query hints from the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/performance/query-store-hints'&gt;Query Store hints (Preview)&lt;/a&gt; feature.&lt;/para&gt;</description>
    <column name="query_hint_id" type="bigint">Unique identifier of a query hint.</column>
    <column name="query_id" type="bigint">Unique identifier of a query in the Query Store. Foreign key to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-query-store-query-transact-sql'&gt;sys.query_store_query&lt;/a&gt;.query_id.)</column>
    <column name="query_hint_text" type="nvarchar(MAX)">Hint definition in form of  N'OPTION (…)</column>
    <column name="last_query_hint_failure_reason" type="int">Error code returned when if applying hints failed. Will include the message_id of the error message.</column>
    <column name="last_query_hint_failure_reason_desc" type="nvarchar(128)">Will include the error description of the error message.</column>
    <column name="query_hint_failure_count" type="bigint">Number of times that the query hint application has failed since the query hint was created or last modified.</column>
    <column name="source" type="int">Source of Query Store hint: user source is zero and system-generated is non-zero.</column>
    <column name="source_desc" type="nvarchar(128)">Description of source of Query Store hint.</column>
    <column name="comment" type="nvarchar(max)">Internal use only.</column>
  </table>
  <table name="sys.assembly_types" category="ScalarTypes" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-assembly-types-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.assembly_types (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each user-defined type that is defined by a CLR assembly. The following &lt;strong&gt;sys.assembly_types&lt;/strong&gt; appear in the list of inherited columns (see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types (Transact-SQL)&lt;/a&gt;) after &lt;strong&gt;rule_object_id&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="assembly_id" type="int">ID of the assembly from which this type was created.</column>
    <column name="assembly_class" type="sysname">Name of the class within the assembly that defines this type.</column>
    <column name="is_binary_ordered" type="bit">Sorting the bytes of this type is equivalent to sorting using comparison operators on the type.</column>
    <column name="is_fixed_length" type="bit">Length of the type is always the same as max_length.</column>
    <column name="prog_id" type="nvarchar(40)">ProgID of the type as exposed to COM.</column>
    <column name="assembly_qualified_name" type="nvarchar(4000)">Assembly qualified type name. The name is in a format suitable to be passed to Type.GetType().</column>
  </table>
  <table name="sys.types" category="ScalarTypes" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.types (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each system and user-defined type.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the type. Is unique within the schema.</column>
    <column name="system_type_id" type="tinyint">ID of the internal system-type of the type.</column>
    <column name="user_type_id" type="int">ID of the type. Is unique within the database. For system data types, &lt;strong&gt;user_type_id&lt;/strong&gt; = &lt;strong&gt;system_type_id&lt;/strong&gt;.</column>
    <column name="schema_id" type="int">ID of the schema to which the type belongs.</column>
    <column name="principal_id" type="int">ID of the individual owner if different from schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; NULL if there is no alternate individual owner.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of the type.&lt;br /&gt;&lt;br /&gt; -1 = Column data type is &lt;strong&gt;varchar(max)&lt;/strong&gt;, &lt;strong&gt;nvarchar(max)&lt;/strong&gt;, &lt;strong&gt;varbinary(max)&lt;/strong&gt;, or &lt;strong&gt;xml&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For &lt;strong&gt;text&lt;/strong&gt; columns, the &lt;strong&gt;max_length&lt;/strong&gt; value will be 16.</column>
    <column name="precision" type="tinyint">Max precision of the type if it is numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Max scale of the type if it is numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the type if it is character-based; other wise, NULL.</column>
    <column name="is_nullable" type="bit">Type is nullable.</column>
    <column name="is_user_defined" type="bit">1 = User-defined type.&lt;br /&gt;&lt;br /&gt; 0 = SQL Server system data type.</column>
    <column name="is_assembly_type" type="bit">1 = Implementation of the type is defined in a CLR assembly.&lt;br /&gt;&lt;br /&gt; 0 = Type is based on a SQL Server system data type.</column>
    <column name="default_object_id" type="int">ID of the stand-alone default that is bound to the type by using &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-bindefault-transact-sql'&gt;sp_bindefault&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; 0 = No default exists.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule that is bound to the type by using &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-bindrule-transact-sql'&gt;sp_bindrule&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; 0 = No rule exists.</column>
    <column name="is_table_type" type="bit">Indicates the type is a table.</column>
  </table>
  <table name="sys.type_assembly_usages" category="ScalarTypes" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-type-assembly-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.type_assembly_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row per type to assembly reference.&lt;/para&gt;</description>
    <column name="user_type_id" type="int">ID of the type&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
    <column name="assembly_id" type="int">ID of the assembly</column>
  </table>
  <table name="sys.column_type_usages" category="ScalarTypes" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-type-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.column_type_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each column that is of user-defined type.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="column_id" type="int">ID of the column. Is unique within the object.</column>
    <column name="user_type_id" type="int">ID of the user-defined type.&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
  </table>
  <table name="sys.parameter_type_usages" category="ScalarTypes" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-parameter-type-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.parameter_type_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns one row for each parameter that is of user-defined type.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
This view does not return rows for parameters of numbered procedures.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this parameter belongs.</column>
    <column name="parameter_id" type="int">ID of the parameter. Is unique within the object.</column>
    <column name="user_type_id" type="int">ID of the user-defined type.&lt;br /&gt;&lt;br /&gt; To return the name of the type, join to the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view on this column.</column>
  </table>
  <table name="sys.asymmetric_keys" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-asymmetric-keys-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.asymmetric_keys (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns a row for each asymmetric key.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the key. Is unique within the database.</column>
    <column name="principal_id" type="int">ID of the database principal that owns the key.</column>
    <column name="asymmetric_key_id" type="int">ID of the key. Is unique within the database.</column>
    <column name="pvt_key_encryption_type" type="char(2)">How the key is encrypted.&lt;br /&gt;&lt;br /&gt; NA = Not encrypted&lt;br /&gt;&lt;br /&gt; MK = Key is encrypted by the master key&lt;br /&gt;&lt;br /&gt; PW = Key is encrypted by a user-defined password&lt;br /&gt;&lt;br /&gt; SK = Key is encrypted by service master key.</column>
    <column name="pvt_key_encryption_type_desc" type="nvarchar(60)">Description of how the private key is encrypted.&lt;br /&gt;&lt;br /&gt; NO_PRIVATE_KEY&lt;br /&gt;&lt;br /&gt; ENCRYPTED_BY_MASTER_KEY&lt;br /&gt;&lt;br /&gt; ENCRYPTED_BY_PASSWORD&lt;br /&gt;&lt;br /&gt; ENCRYPTED_BY_SERVICE_MASTER_KEY</column>
    <column name="thumbprint" type="varbinary(32)">SHA-1 hash of the key. The hash is globally unique.</column>
    <column name="algorithm" type="char(2)">Algorithm used with the key.&lt;br /&gt;&lt;br /&gt; 1R = 512-bit RSA&lt;br /&gt;&lt;br /&gt; 2R = 1024-bit RSA&lt;br /&gt;&lt;br /&gt; 3R = 2048-bit RSA</column>
    <column name="algorithm_desc" type="nvarchar(60)">Description of the algorithm used with the key.&lt;br /&gt;&lt;br /&gt; RSA_512&lt;br /&gt;&lt;br /&gt; RSA_1024&lt;br /&gt;&lt;br /&gt; RSA_2048</column>
    <column name="key_length" type="int">Bit length of the key.</column>
    <column name="sid" type="varbinary(85)">Login SID for this key. For Extensible Key Management keys this value will be NULL.</column>
    <column name="string_sid" type="nvarchar(128)">String representation of the login SID of the key. For Extensible Key Management keys this value will be NULL.</column>
    <column name="public_key" type="varbinary(max)">Public key.</column>
    <column name="attested_by" type="nvarchar(260)">System use only.</column>
    <column name="provider_type" type="nvarchar(120)">Type of cryptographic provider:&lt;br /&gt;&lt;br /&gt; CRYPTOGRAPHIC PROVIDER = Extensible Key Management keys&lt;br /&gt;&lt;br /&gt; NULL = Non-Extensible Key Management keys</column>
    <column name="cryptographic_provider_guid" type="uniqueidentifier">GUID for the cryptographic provider. For non-Extensible Key Management keys this value will be NULL.</column>
    <column name="cryptographic_provider_algid" type="sql_variant">Algorithm ID for the cryptographic provider. For non-Extensible Key Management keys this value will be NULL.</column>
  </table>
  <table name="sys.certificates" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-certificates-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.certificates (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns a row for each certificate in the database.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the certificate. Is unique within the database.</column>
    <column name="certificate_id" type="int">ID of the certificate. Is unique within the database.</column>
    <column name="principal_id" type="int">ID of the database principal that owns this certificate.</column>
    <column name="pvt_key_encryption_type" type="char(2)">How the private key is encrypted.&lt;br /&gt;&lt;br /&gt; NA = There is no private key for the certificate&lt;br /&gt;&lt;br /&gt; MK = Private key is encrypted by the master key&lt;br /&gt;&lt;br /&gt; PW = Private key is encrypted by a user-defined password&lt;br /&gt;&lt;br /&gt; SK = Private key is encrypted by the service master key.</column>
    <column name="pvt_key_encryption_type_desc" type="nvarchar(60)">Description of how the private key is encrypted.&lt;br /&gt;&lt;br /&gt; NO_PRIVATE_KEY&lt;br /&gt;&lt;br /&gt; ENCRYPTED_BY_MASTER_KEY&lt;br /&gt;&lt;br /&gt; ENCRYPTED_BY_PASSWORD&lt;br /&gt;&lt;br /&gt; ENCRYPTED_BY_SERVICE_MASTER_KEY</column>
    <column name="is_active_for_begin_dialog" type="bit">If 1, this certificate is used to initiate encrypted service dialogs.</column>
    <column name="issuer_name" type="nvarchar(442)">Name of certificate issuer.</column>
    <column name="cert_serial_number" type="nvarchar(64)">Serial number of certificate.</column>
    <column name="sid" type="varbinary(85)">Login SID for this certificate.</column>
    <column name="string_sid" type="nvarchar(128)">String representation of the login SID for this certificate</column>
    <column name="subject" type="nvarchar(4000)">Subject of this certificate.</column>
    <column name="expiry_date" type="datetime">When certificate expires.</column>
    <column name="start_date" type="datetime">When certificate becomes valid.</column>
    <column name="thumbprint" type="varbinary(32)">SHA-1 hash of the certificate. The SHA-1 hash is globally unique.</column>
    <column name="attested_by" type="nvarchar(260)">System use only.</column>
    <column name="pvt_key_last_backup_date" type="datetime">The date and time the certificate's private key was last exported.</column>
  </table>
  <table name="sys.column_encryption_keys" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-encryption-keys-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.column_encryption_keys  (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;APPLIES TO:&lt;/strong&gt; (Yes) SQL Server 2016 and later (No) Azure SQL Database (Yes) Azure Synapse Analytics (No) Parallel Data Warehouse&lt;/para&gt;
&lt;para&gt;Returns information about column encryption keys (CEKs) created with the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-column-encryption-key-transact-sql'&gt;CREATE COLUMN ENCRYPTION KEY&lt;/a&gt; statement. Each row represents a CEK.&lt;/para&gt;</description>
    <column name="name" type="sysname">The name of the CEK.</column>
    <column name="column_encryption_key_id" type="int">ID of the CEK.</column>
    <column name="create_date" type="datetime">Date the CEK was created.</column>
    <column name="modify_date" type="datetime">Date the CEK was last modified.</column>
  </table>
  <table name="sys.column_encryption_key_values" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-encryption-key-values-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.column_encryption_key_values (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns information about encrypted values of column encryption keys (CEKs) created with either the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-column-encryption-key-transact-sql'&gt;CREATE COLUMN ENCRYPTION KEY&lt;/a&gt; or the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-column-encryption-key-transact-sql'&gt;ALTER COLUMN ENCRYPTION KEY (Transact-SQL)&lt;/a&gt; statement. Each row represents a value of a CEK, encrypted with a column master key (CMK).&lt;/para&gt;</description>
    <column name="column_encryption_key_id" type="int">ID of the CEK in the database.</column>
    <column name="column_master_key_id" type="int">ID of the column master key that was used to encrypt the CEK value.</column>
    <column name="encrypted_value" type="varbinary(8000)">CEK value encrypted with the CMK specified in column_master_key_id.</column>
    <column name="encryption_algorithm_name" type="sysname">Name of an algorithm used to encrypt the CEK value.&lt;br /&gt;&lt;br /&gt; Name of the encryption algorithm used to encrypt the value. The algorithm for the system providers must be  &lt;strong&gt;RSA_OAEP&lt;/strong&gt;.</column>
  </table>
  <table name="sys.column_master_keys" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-master-keys-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.column_master_keys (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns a row for each database master key added by using the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-column-master-key-transact-sql'&gt;CREATE MASTER KEY&lt;/a&gt; statement. Each row represents a single column master key (CMK).&lt;/para&gt;</description>
    <column name="name" type="sysname">The name of the CMK.</column>
    <column name="column_master_key_id" type="int">ID of the column master key.</column>
    <column name="create_date" type="datetime">Date the column master key was created.</column>
    <column name="modify_date" type="datetime">Date the column master key was last modified.</column>
    <column name="key_store_provider_name" type="sysname">Name of the provider for the column master key store that contains the CMK. Allowed values are:&lt;br /&gt;&lt;br /&gt; MSSQL_CERTIFICATE_STORE - If the column master key store is a Certificate Store.&lt;br /&gt;&lt;br /&gt; A user-defined value, if the column master key store is of a custom type.</column>
    <column name="key_path" type="nvarchar(4000)">A column master key store-specific path of the key. The format of the path depends on the column master key store type. Example:&lt;br /&gt;&lt;br /&gt; &lt;c&gt;'CurrentUser/Personal/'&lt;thumbprint&gt;&lt;/c&gt;&lt;br /&gt;&lt;br /&gt; For a custom column master key store, the developer is responsible for defining what a key path is for the custom column master key store.</column>
    <column name="allow_enclave_computations" type="bit">Indicates if the column master key is enclave-enabled, (if column encryption keys, encrypted with this master key, can be used for computations inside server-side secure enclaves). For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/always-encrypted-enclaves'&gt;Always Encrypted with secure enclaves&lt;/a&gt;.</column>
    <column name="signature" type="varbinary(max)">A digital signature of &lt;strong&gt;key_path&lt;/strong&gt; and &lt;strong&gt;allow_enclave_computations&lt;/strong&gt;, produced using the column master key, referenced by &lt;strong&gt;key_path&lt;/strong&gt;.</column>
  </table>
  <table name="sys.credentials" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-credentials-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.credentials (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;APPLIES TO:&lt;/strong&gt; (Yes) SQL Server (Yes) Azure SQL Managed Instance ![yes](media/yes-icon.png)Azure Synapse Analytics (Yes) Parallel Data Warehouse&lt;/para&gt;
&lt;para&gt;Returns one row for each server-level credential.&lt;/para&gt;</description>
    <column name="credential_id" type="int">ID of the credential. Is unique in the server.</column>
    <column name="name" type="sysname">Name of the credential. Is unique in the server.</column>
    <column name="credential_identity" type="nvarchar(4000)">Name of the identity to use. This will generally be a Windows user. It does not have to be unique.</column>
    <column name="create_date" type="datetime">Time at which the credential was created.</column>
    <column name="modify_date" type="datetime">Time at which the credential was last modified.</column>
    <column name="target_type" type="nvarchar(100)">Type of credential. Returns NULL for traditional credentials, CRYPTOGRAPHIC PROVIDER for credentials mapped to a cryptographic provider. For more information about external key management providers, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/extensible-key-management-ekm'&gt;Extensible Key Management (EKM)&lt;/a&gt;.</column>
    <column name="target_id" type="int">ID of the object that the credential is mapped to. Returns 0 for traditional credentials and non-0 for credentials mapped to a cryptographic provider. For more information about external key management providers, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/extensible-key-management-ekm'&gt;Extensible Key Management (EKM)&lt;/a&gt;.</column>
  </table>
  <table name="sys.crypt_properties" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-crypt-properties-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.crypt_properties (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each cryptographic property associated with a securable.&lt;/para&gt;</description>
    <column name="class" type="tinyint">Identifies class of thing on which property exists.&lt;br /&gt;&lt;br /&gt; 1 = Object or column&lt;br /&gt; 5 = Assembly</column>
    <column name="class_desc" type="nvarchar(60)">Description of the class of thing on which property exists.&lt;br /&gt;&lt;br /&gt; OBJECT_OR_COLUMN&lt;br /&gt; ASSEMBLY</column>
    <column name="major_id" type="int">ID of thing on which property exists, interpreted according to class</column>
    <column name="thumbprint" type="varbinary(32)">SHA-1 hash of the certificate or asymmetric key used.</column>
    <column name="crypt_type" type="char(4)">Encryption type.&lt;br /&gt;&lt;br /&gt; SPVC = Signed by certificate private key&lt;br /&gt;&lt;br /&gt; SPVA = Signed by asymmetric private key&lt;br /&gt;&lt;br /&gt; CPVC = Counter signature by certificate private key&lt;br /&gt;&lt;br /&gt; CPVA = Counter signature by asymmetric  key</column>
    <column name="crypt_type_desc" type="nvarchar(60)">Description of encryption type.&lt;br /&gt;&lt;br /&gt; SIGNATURE BY CERTIFICATE&lt;br /&gt;&lt;br /&gt; SIGNATURE BY ASYMMETRIC KEY&lt;br /&gt;&lt;br /&gt; COUNTER SIGNATURE BY CERTIFICATE&lt;br /&gt;&lt;br /&gt; COUNTER SIGNATURE BY ASYMMETRIC KEY</column>
    <column name="crypt_property" type="varbinary(max)">Signed or encrypted bits. For a signed module these are the signature bits of the module.</column>
  </table>
  <table name="sys.cryptographic_providers" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-cryptographic-providers-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.cryptographic_providers (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each registered cryptographic provider.&lt;/para&gt;</description>
    <column name="provider_id" type="int">Identification number of the cryptographic provider.</column>
    <column name="name" type="sysname">Name of the cryptographic provider.</column>
    <column name="guid" type="uniqueidentifier">Unique provider GUID.</column>
    <column name="version" type="nvarchar(50)">Version of the provider in the format '*aa.bb.cccc.dd*'.</column>
    <column name="dll_path" type="nvarchar(512)">Path to DLL that implements the Extensible Key Management (EKM) Application Program Interface (API).</column>
    <column name="is_enabled" type="bit">Whether the provider is enabled on the server or not.&lt;br /&gt;&lt;br /&gt; 0 = not enabled  (default)&lt;br /&gt;&lt;br /&gt; 1 = enabled</column>
  </table>
  <table name="sys.database_audit_specifications" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-audit-specifications-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_audit_specifications (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about the database audit specifications in a SQL Server audit on a server instance. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine'&gt;SQL Server Audit (Database Engine)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="Name" type="sysname">Name of the auditing specification.</column>
    <column name="database_specification_id" type="int">ID of the database specification.</column>
    <column name="create_date" type="datetime">Date the audit specification was created.</column>
    <column name="modified_date" type="datetime">Date the audit specification was last modified.</column>
    <column name="is_state_enabled" type="bit">Audit specification state:&lt;br /&gt;&lt;br /&gt; 0 - DISABLED&lt;br /&gt;&lt;br /&gt; 1 -ENABLED</column>
    <column name="audit_GUID" type="uniqueidentifer">GUID for the audit that contains this specification. Used during enumeration of member database audit specifications during database attach/startup.</column>
  </table>
  <table name="sys.database_audit_specification_details" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-audit-specification-details-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_audit_specification_details (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about the database audit specifications in a SQL Server audit on a server instance for all databases. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine'&gt;SQL Server Audit (Database Engine)&lt;/a&gt;. For a list of all audit_action_id's and their names, query &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-audit-actions-transact-sql'&gt;sys.dm_audit_actions (Transact-SQL)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="database_specification_id" type="int">ID of the audit specification.</column>
    <column name="audit_action_id" type="int">ID of the audit action.</column>
    <column name="audit_action_name" type="Sysname">Name of audit action or audit action group</column>
    <column name="Class" type="int">Identifies class of object which is being audited.</column>
    <column name="class_ desc" type="Nvarchar(60)">Description of class of object which is being audited:&lt;br /&gt;&lt;br /&gt; - SCHEMA&lt;br /&gt;&lt;br /&gt; - TABLE</column>
    <column name="major_id" type="int">Major ID of object being audited, such as a Table ID of a Table Audit action.</column>
    <column name="minor_id" type="Int">Secondary ID of object that is being audited, interpreted according to class, such as the column ID of a Table Audit action.</column>
    <column name="audited_principal_id" type="int">Principal that is being audited.</column>
    <column name="audited_result" type="Nvarchar(60)">Audit action results:&lt;br /&gt;&lt;br /&gt; - SUCCESS AND FAILURE - SUCCESS&lt;br /&gt;&lt;br /&gt; - FAILURE</column>
    <column name="is_group" type="Bit">Shows whether the object is a group:&lt;br /&gt;&lt;br /&gt; 0 - Not a group&lt;br /&gt;&lt;br /&gt; 1 - Group</column>
  </table>
  <table name="sys.database_credentials" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-credentials-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_credentials (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Returns one row for each database scoped credential in the database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-scoped-credentials-transact-sql'&gt;sys.database_scoped_credentials&lt;/a&gt; instead.  &lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="credential_id" type="int">ID of the database scoped credential. Is unique in the database.</column>
    <column name="name" type="sysname">Name of the database scoped credential. Is unique in the database.</column>
    <column name="credential_identity" type="nvarchar(4000)">Name of the identity to use. This will generally be a Windows user. It does not have to be unique.</column>
    <column name="create_date" type="datetime">Time at which the database scoped credential was created.</column>
    <column name="modify_date" type="datetime">Time at which the database scoped credential was last modified.</column>
    <column name="target_type" type="nvarchar(100)">Type of database scoped credential. Returns NULL for database scoped credentials.</column>
    <column name="target_id" type="int">ID of the object that the database scoped credential is mapped to. Returns 0 for database scoped credentials</column>
  </table>
  <table name="sys.database_ledger_blocks" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-ledger-blocks-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_ledger_blocks (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Captures the cryptographically chained blocks, each of which represents a block of transactions against ledger tables.&lt;br/&gt;
For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;&lt;/para&gt;</description>
    <column name="block_id" type="bigint">A sequence number identifying the row in this view.</column>
    <column name="transaction_root_hash" type="binary(32)">The hash of the root of the Merkle tree, formed by transactions stored in the block.</column>
    <column name="block_size" type="bigint">The number of transactions in the block.</column>
    <column name="previous_block_hash" type="binary(32)">A SHA-256 hash of the previous row in the view.</column>
  </table>
  <table name="sys.database_ledger_digest_locations" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-ledger-digest-locations-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_ledger_digest_locations (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Captures the current and the historical ledger digest storage endpoints for the ledger feature.&lt;br/&gt;
For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="path" type="nvarchar(4000)">The location of storage digests. For example, a path for a container in &lt;a href='https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction'&gt;Azure Blob storage&lt;/a&gt;.</column>
    <column name="last_digest_block_id" type="bigint">The block ID for the last digest uploaded.</column>
    <column name="is_current" type="bit">Indicates whether this is the current path or a path used in the past.</column>
  </table>
  <table name="sys.database_ledger_transactions" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-ledger-transactions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_ledger_transactions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Captures the cryptographically protected history of database transactions against ledger tables in the database. A row in this view represents a database transaction.&lt;br/&gt;
For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="transaction_id" type="bigint">A transaction ID that is unique for the database (it corresponds to a transaction ID in the database transaction log).</column>
    <column name="block_id" type="bigint">A sequence number identifying a row.</column>
    <column name="transactional_ordinal" type="int">Offset of the transaction in the block.</column>
    <column name="user_name()" type="sysname">The name of the user who started the transaction. Captured by calling &lt;c&gt;ORIGINAL_LOGIN()&lt;/c&gt;.</column>
    <column name="commit_time" type="datetime2(7)">The time of the committing transaction.</column>
    <column name="table_hashes" type="varbinary(max)">This is a set of key-values pairs, stored in a binary format. The keys are object IDs (from &lt;strong&gt;sys.objects&lt;/strong&gt;) of ledger database tables, modified by the transaction. Each value is a SHA-256 hash of all row versions a transaction created or invalidated.&lt;br /&gt;&lt;br /&gt; The binary format of data stored in this row is: &lt;c&gt;&lt;version&gt;&lt;length&gt;[&lt;key&gt;&lt;value&gt;]&lt;/c&gt;, where&lt;br /&gt;&lt;br /&gt; - &lt;c&gt;version&lt;/c&gt; - indicates the encoding version. Length: 1 byte.&lt;br /&gt; - &lt;c&gt;length&lt;/c&gt; - the number of entries in the key-value pair list. Length: 1 byte.&lt;br /&gt; - &lt;c&gt;key&lt;/c&gt; - an object ID. Length: 4 bytes.&lt;br /&gt; - &lt;c&gt;value&lt;/c&gt; - the hash of rows the transaction cached in the table with the object ID stored as the key. Length: 32 bytes.</column>
  </table>
  <table name="sys.database_scoped_credentials" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-scoped-credentials-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_scoped_credentials (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Returns one row for each database scoped credential in the database.&lt;br/&gt;
::: moniker range="=sql-server-2016"&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the database scoped credential. Is unique in the database.</column>
    <column name="credential_id" type="int">ID of the database scoped credential. Is unique in the database.</column>
    <column name="credential_identity" type="nvarchar(4000)">Name of the identity to use. This will generally be a Windows user. It does not have to be unique.</column>
    <column name="create_date" type="datetime">Time at which the database scoped credential was created.</column>
    <column name="modify_date" type="datetime">Time at which the database scoped credential was last modified.</column>
    <column name="target_type" type="nvarchar(100)">Type of database scoped credential. Returns &lt;c&gt;NULL&lt;/c&gt; for database scoped credentials.</column>
    <column name="target_id" type="int">ID of the object that the database scoped credential is mapped to. Returns 0 for database scoped credentials</column>
  </table>
  <table name="sys.database_permissions" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-permissions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_permissions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns a row for every permission or column-exception permission in the database. For columns, there is a row for every permission that is different from the corresponding object-level permission. If the column permission is the same as the corresponding object permission, there is no row for it and the permission applied is that of the object.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
Column-level permissions override object-level permissions on the same entity.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="class" type="tinyint">Identifies class on which permission exists. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-securable-classes-transact-sql'&gt;sys.securable_classes (Transact-SQL)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; 0 = Database&lt;br /&gt;1 = Object or Column&lt;br /&gt;3 = Schema&lt;br /&gt;4 = Database Principal&lt;br /&gt;5 = Assembly - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;6 = Type&lt;br /&gt;10 = XML Schema Collection - &lt;br /&gt;                      &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;15 = Message Type - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;16 = Service Contract - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;17 = Service - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;18 = Remote Service Binding - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;19 = Route - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;23 =Full-Text Catalog - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;24 = Symmetric Key - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;25 = Certificate - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;26 = Asymmetric Key - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;29 = Fulltext Stoplist - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;31 = Search Property List - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;32 = Database Scoped Credential - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.&lt;br /&gt;34 = External Language - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2008 and later.</column>
    <column name="class_desc" type="nvarchar(60)">Description of class on which permission exists.&lt;br /&gt;&lt;br /&gt; DATABASE&lt;br /&gt;&lt;br /&gt; OBJECT_OR_COLUMN&lt;br /&gt;&lt;br /&gt; SCHEMA&lt;br /&gt;&lt;br /&gt; DATABASE_PRINCIPAL&lt;br /&gt;&lt;br /&gt; ASSEMBLY&lt;br /&gt;&lt;br /&gt; TYPE&lt;br /&gt;&lt;br /&gt; XML_SCHEMA_COLLECTION&lt;br /&gt;&lt;br /&gt; MESSAGE_TYPE&lt;br /&gt;&lt;br /&gt; SERVICE_CONTRACT&lt;br /&gt;&lt;br /&gt; SERVICE&lt;br /&gt;&lt;br /&gt; REMOTE_SERVICE_BINDING&lt;br /&gt;&lt;br /&gt; ROUTE&lt;br /&gt;&lt;br /&gt; FULLTEXT_CATALOG&lt;br /&gt;&lt;br /&gt; SYMMETRIC_KEYS&lt;br /&gt;&lt;br /&gt; CERTIFICATE&lt;br /&gt;&lt;br /&gt; ASYMMETRIC_KEY&lt;br /&gt;&lt;br /&gt; FULLTEXT STOPLIST&lt;br /&gt;&lt;br /&gt; SEARCH PROPERTY LIST&lt;br /&gt;&lt;br /&gt; DATABASE SCOPED CREDENTIAL&lt;br /&gt;&lt;br /&gt; EXTERNAL LANGUAGE</column>
    <column name="major_id" type="int">ID of thing on which permission exists, interpreted according to class. Usually, the &lt;strong&gt;major_id&lt;/strong&gt; is simply the kind of ID that applies to what the class represents. &lt;br /&gt;&lt;br /&gt; 0 = The database itself &lt;br /&gt;&lt;br /&gt; &gt;0 = Object-IDs for user objects &lt;br /&gt;&lt;br /&gt; \&lt;0 = Object-IDs for system objects</column>
    <column name="minor_id" type="int">Secondary-ID of thing on which permission exists, interpreted according to class. Often, the &lt;strong&gt;minor_id&lt;/strong&gt; is zero, because there is no subcategory available for the class of object. Otherwise, it is the Column-ID of a table.</column>
    <column name="grantee_principal_id" type="int">Database principal ID to which the permissions are granted.</column>
    <column name="grantor_principal_id" type="int">Database principal ID of the grantor of these permissions.</column>
    <column name="type" type="char(4)">Database permission type. For a list of permission types, see the next table.</column>
    <column name="permission_name" type="nvarchar(128)">Permission name.</column>
    <column name="state" type="char(1)">Permission state:&lt;br /&gt;&lt;br /&gt; D = Deny&lt;br /&gt;&lt;br /&gt; R = Revoke&lt;br /&gt;&lt;br /&gt; G = Grant&lt;br /&gt;&lt;br /&gt; W = Grant With Grant Option</column>
    <column name="state_desc" type="nvarchar(60)">Description of permission state:&lt;br /&gt;&lt;br /&gt; DENY&lt;br /&gt;&lt;br /&gt; REVOKE&lt;br /&gt;&lt;br /&gt; GRANT&lt;br /&gt;&lt;br /&gt; GRANT_WITH_GRANT_OPTION</column>
  </table>
  <table name="sys.database_principals" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-principals-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_principals (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns a row for each security principal in a SQL Server database.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of principal, unique within the database.</column>
    <column name="principal_id" type="int">ID of principal, unique within the database.</column>
    <column name="type" type="char(1)">Principal type:&lt;br /&gt;&lt;br /&gt; A = Application role&lt;br /&gt;&lt;br /&gt; C = User mapped to a certificate&lt;br /&gt;&lt;br /&gt; E = External user from Azure Active Directory&lt;br /&gt;&lt;br /&gt; G = Windows group&lt;br /&gt;&lt;br /&gt; K = User mapped to an asymmetric key&lt;br /&gt;&lt;br /&gt; R = Database role&lt;br /&gt;&lt;br /&gt; S = SQL user&lt;br /&gt;&lt;br /&gt; U = Windows user&lt;br /&gt;&lt;br /&gt; X = External group from Azure Active Directory group or applications</column>
    <column name="type_desc" type="nvarchar(60)">Description of principal type.&lt;br /&gt;&lt;br /&gt; APPLICATION_ROLE&lt;br /&gt;&lt;br /&gt; CERTIFICATE_MAPPED_USER&lt;br /&gt;&lt;br /&gt; EXTERNAL_USER&lt;br /&gt;&lt;br /&gt; WINDOWS_GROUP&lt;br /&gt;&lt;br /&gt; ASYMMETRIC_KEY_MAPPED_USER&lt;br /&gt;&lt;br /&gt; DATABASE_ROLE&lt;br /&gt;&lt;br /&gt; SQL_USER&lt;br /&gt;&lt;br /&gt; WINDOWS_USER&lt;br /&gt;&lt;br /&gt; EXTERNAL_GROUPS</column>
    <column name="default_schema_name" type="sysname">Name to be used when SQL name does not specify a schema. Null for principals not of type S, U, or A.</column>
    <column name="create_date" type="datetime">Time at which the principal was created.</column>
    <column name="modify_date" type="datetime">Time at which the principal was last modified.</column>
    <column name="owning_principal_id" type="int">ID of the principal that owns this principal. All fixed Database Roles are owned by &lt;strong&gt;dbo&lt;/strong&gt; by default.</column>
    <column name="sid" type="varbinary(85)">SID (Security Identifier) of the principal.  NULL for SYS and INFORMATION SCHEMAS.</column>
    <column name="is_fixed_role" type="bit">If 1, this row represents an entry for one of the fixed database roles: db_owner, db_accessadmin, db_datareader, db_datawriter, db_ddladmin, db_securityadmin, db_backupoperator, db_denydatareader, db_denydatawriter.</column>
    <column name="authentication_type" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; Signifies authentication type. The following are the possible values and their descriptions.&lt;br /&gt;&lt;br /&gt; 0 : No authentication&lt;br /&gt;1 : Instance authentication&lt;br /&gt;2 : Database authentication&lt;br /&gt;3 : Windows authentication&lt;br /&gt;4 : Azure Active Directory authentication</column>
    <column name="authentication_type_desc" type="nvarchar(60)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; Description of the authentication type. The following are the possible values and their descriptions.&lt;br /&gt;&lt;br /&gt; &lt;c&gt;NONE&lt;/c&gt; : No authentication&lt;br /&gt;&lt;c&gt;INSTANCE&lt;/c&gt; : Instance authentication&lt;br /&gt;&lt;c&gt;DATABASE&lt;/c&gt; : Database authentication&lt;br /&gt;&lt;c&gt;WINDOWS&lt;/c&gt; : Windows authentication&lt;br /&gt;&lt;c&gt;EXTERNAL&lt;/c&gt;: Azure Active Directory authentication</column>
    <column name="default_language_name" type="sysname">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; Signifies the default language for this principal.</column>
    <column name="default_language_lcid" type="int">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; Signifies the default LCID for this principal.</column>
    <column name="allow_encrypted_value_modifications" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, SQL Database.&lt;br /&gt;&lt;br /&gt; Suppresses cryptographic metadata checks on the server in bulk copy operations. This enables the user to bulk copy data encrypted using Always Encrypted, between tables or databases, without decrypting the data. The default is OFF.</column>
  </table>
  <table name="sys.database_role_members" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-role-members-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.database_role_members (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each member of each database role.  Database users, application roles, and other database roles can be members of a database role. To add members to a role, use the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-role-transact-sql'&gt;ALTER ROLE&lt;/a&gt; statement with the &lt;c&gt;ADD MEMBER&lt;/c&gt; option. Join with &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-principals-transact-sql'&gt;sys.database_principals&lt;/a&gt; to return the names of the &lt;c&gt;principal_id&lt;/c&gt; values.&lt;/para&gt;</description>
    <column name="role_principal_id" type="int">Database principal ID of the role.</column>
    <column name="member_principal_id" type="int">Database principal ID of the member.</column>
  </table>
  <table name="sys.key_encryptions" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-key-encryptions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.key_encryptions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns a row for each symmetric key encryption specified by using the ENCRYPTION BY clause of the CREATE SYMMETRIC KEY statement.&lt;/para&gt;</description>
    <column name="key_id" type="int">ID of the encrypted key.</column>
    <column name="thumbprint" type="varbinary(32)">SHA-1 hash of the certificate with which the key is encrypted, or the GUID of the symmetric key with which the key is encrypted.</column>
    <column name="crypt_type" type="char(4)">Type of encryption:&lt;br /&gt;&lt;br /&gt; ESKS = Encrypted by symmetric key&lt;br /&gt;&lt;br /&gt; ESKP, ESP2, or ESP3 = Encrypted by password&lt;br /&gt;&lt;br /&gt; EPUC = Encrypted by certificate&lt;br /&gt;&lt;br /&gt; EPUA = Encrypted by asymmetric key&lt;br /&gt;&lt;br /&gt; ESKM = Encrypted by master key</column>
    <column name="crypt_type_desc" type="nvarchar(60)">Description of encryption type:&lt;br /&gt;&lt;br /&gt; ENCRYPTION BY SYMMETRIC KEY&lt;br /&gt;&lt;br /&gt; ENCRYPTION BY PASSWORD &lt;br /&gt;(Beginning with SQL Server 2017 (14.x), includes a version number for use by CSS.)&lt;br /&gt;&lt;br /&gt; ENCRYPTION BY CERTIFICATE&lt;br /&gt;&lt;br /&gt; ENCRYPTION BY ASYMMETRIC KEY&lt;br /&gt;&lt;br /&gt; ENCRYPTION BY MASTER KEY&lt;br /&gt;&lt;br /&gt; Note: Windows DPAPI is used to protect the service master key.</column>
    <column name="crypt_property" type="varbinary(max)">Signed or encrypted bits.</column>
  </table>
  <table name="sys.ledger_column_history" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-ledger-column-history-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.ledger_column_history (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Captures the cryptographically protected history of operations on columns of ledger tables: adding, renaming, and dropping columns.&lt;br/&gt;
For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;&lt;/para&gt;</description>
    <column name="object_id" type="int">The object ID of the ledger table.</column>
    <column name="column_id" type="int">The column ID of the column in a ledger table.</column>
    <column name="column_name" type="sysname">The name of the column in ledger table. If the operation has changed the column name, this column captures the new column name.</column>
    <column name="operation_type" type="tinyint">The numeric value indicating the type of the operation&lt;br/&gt;&lt;br/&gt;0 = CREATE – creating a column as part of creating the table containing the column using CREATE TABLE.&lt;br/&gt;1 = ADD – adding a column in a ledger table, using ALTER TABLE/ADD COLUMN..</column>
    <column name="operation_type_desc" type="nvarchar(60)">Textual description of the value of operation_type.</column>
  </table>
  <table name="sys.ledger_table_history" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-ledger-table-history-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.ledger_table_history (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Captures the cryptographically protected history of operations on ledger tables: creating ledger tables, renaming ledger tables or ledger views, and dropping ledger tables.&lt;br/&gt;
For more information on database ledger, see &lt;a href='https://docs.microsoft.com/en-us/azure/azure-sql/database/ledger-overview'&gt;Azure SQL Database ledger&lt;/a&gt;&lt;/para&gt;</description>
    <column name="object_id" type="int">The object ID of the ledger table.</column>
    <column name="schema_name" type="sysname">The name of the schema containing the ledger table. If the operation has changed the schema name, this column captures the new schema name.</column>
    <column name="table_name" type="sysname">The name of the ledger table. If the operation has changed the table name, this column captures the new table name.</column>
    <column name="ledger_view_schema_name" type="sysname">The name of the schema containing the ledger view for the ledger table. If the operation has changed the schema name, this column captures the new schema name.</column>
    <column name="ledger_view_name" type="sysname">The name of the ledger view for the ledger table. If the operation has changed the view name, this column captures the new view name.</column>
    <column name="operation_type" type="tinyint">The numeric value indicating the type of the operation&lt;br/&gt;&lt;br/&gt;0 = CREATE – creating a ledger table.&lt;br/&gt;1 = DROP – dropping a ledger table.</column>
    <column name="operation_type_desc" type="nvarchar(60)">Textual description of the value of operation_type.</column>
    <column name="transaction_id" type="bigint">The transaction of the ID that included the operation on the ledger table. It identifies a row in &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-ledger-transactions-transact-sql'&gt;sys.database_ledger_transactions&lt;/a&gt;.</column>
    <column name="sequence_number" type="bigint">The sequence number of the operation within the transaction.</column>
  </table>
  <table name="sys.login_token" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-login-token-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.login_token (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns one row for every server principal that is part of the login token.&lt;/para&gt;</description>
    <column name="principal_id" type="int">ID of the principal. This value is unique within server.</column>
    <column name="sid" type="varbinary(85)">Security identifier of the principal. If this is a Windows principal, &lt;strong&gt;sid&lt;/strong&gt; = Windows SID. If the login is mapped to a certificate, &lt;strong&gt;sid&lt;/strong&gt; = GUID from the certificate.</column>
    <column name="name" type="nvarchar(128)">Name of the principal. This value is unique within server.</column>
    <column name="type" type="nvarchar(128)">Description of principal type. All types are mapped to &lt;strong&gt;sid&lt;/strong&gt;. The value can be one of the following:&lt;br /&gt;&lt;br /&gt; &lt;c&gt;SQL LOGIN&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;WINDOWS LOGIN&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;WINDOWS GROUP&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;SERVER ROLE&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;LOGIN MAPPED TO CERTIFICATE&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;LOGIN MAPPED TO ASYMMETRIC KEY&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;CERTIFICATE&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;ASYMMETRIC KEY&lt;/c&gt;</column>
    <column name="usage" type="nvarchar(128)">Indicates the principal participates in the evaluation of GRANT or DENY permissions, or serves as an authenticator.&lt;br /&gt;&lt;br /&gt; This value can be one of the following:&lt;br /&gt;&lt;br /&gt; &lt;c&gt;GRANT OR DENY&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;DENY ONLY&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;AUTHENTICATOR&lt;/c&gt;</column>
  </table>
  <table name="sys.master_key_passwords" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-master-key-passwords-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.master_key_passwords (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;Returns a row for each database master key password added by using the &lt;strong&gt;sp_control_dbmasterkey_password&lt;/strong&gt; stored procedure. The passwords that are used to protect the master keys are stored in the credential store. The credential name follows this format: ##DBMKEY_&lt;database_family_guid&gt;_&lt;random_password_guid&gt;##. The password is stored as the credential secret. For each password added by using &lt;strong&gt;sp_control_dbmasterkey_password&lt;/strong&gt;, there is a row in &lt;strong&gt;sys.credentials&lt;/strong&gt;.&lt;br/&gt;
 Each row in this view shows a &lt;strong&gt;credential_id&lt;/strong&gt; and the &lt;strong&gt;family_guid&lt;/strong&gt; of a database the master key of which is protected by the password associated with that credential. A join with &lt;strong&gt;sys.credentials&lt;/strong&gt; on the &lt;strong&gt;credential_id&lt;/strong&gt; will return useful fields, such as the &lt;strong&gt;create_date&lt;/strong&gt; and credential name.&lt;/para&gt;</description>
    <column name="credential_id" type="int">ID of the credential to which the password belongs. This ID is unique within the server instance.</column>
    <column name="family_guid" type="uniqueidentifier">Unique ID of the original database at creation. This GUID remains the same after the database is restored or attached, even if the database name is changed.&lt;br /&gt;&lt;br /&gt; If automatic decryption by the service master key fails, SQL Server uses the &lt;strong&gt;family_guid&lt;/strong&gt; to identify credentials that may contain the password used to protect the database master key.</column>
  </table>
  <table name="sys.openkeys" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-openkeys-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.openkeys (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;This catalog view returns information about encryption keys that are open in the current session.&lt;/para&gt;</description>
    <column name="database_id" type="int">ID of the database that contains the key.</column>
    <column name="database_name" type="sysname">Name of the database that contains the key.</column>
    <column name="key_id" type="int">ID of the key. The ID is unique within the database.</column>
    <column name="key_name" type="sysname">Name of the key. Unique within the database.</column>
    <column name="key_guid" type="varbinary">GUID of the key. Unique within the database.</column>
    <column name="opened_date" type="datetime">Date and time when the key was opened.</column>
    <column name="status" type="int">1 if the key is valid in metadata. 0 if the key is not found in metadata.</column>
  </table>
  <table name="sys.securable_classes" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-securable-classes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.securable_classes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns a list of securable classes&lt;/para&gt;</description>
    <column name="class_desc" type="sysname">Name of the class.</column>
    <column name="class" type="int">Numerical designation of the class.</column>
  </table>
  <table name="sys.security_policies" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-security-policies-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.security_policies (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Returns a row for each security policy in the database.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the security policy, unique within the database.</column>
    <column name="object_id" type="int">ID of the security policy.</column>
    <column name="principal_id" type="int">ID of the owner of the security policy, as registered to the database. NULL if the owner is determined via the schema.</column>
    <column name="schema_id" type="int">ID of the schema where the object resides.</column>
    <column name="parent_object_id" type="int">ID of the object to which the policy belongs. Must be 0.</column>
    <column name="type" type="vachar(2)">Must be &lt;strong&gt;SP&lt;/strong&gt;.</column>
    <column name="type_desc" type="nvarchar(60)">&lt;strong&gt;SECURITY_POLICY&lt;/strong&gt;.</column>
    <column name="create_date" type="datetime">UTC date the security policy was created.</column>
    <column name="modify_date" type="datetime">UTC date the security policy was last modified.</column>
    <column name="is_ms_shipped" type="bit">Always false.</column>
    <column name="is_enabled" type="bit">Security policy specification state:&lt;br /&gt;&lt;br /&gt; 0 = disabled&lt;br /&gt;&lt;br /&gt; 1 = enabled</column>
    <column name="is_not_for_replication" type="bit">Policy was created with the NOT FOR REPLICATION option.</column>
    <column name="uses_database_collation" type="bit">Uses the same collation as the database.</column>
    <column name="is_schemabinding_enabled" type="bit">Schemabinding state for the security policy:&lt;br /&gt;&lt;br /&gt; 0 or NULL = enabled&lt;br /&gt;&lt;br /&gt; 1 = disabled</column>
  </table>
  <table name="sys.security_predicates" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-security-predicates-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.security_predicates (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Returns a row for each security predicate in the database.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the security policy that contains this predicate.</column>
    <column name="security_predicate_id" type="int">Predicate ID within this security policy.</column>
    <column name="target_object_id" type="int">ID of the object on which the security predicate is bound.</column>
    <column name="predicate_definition" type="nvarchar(max)">Fully qualified name of the function that will be used as a security predicate, including the arguments. Note that the &lt;c&gt;schema.function&lt;/c&gt; name may be normalized (i.e. escaped) as well as any other element in the text for consistency. For example:&lt;br /&gt;&lt;br /&gt; &lt;c&gt;[dbo].[fn_securitypredicate]([wing], [startTime], [endTime])&lt;/c&gt;</column>
    <column name="predicate_type" type="int">The type of predicate used by the security policy:&lt;br /&gt;&lt;br /&gt; 0 = FILTER PREDICATE&lt;br /&gt;&lt;br /&gt; 1 = BLOCK PREDICATE</column>
    <column name="predicate_type_desc" type="nvarchar(60)">The type of predicate used by the security policy:&lt;br /&gt;&lt;br /&gt; FILTER&lt;br /&gt;&lt;br /&gt; BLOCK</column>
    <column name="operation" type="int">The type of operation specified for the predicate:&lt;br /&gt;&lt;br /&gt; NULL = all applicable operations&lt;br /&gt;&lt;br /&gt; 1 = AFTER INSERT&lt;br /&gt;&lt;br /&gt; 2 = AFTER UPDATE&lt;br /&gt;&lt;br /&gt; 3 = BEFORE UPDATE&lt;br /&gt;&lt;br /&gt; 4 = BEFORE DELETE</column>
    <column name="operation_desc" type="nvarchar(60)">The type of operation specified for the predicate:&lt;br /&gt;&lt;br /&gt; NULL&lt;br /&gt;&lt;br /&gt; AFTER INSERT&lt;br /&gt;&lt;br /&gt; AFTER UPDATE&lt;br /&gt;&lt;br /&gt; BEFORE UPDATE&lt;br /&gt;&lt;br /&gt; BEFORE DELETE</column>
  </table>
  <table name="sys.sensitivity_classifications" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sensitivity-classifications-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sensitivity_classifications (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Returns a row for each classified item in the database.&lt;/para&gt;</description>
    <column name="class" type="int">Identifies the class of the item on which the classification exists. Will always have the value 1 (representing a column)</column>
    <column name="class_desc" type="varchar(16)">A description of the class of the item on which the classification exists. will always have the value *OBJECT_OR_COLUMN*</column>
    <column name="major_id" type="int">Represents the ID of the table containing the classified column, corresponding with sys.all_objects.object_id</column>
    <column name="minor_id" type="int">Represents the ID of the column on which the classification exists, corresponding with sys.all_columns.column_id</column>
    <column name="label" type="sysname">The label (human readable) assigned for the sensitivity classification</column>
    <column name="label_id" type="sysname">An ID associated with the label, which can be used by an information protection system such as Azure Information Protection (AIP)</column>
    <column name="information_type" type="sysname">The information type (human readable) assigned for the sensitivity classification</column>
    <column name="information_type_id" type="sysname">An ID associated with the information type, which can be used by an information protection system such as Azure Information Protection (AIP)</column>
    <column name="rank" type="int">A numerical value of the rank: &lt;br/&gt;&lt;br/&gt;0 for NONE&lt;br/&gt;10 for LOW&lt;br/&gt;20 for MEDIUM&lt;br/&gt;30 for HIGH&lt;br/&gt;40 for CRITICAL</column>
    <column name="rank_desc" type="sysname">Textual representation of the rank:  &lt;br/&gt;&lt;br/&gt;NONE, LOW, MEDIUM, HIGH, CRITICAL</column>
  </table>
  <table name="sys.server_audits" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-audits-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_audits (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each SQL Server audit in a server instance. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine'&gt;SQL Server Audit (Database Engine)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="audit_id" type="int">ID of the audit.</column>
    <column name="name" type="sysname">Name of the audit.</column>
    <column name="audit_guid" type="uniqueidentifier">GUID for the audit that is used to enumerate audits with member Server&amp;#124;Database audit specifications during server start-up and database attach operations.</column>
    <column name="create_date" type="datetime">UTC date the audit was created.</column>
    <column name="modify_date" type="datetime">UTC date the audit was last modified.</column>
    <column name="principal_id" type="int">ID of the owner of the audit, as registered to the server.</column>
    <column name="type" type="char(2)">Audit type:&lt;br /&gt;&lt;br /&gt; SL - NT Security event log&lt;br /&gt;&lt;br /&gt; AL - NT Application event log&lt;br /&gt;&lt;br /&gt; FL - File on file system</column>
    <column name="type_desc" type="nvarchar(60)">SECURITY LOG&lt;br /&gt;&lt;br /&gt; APPICATION LOG&lt;br /&gt;&lt;br /&gt; FILE</column>
    <column name="on_failure" type="tinyint">On Failure to write an action entry:&lt;br /&gt;&lt;br /&gt; 0 - Continue&lt;br /&gt;&lt;br /&gt; 1 - Shutdown server instance&lt;br /&gt;&lt;br /&gt; 2 - Fail operation</column>
    <column name="on_failure_desc" type="nvarchar(60)">On Failure to write an action entry:&lt;br /&gt;&lt;br /&gt; CONTINUE&lt;br /&gt;&lt;br /&gt; SHUTDOWN SERVER INSTANCE&lt;br /&gt;&lt;br /&gt; FAIL_OPERATION</column>
    <column name="is_state_enabled" type="tinyint">0 - Disabled&lt;br /&gt;&lt;br /&gt; 1 - Enabled</column>
    <column name="queue_delay" type="int">Maximum time, in milliseconds, to wait before writing to disk. If 0, the audit will guarantee a write before an event can continue.</column>
    <column name="predicate" type="nvarchar(3000)">The predicate expression that is applied to the event.</column>
  </table>
  <table name="sys.server_audit_specifications" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-audit-specifications-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_audit_specifications (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about the server audit specifications in a SQL Server audit on a server instance. For more information on SQL Server Audit, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine'&gt;SQL Server Audit (Database Engine)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="name" type="Sysname">Name of the server specification.</column>
    <column name="server_specification_id" type="Int">ID of the &lt;strong&gt;server_specification&lt;/strong&gt;.</column>
    <column name="create_date" type="Datetime">Date the audit server specification was created.</column>
    <column name="modified_date" type="Datetime">Date the audit server specification was last modified.</column>
    <column name="is_state_enabled" type="tinyint">Audit specification state:&lt;br /&gt;&lt;br /&gt; 0 - DISABLED&lt;br /&gt;&lt;br /&gt; 1 -ENABLED</column>
    <column name="audit_GUID" type="uniqueidentifier">GUID for the audit that contains this specification. Used during enumeration of member server audit specifications during server startup.</column>
  </table>
  <table name="sys.server_audit_specification_details" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-audit-specification-details-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_audit_specification_details (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about the server audit specification details (actions) in a SQL Server audit on a server instance. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine'&gt;SQL Server Audit (Database Engine)&lt;/a&gt;. For a list of all audit_action_id's and their names, query &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-audit-actions-transact-sql'&gt;sys.dm_audit_actions (Transact-SQL)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="server_specification_id" type="int">ID of the audit server specification</column>
    <column name="audit_action_id" type="int">ID of the audit action</column>
    <column name="audit_action_name" type="sysname">Name of group or name of audit action</column>
    <column name="class" type="tinyint">Reserved</column>
    <column name="class_desc" type="nvarchar(60)">Reserved</column>
    <column name="major_id" type="int">Reserved</column>
    <column name="minor_id" type="int">Reserved</column>
    <column name="audited_principal_id" type="int">Reserved</column>
    <column name="audited_result" type="nvarchar(60)">Audited result:&lt;br /&gt;&lt;br /&gt; - SUCCESS AND FAILURE&lt;br /&gt;&lt;br /&gt; - SUCCESS&lt;br /&gt;&lt;br /&gt; - FAILURE</column>
    <column name="is_group" type="bit">Whether the audited object is a group:&lt;br /&gt;&lt;br /&gt; 0 - Not a group&lt;br /&gt;&lt;br /&gt; 1 - Group</column>
  </table>
  <table name="sys.server_file_audits" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-file-audits-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_file_audits (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains extended information about the file audit type in a SQL Server audit on a server instance. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine'&gt;SQL Server Audit (Database Engine)&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="audit_id" type="int">ID of the audit.</column>
    <column name="name" type="sysname">Name of the audit.</column>
    <column name="audit_guid" type="uniqueidentifier">GUID of the audit.</column>
    <column name="create_date" type="datetime">UTC date when the file audit was created.</column>
    <column name="modify_date" type="datatime">UTC date when the file audit was last modified.</column>
    <column name="principal_id" type="int">ID of the owner of the audit as registered on the server.</column>
    <column name="type" type="char(2)">Audit type:&lt;br /&gt;&lt;br /&gt; SL = NT Security event log&lt;br /&gt;&lt;br /&gt; AL = NT Application event log&lt;br /&gt;&lt;br /&gt; FL = File on file system</column>
    <column name="type_desc" type="nvarchar(60)">Audit type description.</column>
    <column name="on_failure" type="tinyint">On Failure condition:&lt;br /&gt;&lt;br /&gt; 0 = Continue&lt;br /&gt;&lt;br /&gt; 1 = Shut down server instance&lt;br /&gt;&lt;br /&gt; 2 = Fail operation</column>
    <column name="on_failure_desc" type="nvarchar(60)">On Failure to write an action entry:&lt;br /&gt;&lt;br /&gt; CONTINUE&lt;br /&gt;&lt;br /&gt; SHUTDOWN SERVER INSTANCE&lt;br /&gt;&lt;br /&gt; FAIL OPERATION</column>
    <column name="is_state_enabled" type="tinyint">0 = Disabled&lt;br /&gt;&lt;br /&gt; 1 = Enabled</column>
    <column name="queue_delay" type="int">Suggested maximum time, in milliseconds, to wait before writing to disk. If 0, the audit will guarantee a write before the event can continue.</column>
    <column name="predicate" type="nvarchar(8000)">Predicate expression that is applied to the event.</column>
    <column name="max_file_size" type="bigint">Maximum size, in megabytes, of the audit:&lt;br /&gt;&lt;br /&gt; 0 = Unlimited/Not applicable to the type of audit selected.</column>
    <column name="max_rollover_files" type="int">Maximum number of files to use with the rollover option.</column>
    <column name="max_files" type="int">Maximum number of files to use without the rollover option.</column>
    <column name="reserved_disk_space" type="int">Amount of disk space to reserve per file.</column>
    <column name="log_file_path" type="nvarchar(260)">Path to where audit is located. File path for file audit, application log path for application log audit.</column>
    <column name="log_file_name" type="nvarchar(260)">Base name for the log file supplied in the CREATE AUDIT DDL. An incremental number is added to the base_log_name file as a suffix to create the log file name.</column>
  </table>
  <table name="sys.server_permissions" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-permissions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_permissions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each server-level permission.&lt;/para&gt;</description>
    <column name="class" type="tinyint">Identifies class of thing on which permission exists.&lt;br /&gt;&lt;br /&gt; 100 = Server&lt;br /&gt;&lt;br /&gt; 101 = Server-principal&lt;br /&gt;&lt;br /&gt; 105 = Endpoint&lt;br /&gt;&lt;br /&gt; 108 = Availability Group</column>
    <column name="class_desc" type="nvarchar(60)">Description of class on which permission exists. One of the following values:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SERVER&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SERVER_PRINCIPAL&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;ENDPOINT&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;AVAILABILITY GROUP&lt;/strong&gt;</column>
    <column name="major_id" type="int">ID of the securable on which permission exists, interpreted according to class. For most, this is just the kind of ID that applies to what the class represents. Interpretation for non-standard is as follows:&lt;br /&gt;&lt;br /&gt; 100 = Always 0</column>
    <column name="minor_id" type="int">Secondary ID of thing on which permission exists, interpreted according to class.</column>
    <column name="grantee_principal_id" type="int">Server-principal-ID to which the permissions are granted.</column>
    <column name="grantor_principal_id" type="int">Server-principal-ID of the grantor of these permissions.</column>
    <column name="type" type="char(4)">Server permission type. For a list of permission types, see the next table.</column>
    <column name="permission_name" type="nvarchar(128)">Permission name.</column>
    <column name="state" type="char(1)">Permission state:&lt;br /&gt;&lt;br /&gt; D = Deny&lt;br /&gt;&lt;br /&gt; R = Revoke&lt;br /&gt;&lt;br /&gt; G = Grant&lt;br /&gt;&lt;br /&gt; W = Grant With Grant option</column>
    <column name="state_desc" type="nvarchar(60)">Description of permission state:&lt;br /&gt;&lt;br /&gt; DENY&lt;br /&gt;&lt;br /&gt; REVOKE&lt;br /&gt;&lt;br /&gt; GRANT&lt;br /&gt;&lt;br /&gt; GRANT_WITH_GRANT_OPTION</column>
  </table>
  <table name="sys.server_principals" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-principals-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_principals (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for every server-level principal.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the principal. Is unique within a server.</column>
    <column name="principal_id" type="int">ID number of the Principal. Is unique within a server.</column>
    <column name="sid" type="varbinary(85)">SID (Security-IDentifier) of the principal. If Windows principal, then it matches Windows SID.</column>
    <column name="type" type="char(1)">Principal type:&lt;br /&gt;&lt;br /&gt; S = SQL login&lt;br /&gt;&lt;br /&gt; U = Windows login&lt;br /&gt;&lt;br /&gt; G = Windows group&lt;br /&gt;&lt;br /&gt; R = Server role&lt;br /&gt;&lt;br /&gt; C = Login mapped to a certificate&lt;br /&gt;&lt;br /&gt; E = External Login from Azure Active Directory&lt;br /&gt;&lt;br /&gt; X = External group from Azure Active Directory group or applications&lt;br /&gt;&lt;br /&gt; K = Login mapped to an asymmetric key</column>
    <column name="type_desc" type="nvarchar(60)">Description of the principal type:&lt;br /&gt;&lt;br /&gt; SQL_LOGIN&lt;br /&gt;&lt;br /&gt; WINDOWS_LOGIN&lt;br /&gt;&lt;br /&gt; WINDOWS_GROUP&lt;br /&gt;&lt;br /&gt; SERVER_ROLE&lt;br /&gt;&lt;br /&gt; CERTIFICATE_MAPPED_LOGIN&lt;br /&gt;&lt;br /&gt; EXTERNAL_LOGIN&lt;br /&gt;&lt;br /&gt; EXTERNAL_GROUP&lt;br /&gt;&lt;br /&gt; ASYMMETRIC_KEY_MAPPED_LOGIN</column>
    <column name="is_disabled" type="int">1 = Login is disabled.</column>
    <column name="create_date" type="datetime">Time at which the principal was created.</column>
    <column name="modify_date" type="datetime">Time at which the principal definition was last modified.</column>
    <column name="default_database_name" type="sysname">Default database for this principal.</column>
    <column name="default_language_name" type="sysname">Default language for this principal.</column>
    <column name="credential_id" type="int">ID of a credential associated with this principal. If no credential is associated with this principal, credential_id will be NULL.</column>
    <column name="owning_principal_id" type="int">The &lt;strong&gt;principal_id&lt;/strong&gt; of the owner of a server role. NULL if the principal is not a server role.</column>
    <column name="is_fixed_role" type="bit">Returns 1 if the principal is one of the built-in server roles with fixed permissions. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles'&gt;Server-Level Roles&lt;/a&gt;.</column>
  </table>
  <table name="sys.server_role_members" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-server-role-members-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.server_role_members (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each member of each fixed and user-defined server role.&lt;/para&gt;</description>
    <column name="role_principal_id" type="int">Server-Principal ID of the role.</column>
    <column name="member_principal_id" type="int">Server-Principal ID of the member.</column>
  </table>
  <table name="sys.sql_logins" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-logins-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sql_logins (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;APPLIES TO:&lt;/strong&gt; (Yes) SQL Server (Yes) Azure SQL Database (No) Azure Synapse Analytics (Yes) Parallel Data Warehouse&lt;/para&gt;
&lt;para&gt;Returns one row for every SQL Server authentication login.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the principal. Is unique within a server.</column>
    <column name="principal_id" type="int">ID number of the Principal. Is unique within a server.</column>
    <column name="sid" type="varbinary(85)">SID (Security-IDentifier) of the principal. If Windows principal, then it matches Windows SID.</column>
    <column name="type" type="char(1)">Principal type:&lt;br /&gt;&lt;br /&gt; S = SQL login&lt;br /&gt;&lt;br /&gt; U = Windows login&lt;br /&gt;&lt;br /&gt; G = Windows group&lt;br /&gt;&lt;br /&gt; R = Server role&lt;br /&gt;&lt;br /&gt; C = Login mapped to a certificate&lt;br /&gt;&lt;br /&gt; E = External Login from Azure Active Directory&lt;br /&gt;&lt;br /&gt; X = External group from Azure Active Directory group or applications&lt;br /&gt;&lt;br /&gt; K = Login mapped to an asymmetric key</column>
    <column name="type_desc" type="nvarchar(60)">Description of the principal type:&lt;br /&gt;&lt;br /&gt; SQL_LOGIN&lt;br /&gt;&lt;br /&gt; WINDOWS_LOGIN&lt;br /&gt;&lt;br /&gt; WINDOWS_GROUP&lt;br /&gt;&lt;br /&gt; SERVER_ROLE&lt;br /&gt;&lt;br /&gt; CERTIFICATE_MAPPED_LOGIN&lt;br /&gt;&lt;br /&gt; EXTERNAL_LOGIN&lt;br /&gt;&lt;br /&gt; EXTERNAL_GROUP&lt;br /&gt;&lt;br /&gt; ASYMMETRIC_KEY_MAPPED_LOGIN</column>
    <column name="is_disabled" type="int">1 = Login is disabled.</column>
    <column name="create_date" type="datetime">Time at which the principal was created.</column>
    <column name="modify_date" type="datetime">Time at which the principal definition was last modified.</column>
    <column name="default_database_name" type="sysname">Default database for this principal.</column>
    <column name="default_language_name" type="sysname">Default language for this principal.</column>
    <column name="credential_id" type="int">ID of a credential associated with this principal. If no credential is associated with this principal, credential_id will be NULL.</column>
    <column name="owning_principal_id" type="int">The &lt;strong&gt;principal_id&lt;/strong&gt; of the owner of a server role. NULL if the principal is not a server role.</column>
    <column name="is_fixed_role" type="bit">Returns 1 if the principal is one of the built-in server roles with fixed permissions. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/server-level-roles'&gt;Server-Level Roles&lt;/a&gt;.</column>
    <column name="is_policy_checked" type="bit">Password policy is checked.</column>
    <column name="is_expiration_checked" type="bit">Password expiration is checked.</column>
    <column name="password_hash" type="varbinary(256)">Hash of SQL login password. Beginning with SQL Server 2012 (11.x), stored password information is calculated using SHA-512 of the salted password.</column>
  </table>
  <table name="sys.symmetric_keys" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-symmetric-keys-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.symmetric_keys (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for every symmetric key created with the CREATE SYMMETRIC KEY statement.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the key. Unique within the database.</column>
    <column name="principal_id" type="int">ID of the database principal who owns the key.</column>
    <column name="symmetric_key_id" type="int">ID of the key. Unique within the database.</column>
    <column name="key_length" type="int">Length of the key in bits.</column>
    <column name="key_algorithm" type="char(2)">Algorithm used with the key:&lt;br /&gt;&lt;br /&gt; R2 = RC2&lt;br /&gt;&lt;br /&gt; R4 = RC4&lt;br /&gt;&lt;br /&gt; D = DES&lt;br /&gt;&lt;br /&gt; D3 = Triple DES&lt;br /&gt;&lt;br /&gt; DT = TRIPLE_DES_3KEY&lt;br /&gt;&lt;br /&gt; DX = DESX&lt;br /&gt;&lt;br /&gt; A1 = AES 128&lt;br /&gt;&lt;br /&gt; A2 = AES 192&lt;br /&gt;&lt;br /&gt; A3 = AES 256&lt;br /&gt;&lt;br /&gt; NA = EKM Key</column>
    <column name="algorithm_desc" type="nvarchar(60)">Description of the algorithm used with the key:&lt;br /&gt;&lt;br /&gt; RC2&lt;br /&gt;&lt;br /&gt; RC4&lt;br /&gt;&lt;br /&gt; DES&lt;br /&gt;&lt;br /&gt; Triple_DES&lt;br /&gt;&lt;br /&gt; TRIPLE_DES_3KEY&lt;br /&gt;&lt;br /&gt; DESX&lt;br /&gt;&lt;br /&gt; AES_128&lt;br /&gt;&lt;br /&gt; AES_192&lt;br /&gt;&lt;br /&gt; AES_256&lt;br /&gt;&lt;br /&gt; NULL (Extensible Key Management algorithms only)</column>
    <column name="create_date" type="datetime">Date the key was created.</column>
    <column name="modify_date" type="datetime">Date the key was modified.</column>
    <column name="key_guid" type="uniqueidentifier">Globally unique identifier (GUID) associated with the key. It is auto-generated for persisted keys. GUIDs for temporary keys are derived from the user-supplied pass phrase.</column>
    <column name="key_thumbprint" type="sql_variant">SHA-1 hash of the key. The hash is globally unique. For non-Extensible Key Management keys this value will be NULL.</column>
    <column name="provider_type" type="nvarchar(120)">Type of cryptographic provider:&lt;br /&gt;&lt;br /&gt; CRYPTOGRAPHIC PROVIDER = Extensible Key Management keys&lt;br /&gt;&lt;br /&gt; NULL = Non-Extensible Key Management keys</column>
    <column name="cryptographic_provider_guid" type="uniqueidentifier">GUID for the cryptographic provider. For non-Extensible Key Management keys this value will be NULL.</column>
    <column name="cryptographic_provider_algid" type="sql_variant">Algorithm ID for the cryptographic provider. For non-Extensible Key Management keys this value will be NULL.</column>
  </table>
  <table name="sys.system_components_surface_area_configuration" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-system-components-surface-area-configuration-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.system_components_surface_area_configuration (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns one row for each executable system object that can be enabled or disabled by a surface area configuration component. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/security/surface-area-configuration'&gt;Surface Area Configuration&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="component_name" type="sysname">Component name. This will have the keyword collation, Latin1_General_CI_AS_KS_WS. Cannot be NULL.</column>
    <column name="database_name" type="sysname">Database that contains the object. This will have the keyword collation, Latin1_General_CI_AS_KS_WS. Must be one of the following:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;master&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;msdb&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;mssqlsystemresource&lt;/strong&gt;</column>
    <column name="schema_name" type="sysname">Schema that contains the object. This will have the keyword collation, Latin1_General_CI_AS_KS_WS. Cannot be NULL.</column>
    <column name="object_name" type="sysname">Name of the object. This will have the keyword collation, Latin1_General_CI_AS_KS_WS. Cannot be NULL.</column>
    <column name="state" type="tinyint">0 = Disabled&lt;br /&gt;&lt;br /&gt; 1 = Enabled</column>
    <column name="type" type="char(2)">Object type. Can be one of the following:&lt;br /&gt;&lt;br /&gt; P = SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; PC = CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FN = SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; FS = CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; FT = CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; IF = SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; TF = SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; X = EXTENDED_STORED_PROCEDURE</column>
    <column name="type_desc" type="nvarchar(60)">Friendly name description of the object type.</column>
  </table>
  <table name="sys.user_token" category="Security" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-user-token-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.user_token (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;APPLIES TO:&lt;/strong&gt; (Yes) SQL Server (Yes) Azure SQL Database (Yes) Azure Synapse Analytics (No) Parallel Data Warehouse&lt;/para&gt;
&lt;para&gt;Returns one row for every database principal that is part of the user token in SQL Server.&lt;/para&gt;</description>
    <column name="principal_id" type="int">ID of the principal. The value is unique within database.</column>
    <column name="sid" type="varbinary(85)">Security identifier of the principal if the principal is defined external to the database. For example, this can be a SQL Server login, Windows login, Windows Group login, or a login mapped to a certificate, otherwise, this value is NULL.</column>
    <column name="name" type="nvarchar (128)">Name of the principal. The value is unique within database.</column>
    <column name="type" type="nvarchar (128)">Description of principal type. All types are mapped to &lt;strong&gt;sid&lt;/strong&gt;. The value can be one of the following:&lt;br /&gt;&lt;br /&gt; &lt;c&gt;SQL USER&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;WINDOWS LOGIN&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;WINDOWS GROUP&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;ROLE&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;APPLICATION ROLE&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;DATABASE ROLE&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;USER MAPPED TO CERTIFICATE&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;USER MAPPED TO ASYMMETRIC KEY&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;CERTIFICATE&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;ASYMMETRIC KEY&lt;/c&gt;</column>
    <column name="usage" type="nvarchar (128)">Indicates the principal participates in the evaluation of GRANT or DENY permissions, or serves as an authenticator.&lt;br /&gt;&lt;br /&gt; This value can be one of the following:&lt;br /&gt;&lt;br /&gt; &lt;c&gt;GRANT OR DENY&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;DENY ONLY&lt;/c&gt; &lt;br /&gt;&lt;br /&gt; &lt;c&gt;AUTHENTICATOR&lt;/c&gt;</column>
  </table>
  <table name="sys.conversation_endpoints" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-conversation-endpoints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.conversation_endpoints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Each side of a Service Broker conversation is represented by a conversation endpoint. This catalog view contains a row per conversation endpoint in the database.&lt;/para&gt;</description>
    <column name="conversation_handle" type="uniqueidentifier">Identifier for this conversation endpoint. Not NULLABLE.</column>
    <column name="conversation_id" type="uniqueidentifier">Identifier for the conversation. This identifier is shared by both participants in the conversation. This together with the is_initiator column is unique within the database. Not NULLABLE.</column>
    <column name="is_initiator" type="tinyint">Whether this endpoint is the initiator or the target of the conversation.  Not NULLABLE.&lt;br /&gt;&lt;br /&gt; 1 = Initiator&lt;br /&gt;&lt;br /&gt; 0 = Target</column>
    <column name="service_contract_id" type="int">Identifier of the contract for this conversation. Not NULLABLE.</column>
    <column name="conversation_group_id" type="uniqueidentifier">Identifier for the conversation group this conversation belongs to. Not NULLABLE.</column>
    <column name="service_id" type="int">Identifier for the service for this side of the conversation. Not NULLABLE.</column>
    <column name="lifetime" type="datetime">Expiration date/time for this conversation. Not NULLABLE.</column>
    <column name="state" type="char(2)">The current state of the conversation. Not NULLABLE. One of:&lt;br /&gt;&lt;br /&gt; SO   Started outbound. SQL Server processed a BEGIN CONVERSATION for this conversation, but no messages have yet been sent.&lt;br /&gt;&lt;br /&gt; SI   Started inbound. Another instance started a new conversation with SQL Server, but SQL Server has not yet completely received the first message. SQL Server may create the conversation in this state if the first message is fragmented or SQL Server receives messages out of order. However, SQL Server might create the conversation in the CO (conversing) state if the first transmission received for the conversation contains the entire first message.&lt;br /&gt;&lt;br /&gt; CO   Conversing. The conversation is established, and both sides of the conversation may send messages. Most of the communication for a typical service takes place when the conversation is in this state.&lt;br /&gt;&lt;br /&gt; DI   Disconnected inbound. The remote side of the conversation has issued an END CONVERSATION. The conversation remains in this state until the local side of the conversation issues an END CONVERSATION. An application might still receive messages for the conversation. Because the remote side of the conversation has ended the conversation, an application cannot send messages on this conversation. When an application issues an END CONVERSATION, the conversation moves to the CD (Closed) state.&lt;br /&gt;&lt;br /&gt; DO   Disconnected outbound. The local side of the conversation has issued an END CONVERSATION. The conversation remains in this state until the remote side of the conversation acknowledges the END CONVERSATION. An application cannot send or receive messages for the conversation. When the remote side of the conversation acknowledges the END CONVERSATION, the conversation moves to the CD (Closed) state.&lt;br /&gt;&lt;br /&gt; ER   Error. An error has occurred on this endpoint. The error message is placed in the application queue. If the application queue is empty, this indicates that the application already consumed the error message.&lt;br /&gt;&lt;br /&gt; CD   Closed. The conversation endpoint is no longer in use.</column>
    <column name="state_desc" type="nvarchar(60)">Description of endpoint conversation state. This column is NULLABLE. One of:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;STARTED_OUTBOUND&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;STARTED_INBOUND&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;CONVERSING&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;DISCONNECTED_INBOUND&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;DISCONNECTED_OUTBOUND&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;CLOSED&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;ERROR&lt;/strong&gt;</column>
    <column name="far_service" type="nvarchar(256)">Name of the service on the remote side of conversation. Not NULLABLE.</column>
    <column name="far_broker_instance" type="nvarchar(128)">The broker instance for the remote side of the conversation. NULLABLE.</column>
    <column name="principal_id" type="int">Identifier of the principal whose certificate is used by the local side of the dialog. Not NULLABLE.</column>
    <column name="far_principal_id" type="int">Identifier of the user whose certificate is used by the remote side of the dialog. Not NULLABLE.</column>
    <column name="outbound_session_key_identifier" type="uniqueidentifier">Identifier for outbound encryption key for this dialog. Not NULLABLE.</column>
    <column name="inbound_session_key_identifier" type="uniqueidentifier">Identifier for inbound encryption key for this dialog. Not NULLABLE.</column>
    <column name="security_timestamp" type="datetime">Time at the local session key was created. Not NULLABLE.</column>
    <column name="dialog_timer" type="datetime">The time at which the conversation timer for this dialog sends a DialogTimer message. Not NULLABLE.</column>
    <column name="send_sequence" type="bigint">Next message number in the send sequence. Not NULLABLE.</column>
    <column name="last_send_tran_id" type="binary(6)">Internal transaction ID of last transaction to send a message. Not NULLABLE.</column>
    <column name="end_dialog_sequence" type="bigint">The sequence number of the End Dialog message. Not NULLABLE.</column>
    <column name="receive_sequence" type="bigint">Next message number expected in message receive sequence. Not NULLABLE.</column>
    <column name="receive_sequence_frag" type="int">Next message fragment number expected in message receive sequence. Not NULLABLE.</column>
    <column name="system_sequence" type="bigint">The sequence number of the last system message for this dialog. Not NULLABLE.</column>
    <column name="first_out_of_order_sequence" type="bigint">The sequence number of the first message in the out of order messages for this dialog. Not NULLABLE.</column>
    <column name="last_out_of_order_sequence" type="bigint">The sequence number of the last message in the out of order messages for this dialog. Not NULLABLE.</column>
    <column name="last_out_of_order_frag" type="int">Sequence number of the last message in the out of order fragments for this dialog. Not NULLABLE.</column>
    <column name="is_system" type="bit">1 if this is a system dialog. Not NULLABLE.</column>
    <column name="priority" type="tinyint">The conversation priority that is assigned to this conversation endpoint. Not NULLABLE.</column>
  </table>
  <table name="sys.conversation_groups" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-conversation-groups-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.conversation_groups (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view contains a row for each conversation group.&lt;/para&gt;</description>
    <column name="conversation_group_id" type="uniqueidentifier">Identifier for the conversation group. Not NULLABLE.</column>
    <column name="service_id" type="int">Identifier of the service for conversations in this group. Not NULLABLE.</column>
    <column name="is_system" type="bit">Indicates whether this is a system instance or not. NULLABLE.</column>
  </table>
  <table name="sys.conversation_priorities" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-conversation-priorities-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.conversation_priorities (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each conversation priority created in the current database, as shown in the following table:&lt;/para&gt;</description>
    <column name="Priority_id" type="int">A number that uniquely identifies the conversation priority. Not NULLABLE.</column>
    <column name="name" type="sysname">Name of the conversation priority. Not NULLABLE.</column>
    <column name="service_contract_id" type="int">The identifier of the contract that is specified for the conversation priority. This can be joined on the service_contract_id column in sys.service_contracts. NULLABLE.</column>
    <column name="local_service_id" type="int">The identifier of the service that is specified as the local service for the conversation priority. This column can be joined on the service_id column in sys.services. NULLABLE.</column>
    <column name="remote_service_name" type="nvarchar(256)">The name of the service that is specified as the remote service for the conversation priority. NULLABLE.</column>
    <column name="priority" type="tinyint">The priority level that is specified in this conversation priority. Not NULLABLE.</column>
  </table>
  <table name="sys.message_type_xml_schema_collection_usages" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-message-type-xml-schema-collection-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.message_type_xml_schema_collection_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view returns a row for each service message type that is validated by an XML schema collection.&lt;/para&gt;</description>
    <column name="message_type_id" type="int">The ID of the service message type. Not NULLABLE.</column>
    <column name="xml_collection_id" type="int">The ID of the collection containing the validating XML schema namespace. Not NULLABLE.</column>
  </table>
  <table name="sys.remote_service_bindings" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-remote-service-bindings-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.remote_service_bindings (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view contains a row per remote service binding.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of this remote service binding. Not NULLABLE.</column>
    <column name="remote_service_binding_id" type="int">ID of this remote service binding. Not NULLABLE.</column>
    <column name="principal_id" type="int">ID of the database principal that owns this remote service binding. NULLABLE.</column>
    <column name="remote_service_name" type="nvarchar(256)">Name of the remote service that this binding applies to. NULLABLE.</column>
    <column name="service_contract_id" type="int">ID of the contract that this binding applies to. A value of 0 is a wildcard that means this binding applies to all contracts for the service. Not NULLABLE.</column>
    <column name="remote_principal_id" type="int">ID for the user specified in the remote service binding. Service Broker uses a certificate owned by this user for communicating with the specified service on the specified contracts. NULLABLE.</column>
    <column name="is_anonymous_on" type="bit">This remote service binding uses ANONYMOUS security. The identity of the user that begins the conversation is not provided to the target service. Not NULLABLE.</column>
  </table>
  <table name="sys.routes" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-routes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.routes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance&lt;/para&gt;
&lt;para&gt;This catalog views contains one row per route. Service Broker uses routes to locate the network address for a service.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the route, unique within the database. Not NULLABLE.</column>
    <column name="route_id" type="int">Identifier for the route. Not NULLABLE.</column>
    <column name="principal_id" type="int">Identifier for the database principal that owns the route. NULLABLE.</column>
    <column name="remote_service_name" type="nvarchar(256)">Name of the remote service. NULLABLE.</column>
    <column name="broker_instance" type="nvarchar(128)">Identifier of the broker that hosts the remote service. NULLABLE.</column>
    <column name="lifetime" type="datetime">The date and time when the route expires. Notice that this value does not use the local time zone. Instead, the value shows the expiration time for UTC. NULLABLE.</column>
    <column name="address" type="nvarchar(256)">Network address to which Service Broker sends messages for the remote service. NULLABLE. For SQL Managed Instance, address must be local.</column>
    <column name="mirror_address" type="nvarchar(256)">Network address of the mirroring partner for the server specified in the address. NULLABLE.</column>
  </table>
  <table name="sys.service_contract_message_usages" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-contract-message-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.service_contract_message_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view contains a row per (contract, message type) pair.&lt;/para&gt;</description>
    <column name="service_contract_id" type="int">Identifier of the contract using the message type. Not NULLABLE.</column>
    <column name="message_type_id" type="int">Identifier of the message type used by the contract. Not NULLABLE.</column>
    <column name="is_sent_by_initiator" type="bit">Message type can be sent by the conversation initiator. Not NULLABLE.</column>
    <column name="is_sent_by_target" type="bit">Message type can be sent by the conversation target. Not NULLABLE.</column>
  </table>
  <table name="sys.service_contract_usages" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-contract-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.service_contract_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view contains a row per (service, contract) pair.&lt;/para&gt;</description>
    <column name="service_id" type="int">Identifier of the service using the contract. Not NULLABLE.</column>
    <column name="service_contract_id" type="int">Identifier of the contract used by the service. Not NULLABLE.</column>
  </table>
  <table name="sys.service_contracts" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-contracts-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.service_contracts (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view contains a row for each contract in the database.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the contract, unique within the database. Not NULLABLE.</column>
    <column name="service_contract_id" type="int">Identifier of the contract. Not NULLABLE.</column>
    <column name="principal_id" type="int">Identifier for the database principal that owns this contract. NULLABLE.</column>
  </table>
  <table name="sys.service_message_types" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-message-types-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.service_message_types (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view contains a row per message type registered in the service broker.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of message type, unique within the database. Not NULLABLE.</column>
    <column name="message_type_id" type="int">Identifier of the message type, unique within the database. Not NULLABLE.</column>
    <column name="principal_id" type="int">Identifier for the database principal that owns this message type. NULLABLE.</column>
    <column name="validation" type="char(2)">Validation done by Broker prior to sending messages of this type. Not NULLABLE. One of:&lt;br /&gt;&lt;br /&gt; N = None&lt;br /&gt;&lt;br /&gt; X = XML&lt;br /&gt;&lt;br /&gt; E = Empty</column>
    <column name="validation_desc" type="nvarchar(60)">Description of the validation done by Broker prior to sending messages of this type. NULLABLE. One of:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; XML&lt;br /&gt;&lt;br /&gt; EMPTY</column>
    <column name="xml_collection_id" type="int">For validation that uses an XML schema, the identifier for the schema collection used.&lt;br /&gt;&lt;br /&gt; Otherwise, NULL.</column>
  </table>
  <table name="sys.service_queue_usages" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-queue-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.service_queue_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view returns a row for each reference between service and service queue. A service can only be associated with one queue. A queue can be associated with multiple services.&lt;/para&gt;</description>
    <column name="service_id" type="int">Identifier of the service. Unique within the database. Not NULLABLE.</column>
    <column name="service_queue_id" type="int">Identifier of the service queue used by the service. Not NULLABLE.</column>
  </table>
  <table name="sys.service_queues" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-service-queues-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.service_queues (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each object in the database that is a service queue, with &lt;strong&gt;sys.objects.type&lt;/strong&gt; = SQ.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="max_readers" type="smallint">Maximum number of the concurrent readers allowed in the queue.</column>
    <column name="activation_procedure" type="nvarchar(776)">Three-part name of the activation procedure.</column>
    <column name="execute_as_principal_id" type="int">ID of the EXECUTE AS database principal.&lt;br /&gt;&lt;br /&gt; NULL by default or if EXECUTE AS CALLER.&lt;br /&gt;&lt;br /&gt; ID of the specified principal if EXECUTE AS SELF EXECUTE AS \&lt;principal&gt;.&lt;br /&gt;&lt;br /&gt; -2 = EXECUTE AS OWNER.</column>
    <column name="is_activation_enabled" type="bit">1 = Activation is enabled.</column>
    <column name="is_receive_enabled" type="bit">1 = Receive is enabled.</column>
    <column name="is_enqueue_enabled" type="bit">1 = Enqueue is enabled.</column>
    <column name="is_retention_enabled" type="bit">1 = Messages are retained until dialog end.</column>
    <column name="is_poison_message_handling_enabled" type="bit">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; 1 = Poison message handling is enabled.</column>
  </table>
  <table name="sys.services" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-services-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.services (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view contains a row for each service in the database.&lt;/para&gt;</description>
    <column name="name" type="sysname">Case-sensitive name of service, unique within the database. Not NULLABLE.</column>
    <column name="service_id" type="int">Identifier of the service. Not NULLABLE.</column>
    <column name="principal_id" type="int">Identifier for the database principal that owns this service. NULLABLE.</column>
    <column name="service_queue_id" type="int">Object id for the queue that this service uses. Not NULLABLE.</column>
  </table>
  <table name="sys.transmission_queue" category="ServiceBroker" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-transmission-queue-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.transmission_queue (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;This catalog view contains a row for each message in the transmission queue, as shown in the following table:&lt;/para&gt;</description>
    <column name="conversation_handle" type="uniqueidentifier">Identifier for the conversation that this message belongs to. Not NULLABLE.</column>
    <column name="to_service_name" type="nvarchar(256)">Name of the service that this message is to. NULLABLE.</column>
    <column name="to_broker_instance" type="nvarchar(128)">Identifier of the broker that hosts the service that this message is to. NULLABLE.</column>
    <column name="from_service_name" type="nvarchar(256)">Name of the service that this message is from. NULLABLE.</column>
    <column name="service_contract_name" type="nvarchar(256)">Name of the contract that the conversation for this message follows. NULLABLE.</column>
    <column name="enqueue_time" type="datetime">Time at which the message entered the queue. This value uses UTC regardless of the local time zone for the instance. Not NULLABLE.</column>
    <column name="message_sequence_number" type="bigint">Sequence number of the message. Not NULLABLE.</column>
    <column name="message_type_name" type="nvarchar(256)">Message type name for the message. NULLABLE.</column>
    <column name="is_conversation_error" type="bit">Whether this message is an error message.&lt;br /&gt;&lt;br /&gt; 0 = Not an error message.&lt;br /&gt;&lt;br /&gt; 1 = Error message.&lt;br /&gt;&lt;br /&gt; Not NULLABLE.</column>
    <column name="is_end_of_dialog" type="bit">Whether this message is an end of conversation message. Not NULLABLE.&lt;br /&gt;&lt;br /&gt; 0 = Not an end of conversation message.&lt;br /&gt;&lt;br /&gt; 1 = End of conversation message.&lt;br /&gt;&lt;br /&gt; Not NULLABLE.</column>
    <column name="message_body" type="varbinary(max)">The body of this message. NULLABLE.</column>
    <column name="transmission_status" type="nvarchar(4000)">The reason this message is on the queue. This is generally an error message explaining why sending the message failed. If this is blank, the message has not been sent yet. NULLABLE.</column>
    <column name="priority" type="tinyint">The priority level that is assigned to this message. Not NULLABLE.</column>
  </table>
  <table name="sys.configurations" category="ServerWideConfiguration" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-configurations-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.configurations (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each server-wide configuration option value in the system.&lt;/para&gt;</description>
    <column name="configuration_id" type="int">Unique ID for the configuration value.</column>
    <column name="name" type="nvarchar(35)">Name of the configuration option.</column>
    <column name="value" type="sql_variant">Configured value for this option.</column>
    <column name="minimum" type="sql_variant">Minimum value for the configuration option.</column>
    <column name="maximum" type="sql_variant">Maximum value for the configuration option.</column>
    <column name="value_in_use" type="sql_variant">Running value currently in effect for this option.</column>
    <column name="description" type="nvarchar(255)">Description of the configuration option.</column>
    <column name="is_dynamic" type="bit">1 = The variable that takes effect when the RECONFIGURE statement is executed.</column>
    <column name="is_advanced" type="bit">1 = The variable is displayed only when the &lt;strong&gt;show advancedoption&lt;/strong&gt; is set.</column>
  </table>
  <table name="sys.time_zone_info" category="ServerWideConfiguration" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-time-zone-info-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.time_zone_info (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Returns information about supported time zones. All time zones installed on the computer are stored in the following registry hive:&lt;br/&gt;
&lt;c&gt;KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones&lt;/c&gt;.&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the time zone in Windows standard format. For example, &lt;strong&gt;Cen. Australia Standard Time&lt;/strong&gt; or &lt;strong&gt;Central European Standard Time&lt;/strong&gt;.</column>
    <column name="current_utc_offset" type="nvarchar(12)">Current offset to UTC. For example, &lt;strong&gt;+01:00&lt;/strong&gt; or &lt;strong&gt;-07:00&lt;/strong&gt;.</column>
    <column name="is_currently_dst" type="bit">True if currently observing daylight savings time.</column>
  </table>
  <table name="sys.traces" category="ServerWideConfiguration" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-traces-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.traces (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;The &lt;strong&gt;sys.traces&lt;/strong&gt; catalog view contains the current running traces on the system. This view is intended as a replacement for the &lt;strong&gt;fn_trace_getinfo&lt;/strong&gt; function.&lt;br/&gt;
 For a complete list of supported trace events, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference'&gt;SQL Server Event Class Reference&lt;/a&gt;.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="id" type="int">Trace ID.</column>
    <column name="status" type="int">Trace status:&lt;br /&gt;&lt;br /&gt; 0 = stopped&lt;br /&gt;&lt;br /&gt; 1 = running</column>
    <column name="path" type="nvarchar(260)">Path of the trace file. This value is null when the trace is a rowset trace.</column>
    <column name="max_size" type="bigint">Maximum trace file size limit in megabytes (MB). This value is null when the trace is a rowset trace.</column>
    <column name="stop_time" type="datetime">Time to stop the running trace.</column>
    <column name="max_files" type="int">Maximum number of rollover files. This value is null if the Max number is not set.</column>
    <column name="is_rowset" type="bit">1 = rowset trace.</column>
    <column name="is_rollover" type="bit">1 = rollover option is enabled.</column>
    <column name="is_shutdown" type="bit">1 = shutdown option is enabled.</column>
    <column name="is_default" type="bit">1 = default trace.</column>
    <column name="buffer_count" type="int">Number of in-memory buffers used by the trace.</column>
    <column name="buffer_size" type="int">Size of each buffer (KB).</column>
    <column name="file_position" type="bigint">Last trace file position. This value is null when the trace is a rowset trace.</column>
    <column name="reader_spid" type="int">Rowset trace reader session ID. This value is null when the trace is a file trace.</column>
    <column name="start_time" type="datetime">Trace start time.</column>
    <column name="last_event_time" type="datetime">Time the last event fired.</column>
    <column name="event_count" type="bigint">Total number of events that occurred.</column>
    <column name="dropped_event_count" type="int">Total number of events dropped.</column>
  </table>
  <table name="sys.trace_categories" category="ServerWideConfiguration" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trace-categories-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.trace_categories (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Similar event classes are grouped by a category. Each row in the &lt;strong&gt;sys.trace_categories&lt;/strong&gt; catalog view identifies a category that is unique across the server. These categories do not change for a given version of the SQL Server Database Engine.&lt;br/&gt;
 For a complete list of supported trace events, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference'&gt;SQL Server Event Class Reference&lt;/a&gt;.&lt;br/&gt;
&gt; &lt;strong&gt;IMPORTANT!&lt;/strong&gt; This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.&lt;/para&gt;</description>
    <column name="category_id" type="smallint">Unique ID of this category. This column is also in the &lt;strong&gt;sys.trace_events&lt;/strong&gt; catalog view.</column>
    <column name="name" type="nvarchar(128)">Unique name of this category. This parameter is not localized.</column>
    <column name="type" type="tinyint">Category type:&lt;br /&gt;&lt;br /&gt; 0 = Normal&lt;br /&gt;&lt;br /&gt; 1 = Connection&lt;br /&gt;&lt;br /&gt; 2 = Error</column>
  </table>
  <table name="sys.trace_columns" category="ServerWideConfiguration" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trace-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.trace_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;The &lt;strong&gt;sys.trace_columns&lt;/strong&gt; catalog view contains a list of all trace event columns. These columns do not change for a given version of the SQL Server Database Engine.&lt;br/&gt;
 For a complete list of supported trace events, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference'&gt;SQL Server Event Class Reference&lt;/a&gt;.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="trace_column_id" type="smallint">Unique ID of this column.</column>
    <column name="name" type="nvarchar(128)">Unique name of this column. This parameter is not localized.</column>
    <column name="type_name" type="nvarchar(128)">Data type name of this column.</column>
    <column name="max_size" type="int">Maximum data size of this column in bytes.</column>
    <column name="is_filterable" type="bit">Indicates whether the column can be used in filter specification.&lt;br /&gt;&lt;br /&gt; 0 = false&lt;br /&gt;&lt;br /&gt; 1 = true</column>
    <column name="is_repeatable" type="bit">Indicates whether the column can be referenced in the "repeated column" data.&lt;br /&gt;&lt;br /&gt; 0 = false&lt;br /&gt;&lt;br /&gt; 1 = true</column>
    <column name="is_repeated_base" type="bit">Indicates whether this column is used as a unique key for referencing repeated data.&lt;br /&gt;&lt;br /&gt; 0 = false&lt;br /&gt;&lt;br /&gt; 1 = true</column>
  </table>
  <table name="sys.trace_events" category="ServerWideConfiguration" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trace-events-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.trace_events (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;The &lt;strong&gt;sys.trace_events&lt;/strong&gt; catalog view contains a list of all SQL trace events. These trace events do not change for a given version of the SQL Server Database Engine.&lt;br/&gt;
&gt; &lt;strong&gt;IMPORTANT!&lt;/strong&gt; This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.&lt;br/&gt;
 For more information about these trace events, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference'&gt;SQL Server Event Class Reference&lt;/a&gt;.&lt;/para&gt;</description>
    <column name="trace_event_id" type="smallint">Unique ID of the event. This column is also in the &lt;strong&gt;sys.trace_event_bindings&lt;/strong&gt; and &lt;strong&gt;sys.trace_subclass_values&lt;/strong&gt; catalog views.</column>
    <column name="category_id" type="smallint">Category ID of the event. This column is also in the &lt;strong&gt;sys.trace_categories&lt;/strong&gt; catalog view.</column>
    <column name="name" type="nvarchar(128)">Unique name of this event. This parameter is not localized.</column>
  </table>
  <table name="sys.trace_event_bindings" category="ServerWideConfiguration" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trace-event-bindings-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.trace_event_bindings (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;The &lt;strong&gt;sys.trace_event_bindings&lt;/strong&gt; catalog view contains a list of all possible usage combinations of events and columns. For each event listed in the &lt;strong&gt;trace_event_id&lt;/strong&gt; column, all available columns are listed in the &lt;strong&gt;trace_column_id&lt;/strong&gt; column. Not all available columns are populated each time a given event occurs. These values do not change for a given version of the SQL Server Database Engine.&lt;br/&gt;
 For a complete list of supported trace events, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference'&gt;SQL Server Event Class Reference&lt;/a&gt;.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="trace_event_id" type="smallint">ID of the trace event. This column is also in the &lt;strong&gt;sys.trace_events&lt;/strong&gt; catalog view.</column>
    <column name="trace_column_id" type="smallint">ID of the trace column. This column is also in the &lt;strong&gt;sys.trace_columns&lt;/strong&gt; catalog view.</column>
  </table>
  <table name="sys.trace_subclass_values" category="ServerWideConfiguration" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-trace-subclass-values-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.trace_subclass_values (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;The &lt;strong&gt;sys.trace_subclass_values&lt;/strong&gt; catalog view contains a list of named column values. These subclass values do not change for a given version of the SQL Server Database Engine.&lt;br/&gt;
 For a complete list of supported trace events, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/event-classes/sql-server-event-class-reference'&gt;SQL Server Event Class Reference&lt;/a&gt;.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. Use Extended Event catalog views instead.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="trace_event_id" type="smallint">ID of the trace event. This parameter is also in the &lt;strong&gt;sys.trace_events&lt;/strong&gt; catalog view.</column>
    <column name="trace_column_id" type="smallint">ID of the trace column used for enumeration. This parameter is also in the &lt;strong&gt;sys.trace_columns&lt;/strong&gt; catalog view.</column>
    <column name="subclass_name" type="nvarchar(128)">Meaning of the column value.</column>
    <column name="subclass_value" type="smallint">Column value.</column>
  </table>
  <table name="sys.spatial_index_tessellations" category="SpatialData" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-spatial-index-tessellations-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.spatial_index_tessellations (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt; Represents the information about the tessellation scheme and parameters of each of the spatial indexes.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
For information about tessellation, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/spatial/spatial-indexes-overview'&gt;Spatial Indexes Overview&lt;/a&gt;.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object on which the index is defined. Each (object_id, index_id) pair has a corresponding entry in &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-spatial-indexes-transact-sql'&gt;sys.spatial_indexes&lt;/a&gt;.</column>
    <column name="index_id" type="int">ID of the spatial index in which the indexed column is defined</column>
    <column name="tessellation_scheme" type="sysname">Name of the tessellation scheme, one of: GEOMETRY_GRID,  GEOGRAPHY_GRID</column>
    <column name="bounding_box_xmin" type="float(53)">X-coordinate of the lower-left corner of the bounding box, one of: NULL = Not applicable for a given tessellation scheme (such as GEOGRAPHY_GRID) *n* = If tessellation_scheme is GEOMETRY_GRID, the x-min coordinate value.                     &lt;strong&gt;Note:&lt;/strong&gt; The coordinates defined by the bounding box parameters are interpreted for each object according to its &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/spatial/spatial-reference-identifiers-srids'&gt;Spatial Reference Identifier (SRID)&lt;/a&gt;.</column>
    <column name="bounding_box_ymin" type="float(53)">Y-coordinate of the lower-left corner of the bounding box, one of: NULL = Not applicable for a given tessellation scheme (such as GEOGRAPHY_GRID) *n* = If tessellation_scheme is GEOMETRY_GRID, the y-min coordinate value</column>
    <column name="bounding_box_xmax" type="float(53)">X-coordinate of the upper-right corner of the bounding box, one of: NULL = Not applicable for a given tessellation scheme (such as GEOGRAPHY_GRID) *n* = If tessellation_scheme is GEOMETRY_GRID, the x-max coordinate value</column>
    <column name="bounding_box_ymax" type="float(53)">Y-coordinate of upper-right corner of the bounding box, one of: NULL = Not applicable for a given tessellation scheme (such as GEOGRAPHY_GRID) *n* = If tessellation_scheme is GEOMETRY_GRID, the y-max coordinate value</column>
    <column name="level_1_grid" type="smallint">Grid density for the top-level grid. If tessellation_scheme is GEOMETRY_GRID or GEOGRAPHY_GRID, one of:          16 = 4 by 4 grid (LOW) 64 = 8 by 8 grid (MEDIUM) 256 = 16 by 16 grid (HIGH) NULL = Not applicable for given spatial index type or tessellation scheme.  NULL is returned when new SQL Server 11 tessellation is used.</column>
    <column name="level_1_grid_desc" type="nvarchar(60)">Grid density for the top-level grid, one of: LOW MEDIUM HIGH NULL = Not applicable for given spatial index type or tessellation scheme.  NULL is returned when new SQL Server 11 tessellation is used.</column>
    <column name="level_2_grid" type="smallint">Grid density for the 2nd-level grid. If tessellation_scheme is GEOMETRY_GRID or GEOGRAPHY_GRID, one of: 16 = 4 by 4 grid (LOW) 64 = 8 by 8 grid (MEDIUM) 256 = 16 by 16 grid (HIGH) NULL = Not applicable for given spatial index type or tessellation scheme.  NULL is returned when new SQL Server 11 tessellation is used.</column>
    <column name="level_2_grid_desc" type="nvarchar(60)">Grid density for the 2nd-level grid, one of: LOW MEDIUM HIGH NULL = Not applicable for given spatial index type or tessellation scheme.  NULL is returned when new SQL Server 11 tessellation is used.</column>
    <column name="level_3_grid" type="smallint">Grid density for the 3rd-level grid.   If tessellation_scheme is GEOMETRY_GRID or GEOGRAPHY_GRID, one of: 16 = 4 by 4 grid (LOW) 64 = 8 by 8 grid (MEDIUM) 256 = 16 by 16 grid (HIGH) NULL = Not applicable for given spatial index type or tessellation scheme.  NULL is returned when new SQL Server 11 tessellation is used.</column>
    <column name="level_3_grid_desc" type="nvarchar(60)">Grid density for the 3rd-level grid, one of:LOW MEDIUM HIGH NULL = Not applicable for given spatial index type or tessellation scheme.  NULL is returned when new SQL Server 11 tessellation is used.</column>
    <column name="level_4_grid" type="smallint">Grid density for the 4th-level grid. If tessellation_scheme is GEOMETRY_GRID or GEOGRAPHY_GRID, one of: 16 = 4 by 4 grid (LOW)64 = 8 by 8 grid (MEDIUM) 256 = 16 by 16 grid (HIGH) NULL = Not applicable for given spatial index type or tessellation scheme.  NULL is returned when new SQL Server 11 tessellation is used.</column>
    <column name="level_4_grid_desc" type="nvarchar(60)">Grid density for the 4th-level grid, one of:&lt; LOW MEDIUM HIGH NULL = Not applicable for given spatial index type or tessellation scheme.  NULL is returned when new SQL Server 11 tessellation is used.</column>
    <column name="cells_per_object" type="int">Number of cells per spatial object, one of: If tessellation_scheme is GEOMETRY_GRID or GEOGRAPHY_GRID, *n* = number of cells per object NULL = Not applicable for given  spatial index type or tessellation scheme</column>
  </table>
  <table name="sys.spatial_indexes" category="SpatialData" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-spatial-indexes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.spatial_indexes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Represents the main index information of the spatial indexes.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this index belongs.</column>
    <column name="name" type="sysname">Name of the index. &lt;strong&gt;name&lt;/strong&gt; is unique only within the object.&lt;br /&gt;&lt;br /&gt; NULL = Heap</column>
    <column name="index_id" type="int">ID of the index. &lt;strong&gt;index_id&lt;/strong&gt; is unique only within the object.&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered index&lt;br /&gt;&lt;br /&gt; &gt; 1 = Nonclustered index</column>
    <column name="type" type="tinyint">Type of index:&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered rowstore (b-tree)&lt;br /&gt;&lt;br /&gt; 2 = Nonclustered rowstore (b-tree)&lt;br /&gt;&lt;br /&gt; 3 = XML&lt;br /&gt;&lt;br /&gt; 4 = Spatial&lt;br /&gt;&lt;br /&gt; 5 = Clustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; 6 = Nonclustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; 7 = Nonclustered hash index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="type_desc" type="nvarchar(60)">Description of index type:&lt;br /&gt;&lt;br /&gt; HEAP&lt;br /&gt;&lt;br /&gt; CLUSTERED&lt;br /&gt;&lt;br /&gt; NONCLUSTERED&lt;br /&gt;&lt;br /&gt; XML&lt;br /&gt;&lt;br /&gt; SPATIAL&lt;br /&gt;&lt;br /&gt; CLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; NONCLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; NONCLUSTERED HASH : NONCLUSTERED HASH indexes are supported only on memory-optimized tables. The sys.hash_indexes view shows the current hash indexes and the hash properties. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-hash-indexes-transact-sql'&gt;sys.hash_indexes (Transact-SQL)&lt;/a&gt;. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="is_unique" type="bit">1 = Index is unique.&lt;br /&gt;&lt;br /&gt; 0 = Index is not unique.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="data_space_id" type="int">ID of the data space for this index. Data space is either a filegroup or partition scheme.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;object_id&lt;/strong&gt; is a table-valued function or in-memory index.</column>
    <column name="ignore_dup_key" type="bit">1 = IGNORE_DUP_KEY is ON.&lt;br /&gt;&lt;br /&gt; 0 = IGNORE_DUP_KEY is OFF.</column>
    <column name="is_primary_key" type="bit">1 = Index is part of a PRIMARY KEY constraint.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_unique_constraint" type="bit">1 = Index is part of a UNIQUE constraint.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="fill_factor" type="tinyint">&gt; 0 = FILLFACTOR percentage used when the index was created or rebuilt.&lt;br /&gt;&lt;br /&gt; 0 = Default value&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_padded" type="bit">1 = PADINDEX is ON.&lt;br /&gt;&lt;br /&gt; 0 = PADINDEX is OFF.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_disabled" type="bit">1 = Index is disabled.&lt;br /&gt;&lt;br /&gt; 0 = Index is not disabled.</column>
    <column name="is_hypothetical" type="bit">1 = Index is hypothetical and cannot be used directly as a data access path. Hypothetical indexes hold column-level statistics.&lt;br /&gt;&lt;br /&gt; 0 = Index is not hypothetical.</column>
    <column name="allow_row_locks" type="bit">1 = Index allows row locks.&lt;br /&gt;&lt;br /&gt; 0 = Index does not allow row locks.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="allow_page_locks" type="bit">1 = Index allows page locks.&lt;br /&gt;&lt;br /&gt; 0 = Index does not allow page locks.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="has_filter" type="bit">1 = Index has a filter and only contains rows that satisfy the filter definition.&lt;br /&gt;&lt;br /&gt; 0 = Index does not have a filter.</column>
    <column name="filter_definition" type="nvarchar(max)">Expression for the subset of rows included in the filtered index.&lt;br /&gt;&lt;br /&gt; NULL for heap, non-filtered index, or insufficient permissions on the table.</column>
    <column name="compression_delay" type="int">&gt; 0 = Columnstore index compression delay specified in minutes.&lt;br /&gt;&lt;br /&gt; NULL = Columnstore index rowgroup compression delay is managed automatically.</column>
    <column name="suppress_dup_key_messages" type="bit">1 = Index is configured to suppress duplicate key messages during an index rebuild operation.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;0&lt;/strong&gt; = Index is not configured to suppress duplicate key messages during an index rebuild operation.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
    <column name="auto_created" type="bit">1 = Index was created by the automatic tuning.&lt;br /&gt;&lt;br /&gt;0 = Index was created by the user.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database</column>
    <column name="optimize_for_sequential_key" type="bit">1 = Index has last-page insert optimization enabled.&lt;br/&gt;&lt;br/&gt;0 = Default value. Index has last-page insert optimization disabled.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2019 (15.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
    <column name="spatial_index_type" type="tinyint">Type of spatial index:&lt;br /&gt;&lt;br /&gt; 1 = Geometric spatial index&lt;br /&gt;&lt;br /&gt; 2 = Geographic spatial index</column>
    <column name="spatial_index_type_desc" type="nvarchar(60)">Type description of spatial index:&lt;br /&gt;&lt;br /&gt; GEOMETRY = geometric spatial index&lt;br /&gt;&lt;br /&gt; GEOGRAPHY = geographic spatial index</column>
    <column name="tessellation_scheme" type="sysname">Name of tessellation scheme:&lt;br /&gt;&lt;br /&gt; GEOMETRY_GRID, GEOMETRY_AUTO_GRID,&lt;br /&gt;&lt;br /&gt; GEOGRAPHY_GRID, GEOGRAPHY_AUTO_GRID&lt;br /&gt;&lt;br /&gt; Note: For information about tessellation schemes, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/spatial/spatial-indexes-overview'&gt;Spatial Indexes Overview&lt;/a&gt;.</column>
    <column name="object_id" type="int">ID of the object to which this index belongs.</column>
    <column name="name" type="sysname">Name of the index. &lt;strong&gt;name&lt;/strong&gt; is unique only within the object.&lt;br /&gt;&lt;br /&gt; NULL = Heap</column>
    <column name="index_id" type="int">ID of the index. &lt;strong&gt;index_id&lt;/strong&gt; is unique only within the object.&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered index&lt;br /&gt;&lt;br /&gt; &gt; 1 = Nonclustered index</column>
    <column name="type" type="tinyint">Type of index:&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered rowstore (b-tree)&lt;br /&gt;&lt;br /&gt; 2 = Nonclustered rowstore (b-tree)&lt;br /&gt;&lt;br /&gt; 3 = XML&lt;br /&gt;&lt;br /&gt; 4 = Spatial&lt;br /&gt;&lt;br /&gt; 5 = Clustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; 6 = Nonclustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; 7 = Nonclustered hash index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="type_desc" type="nvarchar(60)">Description of index type:&lt;br /&gt;&lt;br /&gt; HEAP&lt;br /&gt;&lt;br /&gt; CLUSTERED&lt;br /&gt;&lt;br /&gt; NONCLUSTERED&lt;br /&gt;&lt;br /&gt; XML&lt;br /&gt;&lt;br /&gt; SPATIAL&lt;br /&gt;&lt;br /&gt; CLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; NONCLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; NONCLUSTERED HASH : NONCLUSTERED HASH indexes are supported only on memory-optimized tables. The sys.hash_indexes view shows the current hash indexes and the hash properties. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-hash-indexes-transact-sql'&gt;sys.hash_indexes (Transact-SQL)&lt;/a&gt;. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="is_unique" type="bit">1 = Index is unique.&lt;br /&gt;&lt;br /&gt; 0 = Index is not unique.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="data_space_id" type="int">ID of the data space for this index. Data space is either a filegroup or partition scheme.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;object_id&lt;/strong&gt; is a table-valued function or in-memory index.</column>
    <column name="ignore_dup_key" type="bit">1 = IGNORE_DUP_KEY is ON.&lt;br /&gt;&lt;br /&gt; 0 = IGNORE_DUP_KEY is OFF.</column>
    <column name="is_primary_key" type="bit">1 = Index is part of a PRIMARY KEY constraint.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_unique_constraint" type="bit">1 = Index is part of a UNIQUE constraint.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="fill_factor" type="tinyint">&gt; 0 = FILLFACTOR percentage used when the index was created or rebuilt.&lt;br /&gt;&lt;br /&gt; 0 = Default value&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_padded" type="bit">1 = PADINDEX is ON.&lt;br /&gt;&lt;br /&gt; 0 = PADINDEX is OFF.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_disabled" type="bit">1 = Index is disabled.&lt;br /&gt;&lt;br /&gt; 0 = Index is not disabled.</column>
    <column name="is_hypothetical" type="bit">1 = Index is hypothetical and cannot be used directly as a data access path. Hypothetical indexes hold column-level statistics.&lt;br /&gt;&lt;br /&gt; 0 = Index is not hypothetical.</column>
    <column name="allow_row_locks" type="bit">1 = Index allows row locks.&lt;br /&gt;&lt;br /&gt; 0 = Index does not allow row locks.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="allow_page_locks" type="bit">1 = Index allows page locks.&lt;br /&gt;&lt;br /&gt; 0 = Index does not allow page locks.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="has_filter" type="bit">1 = Index has a filter and only contains rows that satisfy the filter definition.&lt;br /&gt;&lt;br /&gt; 0 = Index does not have a filter.</column>
    <column name="filter_definition" type="nvarchar(max)">Expression for the subset of rows included in the filtered index.&lt;br /&gt;&lt;br /&gt; NULL for heap, non-filtered index, or insufficient permissions on the table.</column>
    <column name="compression_delay" type="int">&gt; 0 = Columnstore index compression delay specified in minutes.&lt;br /&gt;&lt;br /&gt; NULL = Columnstore index rowgroup compression delay is managed automatically.</column>
    <column name="suppress_dup_key_messages" type="bit">1 = Index is configured to suppress duplicate key messages during an index rebuild operation.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;0&lt;/strong&gt; = Index is not configured to suppress duplicate key messages during an index rebuild operation.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
    <column name="auto_created" type="bit">1 = Index was created by the automatic tuning.&lt;br /&gt;&lt;br /&gt;0 = Index was created by the user.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database</column>
    <column name="optimize_for_sequential_key" type="bit">1 = Index has last-page insert optimization enabled.&lt;br/&gt;&lt;br/&gt;0 = Default value. Index has last-page insert optimization disabled.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2019 (15.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
  </table>
  <table name="sys.spatial_reference_systems" category="SpatialData" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-spatial-reference-systems-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.spatial_reference_systems (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Lists the spatial reference systems (SRIDs) supported by SQL Server.&lt;/para&gt;</description>
    <column name="spatial_reference_id" type="int">The SRID supported by SQL Server.</column>
    <column name="authority_name" type="nvarchar(128)">The authority of the SRID.</column>
    <column name="authorized_spatial_reference_id" type="int">The SRID given by the authority named in &lt;strong&gt;authority_name&lt;/strong&gt;.</column>
    <column name="well_known_text" type="nvarchar(4000)">The WKT representation of the SRID.</column>
    <column name="unit_of_measure" type="nvarchar(128)">The name of the unit of measure.</column>
    <column name="unit_conversion_factor" type="float">The length of the unit of measure in meters.</column>
  </table>
  <table name="sys.pdw_column_distribution_properties" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-column-distribution-properties-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_column_distribution_properties (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Holds distribution information for columns.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which the column belongs.</column>
    <column name="column_id" type="int">ID of the column.</column>
    <column name="distribution_ordinal" type="tinyint">Ordinal (1-based) within set of distribution.&lt;br/&gt;
Range: 0 = Not a distribution column. 1 = Azure Synapse Analytics is using this column to distribute the parent table.</column>
  </table>
  <table name="sys.pdw_database_mappings" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-database-mappings-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_database_mappings (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Maps the &lt;strong&gt;database_id&lt;/strong&gt;s of databases to the physical name used on Compute nodes, and provides the &lt;strong&gt;principal id&lt;/strong&gt; of the database owner on the system. Join &lt;strong&gt;sys.pdw_database_mappings&lt;/strong&gt; to &lt;strong&gt;sys.databases&lt;/strong&gt; and &lt;strong&gt;sys.pdw_nodes_pdw_physical_databases&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="physical_name" type="nvarchar(36)">The physical name for the database on the Compute nodes.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;physical_name&lt;/strong&gt; and &lt;strong&gt;database_id&lt;/strong&gt; form the key for this view.</column>
    <column name="database_id" type="int">The object ID for the database. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-databases-transact-sql'&gt;sys.databases (Transact-SQL)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;physical_name&lt;/strong&gt; and &lt;strong&gt;database_id&lt;/strong&gt; form the key for this view.</column>
  </table>
  <table name="sys.pdw_diag_event_properties" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-diag-event-properties-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_diag_event_properties (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Holds information about which properties are associated with diagnostic events.&lt;/para&gt;</description>
    <column name="event_name" type="nvarchar(255)">Name of the specific diagnostics event.</column>
    <column name="property_name" type="nvarchar(255)">Name of a property of the event.</column>
  </table>
  <table name="sys.pdw_diag_events" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-diag-events-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_diag_events (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Holds information about events that can be included in diagnostic sessions on the system.&lt;/para&gt;</description>
    <column name="name" type="nvarchar(255)">Name of the specific diagnostics event.</column>
    <column name="source" type="nvarchar(255)">Source of the event (engine, general, dms, etc.)</column>
    <column name="is_enabled" type="bit">Whether the event is being published.</column>
  </table>
  <table name="sys.pdw_diag_sessions" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-diag-sessions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_diag_sessions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Holds information regarding the various diagnostic sessions that have been created on the system.&lt;/para&gt;</description>
    <column name="name" type="nvarchar(255)">Name of the diagnostics session.&lt;br /&gt;&lt;br /&gt; Key for this view.</column>
    <column name="xml_data" type="nvarchar(4000)">XML payload describing the session.</column>
    <column name="is_active" type="bit">Flag indicating whether the flag is active.</column>
    <column name="host_address" type="nvarchar(255)">Address of the machine hosting the session definition (Control node).</column>
    <column name="principal_id" type="int">ID of the user that created the session at the database level.</column>
    <column name="database_id" type="int">ID of the database that is the scope of the diagnostic session.</column>
  </table>
  <table name="sys.pdw_distributions" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-distributions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_distributions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Holds information about the distributions on the appliance. It lists one row per appliance distribution.&lt;/para&gt;</description>
    <column name="distribution_id" type="int">Unique numeric id associated with the distribution.&lt;br /&gt;&lt;br /&gt; Key for this view.&lt;br/&gt;
Range: 1 to the number of Compute nodes in appliance multiplied by the number of distributions per Compute node.</column>
    <column name="pdw_node_id" type="int">ID of the node this distribution is on.&lt;br/&gt;
Range: See pdw_node_id in [sys.dm_pdw_nodes (Transact-SQL)](../../relational-databases/system-dynamic-management-views/sys-dm-pdw-nodes-transact-sql.md).</column>
    <column name="name" type="nvarchar(32)">String identifier associated with the distribution, used as a suffix on distributed tables.&lt;br/&gt;
Range: String composed of 'A-Z','a-z','0-9','_','-'.</column>
    <column name="position" type="int">Position of the distribution within a node respective to other distributions on that node.&lt;br/&gt;
Range: 1 to the number of distributions per node.</column>
  </table>
  <table name="sys.pdw_health_alerts" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-alerts-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_health_alerts (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Stores properties for the different alerts that can occur on the system; this is a catalog table for alerts.&lt;/para&gt;</description>
    <column name="alert_id" type="int">Unique identifier of the alert.&lt;br /&gt;&lt;br /&gt; Key for this view.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="component_id" type="int">ID of the component this alert applies to. The component is a general component identifier, such as "Power Supply," and is not specific to an installation. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-components-transact-sql'&gt;sys.pdw_health_components (Transact-SQL)&lt;/a&gt;.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="alert_name" type="nvarchar(255)">Name of the alert.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="state" type="nvarchar(32)">State of the alert.&lt;br/&gt;
Range: NOT NULL&lt;br /&gt;&lt;br /&gt; Possible values:&lt;br /&gt;&lt;br /&gt; 'Operational'&lt;br /&gt;&lt;br /&gt; 'NonOperational'&lt;br /&gt;&lt;br /&gt; 'Degraded'&lt;br /&gt;&lt;br /&gt; 'Failed'</column>
    <column name="severity" type="nvarchar(32)">Severity of the alert.&lt;br/&gt;
Range: NOT NULL&lt;br /&gt;&lt;br /&gt; Possible values:&lt;br /&gt;&lt;br /&gt; 'Informational'&lt;br /&gt;&lt;br /&gt; 'Warning'&lt;br /&gt;&lt;br /&gt; 'Error'</column>
    <column name="type" type="nvarchar(32)">Type of alert.&lt;br/&gt;
Range: NOT NULL&lt;br /&gt;&lt;br /&gt; Possible values:&lt;br /&gt;&lt;br /&gt; StatusChange - The device status has changed.&lt;br /&gt;&lt;br /&gt; Threshold - A value has exceeded the threshold value.</column>
    <column name="description" type="nvarchar(4000)">Description of the alert.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="condition" type="nvarchar(255)">Used when type = Threshold. Defines how the alert threshold is calculated.&lt;br/&gt;
Range: NULL</column>
    <column name="status" type="nvarchar(32)">Alert status&lt;br/&gt;
Range: NULL</column>
    <column name="condition_value" type="bit">Indicates whether the alert is allowed to occur during system operation.&lt;br/&gt;
Range: NULL&lt;br /&gt;&lt;br /&gt; Possible values&lt;br /&gt;&lt;br /&gt; 0 - alert is not generated.&lt;br /&gt;&lt;br /&gt; 1 - alert is generated.</column>
  </table>
  <table name="sys.pdw_health_component_groups" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-component-groups-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_health_component_groups (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Stores information about logical groupings of components and devices.&lt;/para&gt;</description>
    <column name="group_id" type="int">Unique identifier for components and devices.&lt;br /&gt;&lt;br /&gt; Key for this view.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="group_name" type="nvarchar(255)">Logical group name for the components and devices.&lt;br/&gt;
Range: NOT NULL</column>
  </table>
  <table name="sys.pdw_health_component_properties" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-component-properties-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_health_component_properties (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Stores properties that describe a device. Some properties show device status and some properties describe the device itself.&lt;/para&gt;</description>
    <column name="property_id" type="int">Unique identifier of the property of a component.&lt;br /&gt;&lt;br /&gt; property_id and component_id form the key for this view.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="component_id" type="int">The ID of the component. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-components-transact-sql'&gt;sys.pdw_health_components (Transact-SQL)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; property_id and component_id form the key for this view.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="property_name" type="nvarchar(255)">Name of the property.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="physical_name" type="nvarchar(32)">Property name as defined by the manufacturer.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="is_key" type="bit">Determines whether the device instance is unique or not unique.&lt;br/&gt;
Range: NOT NULL&lt;br /&gt;&lt;br /&gt; 0 - Device instance is unique.&lt;br /&gt;&lt;br /&gt; 1 - Device instance is not unique.</column>
  </table>
  <table name="sys.pdw_health_component_status_mappings" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-component-status-mappings-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_health_component_status_mappings (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Defines the mapping between the Microsoft Azure Synapse Analytics component statuses and the manufacturer-defined component names.&lt;/para&gt;</description>
    <column name="property_id" type="int">Unique identifier of the property.&lt;br /&gt;&lt;br /&gt; property_id, component_id, and physical_name form the key for this view.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="component_id" type="int">The ID of the component. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-components-transact-sql'&gt;sys.pdw_health_components (Transact-SQL)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; property_id, component_id, and physical_name form the key for this view.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="physical_name" type="nvarchar(32)">Property name as defined by the manufacturer.&lt;br /&gt;&lt;br /&gt; property_id, component_id, and physical_name form the key for this view.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="logical_name" type="nvarchar(255)">Property name as defined by Microsoft Azure Synapse Analytics.&lt;br/&gt;
Range: NOT NULL&lt;br /&gt;&lt;br /&gt; 0 - Device instance is unique.&lt;br /&gt;&lt;br /&gt; 1 - Device instance is not unique.</column>
  </table>
  <table name="sys.pdw_health_components" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-components-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_health_components (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Stores information about all components and devices that exist in the system. These include hardware, storage devices, and network devices.&lt;/para&gt;</description>
    <column name="component_id" type="int">Unique identifier of a component or device.&lt;br /&gt;&lt;br /&gt; Key for this view.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="group_id" type="Int">The logical component group to which this component belongs. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-health-components-transact-sql'&gt;sys.pdw_health_components (Parallel Data Warehouse)&lt;/a&gt;.&lt;br/&gt;
Range: NOT NULL</column>
    <column name="component_name" type="nvarchar(255)">Name of the component.&lt;br/&gt;
Range: NOT NULL</column>
  </table>
  <table name="sys.pdw_index_mappings" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-index-mappings-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_index_mappings (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Maps the logical indexes to the physical name used on Compute nodes as reflected by a unique combination of &lt;strong&gt;object_id&lt;/strong&gt; of the table holding the index and the &lt;strong&gt;index_id&lt;/strong&gt; of a particular index within that table.&lt;/para&gt;</description>
    <column name="object_id" type="int">The object ID for the logical table on which this index exists. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql'&gt;sys.objects (Transact-SQL)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;physical_name&lt;/strong&gt; and &lt;strong&gt;object_id&lt;/strong&gt; form the key for this view.</column>
    <column name="index_id" type="nvarchar(32)">The ID for the index. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql'&gt;sys.indexes (Transact-SQL)&lt;/a&gt;.</column>
    <column name="physical_name" type="nvarchar(36)">The name of the index in the databases on the Compute nodes.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;physical_name&lt;/strong&gt; and &lt;strong&gt;object_id&lt;/strong&gt; form the key for this view.</column>
  </table>
  <table name="sys.pdw_loader_backup_run_details" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-loader-backup-run-details-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_loader_backup_run_details (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains further detailed information, beyond the information in &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-loader-backup-runs-transact-sql'&gt;sys.pdw_loader_backup_runs (Transact-SQL)&lt;/a&gt;, about ongoing and completed backup and restore operations in Azure Synapse Analytics and about ongoing and completed backup, restore, and load operations in Analytics Platform System (PDW). The information persists across system restarts.&lt;/para&gt;</description>
    <column name="run_id" type="int">Unique identifier for a specific backup or restore run.&lt;br /&gt;&lt;br /&gt; run_id and pdw_node_id form the key for this view.</column>
    <column name="pdw_node_id" type="int">Unique identifier of an appliance node for which this record holds details.&lt;br /&gt;&lt;br /&gt; run_id and pdw_node_id form the key for this view.&lt;br/&gt;
Range: See node_id in [sys.dm_pdw_nodes (Transact-SQL)](../../relational-databases/system-dynamic-management-views/sys-dm-pdw-nodes-transact-sql.md).</column>
    <column name="status" type="nvarchar(16)">The current status of the run.&lt;br/&gt;
Range: 'CANCELLED', 'COMPLETED', 'FAILED', 'QUEUED', 'RUNNING'</column>
    <column name="start_time" type="datetime">Time at which the operation started on this particular node.</column>
    <column name="end_time" type="datetime">Time at which the operation ended on this particular node, if any.</column>
    <column name="total_elapsed_time" type="int">Total time the operation has been running on this particular node.&lt;br/&gt;
Range: If total_elapsed_time exceeds the maximum value for an integer (24.8 days in milliseconds), it will cause materialization failure due to overflow.&lt;br /&gt;&lt;br /&gt; The maximum value in milliseconds is equivalent to 24.8 days.</column>
    <column name="progress" type="int">Progress of the operation expressed as a percentage.&lt;br/&gt;
Range: 0 to 100</column>
  </table>
  <table name="sys.pdw_loader_backup_runs" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-loader-backup-runs-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_loader_backup_runs (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains information about ongoing and completed backup and restore operations in Azure Synapse Analytics, and about ongoing and completed backup, restore, and load operations in Analytics Platform System (PDW). The information persists across system restarts.&lt;/para&gt;</description>
    <column name="run_id" type="int">Unique identifier for a specific backup, restore, or load run.&lt;br /&gt;&lt;br /&gt; Key for this view.</column>
    <column name="name" type="nvarchar(255)">Null for load. Optional name for backup or restore.</column>
    <column name="submit_time" type="datetime">Time the request was submitted.</column>
    <column name="start_time" type="datetime">Time the operation started.</column>
    <column name="end_time" type="datetime">Time the operation completed, failed, or was cancelled.</column>
    <column name="total_elapsed_time" type="int">Total time elapsed between start_time and current time, or between start_time and end_time for completed, cancelled, or failed runs.&lt;br/&gt;
Range: If total_elapsed_time exceeds the maximum value for an integer (24.8 days in milliseconds), it will cause materialization failure due to overflow.&lt;br /&gt;&lt;br /&gt; The maximum value in milliseconds is equivalent to 24.8 days.</column>
    <column name="operation_type" type="nvarchar(16)">The load type.&lt;br/&gt;
Range: 'BACKUP', 'LOAD', 'RESTORE'</column>
    <column name="mode" type="nvarchar(16)">The mode within the run type.&lt;br/&gt;
Range: For operation_type = **BACKUP**&lt;br /&gt;**DIFFERENTIAL**&lt;br /&gt;**FULL**&lt;br /&gt;&lt;br /&gt; For operation_type = **LOAD**&lt;br /&gt;**APPEND**&lt;br /&gt;**RELOAD**&lt;br /&gt;**UPSERT**&lt;br /&gt;&lt;br /&gt; For operation_type = **RESTORE**&lt;br /&gt;**DATABASE**&lt;br /&gt;**HEADER_ONLY**</column>
    <column name="database_name" type="nvarchar(255)">Name of the database that is the context of this operation</column>
    <column name="table_name" type="nvarchar(255)">Information not available.</column>
    <column name="Principal_id" type="int">ID of the user requesting the operation.</column>
    <column name="session_id" type="nvarchar(32)">ID of the session performing the operation.&lt;br/&gt;
Range: See session_id in [sys.dm_pdw_exec_sessions (Transact-SQL)](../../relational-databases/system-dynamic-management-views/sys-dm-pdw-exec-sessions-transact-sql.md).</column>
    <column name="request_id" type="nvarchar(32)">ID of the request performing the operation. For loads, this is the current or last request associated with this load..&lt;br/&gt;
Range: See request_id in [sys.dm_pdw_exec_requests (Transact-SQL)](../../relational-databases/system-dynamic-management-views/sys-dm-pdw-exec-requests-transact-sql.md).</column>
    <column name="status" type="nvarchar(16)">Status of the run.&lt;br/&gt;
Range: 'CANCELLED','COMPLETED','FAILED','QUEUED','RUNNING'</column>
    <column name="progress" type="int">Percentage completed.&lt;br/&gt;
Range: 0 to 100</column>
    <column name="command" type="nvarchar(4000)">Full text of the command submitted by the user.&lt;br/&gt;
Range: Will be truncated if longer than 4000 characters (counting spaces).</column>
    <column name="rows_processed" type="bigint">Number of rows processed as part of this operation.</column>
    <column name="rows_rejected" type="bigint">Number of rows rejected as part of this operation.</column>
    <column name="rows_inserted" type="bigint">Number of rows inserted into the database table(s) as part of this operation.</column>
  </table>
  <table name="sys.pdw_loader_run_stages" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-loader-run-stages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_loader_run_stages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains information about ongoing and completed load operations in Analytics Platform System (PDW). The information persists across system restarts.&lt;/para&gt;</description>
    <column name="run_id" type="int">Unique identifier of a loader run.</column>
    <column name="stage" type="nvarchar(30)">The current stage for the run.&lt;br/&gt;
Range: 'CREATE_STAGING', 'DMS_LOAD', 'LOAD_INSERT', 'LOAD_CLEANUP'</column>
    <column name="request_id" type="nvarchar(32)">ID of the request running this stage.</column>
    <column name="status" type="nvarchar(16)">Status of this phase.</column>
    <column name="start_time" type="datetime">Time at which the stage was started.</column>
    <column name="end_time" type="datetime">Time at which the stage ended, if any.&lt;br/&gt;
Range: NULL if not started or in progress.</column>
    <column name="total_elapsed_time" type="int">Total time this stage spent (or spent so far) running.&lt;br/&gt;
Range: If total_elapsed_time exceeds the maximum value for an integer (24.8 days in milliseconds), it will cause materialization failure due to overflow.&lt;br /&gt;&lt;br /&gt; The maximum value in milliseconds is equivalent to 24.8 days.</column>
  </table>
  <table name="sys.pdw_materialized_view_column_distribution_properties" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-materialized-view-column-distribution-properties-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_materialized_view_column_distribution_properties (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Displays distribution information for columns in a materialized view.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which the column belongs.</column>
    <column name="column_id" type="int">The ID of the column.</column>
    <column name="distribution_ordinal" type="tinyint">0 = Not a distribution column.&lt;br/&gt; 1 = Azure Synapse Analytics is using this column to distribute the materialized view.</column>
  </table>
  <table name="sys.pdw_materialized_view_distribution_properties" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-materialized-view-distribution-properties-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_materialized_view_distribution_properties (Transact-SQL) (preview)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Displays distribution information materialized views.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the materialized view for which thee properties were specified.</column>
    <column name="distribution_policy" type="tinyint">2 = HASH&lt;br/&gt;4 = ROUND_ROBIN</column>
    <column name="distribution_policy_desc" type="nvarchar(60)">HASH, ROUND_ROBIN</column>
  </table>
  <table name="sys.pdw_materialized_view_mappings" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-materialized-view-mappings-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_materialized_view_mappings (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Ties the materialized view to internal object names by object_id.&lt;br/&gt;
The columns physical_name and object_id form the key for this catalog view.&lt;/para&gt;</description>
    <column name="physical_name" type="nvarchar(36)">The physical name for the materialized view.</column>
    <column name="object_id" type="int">The object ID for the materialized view. See [sys.objects (Transact-SQL)](./sys-objects-transact-sql.md?view=azure-sqldw-latest&amp;preserve-view=true).</column>
  </table>
  <table name="sys.pdw_nodes_column_store_dictionaries" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-column-store-dictionaries-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_nodes_column_store_dictionaries (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each dictionary used in columnstore indexes. Dictionaries are used to encode some, but not all data types, therefore not all columns in a columnstore index have dictionaries. A dictionary can exist as a primary dictionary (for all segments) and possibly for other secondary dictionaries used for a subset of the column's segments.&lt;/para&gt;</description>
    <column name="partition_id" type="bigint">Indicates the partition ID. Is unique within a database.</column>
    <column name="hobt_id" type="bigint">ID of the heap or B-tree index (HoBT) for the table that has this columnstore index.</column>
    <column name="column_id" type="int">ID of the columnstore column.</column>
    <column name="dictionary_id" type="int">Id of the dictionary.</column>
    <column name="version" type="int">Version of the dictionary format.</column>
    <column name="type" type="int">Dictionary type:&lt;br /&gt;&lt;br /&gt; 1 - Hash dictionary containing &lt;strong&gt;int&lt;/strong&gt; values&lt;br /&gt;&lt;br /&gt; 2 - Not used&lt;br /&gt;&lt;br /&gt; 3 - Hash dictionary containing string values&lt;br /&gt;&lt;br /&gt; 4 - Hash dictionary containing &lt;strong&gt;float&lt;/strong&gt; values</column>
    <column name="last_id" type="int">The last data id in the dictionary.</column>
    <column name="entry_count" type="bigint">Number of entries in the dictionary.</column>
    <column name="on_disc_size" type="bigint">Size of dictionary in bytes.</column>
    <column name="pdw_node_id" type="int">Unique identifier of a Azure Synapse Analytics node.</column>
  </table>
  <table name="sys.pdw_nodes_column_store_row_groups" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-column-store-row-groups-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_nodes_column_store_row_groups (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Provides clustered columnstore index information on a per-segment basis to help the administrator make system management decisions in Azure Synapse Analytics. &lt;strong&gt;sys.pdw_nodes_column_store_row_groups&lt;/strong&gt; has a column for the total number of rows physically stored (including those marked as deleted) and a column for the number of rows marked as deleted. Use &lt;strong&gt;sys.pdw_nodes_column_store_row_groups&lt;/strong&gt; to determine which row groups have a high percentage of deleted rows and should be rebuilt.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the underlying table. This is the physical table on the Compute node, not the object_id for the logical table on the Control node. For example, object_id does not match with the object_id in sys.tables.&lt;br /&gt;&lt;br /&gt; To join with sys.tables, use sys.pdw_index_mappings.</column>
    <column name="index_id" type="int">ID of the clustered columnstore index on *object_id* table.</column>
    <column name="partition_number" type="int">ID of the table partition that holds row group *row_group_id*. You can use *partition_number* to join this DMV to sys.partitions.</column>
    <column name="row_group_id" type="int">ID of this row group. This is unique within the partition.</column>
    <column name="dellta_store_hobt_id" type="bigint">The hobt_id for delta row groups, or NULL if the row group type is not delta. A delta row group is a read/write row group that is accepting new records. A delta row group has the &lt;strong&gt;OPEN&lt;/strong&gt; status. A delta row group is still in rowstore format and has not been compressed to columnstore format.</column>
    <column name="state" type="tinyint">ID number associated with the state_description.&lt;br /&gt;&lt;br /&gt; 1 = OPEN&lt;br /&gt;&lt;br /&gt; 2 = CLOSED&lt;br /&gt;&lt;br /&gt; 3 = COMPRESSED</column>
    <column name="state_desccription" type="nvarchar(60)">Description of the persistent state of the row group:&lt;br /&gt;&lt;br /&gt; OPEN - A read/write row group that is accepting new records. An open row group is still in rowstore format and has not been compressed to columnstore format.&lt;br /&gt;&lt;br /&gt; CLOSED - A row group that has been filled, but not yet compressed by the tuple mover process.&lt;br /&gt;&lt;br /&gt; COMPRESSED - A row group that has filled and compressed.</column>
    <column name="total_rows" type="bigint">Total rows physically stored in the row group. Some may have been deleted but they are still stored. The maximum number of rows in a row group is 1,048,576 (hexadecimal FFFFF).</column>
    <column name="deleted_rows" type="bigint">Number of rows physically stored in the row group that are marked for deletion.&lt;br /&gt;&lt;br /&gt; Always 0 for DELTA row groups.</column>
    <column name="size_in_bytes" type="int">Combined size, in bytes, of all the pages in this row group. This size does not include the size required to store metadata or shared dictionaries.</column>
    <column name="pdw_node_id" type="int">Unique ID of a Azure Synapse Analytics node.</column>
    <column name="distribution_id" type="int">Unique ID of the distribution.</column>
  </table>
  <table name="sys.pdw_nodes_column_store_segments" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-column-store-segments-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_nodes_column_store_segments (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each column in a columnstore index.&lt;/para&gt;</description>
    <column name="partition_id" type="bigint">Indicates the partition ID. Is unique within a database.</column>
    <column name="hobt_id" type="bigint">ID of the heap or B-tree index (hobt) for the table that has this columnstore index.</column>
    <column name="column_id" type="int">ID of the columnstore column.</column>
    <column name="segment_id" type="int">ID of the column segment. For backward compatibility, the column name continues to be called segment_id even though this is the rowgroup ID. You can uniquely identify a segment using &lt;hobt_id, partition_id, column_id&gt;, &lt;segment_id&gt;.</column>
    <column name="version" type="int">Version of the column segment format.</column>
    <column name="encoding_type" type="int">Type of encoding used for that segment:&lt;br /&gt;&lt;br /&gt; 1 = VALUE_BASED     -  non-string/binary with no dictionary (similar to 4 with some internal variations)&lt;br /&gt;&lt;br /&gt; 2 = VALUE_HASH_BASED   - non-string/binary column with common values in dictionary&lt;br /&gt;&lt;br /&gt; 3 = STRING_HASH_BASED  - string/binary column with common values in dictionary&lt;br /&gt;&lt;br /&gt; 4 = STORE_BY_VALUE_BASED - non-string/binary with no dictionary&lt;br /&gt;&lt;br /&gt; 5 = STRING_STORE_BY_VALUE_BASED - string/binary with no dictionary&lt;br /&gt;&lt;br /&gt; All encodings take advantage of bit-packing and run-length encoding when possible.</column>
    <column name="row_count" type="int">Number of rows in the row group.</column>
    <column name="has_nulls" type="int">1 if the column segment has null values.</column>
    <column name="base_id" type="bigint">Base value ID if encoding type 1 is being used.  If encoding type 1 is not being used, base_id is set to 1.</column>
    <column name="magnitude" type="float">Magnitude if encoding type 1 is being used.  If encoding type 1 is not being used, magnitude is set to 1.</column>
    <column name="primary__dictionary_id" type="int">ID of primary dictionary. A non-zero value points to the local dictionary for this column in the current segment (i.e. the rowgroup). A value of -1 indicates that there is no local dictionary for this segment.</column>
    <column name="secondary_dictionary_id" type="int">ID of secondary dictionary. A non-zero value points to the local dictionary for this column in the current segment (i.e. the rowgroup). A value of -1 indicates that there is no local dictionary for this segment.</column>
    <column name="min_data_id" type="bigint">Minimum data ID in the column segment.</column>
    <column name="max_data_id" type="bigint">Maximum data ID in the column segment.</column>
    <column name="null_value" type="bigint">Value used to represent nulls.</column>
    <column name="on_disk_size" type="bigint">Size of segment in bytes.</column>
    <column name="pdw_node_id" type="int">Unique identifier of a Azure Synapse Analytics node.</column>
  </table>
  <table name="sys.pdw_nodes_columns" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_nodes_columns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Shows columns for user-defined tables and user-defined views.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this column belongs.</column>
    <column name="name" type="sysname">Name of the column. Unique in object.</column>
    <column name="column_id" type="int">ID of the column. Unique in object.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the column.</column>
    <column name="user_type_id" type="int">ID of the type of the column as defined by the user.</column>
    <column name="max_length" type="smallint">Maximum length (in bytes) of the column.&lt;br/&gt;
Range: Includes -1 (not valid) for unsupported column types.</column>
    <column name="precision" type="tinyint">Precision of the column if numeric-based; otherwise, 0.</column>
    <column name="scale" type="tinyint">Scale of column if numeric-based; otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the column if character-based; otherwise, NULL.</column>
    <column name="is_nullable" type="bit">1 = Column is nullable.</column>
    <column name="is_ansi_padded" type="bit">1 = Column uses ANSI_PADDING ON behavior if character, binary, or variant.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_rowguidcol" type="bit">1 = Column is a declared ROWGUIDCOL.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_identity" type="bit">1 = Column has identity values.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_computed" type="bit">1 = Column is a computed column.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_filestream" type="bit">1 = Column is a FILESTREAM column.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_replicated" type="bit">1 = Column is replicated.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_non_sql_subscribed" type="bit">1 = Column has a non-SQL subscriber.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_merge_published" type="bit">1 = Column is merge-published.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_dts_replicated" type="bit">1 = Column is replicated by using SSIS.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_xml_document" type="bit">1 = Content is a complete XML document.&lt;br/&gt;
Range: Always 0.</column>
    <column name="xml_collection_id" type="int">0 = No XML schema collection.&lt;br/&gt;
Range: Always 0.</column>
    <column name="default_object_id" type="int">ID of the default object; 0 = No default.&lt;br/&gt;
Range: Always 0.</column>
    <column name="rule_object_id" type="int">ID of the stand-alone rule bound to the column. &lt;br /&gt;0 = No stand-alone rule.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_sparse" type="bit">1 = Column is a sparse column.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_column_set" type="bit">1 = Column is a column set.&lt;br/&gt;
Range: Always 0.</column>
    <column name="pdw_node_id" type="int">Unique identifier of a Azure Synapse Analytics node.&lt;br/&gt;
Range: NOT NULL</column>
  </table>
  <table name="sys.pdw_nodes_indexes" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-indexes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_nodes_indexes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns indexes for Azure Synapse Analytics.&lt;/para&gt;</description>
    <column name="object_id" type="int">id of the object to which this index belongs.</column>
    <column name="name" type="sysname">Name of the index. Name is unique only within the object. NULL = Heap</column>
    <column name="index_id" type="int">id of the index. index_id is unique only within the object.&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered index&lt;br /&gt;&lt;br /&gt; &gt; 1 = Nonclustered index</column>
    <column name="type" type="tinyint">Type of index:&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered&lt;br /&gt;&lt;br /&gt; 2 = Nonclustered&lt;br /&gt;&lt;br /&gt; 5 = Clustered xVelocity memory optimized columnstore index</column>
    <column name="type_desc" type="nvarchar(60)">Description of index type:&lt;br /&gt;&lt;br /&gt; HEAP&lt;br /&gt;&lt;br /&gt; CLUSTERED&lt;br /&gt;&lt;br /&gt; NONCLUSTERED&lt;br /&gt;&lt;br /&gt; CLUSTERED   COLUMNSTORE</column>
    <column name="is_unique" type="bit">0 = Index is not unique.&lt;br/&gt;
Range: Always 0.</column>
    <column name="data_space_id" type="int">id of the data space for this index. Data space is either a filegroup or partition scheme.&lt;br /&gt;&lt;br /&gt; 0 = object_id is a table-valued function.</column>
    <column name="ignore_dup_key" type="bit">0 = IGNORE_DUP_KEY is OFF.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_primary_key" type="bit">1 = Index is part of a PRIMARY KEY constraint.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_unique_constraint" type="bit">1 = Index is part of a UNIQUE constraint.&lt;br/&gt;
Range: Always 0.</column>
    <column name="fill_factor" type="tinyint">&gt; 0 = FILLFACTOR percentage used when the index was created or rebuilt.&lt;br /&gt;&lt;br /&gt; 0 = Default value&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_padded" type="bit">0 = PADINDEX is OFF.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_disabled" type="bit">1 = Index is disabled.&lt;br /&gt;&lt;br /&gt; 0 = Index is not disabled.</column>
    <column name="is_hypothetical" type="bit">0 = Index is not hypothetical.&lt;br/&gt;
Range: Always 0.</column>
    <column name="allow_row_locks" type="bit">1 = Index allows row locks.&lt;br/&gt;
Range: Always 1.</column>
    <column name="allow_page_locks" type="bit">1 = Index allows page locks.&lt;br/&gt;
Range: Always 1.</column>
    <column name="has_filter" type="bit">0 = Index does not have a filter.&lt;br/&gt;
Range: Always 0.</column>
    <column name="filter_definition" type="nvarchar(max)">Expression for the subset of rows included in the filtered index.&lt;br/&gt;
Range: Always NULL.</column>
    <column name="pdw_node_id" type="int">Unique identifier of a Azure Synapse Analytics node.&lt;br/&gt;
Range: NOT NULL</column>
  </table>
  <table name="sys.pdw_nodes_partitions" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-partitions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_nodes_partitions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each partition of all the tables, and most types of indexes in a Azure Synapse Analytics database. All tables and indexes contain at least one partition, whether or not they are explicitly partitioned.&lt;/para&gt;</description>
    <column name="partition_id" type="bigint">ID of the partition. Is unique within a database.</column>
    <column name="object_id" type="int">ID of the object to which this partition belongs. Every table or view is composed of at least one partition.</column>
    <column name="index_id" type="int">ID of the index within the object to which this partition belongs.</column>
    <column name="partition_number" type="int">1-based partition number within the owning index or heap. For Azure Synapse Analytics, the value of this column is 1.</column>
    <column name="hobt_id" type="bigint">ID of the data heap or B-tree (HoBT) that contains the rows for this partition.</column>
    <column name="rows" type="bigint">Approximate number of rows in this partition.</column>
    <column name="data_compression" type="int">Indicates the state of compression for each partition:&lt;br /&gt;&lt;br /&gt; 0 = NONE&lt;br /&gt;&lt;br /&gt; 1 = ROW&lt;br /&gt;&lt;br /&gt; 2 = PAGE&lt;br /&gt;&lt;br /&gt; 3 = COLUMNSTORE</column>
    <column name="data_compression_desc" type="nvarchar(60)">Indicates the state of compression for each partition. Possible values are NONE, ROW, and PAGE.</column>
    <column name="pdw_node_id" type="int">Unique identifier of a Azure Synapse Analytics node.</column>
  </table>
  <table name="sys.pdw_nodes_pdw_physical_databases" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-pdw-physical-databases-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_nodes_pdw_physical_databases (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each physical database on a compute node. Aggregate physical database information to get detailed information about databases. To combine information, join the &lt;c&gt;sys.pdw_nodes_pdw_physical_databases&lt;/c&gt; to the &lt;c&gt;sys.pdw_database_mappings&lt;/c&gt; and &lt;c&gt;sys.databases&lt;/c&gt; tables.&lt;/para&gt;</description>
    <column name="database_id" type="int">The object ID for the database. Note that this value is not same as a database_id in the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-databases-transact-sql'&gt;sys.databases (Transact-SQL)&lt;/a&gt; view.</column>
    <column name="physical_name" type="sysname">The physical name for the database on the Shell/Compute nodes. This value is same as a value in the physical_name column in the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-database-mappings-transact-sql'&gt;sys.pdw_database_mappings (Transact-SQL)&lt;/a&gt; view.</column>
    <column name="pdw_node_id" type="int">Unique numeric id associated with the node.</column>
  </table>
  <table name="sys.pdw_nodes_tables" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-nodes-tables-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_nodes_tables (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains a row for each table object that a principal either owns or on which the principal has been granted some permission.&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name.</column>
    <column name="object_id" type="int">Object identification number. Is unique within a database.</column>
    <column name="principal_id" type="int">ID of the individual owner, if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner can be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; Is NULL if there is no alternate individual owner.&lt;br /&gt;&lt;br /&gt; Is NULL if the object type is one of the following:&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR-integration) trigger&lt;br /&gt;&lt;br /&gt; TR = SQL trigger&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; EC = Edge constraint</column>
    <column name="schema_id" type="int">ID of the schema that the object is contained in.&lt;br /&gt;&lt;br /&gt; Schema-scoped system objects are always contained in the sys or INFORMATION_SCHEMA schemas.</column>
    <column name="parent_object_id" type="int">ID of the object to which this object belongs.&lt;br /&gt;&lt;br /&gt; 0 = Not a child object.</column>
    <column name="type" type="char(2)">Object type:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = DEFAULT (constraint or stand-alone)&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = SQL scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = SQL inline table-valued function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = SQL Stored Procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PG = Plan guide&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; R = Rule (old-style, stand-alone)&lt;br /&gt;&lt;br /&gt; RF = Replication-filter-procedure&lt;br /&gt;&lt;br /&gt; S = System base table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SO = Sequence object&lt;br /&gt;&lt;br /&gt; U = Table (user-defined)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; EC = Edge constraint &lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = SQL table-valued-function&lt;br /&gt;&lt;br /&gt; TR = SQL DML trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ST = STATS_TREE&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2016 (13.x) and later, Azure SQL Database, Azure Synapse Analytics, Analytics Platform System (PDW).&lt;br /&gt;&lt;br /&gt; ET = External Table</column>
    <column name="type_desc" type="nvarchar(60)">Description of the object type:&lt;br /&gt;&lt;br /&gt; AGGREGATE_FUNCTION&lt;br /&gt;&lt;br /&gt; CHECK_CONSTRAINT&lt;br /&gt;&lt;br /&gt; CLR_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; CLR_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; CLR_TRIGGER&lt;br /&gt;&lt;br /&gt; DEFAULT_CONSTRAINT&lt;br /&gt;&lt;br /&gt; EXTENDED_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; FOREIGN_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; INTERNAL_TABLE&lt;br /&gt;&lt;br /&gt; PLAN_GUIDE&lt;br /&gt;&lt;br /&gt; PRIMARY_KEY_CONSTRAINT&lt;br /&gt;&lt;br /&gt; REPLICATION_FILTER_PROCEDURE&lt;br /&gt;&lt;br /&gt; RULE&lt;br /&gt;&lt;br /&gt; SEQUENCE_OBJECT&lt;br /&gt;&lt;br /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt;  SERVICE_QUEUE&lt;br /&gt;&lt;br /&gt; SQL_INLINE_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_SCALAR_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_STORED_PROCEDURE&lt;br /&gt;&lt;br /&gt; SQL_TABLE_VALUED_FUNCTION&lt;br /&gt;&lt;br /&gt; SQL_TRIGGER&lt;br /&gt;&lt;br /&gt; SYNONYM&lt;br /&gt;&lt;br /&gt; SYSTEM_TABLE&lt;br /&gt;&lt;br /&gt; TABLE_TYPE&lt;br /&gt;&lt;br /&gt; UNIQUE_CONSTRAINT&lt;br /&gt;&lt;br /&gt; USER_TABLE&lt;br /&gt;&lt;br /&gt; VIEW</column>
    <column name="create_date" type="datetime">Date the object was created.</column>
    <column name="modify_date" type="datetime">Date the object was last modified by using an ALTER statement. If the object is a table or a view, modify_date also changes when an index on the table or view is created or altered.</column>
    <column name="is_ms_shipped" type="bit">Object is created by an internal SQL Server component.</column>
    <column name="is_published" type="bit">Object is published.</column>
    <column name="is_schema_published" type="bit">Only the schema of the object is published.</column>
    <column name="lob_data_space_id" type="int">Range: Always 0.</column>
    <column name="filestream_data_space_id" type="int">Data space ID for a FILESTREAM filegroup or Information not available.&lt;br/&gt;
Range: NULL</column>
    <column name="max_column_id_used" type="int">Maximum column ID used by this table.</column>
    <column name="lock_on_bulk_load" type="bit">Table is locked on bulk load.&lt;br/&gt;
Range: TBD</column>
    <column name="uses_ansi_nulls" type="bit">Table was created with the SET ANSI_NULLS database option ON.&lt;br/&gt;
Range: 1</column>
    <column name="is_replicated" type="bit">1 = Table is published using replication.&lt;br/&gt;
Range: 0; replication is not supported.</column>
    <column name="has_replication_filter" type="bit">1 = Table has a replication filter.&lt;br/&gt;
Range: 0</column>
    <column name="is_merge_published" type="bit">1 = Table is published using merge replication.&lt;br/&gt;
Range: 0; not supported.</column>
    <column name="is_sync_tran_subscribed" type="bit">1 = Table is subscribed using an immediate updating subscription.&lt;br/&gt;
Range: 0; not supported.</column>
    <column name="has_unchecked_assembly_data" type="bit">1 = Table contains persisted data that depends on an assembly whose definition changed during the last ALTER ASSEMBLY. Will be reset to 0 after the next successful DBCC CHECKDB or DBCC CHECKTABLE.&lt;br/&gt;
Range: 0; no CLR support.</column>
    <column name="text_in_row_limit" type="int">0 = Text in row option is not set.&lt;br/&gt;
Range: Always 0.</column>
    <column name="large_value_types_out_of_row" type="bit">1 = Large value types are stored out-of-row.&lt;br/&gt;
Range: Always 0.</column>
    <column name="is_tracked_by_cdc" type="bit">1 = Table is enabled for change data capture&lt;br/&gt;
Range: Always 0; no CDC support.</column>
    <column name="lock_escalation" type="tinyint">The value of the LOCK_ESCALATION option for the table: 2 = AUTO&lt;br/&gt;
Range: Always 2.</column>
    <column name="lock_escalation_desc" type="nvarchar(60)">A text description of the lock_escalation option.&lt;br/&gt;
Range: Always ꞌAUTOꞌ.</column>
    <column name="pdw_node_id" type="int">Unique identifier of a Azure Synapse Analytics node.&lt;br/&gt;
Range: NOT NULL</column>
  </table>
  <table name="sys.pdw_permanent_table_mappings" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-permanent-table-mappings-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_permanent_table_mappings (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Ties permanent user tables to internal object names by &lt;strong&gt;object_id&lt;/strong&gt;.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
&lt;strong&gt;sys.pdw_permanent_table_mappings&lt;/strong&gt; holds mappings to permanent tables and does not include temporary or external table mappings.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="physical_name" type="nvarchar(36)">The physical name for the table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;physical_name&lt;/strong&gt; and &lt;strong&gt;object_id&lt;/strong&gt; form the key for this view.</column>
    <column name="object_id" type="int">The object ID for the table. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql'&gt;sys.objects (Transact-SQL)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;physical_name&lt;/strong&gt; and &lt;strong&gt;object_id&lt;/strong&gt; form the key for this view.</column>
  </table>
  <table name="sys.pdw_replicated_table_cache_state" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-replicated-table-cache-state-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_replicated_table_cache_state (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Returns the state of the cache associated with a replicated table by &lt;strong&gt;object_id&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="object_id" type="int">The object ID for the table. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql'&gt;sys.objects (Transact-SQL)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;object_id&lt;/strong&gt; is the key for this view.</column>
    <column name="state" type="nvarchar(40)">The replicated table cache state for this table.&lt;br/&gt;
Range: 'NotReady','Ready'</column>
  </table>
  <table name="sys.pdw_table_distribution_properties" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-table-distribution-properties-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_table_distribution_properties (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Holds distribution information for tables.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the table for which thee properties were specified.</column>
    <column name="distribution_policy" type="tinyint">0 = UNDEFINED&lt;br /&gt;&lt;br /&gt; 1 = NONE&lt;br /&gt;&lt;br /&gt; 2 = HASH&lt;br /&gt;&lt;br /&gt; 3 = REPLICATE&lt;br /&gt;&lt;br /&gt; 4 = ROUND_ROBIN</column>
    <column name="distribution_policy_desc" type="nvarchar(60)">UNDEFINED, NONE, HASH, REPLICATE, ROUND_ROBIN&lt;br/&gt;
Range: Azure Synapse Analytics returns either HASH, ROUND_ROBIN or REPLICATE.</column>
  </table>
  <table name="sys.pdw_table_mappings" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-pdw-table-mappings-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.pdw_table_mappings (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Ties user tables to internal object names by &lt;strong&gt;object_id&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="physical_name" type="nvarchar(36)">The physical name for the table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;physical_name&lt;/strong&gt; and &lt;strong&gt;object_id&lt;/strong&gt; form the key for this view.</column>
    <column name="object_id" type="int">The object ID for the table. See &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql'&gt;sys.objects (Transact-SQL)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;physical_name&lt;/strong&gt; and &lt;strong&gt;object_id&lt;/strong&gt; form the key for this view.</column>
  </table>
  <table name="sys.workload-management-workload-classifier-details" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-workload-management-workload-classifier-details-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.workload_management_workload_classifier_details (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt;Returns details for each classifier.&lt;/para&gt;</description>
    <column name="classifier_id" type="int">ID of the classifier.  Is not nullable.</column>
    <column name="classifier_type" type="sysname">Joinable to &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-workload-management-workload-classifiers-transact-sql'&gt;sys.workload_management_workload_classifiers&lt;/a&gt;.&lt;br/&gt;
Range: &lt;c&gt;membername&lt;/c&gt;&lt;br/&gt;&lt;c&gt;wlm_label&lt;/c&gt;&lt;br/&gt;&lt;c&gt;wlm_context&lt;/c&gt;&lt;br/&gt;&lt;c&gt;start_time&lt;/c&gt;&lt;br/&gt;&lt;c&gt;end_time&lt;/c&gt;</column>
    <column name="classifier_value" type="sysname">The value of the classifier. Is not nullable.</column>
  </table>
  <table name="sys.workload-management-workload-classifiers" category="AzureSynapseAnalytics" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-workload-management-workload-classifiers-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.workload_management_workload_classifiers (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ Azure Synapse Analytics&lt;/para&gt;
&lt;para&gt; Returns details for workload classifiers.&lt;/para&gt;</description>
    <column name="classifier_id" type="int">Unique ID of the classifier. Is not nullable</column>
    <column name="group_name" type="sysname">Name of the workload group the classifier is assigned to. Is not nullable. Joinable to sys.workload_management_workload_groups</column>
    <column name="name" type="sysname">Name of the classifier. Must be unique to the instance. Is not nullable.</column>
    <column name="importance" type="sysname">Is the relative importance of a request in this workload group and across workload groups for shared resources.  Importance specified in the classifier overrides the workload group importance setting. Is nullable.  When null, the workload group importance setting is used.&lt;br/&gt;
Range: low, below_normal, normal (default), above_normal, high</column>
    <column name="create_time" type="datetime">Time the classifier was created. Is not nullable.</column>
    <column name="modify_time" type="datetime">Time the classifier was last modified. Is not nullable.</column>
    <column name="is_enabled" type="bit">INTERNAL</column>
  </table>
  <table name="sys.remote_data_archive_databases" category="StretchDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/stretch-database-catalog-views-sys-remote-data-archive-databases">
    <description>&lt;para&gt;&lt;strong&gt;Stretch Database Catalog Views - sys.remote_data_archive_databases&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later&lt;/para&gt;
&lt;para&gt;Contains one row for each remote database that stores data from a Stretch-enabled local database.&lt;/para&gt;</description>
    <column name="remote_database_id" type="int">The auto-generated local identifier of the remote database.</column>
    <column name="remote_database_name" type="sysname">The name of the remote database.</column>
    <column name="data_source_id" type="int">The data source used to connect to the remote server</column>
  </table>
  <table name="sys.remote_data_archive_tables" category="StretchDatabase" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/stretch-database-catalog-views-sys-remote-data-archive-tables">
    <description>&lt;para&gt;&lt;strong&gt;Stretch Database Catalog Views - sys.remote_data_archive_tables&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server 2016 (13.x) and later&lt;/para&gt;
&lt;para&gt;Contains one row for each remote table that stores data from a Stretch-enabled local table.&lt;/para&gt;</description>
    <column name="object_id" type="int">The object ID of the Stretch-enabled local table.</column>
    <column name="remote_database_id" type="int">The auto-generated local identifier of the remote database.</column>
    <column name="remote_table_name" type="sysname">The name of the table in the remote database that corresponds to the Stretch-enabled local table.</column>
    <column name="filter_predicate" type="nvarchar(max)">The filter predicate, if any, that identifies rows in the table to be migrated. If the value is null, the entire table is eligible to be migrated.&lt;br /&gt;&lt;br /&gt; For more info, see &lt;a href='https://docs.microsoft.com/en-us/sql/sql-server/stretch-database/enable-stretch-database-for-a-table'&gt;Enable Stretch Database for a table&lt;/a&gt; and &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/~/sql-server/stretch-database/select-rows-to-migrate-by-using-a-filter-function-stretch-database'&gt;Select rows to migrate by using a filter predicate&lt;/a&gt;.</column>
    <column name="migration_direction" type="tinyint">The direction in which data is currently being migrated. The available values are the following.&lt;br/&gt;1 (outbound)&lt;br/&gt;2 (inbound)</column>
    <column name="migration_direction_desc" type="nvarchar(60)">The description of the direction in which data is currently being migrated. The available values are the following.&lt;br/&gt;outbound (1)&lt;br/&gt;inbound (2)</column>
    <column name="is_migration_paused" type="bit">Indicates whether migration is currently paused.</column>
    <column name="is_reconciled" type="bit">Indicates whether the remote table and the SQL Server table are in sync.&lt;br/&gt;&lt;br/&gt;When the value of &lt;strong&gt;is_reconciled&lt;/strong&gt; is 1 (true), the remote table and the SQL Server table are in sync, and you can run queries that include the remote data.&lt;br/&gt;&lt;br/&gt;When the value of &lt;strong&gt;is_reconciled&lt;/strong&gt; is 0 (false), the remote table and the SQL Server table are not in sync. Recently migrated rows have to be migrated again. This occurs when you restore the remote Azure database, or when you delete rows manually from the remote table. Until you reconcile the tables, you can't run queries that include the remote data. To reconcile the tables, run &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sys-sp-rda-reconcile-batch-transact-sql'&gt;sys.sp_rda_reconcile_batch&lt;/a&gt;.</column>
  </table>
  <table name="sys.column_xml_schema_collection_usages" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-column-xml-schema-collection-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.column_xml_schema_collection_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row for each column that is validated by an XML schema.&lt;/para&gt;</description>
    <column name="object_id" type="int">The ID of the object to which this column belongs.</column>
    <column name="column_id" type="int">The ID of the column. Is unique within the object.</column>
    <column name="xml_collection_id" type="int">The ID of the collection that contains the validating XML schema namespace of the column.</column>
  </table>
  <table name="sys.parameter_xml_schema_collection_usages" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-parameter-xml-schema-collection-usages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.parameter_xml_schema_collection_usages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns a row for each parameter that is validated by an XML schema.&lt;/para&gt;</description>
    <column name="object_id" type="int">The ID of the object to which this parameter belongs.</column>
    <column name="parameter_id" type="int">The ID of the parameter.  Is unique within the object.</column>
    <column name="xml_collection_id" type="int">The ID of the XML schema collection that contains the validating XML schema namespace of the parameter.</column>
  </table>
  <table name="sys.selective_xml_index_paths" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-selective-xml-index-paths-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.selective_xml_index_paths (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Available beginning in SQL Server 2012 (11.x) Service Pack 1, each row in sys.selective_xml_index_paths represents one promoted path for particular selective xml index.&lt;br/&gt;
If you create a selective xml index on xmlcol of table T using following statement,&lt;br/&gt;
&lt;code&gt;&lt;br/&gt;
CREATE SELECTIVE XML INDEX sxi1 ON T(xmlcol) &lt;br/&gt;
FOR ( path1 = '/a/b/c' AS XQUERY 'xs:string',&lt;br/&gt;
    path2 = '/a/b/d' AS XQUERY 'xs:double'&lt;br/&gt;
  )&lt;br/&gt;
&lt;/code&gt;&lt;br/&gt;
 There will be two new rows in sys.selective_xml_index_paths corresponding to the index sxi1.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of table with XML column.</column>
    <column name="index_id" type="int">Unique id of the selective xml index.</column>
    <column name="path_id" type="int">Promoted XML path id.</column>
    <column name="path" type="nvarchar(4000)">Promoted path. For example, '/a/b/c/d/e'.</column>
    <column name="name" type="sysname">Path name.</column>
    <column name="path_type" type="tinyint">0 = XQUERY&lt;br /&gt;&lt;br /&gt; 1 = SQL</column>
    <column name="path_type_desc" type="sysname">Based on &lt;strong&gt;path_type&lt;/strong&gt; value 'XQUERY' or 'SQL'.</column>
    <column name="xml_component_id" type="int">Unique ID of the XML schema component in the database.</column>
    <column name="xquery_type_description" type="nvarchar(4000)">Name of the specified xsd type.</column>
    <column name="is_xquery_type_inferred" type="bit">1 = type is inferred.</column>
    <column name="xquery_max_length" type="smallint">Max length (in character of xsd type).</column>
    <column name="is_xquery_max_length_inferred" type="bit">1 = maximum length is inferred.</column>
    <column name="is_node" type="bit">0 = node() hint not present.&lt;br /&gt;&lt;br /&gt; 1 = node() optimization hint applied.</column>
    <column name="system_type_id" type="tinyint">ID of the system type of the column.</column>
    <column name="user_type_id" type="tinyint">ID of the user type of the column.</column>
    <column name="max_length" type="smallint">Max Length (in bytes) of the type.&lt;br /&gt;&lt;br /&gt; -1 = Column data type is varchar(max), nvarchar(max), varbinary(max), or xml.</column>
    <column name="precision" type="tinyint">Maximum precision of the type if it is numeric-based. Otherwise 0.</column>
    <column name="scale" type="tinyint">Maximum scale of the type if it is numeric-based. Otherwise, 0.</column>
    <column name="collation_name" type="sysname">Name of the collation of the type if it is character-based. Otherwise, NULL.</column>
    <column name="is_singleton" type="bit">0 = SINGLETON hint not present.&lt;br /&gt;&lt;br /&gt; 1 = SINGLETON optimization hint applied.</column>
  </table>
  <table name="sys.xml_schema_attributes" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-attributes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_attributes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per XML schema component that is an attribute, &lt;strong&gt;symbol_space&lt;/strong&gt; of &lt;strong&gt;A&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="xml_component_id" type="int">Unique ID of the XML schema component in the database.</column>
    <column name="xml_collection_id" type="int">ID of the XML schema collection that contains the namespace of this component.</column>
    <column name="xml_namespace_id" type="int">ID of the XML namespace within the collection.</column>
    <column name="is_qualified" type="bit">1 = This component has an explicit namespace qualifier.&lt;br /&gt;&lt;br /&gt; 0 = This is a locally scoped component. In this case, the pair, &lt;strong&gt;namespace_id&lt;/strong&gt;, &lt;strong&gt;collection_id&lt;/strong&gt;, refers to the "no namespace" &lt;strong&gt;targetNamespace&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For wildcard components this value will be equal to 1.</column>
    <column name="name" type="nvarchar">Unique name of the XML schema component. Is NULL if the component is unnamed.</column>
    <column name="symbol_space" type="char(1)">Space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; N = None&lt;br /&gt;&lt;br /&gt; T = Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group</column>
    <column name="symbol_space_desc" type="nvarchar">Description of space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP</column>
    <column name="kind" type="char(1)">Kind of XML schema component.&lt;br /&gt;&lt;br /&gt; N = Any Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; Z = Any Simple Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; P = Primitive Type (intrinsic types)&lt;br /&gt;&lt;br /&gt; S = Simple Type&lt;br /&gt;&lt;br /&gt; L = List Type&lt;br /&gt;&lt;br /&gt; U = Union Type&lt;br /&gt;&lt;br /&gt; C = Complex Simple Type (derived from Simple)&lt;br /&gt;&lt;br /&gt; K = Complex Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; W = Element-Wildcard&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group&lt;br /&gt;&lt;br /&gt; V = Attribute-Wildcard</column>
    <column name="kind_desc" type="nvarchar">Description of the kind of XML schema component:&lt;br /&gt;&lt;br /&gt; ANY_TYPE&lt;br /&gt;&lt;br /&gt; ANY_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; PRIMITIVE_TYPE&lt;br /&gt;&lt;br /&gt; SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; LIST_TYPE&lt;br /&gt;&lt;br /&gt; UNION_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ELEMENT_WILDCARD&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_WILDCARD</column>
    <column name="derivation" type="char(1)">Derivation method for derived types:&lt;br /&gt;&lt;br /&gt; N = None (not derived)&lt;br /&gt;&lt;br /&gt; X = Extension&lt;br /&gt;&lt;br /&gt; R = Restriction&lt;br /&gt;&lt;br /&gt; S = Substitution</column>
    <column name="derivation_desc" type="nvarchar">Description of derivation method for derived types:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; EXTENSION&lt;br /&gt;&lt;br /&gt; RESTRICTION&lt;br /&gt;&lt;br /&gt; SUBSTITUTION</column>
    <column name="base_xml_component_id" type="int">ID of the component from which this component is derived. NULL if there is none.</column>
    <column name="scoping_xml_component_id" type="int">Unique ID of the scoping component. NULL if there is none (global scope).</column>
    <column name="is_default_fixed" type="bit">1 = The default value is a fixed value. This value cannot be overridden in an XML instance.&lt;br /&gt;&lt;br /&gt; 0 = The default value is not a fixed value for the attribute. (default)</column>
    <column name="must_be_qualified" type="bit">1 = The attribute must be explicitly namespace qualified.&lt;br /&gt;&lt;br /&gt; 0 = The attribute may be implicitly namespace qualified. (default)</column>
    <column name="default_value" type="nvarchar">Default value of the attribute. Is NULL if a default value is not supplied.</column>
  </table>
  <table name="sys.xml_schema_component_placements" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-component-placements-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_component_placements (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per placement for XML schema components.&lt;/para&gt;</description>
    <column name="xml_component_id" type="int">ID of the XML schema component that owns this placement.</column>
    <column name="placement_id" type="int">ID of the placement. This is unique within the owning XML schema component.</column>
    <column name="placed_xml_component_id" type="int">ID of the placed XML schema component.</column>
    <column name="is_default_fixed" type="bit">1 = The default value is a fixed value. This value cannot be overridden in an XML instance.&lt;br /&gt;&lt;br /&gt; 0 = The value can be overridden.(default)</column>
    <column name="min_occurrences" type="int">Minimum number of placed component occurs.</column>
    <column name="max_occurrences" type="int">Maximum number of placed component occurs.</column>
    <column name="default_value" type="nvarchar (4000)">Default value if one is supplied. Is NULL if a default value is not supplied.</column>
  </table>
  <table name="sys.xml_schema_components" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-components-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_components (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per component of an XML schema. The pair (&lt;strong&gt;collection_id&lt;/strong&gt;, &lt;strong&gt;namespace_id&lt;/strong&gt;) is a compound foreign key to the containing namespace. For named components, the values for &lt;strong&gt;symbol_space&lt;/strong&gt;, &lt;strong&gt;name&lt;/strong&gt;, &lt;strong&gt;scoping_xml_component_id&lt;/strong&gt;, &lt;strong&gt;is_qualified&lt;/strong&gt;, &lt;strong&gt;xml_namespace_id&lt;/strong&gt;, &lt;strong&gt;xml_collection_id&lt;/strong&gt; are unique.&lt;/para&gt;</description>
    <column name="xml_component_id" type="int">Unique ID of the XML schema component in the database.</column>
    <column name="xml_collection_id" type="int">ID of the XML schema collection that contains the namespace of this component.</column>
    <column name="xml_namespace_id" type="int">ID of the XML namespace within the collection.</column>
    <column name="is_qualified" type="bit">1 = This component has an explicit namespace qualifier.&lt;br /&gt;&lt;br /&gt; 0 = This is a locally scoped component. In this case, the pair, &lt;strong&gt;namespace_id&lt;/strong&gt;, &lt;strong&gt;collection_id&lt;/strong&gt;, refers to the "no namespace" &lt;strong&gt;targetNamespace&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For wildcard components this value will be equal to 1.</column>
    <column name="name" type="nvarchar">Unique name of the XML schema component. Is NULL if the component is unnamed.</column>
    <column name="symbol_space" type="char(1)">Space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; N = None&lt;br /&gt;&lt;br /&gt; T = Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group</column>
    <column name="symbol_space_desc" type="nvarchar">Description of space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP</column>
    <column name="kind" type="char(1)">Kind of XML schema component.&lt;br /&gt;&lt;br /&gt; N = Any Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; Z = Any Simple Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; P = Primitive Type (intrinsic types)&lt;br /&gt;&lt;br /&gt; S = Simple Type&lt;br /&gt;&lt;br /&gt; L = List Type&lt;br /&gt;&lt;br /&gt; U = Union Type&lt;br /&gt;&lt;br /&gt; C = Complex Simple Type (derived from Simple)&lt;br /&gt;&lt;br /&gt; K = Complex Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; W = Element-Wildcard&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group&lt;br /&gt;&lt;br /&gt; V = Attribute-Wildcard</column>
    <column name="kind_desc" type="nvarchar">Description of the kind of XML schema component:&lt;br /&gt;&lt;br /&gt; ANY_TYPE&lt;br /&gt;&lt;br /&gt; ANY_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; PRIMITIVE_TYPE&lt;br /&gt;&lt;br /&gt; SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; LIST_TYPE&lt;br /&gt;&lt;br /&gt; UNION_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ELEMENT_WILDCARD&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_WILDCARD</column>
    <column name="derivation" type="char(1)">Derivation method for derived types:&lt;br /&gt;&lt;br /&gt; N = None (not derived)&lt;br /&gt;&lt;br /&gt; X = Extension&lt;br /&gt;&lt;br /&gt; R = Restriction&lt;br /&gt;&lt;br /&gt; S = Substitution</column>
    <column name="derivation_desc" type="nvarchar">Description of derivation method for derived types:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; EXTENSION&lt;br /&gt;&lt;br /&gt; RESTRICTION&lt;br /&gt;&lt;br /&gt; SUBSTITUTION</column>
    <column name="base_xml_component_id" type="int">ID of the component from which this component is derived. NULL if there is none.</column>
    <column name="scoping_xml_component_id" type="int">Unique ID of the scoping component. NULL if there is none (global scope).</column>
  </table>
  <table name="sys.xml_schema_elements" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-elements-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_elements (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per XML schema component that is a Type, &lt;strong&gt;symbol_space&lt;/strong&gt; of &lt;strong&gt;E&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="xml_component_id" type="int">Unique ID of the XML schema component in the database.</column>
    <column name="xml_collection_id" type="int">ID of the XML schema collection that contains the namespace of this component.</column>
    <column name="xml_namespace_id" type="int">ID of the XML namespace within the collection.</column>
    <column name="is_qualified" type="bit">1 = This component has an explicit namespace qualifier.&lt;br /&gt;&lt;br /&gt; 0 = This is a locally scoped component. In this case, the pair, &lt;strong&gt;namespace_id&lt;/strong&gt;, &lt;strong&gt;collection_id&lt;/strong&gt;, refers to the "no namespace" &lt;strong&gt;targetNamespace&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For wildcard components this value will be equal to 1.</column>
    <column name="name" type="nvarchar">Unique name of the XML schema component. Is NULL if the component is unnamed.</column>
    <column name="symbol_space" type="char(1)">Space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; N = None&lt;br /&gt;&lt;br /&gt; T = Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group</column>
    <column name="symbol_space_desc" type="nvarchar">Description of space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP</column>
    <column name="kind" type="char(1)">Kind of XML schema component.&lt;br /&gt;&lt;br /&gt; N = Any Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; Z = Any Simple Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; P = Primitive Type (intrinsic types)&lt;br /&gt;&lt;br /&gt; S = Simple Type&lt;br /&gt;&lt;br /&gt; L = List Type&lt;br /&gt;&lt;br /&gt; U = Union Type&lt;br /&gt;&lt;br /&gt; C = Complex Simple Type (derived from Simple)&lt;br /&gt;&lt;br /&gt; K = Complex Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; W = Element-Wildcard&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group&lt;br /&gt;&lt;br /&gt; V = Attribute-Wildcard</column>
    <column name="kind_desc" type="nvarchar">Description of the kind of XML schema component:&lt;br /&gt;&lt;br /&gt; ANY_TYPE&lt;br /&gt;&lt;br /&gt; ANY_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; PRIMITIVE_TYPE&lt;br /&gt;&lt;br /&gt; SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; LIST_TYPE&lt;br /&gt;&lt;br /&gt; UNION_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ELEMENT_WILDCARD&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_WILDCARD</column>
    <column name="derivation" type="char(1)">Derivation method for derived types:&lt;br /&gt;&lt;br /&gt; N = None (not derived)&lt;br /&gt;&lt;br /&gt; X = Extension&lt;br /&gt;&lt;br /&gt; R = Restriction&lt;br /&gt;&lt;br /&gt; S = Substitution</column>
    <column name="derivation_desc" type="nvarchar">Description of derivation method for derived types:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; EXTENSION&lt;br /&gt;&lt;br /&gt; RESTRICTION&lt;br /&gt;&lt;br /&gt; SUBSTITUTION</column>
    <column name="base_xml_component_id" type="int">ID of the component from which this component is derived. NULL if there is none.</column>
    <column name="scoping_xml_component_id" type="int">Unique ID of the scoping component. NULL if there is none (global scope).</column>
    <column name="is_default_fixed" type="bit">1 = Default value is a fixed value. This value cannot be overridden in XML instance.&lt;br /&gt;&lt;br /&gt; 0 = Default value is not a fixed value for the element. (default).</column>
    <column name="is_abstract" type="bit">1 = Element is abstract and cannot be used in an instance document. A member of the substitution group of the element must appear in the instance document.&lt;br /&gt;&lt;br /&gt; 0 = Element is not abstract. (default).</column>
    <column name="is_nillable" type="bit">1 = Element is nillable.&lt;br /&gt;&lt;br /&gt; 0 = Element is not nillable. (default)</column>
    <column name="must_be_qualified" type="bit">1 = Element must be explicitly namespace qualified.&lt;br /&gt;&lt;br /&gt; 0 = Element may be implicitly namespace qualified. (default)</column>
    <column name="is_extension_blocked" type="bit">1 = Replacement with an instance of an extension type is blocked.&lt;br /&gt;&lt;br /&gt; 0 = Replacement with extension type is allowed. (default)</column>
    <column name="is_restriction_blocked" type="bit">1 = Replacement with an instance of a restriction type is blocked.&lt;br /&gt;&lt;br /&gt; 0 = Replacement with restriction type is allowed. (default)</column>
    <column name="is_substitution_blocked" type="bit">1 = Instance of a substitution group cannot be used.&lt;br /&gt;&lt;br /&gt; 0 = Replacement with substitution group is permitted. (default)</column>
    <column name="is_final_extension" type="bit">1 = Replacement with an instance of an extension type is disallowed.&lt;br /&gt;&lt;br /&gt; 0 = Replacement in an instance of an extension type is allowed. (default)</column>
    <column name="is_final_restriction" type="bit">1 = Replacement with an instance of a restriction type is disallowed.&lt;br /&gt;&lt;br /&gt; 0 = Replacement in an instance of a restriction type is allowed. (default)</column>
    <column name="default_value" type="nvarchar (4000)">Default value of the element. NULL if a default value is not supplied.</column>
  </table>
  <table name="sys.xml_schema_facets" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-facets-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_facets (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per facet (restriction) of an xml-type definition (corresponds to &lt;strong&gt;sys.xml_types&lt;/strong&gt;).&lt;/para&gt;</description>
    <column name="xml_component_id" type="int">ID of XML component (type) to which this facet belongs.</column>
    <column name="facet_id" type="int">ID (1-based ordinal) of facet, unique within component-id.</column>
    <column name="kind" type="char(2)">Kind of facet:&lt;br /&gt;&lt;br /&gt; LG = Length&lt;br /&gt;&lt;br /&gt; LN = Minimum Length&lt;br /&gt;&lt;br /&gt; LX = Maximum Length&lt;br /&gt;&lt;br /&gt; PT = Pattern (regular expression)&lt;br /&gt;&lt;br /&gt; EU = Enumeration&lt;br /&gt;&lt;br /&gt; IN = Minimum Inclusive value&lt;br /&gt;&lt;br /&gt; IX = Maximum Inclusive value&lt;br /&gt;&lt;br /&gt; EN = Minimum Exclusive value&lt;br /&gt;&lt;br /&gt; EX = Maximum Exclusive value&lt;br /&gt;&lt;br /&gt; DT = Total Digits&lt;br /&gt;&lt;br /&gt; DF = Fraction Digits&lt;br /&gt;&lt;br /&gt; WS = White Space normalization</column>
    <column name="kind_desc" type="nvarchar (60)">Description of kind of facet:&lt;br /&gt;&lt;br /&gt; LENGTH&lt;br /&gt;&lt;br /&gt; MINIMUM_LENGTH&lt;br /&gt;&lt;br /&gt; MAXIMUM_LENGTH&lt;br /&gt;&lt;br /&gt; PATTERN&lt;br /&gt;&lt;br /&gt; ENUMERATION&lt;br /&gt;&lt;br /&gt; MINIMUM_INCLUSIVE_VALUE&lt;br /&gt;&lt;br /&gt; MAXIMUM_INCLUSIVE_VALUE&lt;br /&gt;&lt;br /&gt; MINIMUM_EXCLUSIVE_VALUE&lt;br /&gt;&lt;br /&gt; MAXIMUM_EXCLUSIVE_VALUE&lt;br /&gt;&lt;br /&gt; TOTAL_DIGITS&lt;br /&gt;&lt;br /&gt; FRACTION_DIGITS&lt;br /&gt;&lt;br /&gt; WHITESPACE_NORMALIZATION</column>
    <column name="is_fixed" type="bit">1 = Facet has a fixed, prespecified value.&lt;br /&gt;&lt;br /&gt; 0 = No fixed value. (default)</column>
    <column name="value" type="nvarchar (4000)">Fixed, pre-specified value of the facet.</column>
  </table>
  <table name="sys.xml_indexes" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-indexes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_indexes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns one row per XML index.&lt;/para&gt;</description>
    <column name="object_id" type="int">ID of the object to which this index belongs.</column>
    <column name="name" type="sysname">Name of the index. &lt;strong&gt;name&lt;/strong&gt; is unique only within the object.&lt;br /&gt;&lt;br /&gt; NULL = Heap</column>
    <column name="index_id" type="int">ID of the index. &lt;strong&gt;index_id&lt;/strong&gt; is unique only within the object.&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered index&lt;br /&gt;&lt;br /&gt; &gt; 1 = Nonclustered index</column>
    <column name="type" type="tinyint">Type of index:&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered rowstore (b-tree)&lt;br /&gt;&lt;br /&gt; 2 = Nonclustered rowstore (b-tree)&lt;br /&gt;&lt;br /&gt; 3 = XML&lt;br /&gt;&lt;br /&gt; 4 = Spatial&lt;br /&gt;&lt;br /&gt; 5 = Clustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; 6 = Nonclustered columnstore index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; 7 = Nonclustered hash index. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="type_desc" type="nvarchar(60)">Description of index type:&lt;br /&gt;&lt;br /&gt; HEAP&lt;br /&gt;&lt;br /&gt; CLUSTERED&lt;br /&gt;&lt;br /&gt; NONCLUSTERED&lt;br /&gt;&lt;br /&gt; XML&lt;br /&gt;&lt;br /&gt; SPATIAL&lt;br /&gt;&lt;br /&gt; CLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.&lt;br /&gt;&lt;br /&gt; NONCLUSTERED COLUMNSTORE - &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2012 (11.x) and later.&lt;br /&gt;&lt;br /&gt; NONCLUSTERED HASH : NONCLUSTERED HASH indexes are supported only on memory-optimized tables. The sys.hash_indexes view shows the current hash indexes and the hash properties. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-hash-indexes-transact-sql'&gt;sys.hash_indexes (Transact-SQL)&lt;/a&gt;. &lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2014 (12.x) and later.</column>
    <column name="is_unique" type="bit">1 = Index is unique.&lt;br /&gt;&lt;br /&gt; 0 = Index is not unique.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="data_space_id" type="int">ID of the data space for this index. Data space is either a filegroup or partition scheme.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;object_id&lt;/strong&gt; is a table-valued function or in-memory index.</column>
    <column name="ignore_dup_key" type="bit">1 = IGNORE_DUP_KEY is ON.&lt;br /&gt;&lt;br /&gt; 0 = IGNORE_DUP_KEY is OFF.</column>
    <column name="is_primary_key" type="bit">1 = Index is part of a PRIMARY KEY constraint.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_unique_constraint" type="bit">1 = Index is part of a UNIQUE constraint.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="fill_factor" type="tinyint">&gt; 0 = FILLFACTOR percentage used when the index was created or rebuilt.&lt;br /&gt;&lt;br /&gt; 0 = Default value&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_padded" type="bit">1 = PADINDEX is ON.&lt;br /&gt;&lt;br /&gt; 0 = PADINDEX is OFF.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="is_disabled" type="bit">1 = Index is disabled.&lt;br /&gt;&lt;br /&gt; 0 = Index is not disabled.</column>
    <column name="is_hypothetical" type="bit">1 = Index is hypothetical and cannot be used directly as a data access path. Hypothetical indexes hold column-level statistics.&lt;br /&gt;&lt;br /&gt; 0 = Index is not hypothetical.</column>
    <column name="allow_row_locks" type="bit">1 = Index allows row locks.&lt;br /&gt;&lt;br /&gt; 0 = Index does not allow row locks.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="allow_page_locks" type="bit">1 = Index allows page locks.&lt;br /&gt;&lt;br /&gt; 0 = Index does not allow page locks.&lt;br /&gt;&lt;br /&gt; Always 0 for clustered columnstore indexes.</column>
    <column name="has_filter" type="bit">1 = Index has a filter and only contains rows that satisfy the filter definition.&lt;br /&gt;&lt;br /&gt; 0 = Index does not have a filter.</column>
    <column name="filter_definition" type="nvarchar(max)">Expression for the subset of rows included in the filtered index.&lt;br /&gt;&lt;br /&gt; NULL for heap, non-filtered index, or insufficient permissions on the table.</column>
    <column name="compression_delay" type="int">&gt; 0 = Columnstore index compression delay specified in minutes.&lt;br /&gt;&lt;br /&gt; NULL = Columnstore index rowgroup compression delay is managed automatically.</column>
    <column name="suppress_dup_key_messages" type="bit">1 = Index is configured to suppress duplicate key messages during an index rebuild operation.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;0&lt;/strong&gt; = Index is not configured to suppress duplicate key messages during an index rebuild operation.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2017 (14.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
    <column name="auto_created" type="bit">1 = Index was created by the automatic tuning.&lt;br /&gt;&lt;br /&gt;0 = Index was created by the user.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; Azure SQL Database</column>
    <column name="optimize_for_sequential_key" type="bit">1 = Index has last-page insert optimization enabled.&lt;br/&gt;&lt;br/&gt;0 = Default value. Index has last-page insert optimization disabled.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; SQL Server (Starting with SQL Server 2019 (15.x)), Azure SQL Database, and Azure SQL Managed Instance</column>
    <column name="using_xml_index_id" type="int">NULL = Primary XML index.&lt;br /&gt;&lt;br /&gt; Nonnull = Secondary XML index.&lt;br /&gt;&lt;br /&gt; Nonnull is a self-join reference to the primary XML index.</column>
    <column name="secondary_type" type="char(1)">Type description of secondary index:&lt;br /&gt;&lt;br /&gt; P = PATH secondary XML index&lt;br /&gt;&lt;br /&gt; V = VALUE secondary XML index&lt;br /&gt;&lt;br /&gt; R = PROPERTY secondary XML index&lt;br /&gt;&lt;br /&gt; NULL = Primary XML index</column>
    <column name="secondary_type_desc" type="nvarchar(60)">Type description of secondary index:&lt;br /&gt;&lt;br /&gt; PATH = PATH secondary XML index&lt;br /&gt;&lt;br /&gt; VALUE = VALUE secondary XML index&lt;br /&gt;&lt;br /&gt; PROPERTY = PROPERTY secondary xml indexes.&lt;br /&gt;&lt;br /&gt; NULL = Primary XML index</column>
    <column name="xml_index_type" type="tinyint">Index type:&lt;br /&gt;&lt;br /&gt; 0 = Primary XML index&lt;br /&gt;&lt;br /&gt; 1 = Secondary XML index&lt;br /&gt;&lt;br /&gt; 2 = Selective XML index&lt;br /&gt;&lt;br /&gt; 3 = Secondary selective  XML index</column>
    <column name="xml_index_type_description" type="nvarchar(60)">Description of index type:&lt;br /&gt;&lt;br /&gt; PRIMARY_XML&lt;br /&gt;&lt;br /&gt; Secondary XML Index&lt;br /&gt;&lt;br /&gt; Selective XML Index&lt;br /&gt;&lt;br /&gt; Secondary Selective  XML index</column>
    <column name="path_id" type="int">NULL for all XML indexes except secondary selective XML index.&lt;br /&gt;&lt;br /&gt; Else, the ID of the promoted path over which the secondary selective XML index is built. This value is the same value as path_id from sys.selective_xml_index_paths system view.</column>
  </table>
  <table name="sys.xml_schema_model_groups" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-model-groups-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_model_groups (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per XML schema component that is a Model-Group, &lt;strong&gt;symbol_space&lt;/strong&gt; of &lt;strong&gt;M&lt;/strong&gt;..&lt;/para&gt;</description>
    <column name="xml_component_id" type="int">Unique ID of the XML schema component in the database.</column>
    <column name="xml_collection_id" type="int">ID of the XML schema collection that contains the namespace of this component.</column>
    <column name="xml_namespace_id" type="int">ID of the XML namespace within the collection.</column>
    <column name="is_qualified" type="bit">1 = This component has an explicit namespace qualifier.&lt;br /&gt;&lt;br /&gt; 0 = This is a locally scoped component. In this case, the pair, &lt;strong&gt;namespace_id&lt;/strong&gt;, &lt;strong&gt;collection_id&lt;/strong&gt;, refers to the "no namespace" &lt;strong&gt;targetNamespace&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For wildcard components this value will be equal to 1.</column>
    <column name="name" type="nvarchar">Unique name of the XML schema component. Is NULL if the component is unnamed.</column>
    <column name="symbol_space" type="char(1)">Space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; N = None&lt;br /&gt;&lt;br /&gt; T = Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group</column>
    <column name="symbol_space_desc" type="nvarchar">Description of space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP</column>
    <column name="kind" type="char(1)">Kind of XML schema component.&lt;br /&gt;&lt;br /&gt; N = Any Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; Z = Any Simple Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; P = Primitive Type (intrinsic types)&lt;br /&gt;&lt;br /&gt; S = Simple Type&lt;br /&gt;&lt;br /&gt; L = List Type&lt;br /&gt;&lt;br /&gt; U = Union Type&lt;br /&gt;&lt;br /&gt; C = Complex Simple Type (derived from Simple)&lt;br /&gt;&lt;br /&gt; K = Complex Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; W = Element-Wildcard&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group&lt;br /&gt;&lt;br /&gt; V = Attribute-Wildcard</column>
    <column name="kind_desc" type="nvarchar">Description of the kind of XML schema component:&lt;br /&gt;&lt;br /&gt; ANY_TYPE&lt;br /&gt;&lt;br /&gt; ANY_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; PRIMITIVE_TYPE&lt;br /&gt;&lt;br /&gt; SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; LIST_TYPE&lt;br /&gt;&lt;br /&gt; UNION_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ELEMENT_WILDCARD&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_WILDCARD</column>
    <column name="derivation" type="char(1)">Derivation method for derived types:&lt;br /&gt;&lt;br /&gt; N = None (not derived)&lt;br /&gt;&lt;br /&gt; X = Extension&lt;br /&gt;&lt;br /&gt; R = Restriction&lt;br /&gt;&lt;br /&gt; S = Substitution</column>
    <column name="derivation_desc" type="nvarchar">Description of derivation method for derived types:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; EXTENSION&lt;br /&gt;&lt;br /&gt; RESTRICTION&lt;br /&gt;&lt;br /&gt; SUBSTITUTION</column>
    <column name="base_xml_component_id" type="int">ID of the component from which this component is derived. NULL if there is none.</column>
    <column name="scoping_xml_component_id" type="int">Unique ID of the scoping component. NULL if there is none (global scope).</column>
    <column name="compositor" type="char(1)">Compositor kind of group:&lt;br /&gt;&lt;br /&gt; A = XSD \&lt;all&gt; Group&lt;br /&gt;&lt;br /&gt; C = XSD \&lt;choice&gt; Group&lt;br /&gt;&lt;br /&gt; S = XSD \&lt;sequence&gt; Group</column>
    <column name="compositor_desc" type="nvarchar (60)">Description of compositor kind of group:&lt;br /&gt;&lt;br /&gt; XSD_ALL_GROUP&lt;br /&gt;&lt;br /&gt; XSD_CHOICE_GROUP&lt;br /&gt;&lt;br /&gt; XSD_SEQUENCE_GROUP</column>
  </table>
  <table name="sys.xml_schema_collections" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-collections-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_collections (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns a row per XML schema collection. An XML schema collection is a named set of XSD definitions. The XML schema collection itself is contained in a relational schema, and it is identified by a schema-scoped Transact\-SQL name. The following tuples are unique: xml_collection_id, and schema_id and name.&lt;/para&gt;</description>
    <column name="xml_collection_id" type="int">ID of the XML schema collection. Unique within the database.</column>
    <column name="schema_id" type="int">ID of the relational schema that contains this XML schema collection.</column>
    <column name="principal_id" type="int">ID of the individual owner if different from the schema owner. By default, schema-contained objects are owned by the schema owner. However, an alternate owner may be specified by using the ALTER AUTHORIZATION statement to change ownership.&lt;br /&gt;&lt;br /&gt; NULL = No alternate individual owner.</column>
    <column name="name" type="sysname">Name of the XML schema collection.</column>
    <column name="create_date" type="datetime">Date the XML schema collection was created.</column>
    <column name="modify_date" type="datetime">Date the XML schema collection was last altered.</column>
  </table>
  <table name="sys.xml_schema_namespaces" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-namespaces-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_namespaces (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per XSD-defined XML namespace. The following tuples are unique: &lt;strong&gt;collection_id&lt;/strong&gt;, &lt;strong&gt;namespace_id&lt;/strong&gt;, and &lt;strong&gt;collection_id&lt;/strong&gt;, and &lt;strong&gt;name&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="xml_collection_id" type="int">ID of the XML schema collection that contains this namespace.</column>
    <column name="name" type="nvarchar(4000)">Name of XML namespace. Blank &lt;strong&gt;name&lt;/strong&gt; indicates no target namespace.</column>
    <column name="xml_namespace_id" type="int">1-based ordinal that uniquely identifies the XML namespace in the database.</column>
  </table>
  <table name="sys.xml_schema_types" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-types-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_types (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per XML schema component that is a Type, &lt;strong&gt;symbol_space&lt;/strong&gt; of &lt;strong&gt;T&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="xml_component_id" type="int">Unique ID of the XML schema component in the database.</column>
    <column name="xml_collection_id" type="int">ID of the XML schema collection that contains the namespace of this component.</column>
    <column name="xml_namespace_id" type="int">ID of the XML namespace within the collection.</column>
    <column name="is_qualified" type="bit">1 = This component has an explicit namespace qualifier.&lt;br /&gt;&lt;br /&gt; 0 = This is a locally scoped component. In this case, the pair, &lt;strong&gt;namespace_id&lt;/strong&gt;, &lt;strong&gt;collection_id&lt;/strong&gt;, refers to the "no namespace" &lt;strong&gt;targetNamespace&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For wildcard components this value will be equal to 1.</column>
    <column name="name" type="nvarchar">Unique name of the XML schema component. Is NULL if the component is unnamed.</column>
    <column name="symbol_space" type="char(1)">Space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; N = None&lt;br /&gt;&lt;br /&gt; T = Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group</column>
    <column name="symbol_space_desc" type="nvarchar">Description of space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP</column>
    <column name="kind" type="char(1)">Kind of XML schema component.&lt;br /&gt;&lt;br /&gt; N = Any Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; Z = Any Simple Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; P = Primitive Type (intrinsic types)&lt;br /&gt;&lt;br /&gt; S = Simple Type&lt;br /&gt;&lt;br /&gt; L = List Type&lt;br /&gt;&lt;br /&gt; U = Union Type&lt;br /&gt;&lt;br /&gt; C = Complex Simple Type (derived from Simple)&lt;br /&gt;&lt;br /&gt; K = Complex Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; W = Element-Wildcard&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group&lt;br /&gt;&lt;br /&gt; V = Attribute-Wildcard</column>
    <column name="kind_desc" type="nvarchar">Description of the kind of XML schema component:&lt;br /&gt;&lt;br /&gt; ANY_TYPE&lt;br /&gt;&lt;br /&gt; ANY_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; PRIMITIVE_TYPE&lt;br /&gt;&lt;br /&gt; SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; LIST_TYPE&lt;br /&gt;&lt;br /&gt; UNION_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ELEMENT_WILDCARD&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_WILDCARD</column>
    <column name="derivation" type="char(1)">Derivation method for derived types:&lt;br /&gt;&lt;br /&gt; N = None (not derived)&lt;br /&gt;&lt;br /&gt; X = Extension&lt;br /&gt;&lt;br /&gt; R = Restriction&lt;br /&gt;&lt;br /&gt; S = Substitution</column>
    <column name="derivation_desc" type="nvarchar">Description of derivation method for derived types:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; EXTENSION&lt;br /&gt;&lt;br /&gt; RESTRICTION&lt;br /&gt;&lt;br /&gt; SUBSTITUTION</column>
    <column name="base_xml_component_id" type="int">ID of the component from which this component is derived. NULL if there is none.</column>
    <column name="scoping_xml_component_id" type="int">Unique ID of the scoping component. NULL if there is none (global scope).</column>
    <column name="is_abstract" type="bit">1 = Type is an abstract type. All instances of an element of this type must use &lt;strong&gt;xsi:type&lt;/strong&gt; to indicate a derived type that is not abstract.&lt;br /&gt;&lt;br /&gt; 0 = Type is not abstract. (default)</column>
    <column name="allows_mixed_content" type="bit">1 = Mixed content is allowed&lt;br /&gt;&lt;br /&gt; 0 = Mixed content is not allowed. (default)</column>
    <column name="is_extension_blocked" type="bit">1 = Replacement with an extension of the type is blocked in instances when the block attribute on the &lt;strong&gt;complexType&lt;/strong&gt; definition or the &lt;strong&gt;blockDefault&lt;/strong&gt; attribute of the ancestor \&lt;schema&gt; element information item is set to "extension" or "#all".&lt;br /&gt;&lt;br /&gt; 0 =Replacement with extension is not blocked.</column>
    <column name="is_restriction_blocked" type="bit">1 = Replacement with a restriction of the type is blocked in instances when the block attribute on the &lt;strong&gt;complexType&lt;/strong&gt; definition or the &lt;strong&gt;blockDefault&lt;/strong&gt; attribute of the ancestor \&lt;schema&gt; element information item is set to "restriction" or "#all".&lt;br /&gt;&lt;br /&gt; 0 = Replacement with restriction is not blocked. (default)</column>
    <column name="is_final_extension" type="bit">1 = Derivation by extension of the type is blocked when the final attribute on the &lt;strong&gt;complexType&lt;/strong&gt; definition or the &lt;strong&gt;finalDefault&lt;/strong&gt; attribute of the ancestor \&lt;schema&gt; element information item is set to "extension" or "#all".&lt;br /&gt;&lt;br /&gt; 0 = Extension is allowed. (default)</column>
    <column name="is_final_restriction" type="bit">1 = Derivation by restriction of the type is blocked when the final attribute on the simple or &lt;strong&gt;complexType&lt;/strong&gt; definition or the &lt;strong&gt;finalDefault&lt;/strong&gt; attribute of the ancestor \&lt;schema&gt; element information item is set to "restriction" or "#all".&lt;br /&gt;&lt;br /&gt; 0 = Restriction is allowed. (default)</column>
    <column name="is_final_list_member" type="bit">1 = This simple type cannot be used as the item type in a list.&lt;br /&gt;&lt;br /&gt; 0 = This type is a complex type, or it can be used as list item type. (default)</column>
    <column name="is_final_union_member" type="bit">1 = This simple type cannot be used as the member type of a union type.&lt;br /&gt;&lt;br /&gt; 0 = This type is a complex type. or it can be used as union member type. (default)</column>
  </table>
  <table name="sys.xml_schema_wildcard_namespaces" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-wildcard-namespaces-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_wildcard_namespaces (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per enumerated namespace for an XML schema wildcard.&lt;/para&gt;</description>
    <column name="xml_component_id" type="int">ID of the XML schema component (wildcard) to which this applies.</column>
    <column name="namespace" type="nvarchar(4000)">Name or URI of the namespace that is used by the XML wildcard.</column>
  </table>
  <table name="sys.xml_schema_wildcards" category="Xml" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-wildcards-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.xml_schema_wildcards (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Returns a row per XML schema component that is an Attribute-Wildcard (&lt;strong&gt;kind&lt;/strong&gt; of &lt;strong&gt;V&lt;/strong&gt;) or Element-Wildcard (&lt;strong&gt;kind&lt;/strong&gt; of &lt;strong&gt;W&lt;/strong&gt;), both with &lt;strong&gt;symbol_space&lt;/strong&gt; of &lt;strong&gt;N&lt;/strong&gt;.&lt;/para&gt;</description>
    <column name="xml_component_id" type="int">Unique ID of the XML schema component in the database.</column>
    <column name="xml_collection_id" type="int">ID of the XML schema collection that contains the namespace of this component.</column>
    <column name="xml_namespace_id" type="int">ID of the XML namespace within the collection.</column>
    <column name="is_qualified" type="bit">1 = This component has an explicit namespace qualifier.&lt;br /&gt;&lt;br /&gt; 0 = This is a locally scoped component. In this case, the pair, &lt;strong&gt;namespace_id&lt;/strong&gt;, &lt;strong&gt;collection_id&lt;/strong&gt;, refers to the "no namespace" &lt;strong&gt;targetNamespace&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For wildcard components this value will be equal to 1.</column>
    <column name="name" type="nvarchar">Unique name of the XML schema component. Is NULL if the component is unnamed.</column>
    <column name="symbol_space" type="char(1)">Space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; N = None&lt;br /&gt;&lt;br /&gt; T = Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group</column>
    <column name="symbol_space_desc" type="nvarchar">Description of space in which this symbol name is unique, based on &lt;strong&gt;kind&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP</column>
    <column name="kind" type="char(1)">Kind of XML schema component.&lt;br /&gt;&lt;br /&gt; N = Any Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; Z = Any Simple Type (special intrinsic component)&lt;br /&gt;&lt;br /&gt; P = Primitive Type (intrinsic types)&lt;br /&gt;&lt;br /&gt; S = Simple Type&lt;br /&gt;&lt;br /&gt; L = List Type&lt;br /&gt;&lt;br /&gt; U = Union Type&lt;br /&gt;&lt;br /&gt; C = Complex Simple Type (derived from Simple)&lt;br /&gt;&lt;br /&gt; K = Complex Type&lt;br /&gt;&lt;br /&gt; E = Element&lt;br /&gt;&lt;br /&gt; M = Model-Group&lt;br /&gt;&lt;br /&gt; W = Element-Wildcard&lt;br /&gt;&lt;br /&gt; A = Attribute&lt;br /&gt;&lt;br /&gt; G = Attribute-Group&lt;br /&gt;&lt;br /&gt; V = Attribute-Wildcard</column>
    <column name="kind_desc" type="nvarchar">Description of the kind of XML schema component:&lt;br /&gt;&lt;br /&gt; ANY_TYPE&lt;br /&gt;&lt;br /&gt; ANY_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; PRIMITIVE_TYPE&lt;br /&gt;&lt;br /&gt; SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; LIST_TYPE&lt;br /&gt;&lt;br /&gt; UNION_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_SIMPLE_TYPE&lt;br /&gt;&lt;br /&gt; COMPLEX_TYPE&lt;br /&gt;&lt;br /&gt; ELEMENT&lt;br /&gt;&lt;br /&gt; MODEL_GROUP&lt;br /&gt;&lt;br /&gt; ELEMENT_WILDCARD&lt;br /&gt;&lt;br /&gt; ATTRIBUTE&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_GROUP&lt;br /&gt;&lt;br /&gt; ATTRIBUTE_WILDCARD</column>
    <column name="derivation" type="char(1)">Derivation method for derived types:&lt;br /&gt;&lt;br /&gt; N = None (not derived)&lt;br /&gt;&lt;br /&gt; X = Extension&lt;br /&gt;&lt;br /&gt; R = Restriction&lt;br /&gt;&lt;br /&gt; S = Substitution</column>
    <column name="derivation_desc" type="nvarchar">Description of derivation method for derived types:&lt;br /&gt;&lt;br /&gt; NONE&lt;br /&gt;&lt;br /&gt; EXTENSION&lt;br /&gt;&lt;br /&gt; RESTRICTION&lt;br /&gt;&lt;br /&gt; SUBSTITUTION</column>
    <column name="base_xml_component_id" type="int">ID of the component from which this component is derived. NULL if there is none.</column>
    <column name="scoping_xml_component_id" type="int">Unique ID of the scoping component. NULL if there is none (global scope).</column>
    <column name="process_content" type="char(1)">Indicates how contents are processed.&lt;br /&gt;&lt;br /&gt; S = Strict validation (must validate)&lt;br /&gt;&lt;br /&gt; L = Lax validation (validate if possible)&lt;br /&gt;&lt;br /&gt; P = Skip validation</column>
    <column name="process_content_desc" type="nvarchar(60)">Description of how contents are processed:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;STRICT_VALIDATION&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;LAX_VALIDATION&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;SKIP_VALIDATION&lt;/strong&gt;</column>
    <column name="disallow_namespaces" type="bit">0 = Namespaces enumerated in &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-xml-schema-wildcard-namespaces-transact-sql'&gt;sys.xml_schema_wildcard_namespaces&lt;/a&gt; are the only ones allowed.&lt;br /&gt;&lt;br /&gt; 1 = Namespaces are the only ones disallowed.</column>
  </table>
  <table name="INFORMATION_SCHEMA.CHECK_CONSTRAINTS" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/check-constraints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;CHECK_CONSTRAINTS (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each CHECK constraint in the current database. This information schema view returns information about the objects to which the current user has permissions.&lt;br/&gt;
To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="CONSTRAINT_CATALOG" type="nvarchar(">Constraint qualifier.</column>
    <column name="CONSTRAINT_SCHEMA" type="nvarchar(">Name of the schema to which the constraint belongs.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="CONSTRAINT_NAME" type="sysname">Constraint name.</column>
    <column name="CHECK_CLAUSE" type="nvarchar(">Actual text of the Transact\-SQL definition statement.</column>
  </table>
  <table name="INFORMATION_SCHEMA.COLUMN_DOMAIN_USAGE" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/column-domain-usage-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;COLUMN_DOMAIN_USAGE (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each column in the current database that has an alias data type. This information schema view returns information about the objects to which the current user has permissions.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="DOMAIN_CATALOG" type="nvarchar(">Database in which the alias data type exists.</column>
    <column name="DOMAIN_SCHEMA" type="nvarchar(">Name of schema that contains the alias data type.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of a data type. The only reliable way to find the schema of a type is to use the TYPEPROPERTY function.</column>
    <column name="DOMAIN_NAME" type="sysname">Alias data type.</column>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Table owner.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="sysname">Table in which the alias  data type is used.</column>
    <column name="COLUMN_NAME" type="sysname">Column using the alias data type.</column>
  </table>
  <table name="INFORMATION_SCHEMA.COLUMN_PRIVILEGES" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/column-privileges-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;COLUMN_PRIVILEGES (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each column that has a privilege that is either granted to or granted by the current user in the current database.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="GRANTOR" type="nvarchar(">Privilege grantor.</column>
    <column name="GRANTEE" type="nvarchar(">Privilege grantee.</column>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="sysname">Table name.</column>
    <column name="COLUMN_NAME" type="sysname">Column name.</column>
    <column name="PRIVILEGE_TYPE" type="varchar(">Type of privilege.</column>
    <column name="IS_GRANTABLE" type="varchar(">Specifies whether the grantee can grant permissions to others.</column>
  </table>
  <table name="INFORMATION_SCHEMA.COLUMNS" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;COLUMNS (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each column that can be accessed by the current user in the current database.&lt;br/&gt;
To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA&lt;/strong&gt;_.view_name_.&lt;/para&gt;</description>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="nvarchar(">Table name.</column>
    <column name="COLUMN_NAME" type="nvarchar(">Column name.</column>
    <column name="ORDINAL_POSITION" type="int">Column identification number.</column>
    <column name="COLUMN_DEFAULT" type="nvarchar(">Default value of the column.</column>
    <column name="IS_NULLABLE" type="varchar(">Nullability of the column. If this column allows for NULL, this column returns YES. Otherwise, NO is returned.</column>
    <column name="DATA_TYPE" type="nvarchar(">System-supplied data type.</column>
    <column name="CHARACTER_MAXIMUM_LENGTH" type="int">Maximum length, in characters, for binary data, character data, or text and image data.&lt;br /&gt;&lt;br /&gt; -1 for &lt;strong&gt;xml&lt;/strong&gt; and large-value type data. Otherwise, NULL is returned. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql'&gt;Data Types (Transact-SQL)&lt;/a&gt;.</column>
    <column name="CHARACTER_OCTET_LENGTH" type="int">Maximum length, in bytes, for binary data, character data, or text and image data.&lt;br /&gt;&lt;br /&gt; -1 for &lt;strong&gt;xml&lt;/strong&gt; and large-value type data. Otherwise, NULL is returned.</column>
    <column name="NUMERIC_PRECISION" type="tinyint">Precision of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, NULL is returned.</column>
    <column name="NUMERIC_PRECISION_RADIX" type="smallint">Precision radix of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, NULL is returned.</column>
    <column name="NUMERIC_SCALE" type="int">Scale of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, NULL is returned.</column>
    <column name="DATETIME_PRECISION" type="smallint">Subtype code for &lt;strong&gt;datetime&lt;/strong&gt; and ISO &lt;strong&gt;interval&lt;/strong&gt; data types. For other data types, NULL is returned.</column>
    <column name="CHARACTER_SET_CATALOG" type="nvarchar(">Returns &lt;strong&gt;master&lt;/strong&gt;. This indicates the database in which the character set is located, if the column is character data or &lt;strong&gt;text&lt;/strong&gt; data type. Otherwise, NULL is returned.</column>
    <column name="CHARACTER_SET_SCHEMA" type="nvarchar(">Always returns NULL.</column>
    <column name="CHARACTER_SET_NAME" type="nvarchar(">Returns the unique name for the character set if this column is character data or &lt;strong&gt;text&lt;/strong&gt; data type. Otherwise, NULL is returned.</column>
    <column name="COLLATION_CATALOG" type="nvarchar(">Always returns NULL.</column>
    <column name="COLLATION_SCHEMA" type="nvarchar(">Always returns NULL.</column>
    <column name="COLLATION_NAME" type="nvarchar(">Returns the unique name for the collation if the column is character data or &lt;strong&gt;text&lt;/strong&gt; data type. Otherwise, NULL is returned.</column>
    <column name="DOMAIN_CATALOG" type="nvarchar(">If the column is an alias data type, this column is the database name in which the user-defined data type was created. Otherwise, NULL is returned.</column>
    <column name="DOMAIN_SCHEMA" type="nvarchar(">If the column is a user-defined data type, this column returns the name of the schema of the user-defined data type. Otherwise, NULL is returned.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of a data type. The only reliable way to find the schema of a type is to use the TYPEPROPERTY function.</column>
    <column name="DOMAIN_NAME" type="nvarchar(">If the column is a user-defined data type, this column is the name of the user-defined data type. Otherwise, NULL is returned.</column>
  </table>
  <table name="INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/constraint-column-usage-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;CONSTRAINT_COLUMN_USAGE (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each column in the current database that has a constraint defined on the column. This information schema view returns information about the objects to which the current user has permissions.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the table owner.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="nvarchar(">Table name.</column>
    <column name="COLUMN_NAME" type="nvarchar(">Column name.</column>
    <column name="CONSTRAINT_CATALOG" type="nvarchar(">Constraint qualifier.</column>
    <column name="CONSTRAINT_SCHEMA" type="nvarchar(">Name of schema that contains the constraint.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="CONSTRAINT_NAME" type="nvarchar(">Constraint name.</column>
  </table>
  <table name="INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/constraint-table-usage-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;CONSTRAINT_TABLE_USAGE (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each table in the current database that has a constraint defined on the table. This information schema view returns information about the objects to which the current user has permissions.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="sysname">Table name.</column>
    <column name="CONSTRAINT_CATALOG" type="nvarchar(">Constraint qualifier.</column>
    <column name="CONSTRAINT_SCHEMA" type="nvarchar(">Name of schema that contains the constraint.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="CONSTRAINT_NAME" type="sysname">Constraint name.</column>
  </table>
  <table name="INFORMATION_SCHEMA.DOMAIN_CONSTRAINTS" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/domain-constraints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;DOMAIN_CONSTRAINTS (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each alias data type in the current database that has a rule bound to it and that can be accessed by current user.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="CONSTRAINT_CATALOG" type="nvarchar(">Database in which the rule exists.</column>
    <column name="CONSTRAINT_SCHEMA" type="nvarchar(">Name of schema that contains the constraint.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="CONSTRAINT_NAME" type="sysname">Rule name.</column>
    <column name="DOMAIN_CATALOG" type="nvarchar(">Database in which the alias data type exists.</column>
    <column name="DOMAIN_SCHEMA" type="nvarchar(">Name of schema that contains the alias data type.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of a data type. The only reliable way to find the schema of a type is to use the TYPEPROPERTY function.</column>
    <column name="DOMAIN_NAME" type="sysname">Alias data type.</column>
    <column name="IS_DEFERRABLE" type="varchar(">Specifies whether constraint checking is deferrable. Always returns NO.</column>
    <column name="INITIALLY_DEFERRED" type="varchar(">Specifies whether constraint checking is at first deferred. Always returns NO.</column>
  </table>
  <table name="INFORMATION_SCHEMA.DOMAINS" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/domains-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;DOMAINS (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each alias data type that can be accessed by the current user in the current database.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="DOMAIN_CATALOG" type="nvarchar(">Database in which the alias data type exists.</column>
    <column name="DOMAIN_SCHEMA" type="nvarchar(">Name of the schema that contains the alias data type.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of a data type. The only reliable way to find the schema of a type is to use the TYPEPROPERTY function.</column>
    <column name="DOMAIN_NAME" type="sysname">Alias data type.</column>
    <column name="DATA_TYPE" type="sysname">System-supplied data type.</column>
    <column name="CHARACTER_MAXIMUM_LENGTH" type="int">Maximum length, in characters, for binary data, character data, or text and image data.&lt;br /&gt;&lt;br /&gt; -1 for &lt;strong&gt;xml&lt;/strong&gt; and large-value type data. Otherwise, NULL is returned. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql'&gt;Data Types (Transact-SQL)&lt;/a&gt;.</column>
    <column name="CHARACTER_OCTET_LENGTH" type="int">Maximum length, in bytes, for binary data, character data, or text and image data.&lt;br /&gt;&lt;br /&gt; -1 for &lt;strong&gt;xml&lt;/strong&gt; and large-value type data. Otherwise, NULL is returned.</column>
    <column name="COLLATION_CATALOG" type="varchar(">Always returns NULL.</column>
    <column name="COLLATION_SCHEMA" type="varchar(">Always returns NULL.</column>
    <column name="COLLATION_NAME" type="nvarchar(">Returns the unique name for the sort order if the column is character data or &lt;strong&gt;text&lt;/strong&gt; data type. Otherwise, NULL is returned.</column>
    <column name="CHARACTER_SET_CATALOG" type="varchar(">Returns &lt;strong&gt;master&lt;/strong&gt;. This indicates the database in which the character set is located, if the column is character data or &lt;strong&gt;text&lt;/strong&gt; data type. Otherwise, NULL is returned.</column>
    <column name="CHARACTER_SET_SCHEMA" type="varchar(">Always returns NULL.</column>
    <column name="CHARACTER_SET_NAME" type="nvarchar(">Returns the unique name for the character set if this column is character data or &lt;strong&gt;text&lt;/strong&gt; data type. Otherwise, NULL is returned.</column>
    <column name="NUMERIC_PRECISION" type="tinyint">Precision of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, NULL is returned.</column>
    <column name="NUMERIC_PRECISION_RADIX" type="smallint">Precision radix of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, NULL is returned.</column>
    <column name="NUMERIC_SCALE" type="tinyint">Scale of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, NULL is returned.</column>
    <column name="DATETIME_PRECISION" type="smallint">Subtype code for &lt;strong&gt;datetime&lt;/strong&gt; and ISO &lt;strong&gt;interval&lt;/strong&gt; data type. For other data types, this column returns a NULL.</column>
    <column name="DOMAIN_DEFAULT" type="nvarchar(">Actual text of the definition Transact\-SQL statement.</column>
  </table>
  <table name="INFORMATION_SCHEMA.KEY_COLUMN_USAGE" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/key-column-usage-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;KEY_COLUMN_USAGE (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each column that is constrained as a key in the current database. This information schema view returns information about the objects to which the current user has permissions.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="CONSTRAINT_CATALOG" type="nvarchar(">Constraint qualifier.</column>
    <column name="CONSTRAINT_SCHEMA" type="nvarchar(">Name of schema that contains the constraint.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="CONSTRAINT_NAME" type="nvarchar(">Constraint name.</column>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="nvarchar(">Table name.</column>
    <column name="COLUMN_NAME" type="nvarchar(">Column name.</column>
    <column name="ORDINAL_POSITION" type="int">Column ordinal position.</column>
  </table>
  <table name="INFORMATION_SCHEMA.PARAMETERS" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/parameters-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;PARAMETERS (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each parameter of a user-defined function or stored procedure that can be accessed by the current user in the current database. For functions, this view also returns one row with return value information.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="SPECIFIC_CATALOG" type="nvarchar(">Catalog name of the routine for which this is a parameter.</column>
    <column name="SPECIFIC_SCHEMA" type="nvarchar(">Name of the schema of the routine for which this is a parameter.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="SPECIFIC_NAME" type="nvarchar(">Name of the routine for which this is a parameter.</column>
    <column name="ORDINAL_POSITION" type="int">Ordinal position of the parameter starting at 1. For the return value of a function, this is a 0.</column>
    <column name="PARAMETER_MODE" type="nvarchar(">Returns IN if an input parameter, OUT if an output parameter, and INOUT if an input/output parameter.</column>
    <column name="IS_RESULT" type="nvarchar(">Returns YES if indicates result of the routine that is a function. Otherwise, returns NO.</column>
    <column name="AS_LOCATOR" type="nvarchar(">Returns YES if declared as locator. Otherwise, returns NO.</column>
    <column name="PARAMETER_NAME" type="nvarchar(">Name of the parameter. NULL if this corresponds to the return value of a function.</column>
    <column name="DATA_TYPE" type="nvarchar(">System-supplied data type.</column>
    <column name="CHARACTER_MAXIMUM_LENGTH" type="int">Maximum length in characters for binary or character data types.&lt;br /&gt;&lt;br /&gt; -1 for &lt;strong&gt;xml&lt;/strong&gt; and large-value type data. Otherwise, returns NULL.</column>
    <column name="CHARACTER_OCTET_LENGTH" type="int">Maximum length, in bytes, for binary or character data types.&lt;br /&gt;&lt;br /&gt; -1 for &lt;strong&gt;xml&lt;/strong&gt; and large-value type data. Otherwise, returns NULL.</column>
    <column name="COLLATION_CATALOG" type="nvarchar(">Always returns NULL.</column>
    <column name="COLLATION_SCHEMA" type="nvarchar(">Always returns NULL.</column>
    <column name="COLLATION_NAME" type="nvarchar(">Name of the collation of the parameter. If not one of the character types, returns NULL.</column>
    <column name="CHARACTER_SET_CATALOG" type="nvarchar(">Catalog name of the character set of the parameter. If not one of the character types, returns NULL.</column>
    <column name="CHARACTER_SET_SCHEMA" type="nvarchar(">Always returns NULL.</column>
    <column name="CHARACTER_SET_NAME" type="nvarchar(">Name of the character set of the parameter. If not one of the character types, returns NULL.</column>
    <column name="NUMERIC_PRECISION" type="tinyint">Precision of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, returns NULL.</column>
    <column name="NUMERIC_PRECISION_RADIX" type="smallint">Precision radix of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, returns NULL.</column>
    <column name="NUMERIC_SCALE" type="tinyint">Scale of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, returns NULL.</column>
    <column name="DATETIME_PRECISION" type="smallint">Precision in fractional seconds if the parameter type is &lt;strong&gt;datetime&lt;/strong&gt; or &lt;strong&gt;smalldatetime&lt;/strong&gt;. Otherwise, returns NULL.</column>
    <column name="INTERVAL_TYPE" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="INTERVAL_PRECISION" type="smallint">NULL. Reserved for future use.</column>
    <column name="USER_DEFINED_TYPE_CATALOG" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="USER_DEFINED_TYPE_SCHEMA" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="USER_DEFINED_TYPE_NAME" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="SCOPE_CATALOG" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="SCOPE_SCHEMA" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="SCOPE_NAME" type="nvarchar(">NULL. Reserved for future use.</column>
  </table>
  <table name="INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/referential-constraints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;REFERENTIAL_CONSTRAINTS (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each FOREIGN KEY constraint in the current database. This information schema view returns information about the objects to which the current user has permissions.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="CONSTRAINT_CATALOG" type="nvarchar(">Constraint qualifier.</column>
    <column name="CONSTRAINT_SCHEMA" type="nvarchar(">Name of schema that contains the constraint.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="CONSTRAINT_NAME" type="sysname">Constraint name.</column>
    <column name="UNIQUE_CONSTRAINT_CATALOG" type="nvarchar(">UNIQUE constraint qualifier.</column>
    <column name="UNIQUE_CONSTRAINT_SCHEMA" type="nvarchar(">Name of schema that contains the UNIQUE constraint.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="UNIQUE_CONSTRAINT_NAME" type="sysname">UNIQUE constraint.</column>
    <column name="MATCH_OPTION" type="varchar(">Referential constraint-matching conditions. Always returns SIMPLE. This means that no match is defined. The condition is considered a match when one of the following is true:&lt;br /&gt;&lt;br /&gt; At least one value in the foreign key column is NULL.&lt;br /&gt;&lt;br /&gt; All values in the foreign key column are not NULL, and there is a row in the primary key table that has the same key.</column>
    <column name="UPDATE_RULE" type="varchar(">Action taken when a Transact\-SQL statement violates the referential integrity that is defined by this constraint. Returns one of the following: &lt;br /&gt;NO ACTION&lt;br /&gt;CASCADE&lt;br /&gt;SET NULL&lt;br /&gt;SET DEFAULT&lt;br /&gt;&lt;br /&gt; If NO ACTION is specified on ON UPDATE for this constraint, the update of the primary key that is referenced in the constraint will not be propagated to the foreign key. If such an update of a primary key will cause a referential integrity violation because at least one foreign key contains the same value, SQL Server will not make any change to the parent and referring tables. SQL Server also will raise an error.&lt;br /&gt;&lt;br /&gt; If CASCADE is specified on ON UPDATE for this constraint, any change to the primary key value is automatically propagated to the foreign key value.</column>
    <column name="DELETE_RULE" type="varchar(">Action taken when a Transact\-SQL statement violates referential integrity defined by this constraint. Returns one of the following: &lt;br /&gt;NO ACTION&lt;br /&gt;CASCADE&lt;br /&gt;SET NULL&lt;br /&gt;SET DEFAULT&lt;br /&gt;&lt;br /&gt; If NO ACTION is specified on ON DELETE for this constraint, the delete on the primary key that is referenced in the constraint will not be propagated to the foreign key. If such a delete of a primary key will cause a referential integrity violation because at least one foreign key contains the same value, SQL Server will not make any change to the parent and referring tables. SQL Server also will raise an error.&lt;br /&gt;&lt;br /&gt; If CASCADE is specified on ON DELETE on this constraint, any change to the primary key value is automatically propagated to the foreign key value.</column>
  </table>
  <table name="INFORMATION_SCHEMA.ROUTINE_COLUMNS" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/routine-columns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;ROUTINE_COLUMNS (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each column returned by the table-valued functions that can be accessed by the current user in the current database.&lt;br/&gt;
 To retrieve information from this view, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="TABLE_CATALOG" type="nvarchar(">Catalog or database name of the table-valued function.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of the schema that contains the table-valued function.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="nvarchar(">Name of the table-valued function.</column>
    <column name="COLUMN_NAME" type="nvarchar(">Column name.</column>
    <column name="ORDINAL_POSITION" type="int">Column identification number.</column>
    <column name="COLUMN_DEFAULT" type="nvarchar(">Default value of the column.</column>
    <column name="IS_NULLABLE" type="varchar(">If this column allows for NULL, returns YES. Otherwise, returns NO.</column>
    <column name="DATA_TYPE" type="nvarchar(">System-supplied data type.</column>
    <column name="CHARACTER_MAXIMUM_LENGTH" type="int">Maximum length, in characters, for binary data, character data, or text and image data.&lt;br /&gt;&lt;br /&gt; -1 for &lt;strong&gt;xml&lt;/strong&gt; and large-value type data. Otherwise, returns NULL. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql'&gt;Data Types (Transact-SQL)&lt;/a&gt;.</column>
    <column name="CHARACTER_OCTET_LENGTH" type="int">Maximum length, in bytes, for binary data, character data, or text and image data.&lt;br /&gt;&lt;br /&gt; -1 for &lt;strong&gt;xml&lt;/strong&gt; and large-value type data. Otherwise, returns NULL.</column>
    <column name="NUMERIC_PRECISION" type="tinyint">Precision of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, returns NULL.</column>
    <column name="NUMERIC_PRECISION_RADIX" type="smallint">Precision radix of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, returns NULL.</column>
    <column name="NUMERIC_SCALE" type="tinyint">Scale of approximate numeric data, exact numeric data, integer data, or monetary data. Otherwise, returns NULL.</column>
    <column name="DATETIME_PRECISION" type="smallint">Subtype code for &lt;strong&gt;datetime&lt;/strong&gt; and ISO&lt;strong&gt;integer&lt;/strong&gt; data types. For other data types, returns NULL.</column>
    <column name="CHARACTER_SET_CATALOG" type="varchar(">Returns &lt;strong&gt;master&lt;/strong&gt;. This indicates the database in which the character set is located if the column is character data or &lt;strong&gt;text&lt;/strong&gt; data type. Otherwise, returns NULL.</column>
    <column name="CHARACTER_SET_SCHEMA" type="varchar(">Always returns NULL.</column>
    <column name="CHARACTER_SET_NAME" type="nvarchar(">Returns the unique name for the character set if this column is character data or &lt;strong&gt;text&lt;/strong&gt; data type. Otherwise, returns NULL.</column>
    <column name="COLLATION_CATALOG" type="varchar(">Always returns NULL.</column>
    <column name="COLLATION_SCHEMA" type="varchar(">Always returns NULL.</column>
    <column name="COLLATION_NAME" type="nvarchar(">Returns the unique name for the sort order if the column is character data or &lt;strong&gt;text&lt;/strong&gt; data type. Otherwise, returns NULL.</column>
    <column name="DOMAIN_CATALOG" type="nvarchar(">If the column is an alias data type, this column is the database name in which the user-defined data type was created. Otherwise, returns NULL.</column>
    <column name="DOMAIN_SCHEMA" type="nvarchar(">If the column is a user-defined data type, this column is the name of the schema that contains the user-defined data type. Otherwise, returns NULL.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="DOMAIN_NAME" type="nvarchar(">If the column is a user-defined data type, this column is the name of the user-defined data type. Otherwise, returns NULL.</column>
  </table>
  <table name="INFORMATION_SCHEMA.ROUTINES" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/routines-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;ROUTINES (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each stored procedure and function that can be accessed by the current user in the current database. The columns that describe the return value apply only to functions. For stored procedures, these columns will be NULL.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of INFORMATION_SCHEMA.*view_name*.&lt;br/&gt;
&lt;note type='note'&gt;&lt;br/&gt;
The ROUTINE_DEFINITION column contains the source statements that created the function or stored procedure. These source statements are likely to contain embedded carriage returns. If you are returning this column to an application that displays the results in a text format, the embedded carriage returns in the ROUTINE_DEFINITION results may affect the formatting of the overall result set. If you select the ROUTINE_DEFINITION column, you must adjust for the embedded carriage returns; for example, by returning the result set into a grid or returning ROUTINE_DEFINITION into its own text box.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="SPECIFIC_CATALOG" type="nvarchar(">Specific name of the catalog. This name is the same as ROUTINE_CATALOG.</column>
    <column name="SPECIFIC_SCHEMA" type="nvarchar(">Specific name of the schema.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important \*\&lt;/strong&gt;* Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="SPECIFIC_NAME" type="nvarchar(">Specific name of the catalog. This name is the same as ROUTINE_NAME.</column>
    <column name="ROUTINE_CATALOG" type="nvarchar(">Catalog name of the function.</column>
    <column name="ROUTINE_SCHEMA" type="nvarchar(">Name of the schema that contains this function.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important \*\&lt;/strong&gt;* Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="ROUTINE_NAME" type="nvarchar(">Name of the function.</column>
    <column name="ROUTINE_TYPE" type="nvarchar(">Returns PROCEDURE for stored procedures, and FUNCTION for functions.</column>
    <column name="MODULE_CATALOG" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="MODULE_SCHEMA" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="MODULE_NAME" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="UDT_CATALOG" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="UDT_SCHEMA" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="UDT_NAME" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="DATA_TYPE" type="nvarchar(">Data type of the return value of the function. Returns &lt;strong&gt;table&lt;/strong&gt; if a table-valued function.</column>
    <column name="CHARACTER_MAXIMUM_LENGTH" type="int">Maximum length in characters, if the return type is a character type.&lt;br /&gt;&lt;br /&gt; -1 for &lt;strong&gt;xml&lt;/strong&gt; and large-value type data.</column>
    <column name="CHARACTER_OCTET_LENGTH" type="int">Maximum length in bytes, if the return type is a character type.&lt;br /&gt;&lt;br /&gt; -1 for &lt;strong&gt;xml&lt;/strong&gt; and large-value type data.</column>
    <column name="COLLATION_CATALOG" type="nvarchar(">Always returns NULL.</column>
    <column name="COLLATION_SCHEMA" type="nvarchar(">Always returns NULL.</column>
    <column name="COLLATION_NAME" type="nvarchar(">Collation name of the return value. For noncharacter types, returns NULL.</column>
    <column name="CHARACTER_SET_CATALOG" type="nvarchar(">Always returns NULL.</column>
    <column name="CHARACTER_SET_SCHEMA" type="nvarchar(">Always returns NULL.</column>
    <column name="CHARACTER_SET_NAME" type="nvarchar(">Name of the character set of the return value. For noncharacter types, returns NULL.</column>
    <column name="NUMERIC_PRECISION" type="smallint">Numeric precision of the return value. For the nonnumeric types, returns NULL.</column>
    <column name="NUMERIC_PRECISION_RADIX" type="smallint">Numeric precision radix of the return value. For nonnumeric types, returns NULL.</column>
    <column name="NUMERIC_SCALE" type="smallint">Scale of the return value. For nonnumeric types, returns NULL.</column>
    <column name="DATETIME_PRECISION" type="smallint">Fractional precision of a second if the return value is of type &lt;strong&gt;datetime&lt;/strong&gt;. Otherwise, returns NULL.</column>
    <column name="INTERVAL_TYPE" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="INTERVAL_PRECISION" type="smallint">NULL. Reserved for future use.</column>
    <column name="TYPE_UDT_CATALOG" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="TYPE_UDT_SCHEMA" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="TYPE_UDT_NAME" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="SCOPE_CATALOG" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="SCOPE_SCHEMA" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="SCOPE_NAME" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="MAXIMUM_CARDINALITY" type="bigint">NULL. Reserved for future use.</column>
    <column name="DTD_IDENTIFIER" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="ROUTINE_BODY" type="nvarchar(">Returns SQL for a Transact\-SQL function and EXTERNAL for an externally written function.&lt;br /&gt;&lt;br /&gt; Functions will always be SQL.</column>
    <column name="ROUTINE_DEFINITION" type="nvarchar(">Returns the first 4000 characters of the definition text of the function or stored procedure if the function or stored procedure is not encrypted. Otherwise, returns NULL.&lt;br /&gt;&lt;br /&gt; To ensure that you obtain the complete definition, query the &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/functions/object-definition-transact-sql'&gt;OBJECT_DEFINITION&lt;/a&gt; function or the definition column in the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-modules-transact-sql'&gt;sys.sql_modules&lt;/a&gt; catalog view.</column>
    <column name="EXTERNAL_NAME" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="EXTERNAL_LANGUAGE" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="PARAMETER_STYLE" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="IS_DETERMINISTIC" type="nvarchar(">Returns YES if the routine is deterministic.&lt;br /&gt;&lt;br /&gt; Returns NO if the routine is nondeterministic.&lt;br /&gt;&lt;br /&gt; Always returns NO for stored procedures.</column>
    <column name="SQL_DATA_ACCESS" type="nvarchar(">Returns one of the following values:&lt;br /&gt;&lt;br /&gt; NONE = Function does not contain SQL.&lt;br /&gt;&lt;br /&gt; CONTAINS = Function possibly contains SQL.&lt;br /&gt;&lt;br /&gt; READS = Function possibly reads SQL data.&lt;br /&gt;&lt;br /&gt; MODIFIES = Function possibly modifies SQL data.&lt;br /&gt;&lt;br /&gt; Returns READS for all functions, and MODIFIES for all stored procedures.</column>
    <column name="IS_NULL_CALL" type="nvarchar(">Indicates whether the routine will be called if any one of its arguments is NULL.</column>
    <column name="SQL_PATH" type="nvarchar(">NULL. Reserved for future use.</column>
    <column name="SCHEMA_LEVEL_ROUTINE" type="nvarchar(">Returns YES if schema-level function, or NO if not a schema-level function.&lt;br /&gt;&lt;br /&gt; Always returns YES.</column>
    <column name="MAX_DYNAMIC_RESULT_SETS" type="smallint">Maximum number of dynamic result sets returned by routine.&lt;br /&gt;&lt;br /&gt; Returns 0 if functions.</column>
    <column name="IS_USER_DEFINED_CAST" type="nvarchar(">Returns YES if user-defined cast function, and NO if not a user-defined cast function.&lt;br /&gt;&lt;br /&gt; Always returns NO.</column>
    <column name="IS_IMPLICITLY_INVOCABLE" type="nvarchar(">Returns YES if the routine can be implicitly invoked, and NO if function cannot be implicitly invoked.&lt;br /&gt;&lt;br /&gt; Always returns NO.</column>
    <column name="CREATED" type="datetime">Time when the routine was created.</column>
    <column name="LAST_ALTERED" type="datetime">The last time the function was modified.</column>
  </table>
  <table name="INFORMATION_SCHEMA.SCHEMATA" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/schemata-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;SCHEMATA (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each schema in the current database. To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_. To retrieve information about all databases in an instance of SQL Server, query the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-databases-transact-sql'&gt;sys.databases (Transact-SQL)&lt;/a&gt; catalog view.&lt;/para&gt;</description>
    <column name="CATALOG_NAME" type="sysname">Name of current database</column>
    <column name="SCHEMA_NAME" type="nvarchar(">Returns the name of the schema.</column>
    <column name="SCHEMA_OWNER" type="nvarchar(">Schema owner name.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt; Do not use INFORMATION_SCHEMA views to determine the schema of an object. INFORMATION_SCHEMA views only represent a subset of the metadata of an object. The only reliable way to find the schema of an object is to query the sys.objects catalog view.</column>
    <column name="DEFAULT_CHARACTER_SET_CATALOG" type="varchar(">Always returns NULL.</column>
    <column name="DEFAULT_CHARACTER_SET_SCHEMA" type="varchar(">Always returns NULL.</column>
    <column name="DEFAULT_CHARACTER_SET_NAME" type="sysname">Returns the name of the default character set.</column>
  </table>
  <table name="INFORMATION_SCHEMA.TABLE_CONSTRAINTS" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/table-constraints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;TABLE_CONSTRAINTS (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each table constraint in the current database. This information schema view returns information about the objects to which the current user has permissions.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="CONSTRAINT_CATALOG" type="nvarchar(">Constraint qualifier.</column>
    <column name="CONSTRAINT_SCHEMA" type="nvarchar(">Name of schema that contains the constraint.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt;  only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="CONSTRAINT_NAME" type="sysname">Constraint name.</column>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt;  only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="sysname">Table name.</column>
    <column name="CONSTRAINT_TYPE" type="varchar(">Type of constraint:&lt;br /&gt;&lt;br /&gt; CHECK&lt;br /&gt;&lt;br /&gt; UNIQUE&lt;br /&gt;&lt;br /&gt; PRIMARY KEY&lt;br /&gt;&lt;br /&gt; FOREIGN KEY</column>
    <column name="IS_DEFERRABLE" type="varchar(">Specifies whether constraint checking is deferrable. Always returns NO.</column>
    <column name="INITIALLY_DEFERRED" type="varchar(">Specifies whether constraint checking is at first deferred. Always returns NO.</column>
  </table>
  <table name="INFORMATION_SCHEMA.TABLE_PRIVILEGES" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/table-privileges-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;TABLE_PRIVILEGES (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)  √ Azure SQL Database&lt;/para&gt;
&lt;para&gt;Returns one row for each table privilege that is granted to or granted by the current user in the current database.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="GRANTOR" type="nvarchar(">Privilege grantor.</column>
    <column name="GRANTEE" type="nvarchar(">Privilege grantee.</column>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt;  only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="sysname">Table name.</column>
    <column name="PRIVILEGE_TYPE" type="varchar(">Type of privilege.</column>
    <column name="IS_GRANTABLE" type="varchar(">Specifies whether the grantee can grant permissions to others.</column>
  </table>
  <table name="INFORMATION_SCHEMA.TABLES" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/tables-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;TABLES (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each table or view in the current database for which the current user has permissions.&lt;br/&gt;
To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt;  only reliable way to find the schema of an object is to query the sys.objects catalog view. INFORMATION_SCHEMA views could be incomplete since they are not updated for all new features.</column>
    <column name="TABLE_NAME" type="sysname">Table or view name.</column>
    <column name="TABLE_TYPE" type="varchar(">Type of table. Can be VIEW or BASE TABLE.</column>
  </table>
  <table name="INFORMATION_SCHEMA.VIEW_COLUMN_USAGE" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/view-column-usage-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;VIEW_COLUMN_USAGE (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each column in the current database that is used in a view definition. This information schema view returns information about the objects to which the current user has permissions.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="VIEW_CATALOG" type="nvarchar(">View qualifier.</column>
    <column name="VIEW_SCHEMA" type="nvarchar(">Name of schema that contains the view.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt;  only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="VIEW_NAME" type="sysname">View name.</column>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt;  only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="sysname">Base table.</column>
    <column name="COLUMN_NAME" type="sysname">Column name.</column>
  </table>
  <table name="INFORMATION_SCHEMA.VIEW_TABLE_USAGE" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/view-table-usage-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;VIEW_TABLE_USAGE (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each table in the current database that is used in a view. This information schema view returns information about the objects to which the current user has permissions.&lt;br/&gt;
 To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="VIEW_CATALOG" type="nvarchar(">View qualifier.</column>
    <column name="VIEW_SCHEMA" type="nvarchar(">Name of schema that contains the view.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt;  only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="VIEW_NAME" type="sysname">View name.</column>
    <column name="TABLE_CATALOG" type="nvarchar(">Table qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the base table.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt;  only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="sysname">Base table that the view is based on.</column>
  </table>
  <table name="INFORMATION_SCHEMA.VIEWS" category="Information" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-information-schema-views/views-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;VIEWS (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for views that can be accessed by the current user in the current database.&lt;br/&gt;
To retrieve information from these views, specify the fully qualified name of &lt;strong&gt;INFORMATION_SCHEMA.&lt;/strong&gt;_view_name_.&lt;/para&gt;</description>
    <column name="TABLE_CATALOG" type="nvarchar(">View qualifier.</column>
    <column name="TABLE_SCHEMA" type="nvarchar(">Name of schema that contains the view.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important &lt;/strong&gt;  only reliable way to find the schema of a object is to query the sys.objects catalog view.</column>
    <column name="TABLE_NAME" type="nvarchar(">View name.</column>
    <column name="VIEW_DEFINITION" type="nvarchar(">If the length of definition is larger than &lt;strong&gt;nvarchar(&lt;/strong&gt;4000&lt;strong&gt;)&lt;/strong&gt;, this column is NULL. Otherwise, this column is the view definition text.</column>
    <column name="CHECK_OPTION" type="varchar(">Type of WITH CHECK OPTION. Is CASCADE if the original view was created by using the WITH CHECK OPTION. Otherwise, NONE is returned.</column>
    <column name="IS_UPDATABLE" type="varchar(">Specifies whether the view is updatable. Always returns NO.</column>
  </table>
  <table name="sys.sysaltfiles" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysaltfiles-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysaltfiles (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Under special circumstances, contains rows corresponding to the files in a database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="fileid" type="smallint">File identification number. This is unique for each database.</column>
    <column name="groupid" type="smallint">File group identification number.</column>
    <column name="size" type="int">File size, in 8-kilobyte (KB) pages.</column>
    <column name="maxsize" type="int">Maximum file size, in 8-KB pages.&lt;br /&gt;&lt;br /&gt; 0 = No growth.&lt;br /&gt;&lt;br /&gt; -1 = File will grow until the disk is full.&lt;br /&gt;&lt;br /&gt; 268435456 = Log file will grow to a maximum size of 2 TB.&lt;br /&gt;&lt;br /&gt; Note: Databases that are upgraded with an unlimited log file size will report -1 for the maximum size of the log file.</column>
    <column name="growth" type="int">Growth size of the database.&lt;br /&gt;&lt;br /&gt; 0 = No growth. Can be either the number of pages or the percentage of file size, depending on the value of status. If &lt;strong&gt;status&lt;/strong&gt; is 0x100000, &lt;strong&gt;growth&lt;/strong&gt; is the percentage of file size; otherwise, it is the number of pages.</column>
    <column name="status" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="perf" type="int">Reserved.</column>
    <column name="dbid" type="smallint">Database identification number of the database to which this file belongs.</column>
    <column name="name" type="sysname">Logical name of the file.</column>
    <column name="filename" type="nvarchar(260)">Name of the physical device. This includes the full path of the file.</column>
  </table>
  <table name="sys.syscacheobjects" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syscacheobjects-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.syscacheobjects (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about how the cache is used.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="bucketid" type="int">Bucket ID. Value indicates a range from 0 through (directory size - 1). Directory size is the size of the hash table.</column>
    <column name="cacheobjtype" type="nvarchar(17)">Type of object in the cache:&lt;br /&gt;&lt;br /&gt; Compiled plan&lt;br /&gt;&lt;br /&gt; Executable plan&lt;br /&gt;&lt;br /&gt; Parse tree&lt;br /&gt;&lt;br /&gt; Cursor&lt;br /&gt;&lt;br /&gt; Extended stored procedure</column>
    <column name="objtype" type="nvarchar(8)">Type of object:&lt;br /&gt;&lt;br /&gt; Stored procedure&lt;br /&gt;&lt;br /&gt; Prepared statement&lt;br /&gt;&lt;br /&gt; Ad hoc query (Transact\-SQL submitted as language events from the &lt;strong&gt;sqlcmd&lt;/strong&gt; or &lt;strong&gt;osql&lt;/strong&gt; utilities, instead of remote procedure calls)&lt;br /&gt;&lt;br /&gt; ReplProc (replication procedure)&lt;br /&gt;&lt;br /&gt; Trigger&lt;br /&gt;&lt;br /&gt; View&lt;br /&gt;&lt;br /&gt; Default&lt;br /&gt;&lt;br /&gt; User table&lt;br /&gt;&lt;br /&gt; System table&lt;br /&gt;&lt;br /&gt; Check&lt;br /&gt;&lt;br /&gt; Rule</column>
    <column name="objid" type="int">One of the main keys used for looking up an object in the cache. This is the object ID stored in &lt;strong&gt;sysobjects&lt;/strong&gt; for database objects (procedures, views, triggers, and so on). For cache objects such as ad hoc or prepared SQL, &lt;strong&gt;objid&lt;/strong&gt; is an internally generated value.</column>
    <column name="dbid" type="smallint">Database ID in which the cache object was compiled.</column>
    <column name="dbidexec" type="smallint">Database ID from which the query is executed.&lt;br /&gt;&lt;br /&gt; For most objects, &lt;strong&gt;dbidexec&lt;/strong&gt; has the same value as &lt;strong&gt;dbid&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; For system views, &lt;strong&gt;dbidexec&lt;/strong&gt; is the database ID from which the query is executed.&lt;br /&gt;&lt;br /&gt; For ad hoc queries, &lt;strong&gt;dbidexec&lt;/strong&gt; is 0. This means &lt;strong&gt;dbidexec&lt;/strong&gt; has the same value as &lt;strong&gt;dbid&lt;/strong&gt;.</column>
    <column name="uid" type="smallint">Indicates the creator of the plan for ad hoc query plans and prepared plans.&lt;br /&gt;&lt;br /&gt; -2 = The batch submitted does not depend on implicit name resolution and can be shared among different users. This is the preferred method. Any other value represents the user ID of the user submitting the query in the database.&lt;br /&gt;&lt;br /&gt; Overflows or returns NULL if the number of users and roles exceeds 32,767.</column>
    <column name="refcounts" type="int">Number of other cache objects referencing this cache object. A count of 1 is the base.</column>
    <column name="usecounts" type="int">Number of times this cache object has been used since inception.</column>
    <column name="pagesused" type="int">Number of pages consumed by the cache object.</column>
    <column name="setopts" type="int">SET option settings that affect a compiled plan. These settings are part of the cache key. Changes to values in this column indicate users have modified SET options. These options include the following:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;ANSI_PADDING&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;FORCEPLAN&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;CONCAT_NULL_YIELDS_NULL&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;ANSI_WARNINGS&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;ANSI_NULLS&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;QUOTED_IDENTIFIER&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;ANSI_NULL_DFLT_ON&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;ANSI_NULL_DFLT_OFF&lt;/strong&gt;</column>
    <column name="langid" type="smallint">Language ID. ID of the language of the connection that created the cache object.</column>
    <column name="dateformat" type="smallint">Date format of the connection that created the cache object.</column>
    <column name="status" type="int">Indicates whether the cache object is a cursor plan. Currently, only the least significant bit is used.</column>
    <column name="lasttime" type="bigint">For backward compatibility only. Always returns 0.</column>
    <column name="maxexectime" type="bigint">For backward compatibility only. Always returns 0.</column>
    <column name="avgexectime" type="bigint">For backward compatibility only. Always returns 0.</column>
    <column name="lastreads" type="bigint">For backward compatibility only. Always returns 0.</column>
    <column name="lastwrites" type="bigint">For backward compatibility only. Always returns 0.</column>
    <column name="sqlbytes" type="int">Length in bytes of the procedure definition or batch submitted.</column>
    <column name="sql" type="nvarchar(3900)">Module definition or the first 3900 characters of the batch submitted.</column>
  </table>
  <table name="sys.syscharsets" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syscharsets-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.syscharsets (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains one row for each character set and sort order defined for use by the SQL Server Database Engine. One of the sort orders is marked in &lt;strong&gt;sysconfigures&lt;/strong&gt; as the default sort order. This is the only one actually being used.&lt;/para&gt;</description>
    <column name="type" type="smallint">Type of entity this row represents:&lt;br /&gt;&lt;br /&gt; 1001 = Character set.&lt;br /&gt;&lt;br /&gt; 2001 = Sort order.</column>
    <column name="id" type="tinyint">Unique ID for the character set or sort order. Note sort orders and character sets cannot share the same ID number. The ID range of 1 through 240 is reserved for use by the Database Engine.</column>
    <column name="csid" type="tinyint">If the row represents a character set, this field is unused. If the row represents a sort order, this field is the ID of the character set that the sort order is built on. It is assumed a character set row with this ID exists in this table.</column>
    <column name="status" type="smallint">Internal system status information bits.</column>
    <column name="name" type="sysname">Unique name for the character set or sort order. This field must contain only the letters A-Z or a-z, numbers 0 - 9, and underscores(_); and it must start with a letter.</column>
    <column name="description" type="nvarchar(255)">Optional description of the features of the character set or sort order.</column>
    <column name="binarydefinition" type="varbinary(6000)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="definition" type="image">Internal definition of the character set or sort order. The structure of the data in this field depends on the type.</column>
  </table>
  <table name="sys.syscolumns" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syscolumns-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.syscolumns (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for every column in every table and view, and a row for each parameter in a stored procedure in the database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="name" type="sysname">Name of the column or procedure parameter.</column>
    <column name="id" type="int">Object ID of the table to which this column belongs, or the ID of the stored procedure with which this parameter is associated.</column>
    <column name="xtype" type="tinyint">Physical storage type from &lt;strong&gt;sys.types&lt;/strong&gt;.</column>
    <column name="typestat" type="tinyint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="xusertype" type="smallint">ID of extended user-defined data type. Overflows or returns NULL if the number of data types exceeds 32,767.</column>
    <column name="length" type="smallint">Maximum physical storage length from &lt;strong&gt;sys&lt;/strong&gt;.&lt;strong&gt;types&lt;/strong&gt;.</column>
    <column name="xprec" type="tinyint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="xscale" type="tinyint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="colid" type="smallint">Column or parameter ID.</column>
    <column name="xoffset" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="bitpos" type="tinyint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="reserved" type="tinyint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="colstat" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="cdefault" type="int">ID of the default for this column.</column>
    <column name="domain" type="int">ID of the rule or CHECK constraint for this column.</column>
    <column name="number" type="smallint">Subprocedure number when the procedure is grouped.&lt;br /&gt;&lt;br /&gt; 0 = Nonprocedure entries</column>
    <column name="colorder" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="autoval" type="varbinary(8000)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="offset" type="smallint">Offset into the row in which this column appears.</column>
    <column name="collationid" type="int">ID of the collation of the column. NULL for noncharacter-based columns.</column>
    <column name="status" type="tinyint">Bitmap used to describe a property of the column or the parameter:&lt;br /&gt;&lt;br /&gt; 0x08 = Column allows null values.&lt;br /&gt;&lt;br /&gt; 0x10 = ANSI padding was in effect when &lt;strong&gt;varchar&lt;/strong&gt; or &lt;strong&gt;varbinary&lt;/strong&gt; columns were added. Trailing blanks are preserved for &lt;strong&gt;varchar&lt;/strong&gt; and trailing zeros are preserved for &lt;strong&gt;varbinary&lt;/strong&gt; columns.&lt;br /&gt;&lt;br /&gt; 0x40 = Parameter is an OUTPUT parameter.&lt;br /&gt;&lt;br /&gt; 0x80 = Column is an identity column.</column>
    <column name="type" type="tinyint">Physical storage type from &lt;strong&gt;sys&lt;/strong&gt;.&lt;strong&gt;types&lt;/strong&gt;.</column>
    <column name="usertype" type="smallint">ID of user-defined data type from &lt;strong&gt;sys.types&lt;/strong&gt;. Overflows or returns NULL if the number of data types exceeds 32,767.</column>
    <column name="printfmt" type="varchar(255)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="prec" type="smallint">Level of precision for this column.&lt;br /&gt;&lt;br /&gt; -1 = &lt;strong&gt;xml&lt;/strong&gt; or large value type.</column>
    <column name="scale" type="int">Scale for this column.&lt;br /&gt;&lt;br /&gt; NULL = Data type is nonnumeric.</column>
    <column name="iscomputed" type="int">Flag indicating whether the column is computed:&lt;br /&gt;&lt;br /&gt; 0 = Noncomputed&lt;br /&gt;&lt;br /&gt; 1 = Computed</column>
    <column name="isoutparam" type="int">Indicates whether the procedure parameter is an output parameter:&lt;br /&gt;&lt;br /&gt; 1 = True&lt;br /&gt;&lt;br /&gt; 0 = False</column>
    <column name="isnullable" type="int">Indicates whether the column allows null values:&lt;br /&gt;&lt;br /&gt; 1 = True&lt;br /&gt;&lt;br /&gt; 0 = False</column>
    <column name="collation" type="sysname">Name of the collation of the column. NULL if not a character-based column.</column>
  </table>
  <table name="sys.syscomments" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syscomments-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.syscomments (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains entries for each view, rule, default, trigger, CHECK constraint, DEFAULT constraint, and stored procedure within the database. The &lt;strong&gt;text&lt;/strong&gt; column contains the original SQL definition statements.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature. We recommend that you use sys.sql_modules instead. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-sql-modules-transact-sql'&gt;sys.sql_modules (Transact-SQL)&lt;/a&gt;.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="id" type="int">Object ID to which this text applies.</column>
    <column name="number" type="smallint">Number within procedure grouping, if grouped.&lt;br /&gt;&lt;br /&gt; 0 = Entries are not procedures.</column>
    <column name="colid" type="smallint">Row sequence number for object definitions that are longer than 4,000 characters.</column>
    <column name="status" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="ctext" type="varbinary(8000)">The raw bytes of the SQL definition statement.</column>
    <column name="texttype" type="smallint">0 = User-supplied comment&lt;br /&gt;&lt;br /&gt; 1 = System-supplied comment&lt;br /&gt;&lt;br /&gt; 4 = Encrypted comment</column>
    <column name="language" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="encrypted" type="bit">Indicates whether the procedure definition is obfuscated.&lt;br /&gt;&lt;br /&gt; 0 = Not obfuscated&lt;br /&gt;&lt;br /&gt; 1 = Obfuscated&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important \*\&lt;/strong&gt;* To obfuscate stored procedure definitions, use CREATE PROCEDURE with the ENCRYPTION keyword.</column>
    <column name="compressed" type="bit">Always returns 0. This indicates that the procedure is compressed.</column>
    <column name="text" type="nvarchar(4000)">Actual text of the SQL definition statement.&lt;br /&gt;&lt;br /&gt; The semantics of the decoded expression are equivalent to the original text; however, there are no syntactic guarantees. For example, white spaces are removed from the decoded expression.&lt;br /&gt;&lt;br /&gt; This SQL Server 2000 (8.x)-compatible view obtains information from current SQL Server structures and can return more characters than the &lt;strong&gt;nvarchar(4000)&lt;/strong&gt; definition. &lt;strong&gt;sp_help&lt;/strong&gt; returns &lt;strong&gt;nvarchar(4000)&lt;/strong&gt; as the data type of the text column. When working with &lt;strong&gt;syscomments&lt;/strong&gt; consider using &lt;strong&gt;nvarchar(max)&lt;/strong&gt;. For new development work, do not use &lt;strong&gt;syscomments&lt;/strong&gt;.</column>
  </table>
  <table name="sys.sysconfigures" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysconfigures-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysconfigures (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each configuration option set by a user. &lt;strong&gt;sysconfigures&lt;/strong&gt; contains the configuration options that are defined before the most recent startup of SQL Server, plus any dynamic configuration options set since then.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="value" type="int">User-modifiable value for the variable. This is used by the Database Engine only if RECONFIGURE has been executed.</column>
    <column name="config" type="int">Configuration variable number.</column>
    <column name="comment" type="nvarchar(255)">Explanation of the configuration option.</column>
    <column name="status" type="smallint">Bitmap that indicates the status for the option. Possible values include the following:&lt;br /&gt;&lt;br /&gt; 0 = Static. Setting takes effect when the server is restarted.&lt;br /&gt;&lt;br /&gt; 1 = Dynamic. Variable takes effect when the RECONFIGURE statement is executed.&lt;br /&gt;&lt;br /&gt; 2 = Advanced. Variable is displayed only when the &lt;strong&gt;show advanced options&lt;/strong&gt; is set. Setting takes effect when the server is restarted.&lt;br /&gt;&lt;br /&gt; 3 = Dynamic and advanced.</column>
  </table>
  <table name="sys.sysconstraints" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysconstraints-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysconstraints (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains mappings of constraints to the objects that own the constraints within the database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="constid" type="int">Constraint number.</column>
    <column name="id" type="int">ID of the table that owns the constraint.</column>
    <column name="colid" type="smallint">ID of the column on which the constraint is defined.&lt;br /&gt;&lt;br /&gt; 0 = Table constraint</column>
    <column name="spare1" type="tinyint">Reserved</column>
    <column name="status" type="int">Pseudo-bit-mask indicating the status. Possible values include the following:&lt;br /&gt;&lt;br /&gt; 1 = PRIMARY KEY constraint&lt;br /&gt;&lt;br /&gt; 2 = UNIQUE KEY constraint&lt;br /&gt;&lt;br /&gt; 3 = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; 4 = CHECK constraint&lt;br /&gt;&lt;br /&gt; 5 = DEFAULT constraint&lt;br /&gt;&lt;br /&gt; 16 = Column-level constraint&lt;br /&gt;&lt;br /&gt; 32 = Table-level constraint</column>
    <column name="actions" type="int">Reserved</column>
    <column name="error" type="int">Reserved</column>
  </table>
  <table name="sys.syscurconfigs" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syscurconfigs-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.syscurconfigs (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains an entry for each current configuration option. Also, this view contains four entries that describe the configuration structure. &lt;strong&gt;syscurconfigs&lt;/strong&gt; is built dynamically when queried by a user. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysconfigures-transact-sql'&gt;sys.sysconfigures (Transact-SQL)&lt;/a&gt;.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="value" type="int">User-modifiable value for the variable. This is used by the SQL Server Database Engine only if RECONFIGURE has been executed.</column>
    <column name="config" type="smallint">Configuration variable number.</column>
    <column name="comment" type="nvarchar(255)">Explanation of the configuration option.</column>
    <column name="status" type="smallint">Bitmap indicating the status for the option. Possible values include the following:&lt;br /&gt;&lt;br /&gt; 0 = Static. Setting takes effect when the server is restarted.&lt;br /&gt;&lt;br /&gt; 1 = Dynamic. Variable takes effect when the RECONFIGURE statement is executed.&lt;br /&gt;&lt;br /&gt; 2 = Advanced. Variable is displayed only when the &lt;strong&gt;show advanced options&lt;/strong&gt; is set.&lt;br /&gt;&lt;br /&gt; 3 = Dynamic and advanced.</column>
  </table>
  <table name="sys.sysdatabases" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysdatabases-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysdatabases (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains one row for each database in an instance of Microsoft SQL Server. When SQL Server is first installed, &lt;strong&gt;sysdatabases&lt;/strong&gt; contains entries for the &lt;strong&gt;master&lt;/strong&gt;, &lt;strong&gt;model&lt;/strong&gt;, &lt;strong&gt;msdb&lt;/strong&gt;, and &lt;strong&gt;tempdb&lt;/strong&gt; databases.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="name" type="sysname">Database name</column>
    <column name="dbid" type="smallint">Database ID</column>
    <column name="sid" type="varbinary(85)">System ID of the database creator</column>
    <column name="mode" type="smallint">Used internally for locking a database while it is being created.</column>
    <column name="status" type="int">Status bits, some of which can be set by using &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql'&gt;ALTER DATABASE&lt;/a&gt; as noted:&lt;br /&gt;&lt;br /&gt; 1 = &lt;strong&gt;autoclose&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 4 = &lt;strong&gt;select into/bulkcopy&lt;/strong&gt; (ALTER DATABASE using SET RECOVERY)&lt;br /&gt;&lt;br /&gt; 8 = &lt;strong&gt;trunc. log on chkpt&lt;/strong&gt; (ALTER DATABASE using SET RECOVERY)&lt;br /&gt;&lt;br /&gt; 16 = &lt;strong&gt;torn page detection&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 32 = &lt;strong&gt;loading&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 64 = &lt;strong&gt;pre recovery&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 128 = &lt;strong&gt;recovering&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 256 = &lt;strong&gt;not recovered&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 512 = &lt;strong&gt;offline&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 1024 = &lt;strong&gt;read only&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 2048 = &lt;strong&gt;dbo use only&lt;/strong&gt; (ALTER DATABASE using SET RESTRICTED_USER)&lt;br /&gt;&lt;br /&gt; 4096 = &lt;strong&gt;single user&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 32768 = &lt;strong&gt;emergency mode&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; 65536 = &lt;strong&gt;CHECKSUM&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 4194304 = &lt;strong&gt;autoshrink&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 1073741824 = &lt;strong&gt;cleanly shutdown&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; Multiple bits can be ON at the same time.</column>
    <column name="status2" type="int">16384 = &lt;strong&gt;ANSI null default&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 65536 = &lt;strong&gt;concat null yields null&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 131072 = &lt;strong&gt;recursive triggers&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 1048576 = &lt;strong&gt;default to local cursor&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 8388608 = &lt;strong&gt;quoted identifier&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 33554432 = &lt;strong&gt;cursor close on commit&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 67108864 = &lt;strong&gt;ANSI nulls&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 268435456 = &lt;strong&gt;ANSI warnings&lt;/strong&gt; (ALTER DATABASE)&lt;br /&gt;&lt;br /&gt; 536870912 = &lt;strong&gt;full text enabled&lt;/strong&gt; (set by using &lt;strong&gt;sp_fulltext_database&lt;/strong&gt;)</column>
    <column name="crdate" type="datetime">Creation date</column>
    <column name="reserved" type="datetime">Reserved for future use.</column>
    <column name="category" type="int">Contains a bitmap of information used for replication:&lt;br /&gt;&lt;br /&gt; 1 = Published for snapshot or transactional replication.&lt;br /&gt;&lt;br /&gt; 2 = Subscribed to a snapshot or transactional publication.&lt;br /&gt;&lt;br /&gt; 4 = Published for merge replication.&lt;br /&gt;&lt;br /&gt; 8 = Subscribed to a merge publication.&lt;br /&gt;&lt;br /&gt; 16 = Distribution database.</column>
    <column name="cmptlevel" type="tinyint">Compatibility level for the database. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql-compatibility-level'&gt;ALTER DATABASE Compatibility Level (Transact-SQL)&lt;/a&gt;.</column>
    <column name="filename" type="nvarchar(260)">Operating-system path and name for the primary file for the database.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;filename&lt;/strong&gt; is visible to &lt;strong&gt;dbcreator&lt;/strong&gt;, &lt;strong&gt;sysadmin&lt;/strong&gt;, the database owner with CREATE ANY DATABASE permissions, or grantees that have any one of the following permissions: ALTER ANY DATABASE, CREATE ANY DATABASE, VIEW ANY DEFINITION. To return the path and file name, query the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysfiles-transact-sql'&gt;sys.sysfiles&lt;/a&gt; compatibility view, or the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-database-files-transact-sql'&gt;sys.database_files&lt;/a&gt; view.</column>
    <column name="version" type="smallint">Internal version number of the SQL Server code with which the database was created. Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
  </table>
  <table name="sys.sysdepends" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysdepends-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysdepends (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains dependency information between objects (views, procedures, and triggers) in the database, and the objects (tables, views, and procedures) that are contained in their definition.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="id" type="int">Object ID.</column>
    <column name="depid" type="int">Dependent object ID.</column>
    <column name="number" type="smallint">Procedure number.</column>
    <column name="depnumber" type="smallint">Dependent procedure number.</column>
    <column name="status" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="deptype" type="tinyint">Identifies the dependent object type:&lt;br /&gt;&lt;br /&gt; 0 = Object or column (non-schema-bound references only&lt;br /&gt;&lt;br /&gt; 1 = Object or column (schema-bound references)</column>
    <column name="depdbid" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="depsiteid" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="selall" type="bit">1 = Object is used in a SELECT * statement.&lt;br /&gt;&lt;br /&gt; 0 = No.</column>
    <column name="resultobj" type="bit">1 = Object is being updated.&lt;br /&gt;&lt;br /&gt; 0 = No.</column>
    <column name="readobj" type="bit">1 = The object is being read.&lt;br /&gt;&lt;br /&gt; 0 = No.</column>
  </table>
  <table name="sys.sysdevices" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysdevices-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysdevices (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each disk backup file, tape backup file, and database file.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="name" type="sysname">Logical name of the backup file or database file.</column>
    <column name="size" type="int">Size of the file in 2-kilobyte (KB) pages.</column>
    <column name="low" type="int">Maintained for backward compatibility only.</column>
    <column name="high" type="int">Maintained for backward compatibility only.</column>
    <column name="status" type="smallint">Bitmap indicating the type of device:&lt;br /&gt;&lt;br /&gt; 1 = Default disk&lt;br /&gt;&lt;br /&gt; 2 = Physical disk&lt;br /&gt;&lt;br /&gt; 4 = Logical disk&lt;br /&gt;&lt;br /&gt; 8 = Skip header&lt;br /&gt;&lt;br /&gt; 16 = Backup file&lt;br /&gt;&lt;br /&gt; 32 = Serial writes&lt;br /&gt;&lt;br /&gt; 4096 = Read-only</column>
    <column name="cntrltype" type="smallint">Controller type:&lt;br /&gt;&lt;br /&gt; 0 = Non-CD-ROM database file&lt;br /&gt;&lt;br /&gt; 2 = Disk backup file&lt;br /&gt;&lt;br /&gt; 3 - 4 = Diskette backup file&lt;br /&gt;&lt;br /&gt; 5 = Tape backup file&lt;br /&gt;&lt;br /&gt; 6 = Named-pipe file</column>
    <column name="phyname" type="nvarchar(260)">Name of the physical file.</column>
  </table>
  <table name="sys.sysfilegroups" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysfilegroups-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysfilegroups (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each file group in a database. There is at least one entry in this table that is for the primary file group.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="groupid" type="smallint">Group identification number unique for each database.</column>
    <column name="allocpolicy" type="smallint">Reserved</column>
    <column name="status" type="int">0x8 = Read-only&lt;br /&gt;&lt;br /&gt; 0x10 = Default</column>
    <column name="groupname" type="sysname">Name of the file group.</column>
  </table>
  <table name="sys.sysfiles" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysfiles-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysfiles (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each file in a database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="fileid" type="smallint">File identification number unique for each database.</column>
    <column name="groupid" type="smallint">File group identification number.</column>
    <column name="size" type="int">Size of the file, in 8-KB pages.</column>
    <column name="maxsize" type="int">Maximum file size, in 8-KB pages.&lt;br /&gt;&lt;br /&gt; 0 = No growth.&lt;br /&gt;&lt;br /&gt; -1 = File will grow until the disk is full.&lt;br /&gt;&lt;br /&gt; 268435456 = Log file will grow to a maximum size of 2 TB.&lt;br /&gt;&lt;br /&gt; Note: Databases that are upgraded with an unlimited log file size will report -1 for the maximum size of the log file.</column>
    <column name="growth" type="int">Growth size of the database. Can be either the number of pages or the percentage of file size, depending on value of &lt;strong&gt;status&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = No growth.</column>
    <column name="status" type="int">Status bits for the &lt;strong&gt;growth&lt;/strong&gt; value in either megabytes (MB) or kilobytes (KB).&lt;br /&gt;&lt;br /&gt; 0x2 = Disk file.&lt;br /&gt;&lt;br /&gt; 0x40 = Log file.&lt;br /&gt;&lt;br /&gt; 0x100000 = Growth. This value is a percentage and not the number of pages.</column>
    <column name="perf" type="int">Reserved.</column>
    <column name="name" type="sysname">Logical name of the file.</column>
    <column name="filename" type="nvarchar(260)">Name of the physical device. This includes the full path of the file.</column>
  </table>
  <table name="sys.sysforeignkeys" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysforeignkeys-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysforeignkeys (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about the FOREIGN KEY constraints that are in the definitions of tables in the database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="constid" type="int">ID of the FOREIGN KEY constraint.</column>
    <column name="fkeyid" type="int">Object ID of the table with the FOREIGN KEY constraint.</column>
    <column name="rkeyid" type="int">Object ID of the table referenced in the FOREIGN KEY constraint.</column>
    <column name="fkey" type="smallint">ID of the referencing column.</column>
    <column name="rkey" type="smallint">ID of the referenced column.</column>
    <column name="keyno" type="smallint">Position of the column in the reference column list.</column>
  </table>
  <table name="sys.sysfulltextcatalogs" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysfulltextcatalogs-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysfulltextcatalogs (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains information about the full-text catalogs.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="ftcatid" type="smallint">Identifier of the full-text catalog.</column>
    <column name="name" type="sysname">Full-text catalog name specified by the user.</column>
    <column name="status" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="path" type="nvarchar(260)">Root path specified by the user.&lt;br /&gt;&lt;br /&gt; NULL = Path was not specified. The default (installation) path was used.</column>
  </table>
  <table name="sys.sysindexes" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysindexes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysindexes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each index and table in the current database. XML indexes are not supported in this view. Partitioned tables and indexes are not fully supported in this view; use the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-indexes-transact-sql'&gt;sys.indexes&lt;/a&gt; catalog view instead.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="id" type="int">ID of the table to which the index belongs.</column>
    <column name="status" type="int">System-status information.&lt;br /&gt;&lt;br /&gt; Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="first" type="binary(6)">Pointer to the first or root page.&lt;br /&gt;&lt;br /&gt; Unused when &lt;strong&gt;indid&lt;/strong&gt; = 0.&lt;br /&gt;&lt;br /&gt; NULL = Index is partitioned when &lt;strong&gt;indid&lt;/strong&gt; &gt; 1.&lt;br /&gt;&lt;br /&gt; NULL = Table is partitioned when &lt;strong&gt;indid&lt;/strong&gt; is 0 or 1.</column>
    <column name="indid" type="smallint">ID of the index:&lt;br /&gt;&lt;br /&gt; 0 = Heap&lt;br /&gt;&lt;br /&gt; 1 = Clustered index&lt;br /&gt;&lt;br /&gt; &gt;1 = Nonclustered index</column>
    <column name="root" type="binary(6)">For &lt;strong&gt;indid&lt;/strong&gt; &gt;= 1, &lt;strong&gt;root&lt;/strong&gt; is the pointer to the root page.&lt;br /&gt;&lt;br /&gt; Unused when &lt;strong&gt;indid&lt;/strong&gt; = 0.&lt;br /&gt;&lt;br /&gt; NULL = Index is partitioned when &lt;strong&gt;indid&lt;/strong&gt; &gt; 1.&lt;br /&gt;&lt;br /&gt; NULL = Table is partitioned when &lt;strong&gt;indid&lt;/strong&gt; is 0 or 1.</column>
    <column name="minlen" type="smallint">Minimum size of a row.</column>
    <column name="keycnt" type="smallint">Number of keys.</column>
    <column name="groupid" type="smallint">Filegroup ID on which the object was created.&lt;br /&gt;&lt;br /&gt; NULL = Index is partitioned when &lt;strong&gt;indid&lt;/strong&gt; &gt; 1.&lt;br /&gt;&lt;br /&gt; NULL = Table is partitioned when &lt;strong&gt;indid&lt;/strong&gt; is 0 or 1.</column>
    <column name="dpages" type="int">For &lt;strong&gt;indid&lt;/strong&gt; = 0 or &lt;strong&gt;indid&lt;/strong&gt; = 1, &lt;strong&gt;dpages&lt;/strong&gt; is the count of data pages used.&lt;br /&gt;&lt;br /&gt; For &lt;strong&gt;indid&lt;/strong&gt; &gt; 1, &lt;strong&gt;dpages&lt;/strong&gt; is the count of index pages used.&lt;br /&gt;&lt;br /&gt; 0 = Index is partitioned when &lt;strong&gt;indid&lt;/strong&gt; &gt; 1.&lt;br /&gt;&lt;br /&gt; 0 = Table is partitioned when &lt;strong&gt;indid&lt;/strong&gt; is 0 or 1.&lt;br /&gt;&lt;br /&gt; Does not yield accurate results if row-overflow occurs.</column>
    <column name="reserved" type="int">For &lt;strong&gt;indid&lt;/strong&gt; = 0 or &lt;strong&gt;indid&lt;/strong&gt; = 1, &lt;strong&gt;reserved&lt;/strong&gt; is the count of pages allocated for all indexes and table data.&lt;br /&gt;&lt;br /&gt; For &lt;strong&gt;indid&lt;/strong&gt; &gt; 1, &lt;strong&gt;reserved&lt;/strong&gt; is the count of pages allocated for the index.&lt;br /&gt;&lt;br /&gt; 0 = Index is partitioned when &lt;strong&gt;indid&lt;/strong&gt; &gt; 1.&lt;br /&gt;&lt;br /&gt; 0 = Table is partitioned when &lt;strong&gt;indid&lt;/strong&gt; is 0 or 1.&lt;br /&gt;&lt;br /&gt; Does not yield accurate results if row-overflow occurs.</column>
    <column name="used" type="int">For &lt;strong&gt;indid&lt;/strong&gt; = 0 or &lt;strong&gt;indid&lt;/strong&gt; = 1, &lt;strong&gt;used&lt;/strong&gt; is the count of the total pages used for all index and table data.&lt;br /&gt;&lt;br /&gt; For &lt;strong&gt;indid&lt;/strong&gt; &gt; 1, &lt;strong&gt;used&lt;/strong&gt; is the count of pages used for the index.&lt;br /&gt;&lt;br /&gt; 0 = Index is partitioned when &lt;strong&gt;indid&lt;/strong&gt; &gt; 1.&lt;br /&gt;&lt;br /&gt; 0 = Table is partitioned when &lt;strong&gt;indid&lt;/strong&gt; is 0 or 1.&lt;br /&gt;&lt;br /&gt; Does not yield accurate results if row-overflow occurs.</column>
    <column name="rowcnt" type="bigint">Data-level row count based on &lt;strong&gt;indid&lt;/strong&gt; = 0 and &lt;strong&gt;indid&lt;/strong&gt; = 1.&lt;br /&gt;&lt;br /&gt; 0 = Index is partitioned when &lt;strong&gt;indid&lt;/strong&gt; &gt; 1.&lt;br /&gt;&lt;br /&gt; 0 = Table is partitioned when &lt;strong&gt;indid&lt;/strong&gt; is 0 or 1.</column>
    <column name="rowmodctr" type="int">Counts the total number of inserted, deleted, or updated rows since the last time statistics were updated for the table.&lt;br /&gt;&lt;br /&gt; 0 = Index is partitioned when &lt;strong&gt;indid&lt;/strong&gt; &gt; 1.&lt;br /&gt;&lt;br /&gt; 0 = Table is partitioned when &lt;strong&gt;indid&lt;/strong&gt; is 0 or 1.&lt;br /&gt;&lt;br /&gt; In SQL Server 2005 (9.x) and later, &lt;strong&gt;rowmodctr&lt;/strong&gt; is not fully compatible with earlier versions. For more information, see Remarks.</column>
    <column name="reserved3" type="int">Returns 0.&lt;br /&gt;&lt;br /&gt; Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="reserved4" type="int">Returns 0.&lt;br /&gt;&lt;br /&gt; Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="xmaxlen" type="smallint">Maximum size of a row</column>
    <column name="maxirow" type="smallint">Maximum size of a nonleaf index row.&lt;br /&gt;&lt;br /&gt; In SQL Server 2005 (9.x) and later, &lt;strong&gt;maxirow&lt;/strong&gt; is not fully compatible with earlier versions.</column>
    <column name="OrigFillFactor" type="tinyint">Original fill factor value used when the index was created. This value is not maintained; however, it can be helpful if you have to re-create an index and do not remember the fill factor value that was used.</column>
    <column name="StatVersion" type="tinyint">Returns 0.&lt;br /&gt;&lt;br /&gt; Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="reserved2" type="int">Returns 0.&lt;br /&gt;&lt;br /&gt; Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="FirstIAM" type="binary(6)">NULL = Index is partitioned.&lt;br /&gt;&lt;br /&gt; Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="impid" type="smallint">Index implementation flag.&lt;br /&gt;&lt;br /&gt; Returns 0.&lt;br /&gt;&lt;br /&gt; Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="lockflags" type="smallint">Used to constrain the considered lock granularities for an index. For example, to minimize locking cost, a lookup table that is essentially read-only could be set up to do only table-level locking.</column>
    <column name="pgmodctr" type="int">Returns 0.&lt;br /&gt;&lt;br /&gt; Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="keys" type="varbinary(816)">List of the column IDs of the columns that make up the index key.&lt;br /&gt;&lt;br /&gt; Returns NULL.&lt;br /&gt;&lt;br /&gt; To display the index key columns, use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysindexkeys-transact-sql'&gt;sys.sysindexkeys&lt;/a&gt;.</column>
    <column name="name" type="sysname">Name of the index or statistic. Returns NULL when &lt;strong&gt;indid&lt;/strong&gt; = 0. Modify your application to look for a NULL heap name.</column>
    <column name="statblob" type="image">Statistics binary large object (BLOB).&lt;br /&gt;&lt;br /&gt; Returns NULL.</column>
    <column name="maxlen" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="rows" type="int">Data-level row count based on &lt;strong&gt;indid&lt;/strong&gt; = 0 and &lt;strong&gt;indid&lt;/strong&gt; = 1, and the value is repeated for &lt;strong&gt;indid&lt;/strong&gt; &gt;1.</column>
  </table>
  <table name="sys.sysindexkeys" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysindexkeys-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysindexkeys (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about the keys or columns in an index of the database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="id" type="int">ID of the table.</column>
    <column name="indid" type="smallint">ID of the index.</column>
    <column name="colid" type="smallint">ID of the column.</column>
    <column name="keyno" type="smallint">Position of the column in the index.</column>
  </table>
  <table name="sys.syslanguages" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syslanguages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.syslanguages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains one row for each language present in the instance of SQL Server.&lt;/para&gt;</description>
    <column name="langid" type="smallint">Unique language ID.</column>
    <column name="dateformat" type="nchar(3)">Date order, for example, DMY.</column>
    <column name="datefirst" type="tinyint">First day of the week: 1 for Monday, 2 for Tuesday, and so on through 7 for Sunday.</column>
    <column name="upgrade" type="int">Reserved for system use.</column>
    <column name="name" type="sysname">Official language name, for example, Français.</column>
    <column name="alias" type="sysname">Alternative language name, for example, French.</column>
    <column name="months" type="nvarchar(372)">Comma-separated list of full-length month names in order from January through December, with each name having up to 20 characters.</column>
    <column name="shortmonths" type="nvarchar(132)">Comma-separated list of short-month names in order from January through December, with each name having up to 9 characters.</column>
    <column name="days" type="nvarchar(217)">Comma-separated list of day names in order from Monday through Sunday, with each name having up to 30 characters.</column>
    <column name="lcid" type="int">Microsoft Windows locale ID for the language.</column>
    <column name="msglangid" type="smallint">Database Engine message group ID.</column>
  </table>
  <table name="sys.syslockinfo" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syslockinfo-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.syslockinfo (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about all granted, converting, and waiting lock requests.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This feature has changed from earlier versions of SQL Server. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/database-engine/breaking-changes-to-database-engine-features-in-sql-server-2016'&gt;Breaking Changes to Database Engine Features in SQL Server 2016&lt;/a&gt;.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="rsc_text" type="nchar(32)">Textual description of a lock resource. Contains a part of the resource name.</column>
    <column name="rsc_bin" type="binary(16)">Binary lock resource. Contains the actual lock resource that is contained in the lock manager. This column is included for tools that know about the lock resource format for generating their own formatted lock resource, and for performing self joins on &lt;strong&gt;syslockinfo&lt;/strong&gt;.</column>
    <column name="rsc_valblk" type="binary(16)">Lock value block. Some resource types may include additional data in the lock resource that is not hashed by the lock manager to determine ownership of a particular lock resource. For example, page locks are not owned by a particular object ID. For lock escalation and other purposes. However, the object ID of a page lock may be included in the lock value block.</column>
    <column name="rsc_dbid" type="smallint">Database ID associated with the resource.</column>
    <column name="rsc_indid" type="smallint">Index ID associated with the resource, if appropriate.</column>
    <column name="rsc_objid" type="int">Object ID associated with the resource, if appropriate.</column>
    <column name="rsc_type" type="tinyint">Resource type:&lt;br /&gt;&lt;br /&gt; 1 = NULL Resource (not used)&lt;br /&gt;&lt;br /&gt; 2 = Database&lt;br /&gt;&lt;br /&gt; 3 = File&lt;br /&gt;&lt;br /&gt; 4 = Index&lt;br /&gt;&lt;br /&gt; 5 = Table&lt;br /&gt;&lt;br /&gt; 6 = Page&lt;br /&gt;&lt;br /&gt; 7 = Key&lt;br /&gt;&lt;br /&gt; 8 = Extent&lt;br /&gt;&lt;br /&gt; 9 = RID (Row ID)&lt;br /&gt;&lt;br /&gt; 10 = Application</column>
    <column name="rsc_flag" type="tinyint">Internal resource flags.</column>
    <column name="req_mode" type="tinyint">Lock request mode. This column is the lock mode of the requester and represents either the granted mode, or the convert or waiting mode.&lt;br /&gt;&lt;br /&gt; 0 = NULL. No access is granted to the resource. Serves as a placeholder.&lt;br /&gt;&lt;br /&gt; 1 = Sch-S (Schema stability). Ensures that a schema element, such as a table or index, is not dropped while any session holds a schema stability lock on the schema element.&lt;br /&gt;&lt;br /&gt; 2 = Sch-M (Schema modification). Must be held by any session that wants to change the schema of the specified resource. Ensures that no other sessions are referencing the indicated object.&lt;br /&gt;&lt;br /&gt; 3 = S (Shared). The holding session is granted shared access to the resource.&lt;br /&gt;&lt;br /&gt; 4 = U (Update). Indicates an update lock acquired on resources that may eventually be updated. It is used to prevent a common form of deadlock that occurs when multiple sessions lock resources for potential update in the future.&lt;br /&gt;&lt;br /&gt; 5 = X (Exclusive). The holding session is granted exclusive access to the resource.&lt;br /&gt;&lt;br /&gt; 6 = IS (Intent Shared). Indicates the intention to place S locks on some subordinate resource in the lock hierarchy.&lt;br /&gt;&lt;br /&gt; 7 = IU (Intent Update). Indicates the intention to place U locks on some subordinate resource in the lock hierarchy.&lt;br /&gt;&lt;br /&gt; 8 = IX (Intent Exclusive). Indicates the intention to place X locks on some subordinate resource in the lock hierarchy.&lt;br /&gt;&lt;br /&gt; 9 = SIU (Shared Intent Update). Indicates shared access to a resource with the intent of acquiring update locks on subordinate resources in the lock hierarchy.&lt;br /&gt;&lt;br /&gt; 10 = SIX (Shared Intent Exclusive). Indicates shared access to a resource with the intent of acquiring exclusive locks on subordinate resources in the lock hierarchy.&lt;br /&gt;&lt;br /&gt; 11 = UIX (Update Intent Exclusive). Indicates an update lock hold on a resource with the intent of acquiring exclusive locks on subordinate resources in the lock hierarchy.&lt;br /&gt;&lt;br /&gt; 12 = BU. Used by bulk operations.&lt;br /&gt;&lt;br /&gt; 13 = RangeS_S (Shared Key-Range and Shared Resource lock). Indicates serializable range scan.&lt;br /&gt;&lt;br /&gt; 14 = RangeS_U (Shared Key-Range and Update Resource lock). Indicates serializable update scan.&lt;br /&gt;&lt;br /&gt; 15 = RangeI_N (Insert Key-Range and Null Resource lock). Used to test ranges before inserting a new key into an index.&lt;br /&gt;&lt;br /&gt; 16 = RangeI_S. Key-Range Conversion lock, created by an overlap of RangeI_N and S locks.&lt;br /&gt;&lt;br /&gt; 17 = RangeI_U. Key-Range Conversion lock, created by an overlap of RangeI_N and U locks.&lt;br /&gt;&lt;br /&gt; 18 = RangeI_X. Key-Range Conversion lock, created by an overlap of RangeI_N and X locks.&lt;br /&gt;&lt;br /&gt; 19 = RangeX_S. Key-Range Conversion lock, created by an overlap of RangeI_N and RangeS_S. locks.&lt;br /&gt;&lt;br /&gt; 20 = RangeX_U. Key-Range Conversion lock, created by an overlap of RangeI_N and RangeS_U locks.&lt;br /&gt;&lt;br /&gt; 21 = RangeX_X (Exclusive Key-Range and Exclusive Resource lock). This is a conversion lock used when updating a key in a range.</column>
    <column name="req_status" type="tinyint">Status of the lock request:&lt;br /&gt;&lt;br /&gt; 1 = Granted&lt;br /&gt;&lt;br /&gt; 2 = Converting&lt;br /&gt;&lt;br /&gt; 3 = Waiting</column>
    <column name="req_refcnt" type="smallint">Lock reference count. Every time a transaction asks for a lock on a particular resource, a reference count is incremented. The lock cannot be released until the reference count equals 0.</column>
    <column name="req_cryrefcnt" type="smallint">Reserved for future used. Always set to 0.</column>
    <column name="req_lifetime" type="int">Lock lifetime bitmap. During certain query processing strategies, locks must be maintained on resources until the query processor has completed a particular phase of the query. The lock lifetime bitmap is used by the query processor and transaction manager to indicate groups of locks that can be released when a certain phase of a query has finished running. Certain bits in the bitmap are used to indicate locks that are held until the end of a transaction, even if their reference count equals 0.</column>
    <column name="req_spid" type="int">Internal Microsoft SQL Server Database Engine process ID of the session requesting the lock.</column>
    <column name="req_ecid" type="int">Execution context ID (ECID). Used to indicate which thread in a parallel operation owns a particular lock.</column>
    <column name="req_ownertype" type="smallint">Type of object associated with the lock:&lt;br /&gt;&lt;br /&gt; 1 = Transaction&lt;br /&gt;&lt;br /&gt; 2 = Cursor&lt;br /&gt;&lt;br /&gt; 3 = Session&lt;br /&gt;&lt;br /&gt; 4 = ExSession&lt;br /&gt;&lt;br /&gt; Note that 3 and 4 represent a special version of session locks, tracking database and file group locks, respectively.</column>
    <column name="req_transactionID" type="bigint">Unique transaction ID used in &lt;strong&gt;syslockinfo&lt;/strong&gt; and in profiler event</column>
    <column name="req_transactionUOW" type="uniqueidentifier">Identifies the Unit of Work ID (UOW) of the DTC transaction. For non-MS DTC transactions, UOW is set to 0.</column>
  </table>
  <table name="sys.syslogins" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syslogins-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.syslogins (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each login account.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;br/&gt;
&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server ( SQL Server 2008 through [current version](/troubleshoot/sql/general/determine-version-edition-update-level)).&lt;/para&gt;</description>
    <column name="sid" type="varbinary(85)">Security identifier.</column>
    <column name="status" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="createdate" type="datetime">Date the login was added.</column>
    <column name="updatedate" type="datetime">Date the login was updated.</column>
    <column name="accdate" type="datetime">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="totcpu" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="totio" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="spacelimit" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="timelimit" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="resultlimit" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="name" type="sysname">Login name of the user.</column>
    <column name="dbname" type="sysname">Name of the default database of the user when a connection is established.</column>
    <column name="password" type="nvarchar(128)">Returns NULL.</column>
    <column name="language" type="sysname">Default language of the user.</column>
    <column name="denylogin" type="int">1 = Login is a Microsoft Windows user or group and has been denied access.</column>
    <column name="hasaccess" type="int">1 = Login has been granted access to the server.</column>
    <column name="isntname" type="int">1 = Login is a Windows user or group.&lt;br /&gt;&lt;br /&gt; 0 = Login is a SQL Server login.</column>
    <column name="isntgroup" type="int">1 = Login is a Windows group.</column>
    <column name="isntuser" type="int">1 = Login is a Windows user.</column>
    <column name="sysadmin" type="int">1 = Login is a member of the &lt;strong&gt;sysadmin&lt;/strong&gt; server role.</column>
    <column name="securityadmin" type="int">1 = Login is a member of the &lt;strong&gt;securityadmin&lt;/strong&gt; server role.</column>
    <column name="serveradmin" type="int">1 = Login is a member of the &lt;strong&gt;serveradmin&lt;/strong&gt; fixed server role.</column>
    <column name="setupadmin" type="int">1 = Login is a member of the &lt;strong&gt;setupadmin&lt;/strong&gt; fixed server role.</column>
    <column name="processadmin" type="int">1 = Login is a member of the &lt;strong&gt;processadmin&lt;/strong&gt; fixed server role.</column>
    <column name="diskadmin" type="int">1 = Login is a member of the &lt;strong&gt;diskadmin&lt;/strong&gt; fixed server role.</column>
    <column name="dbcreator" type="int">1 = Login is a member of the &lt;strong&gt;dbcreator&lt;/strong&gt; fixed server role.</column>
    <column name="bulkadmin" type="int">1 = Login is a member of the &lt;strong&gt;bulkadmin&lt;/strong&gt; fixed server role.</column>
    <column name="loginname" type="nvarchar(128)">Login name of the user. Provided for backward compatibility.</column>
  </table>
  <table name="sys.sysmembers" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysmembers-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysmembers (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a row for each member of a database role.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="memberuid" type="smallint">User ID for the role member. Overflows or returns NULL if the number of users and roles exceeds 32,767.</column>
    <column name="groupuid" type="smallint">User ID for the role. Overflows or returns NULL if the number of users and roles exceeds 32,767.</column>
  </table>
  <table name="sys.sysmessages" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysmessages-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysmessages (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each system error or warning that can be returned by the SQL Server Database Engine. The Database Engine displays the error description on the user's screen.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="error" type="int">Unique error number.</column>
    <column name="severity" type="tinyint">Severity level of the error.</column>
    <column name="dlevel" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="description" type="nvarchar(255)">Explanation of the error with placeholders for parameters.</column>
    <column name="msglangid" type="smallint">System message group ID.</column>
  </table>
  <table name="sys.sysobjects" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysobjects-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysobjects (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains one row for each object that is created within a database, such as a constraint, default, log, rule, and stored procedure.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="name" type="sysname">Object name</column>
    <column name="id" type="int">Object identification number</column>
    <column name="xtype" type="char(2)">Object type. Can be one of the following object types:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = Default or DEFAULT constraint&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; L = Log&lt;br /&gt;&lt;br /&gt; FN = Scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued function&lt;br /&gt;&lt;br /&gt; IF = In-lined table-function&lt;br /&gt;&lt;br /&gt; IT = Internal table&lt;br /&gt;&lt;br /&gt; P = Stored procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; PK = PRIMARY KEY constraint (type is K)&lt;br /&gt;&lt;br /&gt; RF = Replication filter stored procedure&lt;br /&gt;&lt;br /&gt; S = System table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = Table function&lt;br /&gt;&lt;br /&gt; TR = SQL DML Trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; U = User table&lt;br /&gt;&lt;br /&gt; UQ = UNIQUE constraint (type is K)&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure</column>
    <column name="uid" type="smallint">Schema ID of the owner of the object. For databases upgraded from an earlier version of SQL Server, the schema ID is equal to the user ID of the owner. Overflows or returns NULL if the number of users and roles exceeds 32,767.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important \*\&lt;/strong&gt;* If you use any of the following SQL Server DDL statements, you must use the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-objects-transact-sql'&gt;sys.objects&lt;/a&gt; catalog view instead of sys.sysobjects.&lt;br /&gt;&lt;br /&gt; CREATE &amp;#124; ALTER &amp;#124; DROP USER&lt;br /&gt;&lt;br /&gt; CREATE &amp;#124; ALTER &amp;#124; DROP ROLE&lt;br /&gt;&lt;br /&gt; CREATE &amp;#124; ALTER &amp;#124; DROP APPLICATION ROLE&lt;br /&gt;&lt;br /&gt; CREATE SCHEMA&lt;br /&gt;&lt;br /&gt; ALTER AUTHORIZATION ON OBJECT</column>
    <column name="info" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="status" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="base_schema_ver" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="replinfo" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="parent_obj" type="int">Object identification number of the parent object. For example, the table ID if it is a trigger or constraint.</column>
    <column name="crdate" type="datetime">Date the object was created.</column>
    <column name="ftcatid" type="smallint">Identifier of the full-text catalog for all user tables registered for full-text indexing, and 0 for all user tables that are not registered.</column>
    <column name="schema_ver" type="int">Version number that is incremented every time the schema for a table changes. Always returns 0.</column>
    <column name="stats_schema_ver" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="type" type="char(2)">Object type. Can be one of the following values:&lt;br /&gt;&lt;br /&gt; AF = Aggregate function (CLR)&lt;br /&gt;&lt;br /&gt; C = CHECK constraint&lt;br /&gt;&lt;br /&gt; D = Default or DEFAULT constraint&lt;br /&gt;&lt;br /&gt; F = FOREIGN KEY constraint&lt;br /&gt;&lt;br /&gt; FN = Scalar function&lt;br /&gt;&lt;br /&gt; FS = Assembly (CLR) scalar-function&lt;br /&gt;&lt;br /&gt; FT = Assembly (CLR) table-valued functionIF = In-lined table-function&lt;br /&gt;&lt;br /&gt; IT - Internal table&lt;br /&gt;&lt;br /&gt; K = PRIMARY KEY or UNIQUE constraint&lt;br /&gt;&lt;br /&gt; L = Log&lt;br /&gt;&lt;br /&gt; P = Stored procedure&lt;br /&gt;&lt;br /&gt; PC = Assembly (CLR) stored-procedure&lt;br /&gt;&lt;br /&gt; R = Rule&lt;br /&gt;&lt;br /&gt; RF = Replication filter stored procedure&lt;br /&gt;&lt;br /&gt; S = System table&lt;br /&gt;&lt;br /&gt; SN = Synonym&lt;br /&gt;&lt;br /&gt; SQ = Service queue&lt;br /&gt;&lt;br /&gt; TA = Assembly (CLR) DML trigger&lt;br /&gt;&lt;br /&gt; TF = Table function&lt;br /&gt;&lt;br /&gt; TR = SQL DML Trigger&lt;br /&gt;&lt;br /&gt; TT = Table type&lt;br /&gt;&lt;br /&gt; U = User table&lt;br /&gt;&lt;br /&gt; V = View&lt;br /&gt;&lt;br /&gt; X = Extended stored procedure</column>
    <column name="userstat" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="sysstat" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="indexdel" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="refdate" type="datetime">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="version" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="deltrig" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="instrig" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="updtrig" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="seltrig" type="int">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="category" type="int">Used for publication, constraints, and identity.</column>
    <column name="cache" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
  </table>
  <table name="sys.sysoledbusers" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysoledbusers-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysoledbusers (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 (8.x) system table is included in SQL Server as a view for backward compatibility only. We recommend that you use &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/catalog-views-transact-sql'&gt;catalog views&lt;/a&gt; instead.&lt;br/&gt;
&lt;/note&gt;&lt;br/&gt;
 Contains one row for each user and password mapping for the specified linked server. &lt;strong&gt;sysoledbusers&lt;/strong&gt; is stored in the &lt;strong&gt;master&lt;/strong&gt; database.&lt;/para&gt;</description>
    <column name="rmtsrvid" type="smallint">Security identification number (SID) of the server.</column>
    <column name="rmtloginame" type="nvarchar(">Name of the remote login that &lt;strong&gt;loginsid&lt;/strong&gt; maps to for linked &lt;strong&gt;rmtservid&lt;/strong&gt;.</column>
    <column name="rmtpassword" type="nvarchar(">Returns NULL.</column>
    <column name="loginsid" type="varbinary(">SID of the local login to be mapped.</column>
    <column name="status" type="smallint">If 1, the mapping should use the credentials of the user.</column>
    <column name="changedate" type="datetime">Date the mapping information was last changed.</column>
  </table>
  <table name="sys.sysperfinfo" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysperfinfo-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysperfinfo (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains a Microsoft SQL Server Database Engine representation of the internal performance counters that can be displayed through the Windows System Monitor.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="object_name" type="nchar(128)">Performance object name, such as &lt;strong&gt;SQLServer:LockManager&lt;/strong&gt; or &lt;strong&gt;SQLServer:BufferManager&lt;/strong&gt;.</column>
    <column name="counter_name" type="nchar(128)">Name of the performance counter within the object, such as &lt;strong&gt;Page Requests&lt;/strong&gt; or &lt;strong&gt;Locks Requested&lt;/strong&gt;.</column>
    <column name="instance_name" type="nchar(128)">Named instance of the counter. For example, there are counters maintained for each type of lock, such as &lt;strong&gt;Table&lt;/strong&gt;, &lt;strong&gt;Page&lt;/strong&gt;, &lt;strong&gt;Key&lt;/strong&gt;, and so on. The instance name distinguishes between similar counters.</column>
    <column name="cntr_value" type="bigint">Actual counter value. Frequently, this will be a level or monotonically increasing counter that counts occurrences of the instance event.</column>
    <column name="cntr_type" type="int">Type of counter as defined by the Windows performance architecture.</column>
  </table>
  <table name="sys.syspermissions" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-syspermissions-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.syspermissions (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about permissions granted and denied to users, groups, and roles in the database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="id" type="int">ID of the object for object permissions.&lt;br /&gt;&lt;br /&gt; 0 = Statement permissions.</column>
    <column name="grantee" type="smallint">ID of the user, group, or role affected by the permission.</column>
    <column name="grantor" type="smallint">ID of the user, group, or role that granted or denied the permission.</column>
    <column name="actadd" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="actmod" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="seladd" type="varbinary(4000)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="selmod" type="varbinary(4000)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="updadd" type="varbinary(4000)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="updmod" type="varbinary(4000)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="refadd" type="varbinary(4000)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="refmod" type="varbinary(4000)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
  </table>
  <table name="sys.sysprocesses" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysprocesses-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysprocesses (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about processes that are running on an instance of SQL Server. These processes can be client processes or system processes. To access sysprocesses, you must be in the master database context, or you must use the master.dbo.sysprocesses three-part name.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="spid" type="smallint">SQL Server session ID.</column>
    <column name="kpid" type="smallint">Windows thread ID.</column>
    <column name="blocked" type="smallint">ID of the session that is blocking the request. If this column is NULL, the request is not blocked, or the session information of the blocking session is not available (or cannot be identified).&lt;br /&gt;&lt;br /&gt; -2 = The blocking resource is owned by an orphaned distributed transaction.&lt;br /&gt;&lt;br /&gt; -3 = The blocking resource is owned by a deferred recovery transaction.&lt;br /&gt;&lt;br /&gt; -4 = Session ID of the blocking latch owner could not be determined due to internal latch state transitions.</column>
    <column name="waittype" type="binary(2)">Reserved.</column>
    <column name="waittime" type="bigint">Current wait time in milliseconds.&lt;br /&gt;&lt;br /&gt; 0 = Process is not waiting.</column>
    <column name="lastwaittype" type="nchar(32)">A string indicating the name of the last or current wait type.</column>
    <column name="waitresource" type="nchar(256)">Textual representation of a lock resource.</column>
    <column name="dbid" type="smallint">ID of the database currently being used by the process.</column>
    <column name="uid" type="smallint">ID of the user that executed the command. Overflows or returns NULL if the number of users and roles exceeds 32,767.</column>
    <column name="cpu" type="int">Cumulative CPU time for the process. The entry is updated for all processes, regardless of whether the SET STATISTICS TIME option is ON or OFF.</column>
    <column name="physical_io" type="bigint">Cumulative disk reads and writes for the process.</column>
    <column name="memusage" type="int">Number of pages in the procedure cache that are currently allocated to this process. A negative number indicates that the process is freeing memory allocated by another process.</column>
    <column name="login_time" type="datetime">Time at which a client process logged into the server.</column>
    <column name="last_batch" type="datetime">Last time a client process executed a remote stored procedure call or an EXECUTE statement.</column>
    <column name="ecid" type="smallint">Execution context ID used to uniquely identify the subthreads operating on behalf of a single process.</column>
    <column name="open_tran" type="smallint">Number of open transactions for the process.</column>
    <column name="status" type="nchar(30)">Process ID status. The possible values are:&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;dormant&lt;/strong&gt; = SQL Server is resetting the session.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;running&lt;/strong&gt; = The session is running one or more batches. When Multiple Active Result Sets (MARS) is enabled, a session can run multiple batches. For more information, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/native-client/features/using-multiple-active-result-sets-mars'&gt;Using Multiple Active Result Sets (MARS)&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;background&lt;/strong&gt; = The session is running a background task, such as deadlock detection.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;rollback&lt;/strong&gt; = The session has a transaction rollback in process.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;pending&lt;/strong&gt; = The session is waiting for a worker thread to become available.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;runnable&lt;/strong&gt; = The task in the session is in the runnable queue of a scheduler while waiting to get a time quantum.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;spinloop&lt;/strong&gt; = The task in the session is waiting for a spinlock to become free.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;suspended&lt;/strong&gt; = The session is waiting for an event, such as I/O, to complete.</column>
    <column name="sid" type="binary(86)">Globally unique identifier (GUID) for the user.</column>
    <column name="hostname" type="nchar(128)">Name of the workstation.</column>
    <column name="program_name" type="nchar(128)">Name of the application program.</column>
    <column name="hostprocess" type="nchar(10)">Workstation process ID number.</column>
    <column name="cmd" type="nchar(52)">Command currently being executed.</column>
    <column name="nt_domain" type="nchar(128)">Windows domain for the client, if using Windows Authentication, or a trusted connection.</column>
    <column name="nt_username" type="nchar(128)">Windows user name for the process, if using Windows Authentication, or a trusted connection.</column>
    <column name="net_address" type="nchar(12)">Assigned unique identifier for the network adapter on the workstation of each user. When a user logs in, this identifier is inserted in the net_address column.</column>
    <column name="net_library" type="nchar(12)">Column in which the client's network library is stored. Every client process comes in on a network connection. Network connections have a network library associated with them that enables them to make the connection.</column>
    <column name="loginame" type="nchar(128)">Login name.</column>
    <column name="context_info" type="binary(128)">Data stored in a batch by using the SET CONTEXT_INFO statement.</column>
    <column name="sql_handle" type="binary(20)">Represents the currently executing batch or object.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Note&lt;/strong&gt; This value is derived from the batch or memory address of the object. This value is not calculated by using the SQL Server hash-based algorithm.</column>
    <column name="stmt_start" type="int">Starting offset of the current SQL statement for the specified sql_handle.</column>
    <column name="stmt_end" type="int">Ending offset of the current SQL statement for the specified sql_handle.&lt;br /&gt;&lt;br /&gt; -1 = Current statement runs to the end of the results returned by the fn_get_sql function for the specified sql_handle.</column>
    <column name="request_id" type="int">ID of request. Used to identify requests running in a specific session.</column>
    <column name="page_resource" type="binary(8)">&lt;strong&gt;Applies to&lt;/strong&gt;: SQL Server 2019 (15.x) &lt;br /&gt;&lt;br /&gt; An 8-byte hexadecimal representation of the page resource if the &lt;c&gt;waitresource&lt;/c&gt; column contains a page.</column>
  </table>
  <table name="sys.sysprotects" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysprotects-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysprotects (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains information about permissions that have been applied to security accounts in the database by using the GRANT and DENY statements.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="id" type="int">ID of the object to which these permissions apply.</column>
    <column name="uid" type="smallint">ID of user or group to which these permissions apply. Overflows or returns NULL if the number of users and roles exceeds 32,767.</column>
    <column name="action" type="tinyint">Can have one of the following permissions:&lt;br /&gt;&lt;br /&gt; 26 = REFERENCES&lt;br /&gt;&lt;br /&gt; 178 = CREATE FUNCTION&lt;br /&gt;&lt;br /&gt; 193 = SELECT&lt;br /&gt;&lt;br /&gt; 195 = INSERT&lt;br /&gt;&lt;br /&gt; 196 = DELETE&lt;br /&gt;&lt;br /&gt; 197 = UPDATE&lt;br /&gt;&lt;br /&gt; 198 = CREATE TABLE&lt;br /&gt;&lt;br /&gt; 203 = CREATE DATABASE&lt;br /&gt;&lt;br /&gt; 207 = CREATE VIEW&lt;br /&gt;&lt;br /&gt; 222 = CREATE PROCEDURE&lt;br /&gt;&lt;br /&gt; 224 = EXECUTE&lt;br /&gt;&lt;br /&gt; 228 = BACKUP DATABASE&lt;br /&gt;&lt;br /&gt; 233 = CREATE DEFAULT&lt;br /&gt;&lt;br /&gt; 235 = BACKUP LOG&lt;br /&gt;&lt;br /&gt; 236 = CREATE RULE</column>
    <column name="protecttype" type="tinyint">Can have the following values:&lt;br /&gt;&lt;br /&gt; 204 = GRANT_W_GRANT&lt;br /&gt;&lt;br /&gt; 205 = GRANT&lt;br /&gt;&lt;br /&gt; 206 = DENY</column>
    <column name="columns" type="varbinary(8000)">Bitmap of columns to which these SELECT or UPDATE permissions apply.&lt;br /&gt;&lt;br /&gt; Bit 0 = All columns.&lt;br /&gt;&lt;br /&gt; Bit 1 = Permissions apply to that column.&lt;br /&gt;&lt;br /&gt; NULL = No information.</column>
    <column name="grantor" type="smallint">User ID of the user that issued the GRANT or DENY permissions. Overflows or returns NULL if the number of users and roles exceeds 32,767.</column>
  </table>
  <table name="sys.sysreferences" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysreferences-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysreferences (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains mappings of the FOREIGN KEY constraint definitions to the referenced columns within the database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="constid" type="int">ID of the FOREIGN KEY constraint.</column>
    <column name="fkeyid" type="int">ID of the referencing table.</column>
    <column name="rkeyid" type="int">ID of the referenced table.</column>
    <column name="rkeyindid" type="smallint">Index ID of the unique index on the referenced table covering the referenced key-columns.</column>
    <column name="keycnt" type="smallint">Number of columns in the key.</column>
    <column name="forkeys" type="varbinary(32)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="refkeys" type="varbinary(32)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="fkeydbid" type="smallint">Reserved.</column>
    <column name="rkeydbid" type="smallint">Reserved.</column>
    <column name="fkey1" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey2" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey3" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey4" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey5" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey6" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey7" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey8" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey9" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey10" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey11" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey12" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey13" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey14" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey15" type="smallint">Column ID of the referencing column.</column>
    <column name="fkey16" type="smallint">Column ID of the referencing column.</column>
    <column name="rkey1" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey2" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey3" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey4" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey5" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey6" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey7" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey8" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey9" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey10" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey11" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey12" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey13" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey14" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey15" type="smallint">Column ID of the referenced column.</column>
    <column name="rkey16" type="smallint">Column ID of the referenced column.</column>
  </table>
  <table name="sys.sysremotelogins" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysremotelogins-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysremotelogins (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each remote user that is permitted to call remote stored procedures on an instance of Microsoft SQL Server.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="remoteserverid" type="smallint">Remote server identification.</column>
    <column name="remoteusername" type="sysname">Login name of the user on a remote server.</column>
    <column name="status" type="smallint">Returns 0.</column>
    <column name="sid" type="varbinary(85)">Microsoft Windows user security ID.</column>
    <column name="changedate" type="datetime">Date and time the remote user was added.</column>
  </table>
  <table name="sys.sysservers" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysservers-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysservers (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions)&lt;/para&gt;
&lt;para&gt;Contains one row for each server that an instance of SQL Server can access as an OLE DB data source.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="srvid" type="smallint">ID (for local use only) of the remote server.</column>
    <column name="srvstatus" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="srvname" type="sysname">Name of the server.</column>
    <column name="srvproduct" type="sysname">Product name for the remote server.</column>
    <column name="providername" type="nvarchar(128)">OLE DB provider name for access to this server.</column>
    <column name="datasource" type="nvarchar(4000)">OLE DB data source value.</column>
    <column name="location" type="nvarchar(4000)">OLE DB location value.</column>
    <column name="providerstring" type="nvarchar(4000)">OLE DB provider string value.</column>
    <column name="schemadate" type="datetime">Date this row was last updated.</column>
    <column name="topologyx" type="int">Not used.</column>
    <column name="topologyy" type="int">Not used.</column>
    <column name="catalog" type="sysname">Catalog that is used when a connection is made to an OLE DB provider.</column>
    <column name="srvcollation" type="sysname">The collation of the server.</column>
    <column name="connecttimeout" type="int">Time-out setting for the server-connection.</column>
    <column name="querytimeout" type="int">Time-out setting for queries against the server.</column>
    <column name="srvnetname" type="char(30)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="isremote" type="bit">1 = Server is a remote server.&lt;br /&gt;&lt;br /&gt; 0 = Server is a linked server.</column>
    <column name="rpc" type="bit">1 = &lt;strong&gt;sp_serveroption\@rpc&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@rpc&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="pub" type="bit">1 = &lt;strong&gt;sp_serveroption\@pub&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@pub&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="sub" type="bit">1 = &lt;strong&gt;sp_serveroption\@sub&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@sub&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="dist" type="bit">1 = &lt;strong&gt;sp_serveroption\@dist&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@dist&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="dpub" type="bit">1 = &lt;strong&gt;sp_serveroption\@dpub&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@dpub&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="rpcout" type="bit">1 = &lt;strong&gt;sp_serveroption\@rpc out&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@rpc out&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="dataaccess" type="bit">1 = &lt;strong&gt;sp_serveroption\@data access&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@data access&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="collationcompatible" type="bit">1 = &lt;strong&gt;sp_serveroption\@collation compatible&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@collation compatible&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="system" type="bit">1 = &lt;strong&gt;sp_serveroption\@system&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@system&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="useremotecollation" type="bit">1 = &lt;strong&gt;sp_serveroption\@remote collation&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@remote collation&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="lazyschemavalidation" type="bit">1 = &lt;strong&gt;sp_serveroption\@lazy schema validation&lt;/strong&gt; set to &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;on&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; 0 = &lt;strong&gt;sp_serveroption\@lazy schema validation&lt;/strong&gt; set to &lt;strong&gt;false&lt;/strong&gt; or &lt;strong&gt;off&lt;/strong&gt;.</column>
    <column name="collation" type="sysname">Server collation as set by &lt;strong&gt;sp_serveroption\@collation name&lt;/strong&gt;.</column>
    <column name="nonsqlsub" type="bit">0 = server is an instance of SQL Server&lt;br /&gt;&lt;br /&gt; 1 = server is not an instance of SQL Server</column>
  </table>
  <table name="sys.systypes" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-systypes-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.systypes (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Database √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Returns one row for each system-supplied and each user-defined data type defined in the database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="name" type="sysname">Data type name.</column>
    <column name="xtype" type="tinyint">Physical storage type.</column>
    <column name="status" type="tinyint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="xusertype" type="smallint">Extended user type. Overflows or returns NULL if the number of data types exceeds 32,767.</column>
    <column name="length" type="smallint">Physical length of the data type.</column>
    <column name="xprec" type="tinyint">Internal precision, as used by the server. Not to be used in queries.</column>
    <column name="xscale" type="tinyint">Internal scale, as used by the server. Not to be used in queries.</column>
    <column name="tdefault" type="int">ID of the stored procedure that contains integrity checks for this data type.</column>
    <column name="domain" type="int">ID of the stored procedure that contains integrity checks for this data type.</column>
    <column name="uid" type="smallint">Schema ID of the owner of the type.&lt;br /&gt;&lt;br /&gt; For databases upgraded from an earlier version of SQL Server, the schema ID is equal to the user ID of the owner.&lt;br /&gt;&lt;br /&gt; &lt;strong&gt; Important \*\&lt;/strong&gt;* If you use any of the following SQL Server DDL statements, you must use the &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-types-transact-sql'&gt;sys.types&lt;/a&gt; catalog view instead of &lt;strong&gt;sys.systypes&lt;/strong&gt;.&lt;br /&gt;&lt;br /&gt; ALTER AUTHORIZATION ON TYPE&lt;br /&gt;&lt;br /&gt; CREATE TYPE&lt;br /&gt;&lt;br /&gt; Overflows or returns NULL if the number of users and roles exceeds 32,767.</column>
    <column name="reserved" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="collationid" type="int">If character based, &lt;strong&gt;collationid&lt;/strong&gt; is the id of the collation of the current database; otherwise, it is NULL.</column>
    <column name="usertype" type="smallint">User type ID. Overflows or returns NULL if the number of data types exceeds 32,767.</column>
    <column name="variable" type="bit">Variable-length data type.&lt;br /&gt;&lt;br /&gt; 1 = True&lt;br /&gt;&lt;br /&gt; 0 = False</column>
    <column name="allownulls" type="bit">Indicates the default nullability for this data type. This default value is overridden by if nullability is specified by using &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/create-table-transact-sql'&gt;CREATE TABLE&lt;/a&gt; or &lt;a href='https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-table-transact-sql'&gt;ALTER TABLE&lt;/a&gt;.</column>
    <column name="type" type="tinyint">Physical storage data type.</column>
    <column name="printfmt" type="varchar(255)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="prec" type="smallint">Level of precision for this data type.&lt;br /&gt;&lt;br /&gt; -1 = &lt;strong&gt;xml&lt;/strong&gt; or large value types.</column>
    <column name="scale" type="tinyint">Scale for this data type, based on precision.&lt;br /&gt;&lt;br /&gt; NULL = Data type is nonnumeric.</column>
    <column name="collation" type="sysname">If character based, &lt;strong&gt;collation&lt;/strong&gt; is the collation of the current database; otherwise, it is NULL.</column>
  </table>
  <table name="sys.sysusers" category="Compatibility" uri="https://docs.microsoft.com/en-us/sql/relational-databases/system-compatibility-views/sys-sysusers-transact-sql">
    <description>&lt;para&gt;&lt;strong&gt;sys.sysusers (Transact-SQL)&lt;/strong&gt;&lt;/para&gt;
&lt;para&gt;&lt;strong&gt;Applies to:&lt;/strong&gt; √ SQL Server (all supported versions) √ Azure SQL Managed Instance √ Azure Synapse Analytics √ Analytics Platform System (PDW)&lt;/para&gt;
&lt;para&gt;Contains one row for each Microsoft Windows user, Windows group, Microsoft SQL Server user, or SQL Server role in the database.&lt;br/&gt;
&lt;note type='important'&gt;&lt;br/&gt;
This SQL Server 2000 system table is included as a view for backward compatibility. We  recommend that you use the current SQL Server system views instead. To find the equivalent system view or views, see &lt;a href='https://docs.microsoft.com/en-us/sql/relational-databases/relational-databases/system-tables/mapping-system-tables-to-system-views-transact-sql'&gt;Mapping System Tables to System Views (Transact-SQL)&lt;/a&gt;. This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.&lt;br/&gt;
&lt;/note&gt;&lt;/para&gt;</description>
    <column name="uid" type="smallint">User ID, unique in this database.&lt;br /&gt;&lt;br /&gt; 1 = Database owner&lt;br /&gt;&lt;br /&gt; Overflows or returns NULL if the number of users and roles exceeds 32,767.</column>
    <column name="status" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="name" type="sysname">User name or group name, unique in this database.</column>
    <column name="sid" type="varbinary(85)">Security identifier for this entry.</column>
    <column name="roles" type="varbinary(2048)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="createdate" type="datetime">Date the account was added.</column>
    <column name="updatedate" type="datetime">Date the account was last changed.</column>
    <column name="altuid" type="smallint">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.&lt;br /&gt;&lt;br /&gt; Overflows or returns NULL if the number of users and roles exceeds 32,767.</column>
    <column name="password" type="varbinary(256)">Identified for informational purposes only. Not supported. Future compatibility is not guaranteed.</column>
    <column name="gid" type="smallint">Group ID to which this user belongs. If &lt;strong&gt;uid&lt;/strong&gt; is the same as &lt;strong&gt;gid&lt;/strong&gt;, this entry defines a group. Overflows or returns NULL if the combined number of groups and users exceeds 32,767.</column>
    <column name="environ" type="varchar(255)">Reserved.</column>
    <column name="hasdbaccess" type="int">1 = Account has database access.</column>
    <column name="islogin" type="int">1 = Account is a Windows group, Windows user, or SQL Server user with a login account.</column>
    <column name="isntname" type="int">1 = Account is a Windows group or Windows user.</column>
    <column name="isntgroup" type="int">1 = Account is a Windows group.</column>
    <column name="isntuser" type="int">1 = Account is a Windows user.</column>
    <column name="issqluser" type="int">1 = Account is a SQL Server user.</column>
    <column name="isaliased" type="int">1 = Account is aliased to another user.</column>
    <column name="issqlrole" type="int">1 = Account is a SQL Server role.</column>
    <column name="isapprole" type="int">1 = Account is an application role.</column>
  </table>
</tables>