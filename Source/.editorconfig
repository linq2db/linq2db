[*.cs]
# do not disable rules below
dotnet_diagnostic.CA1050.severity = error # CA1050: Declare types in namespaces
dotnet_diagnostic.CA1304.severity = error # CA1304: Specify CultureInfo
dotnet_diagnostic.CA1305.severity = error # CA1305: Specify IFormatProvider
dotnet_code_quality.CA1305.excluded_symbol_names = M:System.Convert.ToString(System.Boolean)|M:System.Convert.ToChar(System.String)|M:System.Convert.ToBoolean(System.String)

# TODO: review it later, looks like it doesn't work for some reason
dotnet_diagnostic.CA1501.severity = none # CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1502.severity = none # CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1505.severity = none # CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1506.severity = none # CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1509.severity = none # CA1509: Invalid entry in code metrics configuration file

# TODO: slow, reenable after cyclomatic complexity handled (CA1501-CA1506)
dotnet_diagnostic.CA1508.severity = none # CA1508: Avoid dead conditional code

# not useful
dotnet_diagnostic.CA1724.severity = none # CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1823.severity = error # CA1823: Avoid unused private fields
dotnet_diagnostic.CA1827.severity = error # CA1827: Do not use Count/LongCount when Any can be used
dotnet_diagnostic.CA1829.severity = error # CA1829: Use Length/Count property instead of Enumerable.Count method
dotnet_diagnostic.CA1849.severity = error # CA1849: Call async methods when in an async method
dotnet_diagnostic.CA2007.severity = error # CA2007: Do not directly await a Task

dotnet_diagnostic.MA0011.severity = error # MA0011: IFormatProvider is missing
MA0011.consider_nullable_types = true
dotnet_diagnostic.MA0032.severity = none # MA0032: Use an overload with a CancellationToken argument
dotnet_diagnostic.MA0040.severity = none # MA0040: Forward the CancellationToken parameter to methods that take one
dotnet_diagnostic.MA0042.severity = none # MA0042: Do not use blocking calls in an async method
dotnet_diagnostic.MA0044.severity = error # MA0044: Remove useless ToString call
dotnet_diagnostic.MA0045.severity = none # MA0045: Do not use blocking calls in a sync method (need to make calling method async)
dotnet_diagnostic.MA0047.severity = error # MA0047: Declare types in namespaces
dotnet_diagnostic.MA0048.severity = error # MA0048: File name must match type name
dotnet_diagnostic.MA0075.severity = error # MA0075: Do not use implicit culture-sensitive ToString
MA0075.consider_nullable_types = true
dotnet_diagnostic.MA0076.severity = error # MA0076: Do not use implicit culture-sensitive ToString in interpolated strings
MA0076.consider_nullable_types = true
dotnet_diagnostic.MA0079.severity = error # MA0079: Forward the CancellationToken using .WithCancellation()
dotnet_diagnostic.MA0080.severity = error # MA0080: Use a cancellation token using .WithCancellation()
dotnet_diagnostic.MA0107.severity = error # MA0107: Do not use culture-sensitive object.ToString
dotnet_diagnostic.MA0129.severity = error # MA0129: Await task in using statement

dotnet_diagnostic.CA1823.severity = error # CA1823: Avoid unused private fields
# **********
# IDExxxx
# **********
#dotnet_diagnostic.IDE0001.severity = error # Simplify name
#dotnet_diagnostic.IDE0002.severity = error # Simplify member access
#dotnet_diagnostic.IDE0003.severity = error # Remove this
#dotnet_diagnostic.IDE0004.severity = error # Remove unnecessary cast
#dotnet_diagnostic.IDE0005.severity = error # Remove unnecessary using directives
#dotnet_diagnostic.IDE0007.severity = error # Use var instead of explicit type
#dotnet_diagnostic.IDE0018.severity = error # Inline variable declaration
#dotnet_diagnostic.IDE0019.severity = error # Use pattern matching to avoid as followed by a null check
#dotnet_diagnostic.IDE0020.severity = error # Use pattern matching to avoid is check followed by a cast (with variable)
#dotnet_diagnostic.IDE0025.severity = error # Use expression body for properties
#dotnet_diagnostic.IDE0026.severity = error # Use expression body for indexers
#dotnet_diagnostic.IDE0027.severity = error # Use expression body for accessors
#dotnet_diagnostic.IDE0028.severity = error # Use collection initializers
#dotnet_diagnostic.IDE0029.severity = error # Null check can be simplified (ternary conditional check)
#dotnet_diagnostic.IDE0030.severity = error # Null check can be simplified (nullable ternary conditional check)
#dotnet_diagnostic.IDE0031.severity = error # Use null propagation
#dotnet_diagnostic.IDE0032.severity = error # Use auto-implemented property
#dotnet_diagnostic.IDE0033.severity = error # Use explicitly provided tuple name
#dotnet_diagnostic.IDE0034.severity = error # Simplify default expression
#dotnet_diagnostic.IDE0035.severity = error # Remove unreachable code
#dotnet_diagnostic.IDE0036.severity = error # Order modifiers
#dotnet_diagnostic.IDE0037.severity = error # Use inferred member name
#dotnet_diagnostic.IDE0039.severity = error # Use local function instead of lambda
#dotnet_diagnostic.IDE0042.severity = error # Deconstruct variable declaration
#dotnet_diagnostic.IDE0044.severity = error # Add readonly modifier
#dotnet_diagnostic.IDE0049.severity = error # Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0051.severity = error # Remove unused private member
dotnet_diagnostic.IDE0052.severity = error # Remove unread private member
#dotnet_diagnostic.IDE0053.severity = error # Use expression body for lambdas
#dotnet_diagnostic.IDE0054.severity = error # Use compound assignment
#dotnet_diagnostic.IDE0056.severity = error # Use index operator
#dotnet_diagnostic.IDE0057.severity = error # Use range operator
#dotnet_diagnostic.IDE0058.severity = error # Remove unnecessary expression value
#dotnet_diagnostic.IDE0059.severity = error # Remove unnecessary value assignment
dotnet_diagnostic.IDE0060.severity = error # Remove unused parameter
#dotnet_diagnostic.IDE0062.severity = error # Make local function static
#dotnet_diagnostic.IDE0063.severity = error # Use simple using statement
#dotnet_diagnostic.IDE0064.severity = error # Make struct fields writable
#dotnet_diagnostic.IDE0065.severity = error # using directive placement
#dotnet_diagnostic.IDE0070.severity = error # Use System.HashCode.Combine
#dotnet_diagnostic.IDE0071.severity = error # Simplify interpolation
#dotnet_diagnostic.IDE0074.severity = error # Use compound assignment
#dotnet_diagnostic.IDE0075.severity = error # Simplify conditional expression
#dotnet_diagnostic.IDE0076.severity = error # Remove invalid global SuppressMessageAttribute
#dotnet_diagnostic.IDE0077.severity = error # Avoid legacy format target in global SuppressMessageAttribute
#dotnet_diagnostic.IDE0078.severity = error # Use pattern matching
#dotnet_diagnostic.IDE0079.severity = error # Remove unnecessary suppression
#dotnet_diagnostic.IDE0080.severity = error # Remove unnecessary suppression operator
#dotnet_diagnostic.IDE0082.severity = error # Convert typeof to nameof
#dotnet_diagnostic.IDE0083.severity = error # Use pattern matching (not operator)
#dotnet_diagnostic.IDE0084.severity = error # Use pattern matching (IsNot operator)
#dotnet_diagnostic.IDE0090.severity = error # Simplify new expression
#dotnet_diagnostic.IDE0100.severity = error # Remove unnecessary equality operator
#dotnet_diagnostic.IDE0110.severity = error # Remove unnecessary discard
#dotnet_diagnostic.IDE0120.severity = error # Simplify LINQ expression
#dotnet_diagnostic.IDE0121.severity = error # Simplify LINQ type check and cast
#dotnet_diagnostic.IDE0130.severity = error # Namespace does not match folder structure
#dotnet_diagnostic.IDE0140.severity = error # Simplify object creation
#dotnet_diagnostic.IDE0150.severity = error # Prefer null check over type check
#dotnet_diagnostic.IDE0161.severity = error # Use file-scoped namespace
#dotnet_diagnostic.IDE0170.severity = error # Simplify property pattern
#dotnet_diagnostic.IDE0180.severity = error # Use tuple to swap values
#dotnet_diagnostic.IDE0200.severity = error # Remove unnecessary lambda expression
#dotnet_diagnostic.IDE0230.severity = error # Use UTF-8 string literal
#dotnet_diagnostic.IDE0240.severity = error # Nullable directive is redundant
#dotnet_diagnostic.IDE0241.severity = error # Nullable directive is unnecessary
#dotnet_diagnostic.IDE0250.severity = error # Struct can be made 'readonly'
#dotnet_diagnostic.IDE0251.severity = error # Member can be made 'readonly'
#dotnet_diagnostic.IDE0260.severity = error # Use pattern matching
#dotnet_diagnostic.IDE0270.severity = error # Null check can be simplified (if null check)
#dotnet_diagnostic.IDE0280.severity = error # Use 'nameof'
#dotnet_diagnostic.IDE0300.severity = error # Use collection expression for array
#dotnet_diagnostic.IDE0301.severity = error # Use collection expression for empty
#dotnet_diagnostic.IDE0302.severity = error # Use collection expression for stackalloc
#dotnet_diagnostic.IDE0303.severity = error # Use collection expression for Create
#dotnet_diagnostic.IDE0304.severity = error # Use collection expression for builder
#dotnet_diagnostic.IDE0305.severity = error # Use collection expression for fluent
#dotnet_diagnostic.IDE0306.severity = error # Use collection expression for new
#dotnet_diagnostic.IDE0320.severity = error # Make anonymous function static
#dotnet_diagnostic.IDE0330.severity = error # Prefer 'System.Threading.Lock'
#dotnet_diagnostic.IDE0340.severity = error # Use unbound generic type
#dotnet_diagnostic.IDE0350.severity = error # Use implicitly typed lambda
#dotnet_diagnostic.IDE1005.severity = error # Use conditional delegate call

# ReSharper properties
resharper_csharp_allow_far_alignment = true
resharper_int_align_switch_sections = true
