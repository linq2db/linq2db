//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace SybaseDataContext
{
	/// <summary>
	/// Database       : TestData
	/// Data Source    : DBHost
	/// Server Version : 16.0.0
	/// </summary>
	public partial class TestDataDB : LinqToDB.Data.DataConnection
	{
		public ITable<AllType>        AllTypes        { get { return this.GetTable<AllType>(); } }
		public ITable<Child>          Children        { get { return this.GetTable<Child>(); } }
		public ITable<Doctor>         Doctors         { get { return this.GetTable<Doctor>(); } }
		public ITable<GrandChild>     GrandChildren   { get { return this.GetTable<GrandChild>(); } }
		public ITable<LinqDataType>   LinqDataTypes   { get { return this.GetTable<LinqDataType>(); } }
		public ITable<Parent>         Parents         { get { return this.GetTable<Parent>(); } }
		public ITable<Patient>        Patients        { get { return this.GetTable<Patient>(); } }
		public ITable<Person>         People          { get { return this.GetTable<Person>(); } }
		public ITable<SysObject>      SysObjects      { get { return this.GetTable<SysObject>(); } }
		public ITable<sysquerymetric> sysquerymetrics { get { return this.GetTable<sysquerymetric>(); } }
		public ITable<TestIdentity>   TestIdentities  { get { return this.GetTable<TestIdentity>(); } }

		public TestDataDB()
		{
			InitDataContext();
		}

		public TestDataDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table(Schema="dbo", Name="AllTypes")]
	public partial class AllType
	{
		[Identity                                                 ] public int       ID                    { get; set; } // int
		[Column,                                          Nullable] public long?     bigintDataType        { get; set; } // bigint
		[Column,                                          Nullable] public object    uBigintDataType       { get; set; } // ubigint
		[Column,                                          Nullable] public decimal?  numericDataType       { get; set; } // numeric(18, 0)
		[Column,                                       NotNull    ] public bool      bitDataType           { get; set; } // bit
		[Column,                                          Nullable] public short?    smallintDataType      { get; set; } // smallint
		[Column,                                          Nullable] public object    uSmallintDataType     { get; set; } // usmallint
		[Column,                                          Nullable] public decimal?  decimalDataType       { get; set; } // decimal(18, 0)
		[Column,                                          Nullable] public decimal?  smallmoneyDataType    { get; set; } // smallmoney
		[Column,                                          Nullable] public int?      intDataType           { get; set; } // int
		[Column,                                          Nullable] public object    uIntDataType          { get; set; } // uint
		[Column,                                          Nullable] public sbyte?    tinyintDataType       { get; set; } // tinyint
		[Column,                                          Nullable] public decimal?  moneyDataType         { get; set; } // money
		[Column,                                          Nullable] public double?   floatDataType         { get; set; } // float
		[Column,                                          Nullable] public float?    realDataType          { get; set; } // real
		[Column,                                          Nullable] public DateTime? datetimeDataType      { get; set; } // datetime
		[Column,                                          Nullable] public DateTime? smalldatetimeDataType { get; set; } // smalldatetime
		[Column,                                          Nullable] public object    dateDataType          { get; set; } // date
		[Column,                                          Nullable] public object    timeDataType          { get; set; } // time
		[Column,                                          Nullable] public char?     charDataType          { get; set; } // char(1)
		[Column,                                          Nullable] public string    varcharDataType       { get; set; } // varchar(20)
		[Column,                                          Nullable] public string    textDataType          { get; set; } // text
		[Column,                                          Nullable] public string    ncharDataType         { get; set; } // nchar(60)
		[Column,                                          Nullable] public string    nvarcharDataType      { get; set; } // nvarchar(60)
		[Column,                                          Nullable] public object    ntextDataType         { get; set; } // unitext
		[Column,                                          Nullable] public byte[]    binaryDataType        { get; set; } // binary(1)
		[Column,                                          Nullable] public byte[]    varbinaryDataType     { get; set; } // varbinary(1)
		[Column,                                          Nullable] public byte[]    imageDataType         { get; set; } // image
		[Column(SkipOnInsert=true, SkipOnUpdate=true),    Nullable] public byte[]    timestampDataType     { get; set; } // timestamp
	}

	[Table(Schema="dbo", Name="Child")]
	public partial class Child
	{
		[Column, NotNull] public int ParentID { get; set; } // int
		[Column, NotNull] public int ChildID  { get; set; } // int
	}

	[Table(Schema="dbo", Name="Doctor")]
	public partial class Doctor
	{
		[PrimaryKey, NotNull] public int    PersonID { get; set; } // int
		[Column,     NotNull] public string Taxonomy { get; set; } // nvarchar(150)

		#region Associations

		/// <summary>
		/// FK_Doctor_Person
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK_Doctor_Person", BackReferenceName="Doctor")]
		public Person Person { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="GrandChild")]
	public partial class GrandChild
	{
		[Column, NotNull] public int ParentID     { get; set; } // int
		[Column, NotNull] public int ChildID      { get; set; } // int
		[Column, NotNull] public int GrandChildID { get; set; } // int
	}

	[Table(Schema="dbo", Name="LinqDataTypes")]
	public partial class LinqDataType
	{
		[Column, NotNull    ] public int       ID             { get; set; } // int
		[Column,    Nullable] public decimal?  MoneyValue     { get; set; } // decimal(10, 4)
		[Column,    Nullable] public DateTime? DateTimeValue  { get; set; } // datetime
		[Column,    Nullable] public DateTime? DateTimeValue2 { get; set; } // datetime
		[Column, NotNull    ] public bool      BoolValue      { get; set; } // bit
		[Column,    Nullable] public string    GuidValue      { get; set; } // char(36)
		[Column,    Nullable] public byte[]    BinaryValue    { get; set; } // binary(500)
		[Column,    Nullable] public short?    SmallIntValue  { get; set; } // smallint
		[Column,    Nullable] public int?      IntValue       { get; set; } // int
		[Column,    Nullable] public long?     BigIntValue    { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="Parent")]
	public partial class Parent
	{
		[Column, NotNull    ] public int  ParentID { get; set; } // int
		[Column,    Nullable] public int? Value1   { get; set; } // int
	}

	[Table(Schema="dbo", Name="Patient")]
	public partial class Patient
	{
		[PrimaryKey, NotNull] public int    PersonID  { get; set; } // int
		[Column,     NotNull] public string Diagnosis { get; set; } // nvarchar(768)

		#region Associations

		/// <summary>
		/// FK_Patient_Person
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK_Patient_Person", BackReferenceName="Patient")]
		public Person Person { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Person")]
	public partial class Person
	{
		[PrimaryKey, Identity   ] public int    PersonID   { get; set; } // int
		[Column,     NotNull    ] public string FirstName  { get; set; } // nvarchar(150)
		[Column,     NotNull    ] public string LastName   { get; set; } // nvarchar(150)
		[Column,        Nullable] public string MiddleName { get; set; } // nvarchar(150)
		[Column,     NotNull    ] public char   Gender     { get; set; } // char(1)

		#region Associations

		/// <summary>
		/// FK_Doctor_Person_BackReference
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public Doctor Doctor { get; set; }

		/// <summary>
		/// FK_Patient_Person_BackReference
		/// </summary>
		[Association(ThisKey="PersonID", OtherKey="PersonID", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public Patient Patient { get; set; }

		#endregion
	}

	[Table("sysobjects")]
	public partial class SysObject
	{
		[Column, NotNull    ] public string   name      { get; set; } // varchar
		[Column, NotNull    ] public int      id        { get; set; } // int
		[Column, NotNull    ] public int      uid       { get; set; } // int
		[Column, NotNull    ] public string   type      { get; set; } // char
		[Column, NotNull    ] public short    userstat  { get; set; } // smallint
		[Column, NotNull    ] public short    sysstat   { get; set; } // smallint
		[Column, NotNull    ] public short    indexdel  { get; set; } // smallint
		[Column, NotNull    ] public short    schemacnt { get; set; } // smallint
		[Column, NotNull    ] public int      sysstat2  { get; set; } // int
		[Column, NotNull    ] public DateTime crdate    { get; set; } // datetime
		[Column, NotNull    ] public DateTime expdate   { get; set; } // datetime
		[Column, NotNull    ] public int      deltrig   { get; set; } // int
		[Column, NotNull    ] public int      instrig   { get; set; } // int
		[Column, NotNull    ] public int      updtrig   { get; set; } // int
		[Column, NotNull    ] public int      seltrig   { get; set; } // int
		[Column, NotNull    ] public int      ckfirst   { get; set; } // int
		[Column, NotNull    ] public short    cache     { get; set; } // smallint
		[Column,    Nullable] public int      audflags  { get; set; } // int
		[Column, NotNull    ] public int      objspare  { get; set; } // int
		[Column,    Nullable] public byte[]   versionts { get; set; } // binary
		[Column, NotNull    ] public string   loginame  { get; set; } // varchar
	}

	[Table(Schema="dbo", Name="sysquerymetrics", IsView=true)]
	public partial class sysquerymetric
	{
		[Column, NotNull    ] public int    uid       { get; set; } // int
		[Column, NotNull    ] public int    gid       { get; set; } // int
		[Column, NotNull    ] public int    hashkey   { get; set; } // int
		[Column, NotNull    ] public int    id        { get; set; } // int
		[Column, NotNull    ] public short  sequence  { get; set; } // smallint
		[Column,    Nullable] public object exec_min  { get; set; } // ubigint
		[Column,    Nullable] public object exec_max  { get; set; } // ubigint
		[Column,    Nullable] public object exec_avg  { get; set; } // ubigint
		[Column,    Nullable] public object elap_min  { get; set; } // ubigint
		[Column,    Nullable] public object elap_max  { get; set; } // ubigint
		[Column,    Nullable] public object elap_avg  { get; set; } // ubigint
		[Column,    Nullable] public object lio_min   { get; set; } // ubigint
		[Column,    Nullable] public object lio_max   { get; set; } // ubigint
		[Column,    Nullable] public object lio_avg   { get; set; } // ubigint
		[Column,    Nullable] public object pio_min   { get; set; } // ubigint
		[Column,    Nullable] public object pio_max   { get; set; } // ubigint
		[Column,    Nullable] public object pio_avg   { get; set; } // ubigint
		[Column,    Nullable] public object cnt       { get; set; } // ubigint
		[Column,    Nullable] public object abort_cnt { get; set; } // ubigint
		[Column,    Nullable] public string qtext     { get; set; } // varchar(510)
	}

	[Table(Schema="dbo", Name="TestIdentity")]
	public partial class TestIdentity
	{
		[PrimaryKey, Identity] public int ID { get; set; } // int
	}

	public static partial class TableExtensions
	{
		public static Doctor Find(this ITable<Doctor> table, int PersonID)
		{
			return table.FirstOrDefault(t =>
				t.PersonID == PersonID);
		}

		public static Patient Find(this ITable<Patient> table, int PersonID)
		{
			return table.FirstOrDefault(t =>
				t.PersonID == PersonID);
		}

		public static Person Find(this ITable<Person> table, int PersonID)
		{
			return table.FirstOrDefault(t =>
				t.PersonID == PersonID);
		}

		public static TestIdentity Find(this ITable<TestIdentity> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}
	}
}
