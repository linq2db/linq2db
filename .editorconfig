# EditorConfig is awesome: https://EditorConfig.org

root = true

[*]
indent_style = tab
indent_size = 4
insert_final_newline = true
end_of_line = crlf

# Code files
[*.{cs,csx,vb,vbx}]
charset = utf-8-bom

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]

# JSON files
[*.json]

# Powershell files
[*.ps1]

# Azure files
[*.{yml,sh,cmd,md}]
indent_style = space

# Azure files
[*.sh]
end_of_line = lf


# Dotnet code style settings:
[*.{cs,vb}]

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# CSharp code style settings:
[*.cs]
# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Spacing options
csharp_space_around_declaration_statements = ignore

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:warning
csharp_style_expression_bodied_indexers = true:warning
csharp_style_expression_bodied_accessors = true:warning

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Blocks are allowed
csharp_prefer_braces = true:silent
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

csharp_prefer_simple_using_statement = false:silent
csharp_style_prefer_switch_expression = true:warning

dotnet_style_prefer_compound_assignment = true:warning

[*.{cs,vb}]
#############
# Analyzers #
#############

# general settings applied to all source files
# Source folder contains additional .editorconfig with overrides
#
# enable all analyzers by default
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/
dotnet_analyzer_diagnostic.severity = error
dotnet_code_quality.api_surface = all
dotnet_code_quality.enable_platform_analyzer_on_pre_net5_target = true

##############################################
# active diagnostics (explicitly configured) #
##############################################

dotnet_diagnostic.CA1825.severity = error # CA1825: Avoid zero-length array allocations
# generates a lot of noise in tests, enabled in source .editorconfig
dotnet_diagnostic.CA2007.severity = none # CA2007: Do not directly await a Task
dotnet_diagnostic.CA2012.severity = error # CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2016.severity = error # CA2016: Forward the CancellationToken parameter to methods that take one
dotnet_diagnostic.CA1018.severity = error # CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1200.severity = error # CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1507.severity = error # CA1507: Use nameof in place of string
dotnet_diagnostic.CA1725.severity = error # CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1805.severity = error # CA1805: Do not initialize unnecessarily
# not interested
dotnet_diagnostic.CA1816.severity = none # CA1816: Call GC.SuppressFinalize correctly
dotnet_diagnostic.CA1826.severity = error # CA1826: Use property instead of Linq Enumerable method
# reported for valid test linq code, rule enabled in source .editorconfig
dotnet_diagnostic.CA1827.severity = none # CA1827: Do not use Count/LongCount when Any can be used
# reported for valid test linq code, rule enabled in source .editorconfig
dotnet_diagnostic.CA1829.severity = none # CA1829: Use Length/Count property instead of Enumerable.Count method
dotnet_diagnostic.CA1830.severity = error # CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1834.severity = error # CA1834: Use StringBuilder.Append(char) for single character strings
dotnet_diagnostic.CA1836.severity = error # CA1836: Prefer IsEmpty over Count when available
dotnet_diagnostic.CA2101.severity = error # CA2101: Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2200.severity = error # CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2201.severity = error # CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2208.severity = error # CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2215.severity = error # CA2215: Dispose methods should call base class dispose
# not interested
dotnet_diagnostic.CA2231.severity = none # CA2231: Overload operator equals on overriding ValueType.Equals
# disabled, as NETFX doesn't have string.Contains overloads with comparison type
dotnet_diagnostic.CA2249.severity = none # CA2249: Consider using String.Contains instead of String.IndexOf
dotnet_diagnostic.CA3075.severity = error # CA3075: Insecure DTD Processing
# very slow (https://github.com/dotnet/roslyn-analyzers/issues/4754)
# also we don't have code that could be targeted by it
dotnet_diagnostic.CA3076.severity = none # CA3076: Insecure XSLT Script Execution

#########################################################################################################
# inactive diagnostics (not reviewed yet => disabled to not fail build, basically TODO list for future) #
#########################################################################################################
dotnet_diagnostic.CA1000.severity = none # CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1001.severity = none # CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1010.severity = none # CA1010: Collections should implement generic interface
dotnet_diagnostic.CA1050.severity = none # CA1050: Declare types in namespaces
dotnet_diagnostic.CA1036.severity = none # CA1036: Override methods on comparable types
dotnet_diagnostic.CA1051.severity = none # CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1067.severity = none # CA1067: Override Equals when implementing IEquatable
dotnet_diagnostic.CA1068.severity = none # CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1069.severity = none # CA1069: Enums should not have duplicate values
dotnet_diagnostic.CA1304.severity = none # CA1304: Specify CultureInfo
dotnet_diagnostic.CA1305.severity = none # CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1309.severity = none # CA1309: Use ordinal StringComparison
dotnet_diagnostic.CA1310.severity = none # CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1707.severity = none # CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1708.severity = none # CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1711.severity = none # CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1715.severity = none # CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1716.severity = none # CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1720.severity = none # CA1720: Identifiers should not contain type names
dotnet_diagnostic.CA1806.severity = none # CA1806: Do not ignore method results
dotnet_diagnostic.CA1822.severity = none # CA1822: Mark members as static
dotnet_diagnostic.CA2211.severity = none # CA2211: Non-constant fields should not be visible

###################################################################################
# VS analyzers                                                                    #
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ #
###################################################################################
dotnet_diagnostic.IDE0001.severity = error # IDE0001: Simplify name
dotnet_diagnostic.IDE0002.severity = error # IDE0002: Simplify member access

# IDE0003: Remove this or Me qualification
# IDE0009: Add this or Me qualification
dotnet_diagnostic.IDE0003.severity = error
dotnet_style_qualification_for_field = false:refactoring
dotnet_style_qualification_for_property = false:refactoring
dotnet_style_qualification_for_method = false:refactoring
dotnet_style_qualification_for_event = false:refactoring

dotnet_diagnostic.IDE0004.severity = error # IDE0004: Remove unnecessary cast
dotnet_diagnostic.IDE0005.severity = error # IDE0005: Remove unnecessary import

# not reviewed yet rules
dotnet_diagnostic.IDE0007.severity = none # IDE0007: Use 'var' instead of explicit type
dotnet_diagnostic.IDE0010.severity = none # IDE0010: Add missing cases to switch statement
dotnet_diagnostic.IDE0011.severity = none # IDE0011: Add braces
dotnet_diagnostic.IDE0016.severity = none # IDE0016: Use throw expression
dotnet_diagnostic.IDE0017.severity = none # IDE0017: Use object initializers
dotnet_diagnostic.IDE0018.severity = none # IDE0018: Inline variable declaration
dotnet_diagnostic.IDE0019.severity = none # IDE0019: Use pattern matching to avoid 'as' followed by a 'null' check
dotnet_diagnostic.IDE0025.severity = none # IDE0025: Use expression body for properties
dotnet_diagnostic.IDE0026.severity = none # IDE0026: Use expression body for indexers
dotnet_diagnostic.IDE0027.severity = none # IDE0027: Use expression body for accessors
dotnet_diagnostic.IDE0028.severity = none # IDE0028: Use collection initializers
dotnet_diagnostic.IDE0029.severity = none # IDE0029: Use coalesce expression (non-nullable types)
dotnet_diagnostic.IDE0030.severity = none # IDE0030: Use coalesce expression
dotnet_diagnostic.IDE0031.severity = none # IDE0031: Use null propagation
dotnet_diagnostic.IDE0032.severity = none # IDE0032: Use auto property
dotnet_diagnostic.IDE0034.severity = none # IDE0034: Simplify 'default' expression
dotnet_diagnostic.IDE0036.severity = none # IDE0036: Order modifiers
dotnet_diagnostic.IDE0037.severity = none # IDE0037: Use inferred member name
dotnet_diagnostic.IDE0038.severity = none # IDE0038: Use pattern matching to avoid 'is' check followed by a cast
dotnet_diagnostic.IDE0040.severity = none # IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0041.severity = none # IDE0041: Use is null check
dotnet_diagnostic.IDE0044.severity = none # IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0045.severity = none # IDE0045: Use conditional expression for assignment
dotnet_diagnostic.IDE0046.severity = none # IDE0046: Convert to conditional expression
dotnet_diagnostic.IDE0047.severity = none # IDE0047: Remove unnecessary parentheses
dotnet_diagnostic.IDE0048.severity = none # IDE0048: Add parentheses for clarity
dotnet_diagnostic.IDE0049.severity = none # IDE0049: Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0050.severity = none # IDE0050: Convert to tuple
dotnet_diagnostic.IDE0051.severity = none # IDE0051: Remove unused private members
dotnet_diagnostic.IDE0052.severity = none # IDE0052: Remove unread private member
dotnet_diagnostic.IDE0054.severity = none # IDE0054: Use compound assignment
dotnet_diagnostic.IDE0055.severity = none # IDE0055: Formatting rules
dotnet_diagnostic.IDE0056.severity = none # IDE0056: Use index operator
dotnet_diagnostic.IDE0057.severity = none # IDE0057: Use range operator
dotnet_diagnostic.IDE0058.severity = none # IDE0058: computed value is never used
dotnet_diagnostic.IDE0059.severity = none # IDE0059: Remove unnecessary value assignment
dotnet_diagnostic.IDE0060.severity = none # IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0061.severity = none # IDE0061: Use expression body for local functions
dotnet_diagnostic.IDE0062.severity = none # IDE0062: Make local function static
dotnet_diagnostic.IDE0065.severity = none # IDE0065: Misplaced using directive
dotnet_diagnostic.IDE0066.severity = none # IDE0066: Convert switch statement to expression
dotnet_diagnostic.IDE0070.severity = none # IDE0070: Use 'System.HashCode.Combine'
dotnet_diagnostic.IDE0072.severity = none # IDE0072: Add missing cases
dotnet_diagnostic.IDE0075.severity = none # IDE0075: Simplify conditional expression
dotnet_diagnostic.IDE0078.severity = none # IDE0078: Use pattern matching
dotnet_diagnostic.IDE0079.severity = none # IDE0079: Remove unnecessary suppression
dotnet_diagnostic.IDE0080.severity = none # IDE0080: Remove unnecessary suppression operator
dotnet_diagnostic.IDE0081.severity = none # IDE0081: Remove ByVal
dotnet_diagnostic.IDE0083.severity = none # IDE0083: Use pattern matching (not operator)
dotnet_diagnostic.IDE1006.severity = none # IDE1006: Naming rule violation

dotnet_diagnostic.CS1998.severity = error # CS1998: Async method lacks 'await' operators and will run synchronously
dotnet_diagnostic.CS8618.severity = error # CS8618: Non-nullable field is uninitialized. Consider declaring as nullable.
dotnet_diagnostic.CS4014.severity = error # CS4014: Because this call is not awaited, execution of the current method continues before the call is completed

#
